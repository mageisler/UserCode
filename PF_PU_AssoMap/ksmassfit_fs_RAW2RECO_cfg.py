import FWCore.ParameterSet.Config as cms

process = cms.Process("RECO")

process.source = cms.Source("PoolSource",
    fileNames = cms.untracked.vstring('rfio:/castor/cern.ch/user/m/mgeisler/ValidationFiles/QCD_Pt-15to3000_TuneZ2_Flat_PU_S6_START42.root')
)

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(1)
)
		
process.APVPhases = cms.EDProducer("APVCyclePhaseProducerFromL1TS",
    defaultPartitionNames = cms.vstring('TI', 
        'TO', 
        'TP', 
        'TM'),
    magicOffset = cms.untracked.int32(258),
    l1TSCollection = cms.InputTag("scalersRawToDigi"),
    defaultPhases = cms.vint32(60, 60, 60, 60)
)


process.BeamHaloSummary = cms.EDProducer("BeamHaloSummaryProducer",
    l_HcalPhiWedgeConfidence = cms.double(0.7),
    t_EcalSuperClusterSize = cms.int32(3),
    l_EcalSuperClusterEnergy = cms.double(10.0),
    l_EcalPhiWedgeConfidence = cms.double(0.7),
    t_EcalPhiWedgeEnergy = cms.double(20.0),
    t_EcalPhiWedgeConfidence = cms.double(0.9),
    l_HcalPhiWedgeEnergy = cms.double(20.0),
    t_EcalShowerShapesRoundness = cms.double(0.23),
    l_HcalPhiWedgeConstituents = cms.int32(6),
    EcalHaloDataLabel = cms.InputTag("EcalHaloData"),
    l_EcalShowerShapesRoundness = cms.double(0.41),
    l_EcalSuperClusterSize = cms.int32(3),
    t_HcalPhiWedgeEnergy = cms.double(25.0),
    t_HcalPhiWedgeConfidence = cms.double(0.9),
    t_EcalShowerShapesAngle = cms.double(0.51),
    t_EcalPhiWedgeConstituents = cms.int32(8),
    l_EcalPhiWedgeEnergy = cms.double(10.0),
    GlobalHaloDataLabel = cms.InputTag("GlobalHaloData"),
    l_HcalPhiWedgeToF = cms.double(-100.0),
    t_HcalPhiWedgeToF = cms.double(-100.0),
    t_HcalPhiWedgeConstituents = cms.int32(8),
    HcalHaloDataLabel = cms.InputTag("HcalHaloData"),
    t_EcalPhiWedgeToF = cms.double(-200.0),
    l_EcalPhiWedgeConstituents = cms.int32(6),
    t_EcalSuperClusterEnergy = cms.double(10.0),
    l_EcalPhiWedgeToF = cms.double(-200.0),
    l_EcalShowerShapesAngle = cms.double(0.51),
    CSCHaloDataLabel = cms.InputTag("CSCHaloData")
)


process.CSCHaloData = cms.EDProducer("CSCHaloDataProducer",
    ExpectedBX = cms.int32(6),
    RecHitTime0 = cms.double(0.0),
    MinOuterMomentumTheta = cms.double(0.1),
    SALabel = cms.InputTag("standAloneMuons"),
    MatchingDPhiThreshold = cms.double(0.18),
    MaxOuterMomentumTheta = cms.double(3.0),
    DphiParam = cms.double(1.0),
    RecHitTimeWindow = cms.double(25.0),
    DetaParam = cms.double(0.1),
    InnerRMinParam = cms.double(0.0),
    MuonLabel = cms.InputTag("muons"),
    CSCSegmentLabel = cms.InputTag("cscSegments"),
    InnerRMaxParam = cms.double(99999.0),
    L1MuGMTReadoutLabel = cms.InputTag("gtDigis"),
    HLTResultLabel = cms.InputTag("TriggerResults","","HLT"),
    HLTBitLabel = cms.VInputTag(cms.InputTag("HLT_CSCBeamHalo"), cms.InputTag("HLT_CSCBeamHaloOverlapRing1"), cms.InputTag("HLT_CSCBeamHaloOverlapRing2"), cms.InputTag("HLT_CSCBeamHaloRing2or3")),
    NormChi2Param = cms.double(8.0),
    ALCTDigiLabel = cms.InputTag("muonCSCDigis","MuonCSCALCTDigi"),
    OuterRMaxParam = cms.double(99999.0),
    MatchingDEtaThreshold = cms.double(0.4),
    OuterRMinParam = cms.double(0.0),
    MatchingDWireThreshold = cms.int32(5),
    CosmicMuonLabel = cms.InputTag("cosmicMuons"),
    CSCRecHitLabel = cms.InputTag("csc2DRecHits")
)


process.CastorTowerReco = cms.EDProducer("CastorTowerProducer",
    mintime = cms.untracked.double(-99999.0),
    towercut = cms.untracked.double(1.0),
    maxtime = cms.untracked.double(99999.0),
    inputprocess = cms.untracked.string('castorreco')
)


process.CkfElectronCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("globalMixedSeeds"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('CkfElectronTrajectoryBuilder'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.CosmicMuonSeed = cms.EDProducer("CosmicMuonSeedGenerator",
    DTRecSegmentLabel = cms.InputTag("dt4DCosmicSegments"),
    CSCRecSegmentLabel = cms.InputTag("cscSegments"),
    EnableDTMeasurement = cms.bool(True),
    MaxCSCChi2 = cms.double(300.0),
    MaxDTChi2 = cms.double(300.0),
    MaxSeeds = cms.int32(1000),
    EnableCSCMeasurement = cms.bool(True)
)


process.EcalHaloData = cms.EDProducer("EcalHaloDataProducer",
    ESRecHitLabel = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    ESRecHitEnergyThresholdParam = cms.double(0.3),
    AngleCutParam = cms.double(0.51),
    EBRecHitEnergyThresholdParam = cms.double(0.3),
    RoundnessCutParam = cms.double(0.41),
    EERecHitEnergyThresholdParam = cms.double(0.3),
    NHitsEcalThresholdParam = cms.int32(4),
    SuperClusterLabel = cms.InputTag("correctedHybridSuperClusters"),
    EERecHitLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    PhotonLabel = cms.InputTag("photons"),
    SumEcalEnergyThresholdParam = cms.double(10.0),
    EBRecHitLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.GlobalHaloData = cms.EDProducer("GlobalHaloDataProducer",
    EcalMaxMatchingRadiusParam = cms.double(330.0),
    EcalMinMatchingRadiusParam = cms.double(110.0),
    HcalHaloDataLabel = cms.InputTag("HcalHaloData"),
    HcalMinMatchingRadiusParam = cms.double(110.0),
    CSCSegmentLabel = cms.InputTag("CSCSegments"),
    metLabel = cms.InputTag("met"),
    EcalHaloDataLabel = cms.InputTag("EcalHaloData"),
    calotowerLabel = cms.InputTag("towerMaker"),
    CaloTowerEtThresholdParam = cms.double(0.3),
    HcalMaxMatchingRadiusParam = cms.double(490.0),
    CSCRecHitLabel = cms.InputTag("csc2DRecHits"),
    CSCHaloDataLabel = cms.InputTag("CSCHaloData")
)


process.GsfGlobalElectronTest = cms.EDProducer("GsfTrackProducer",
    src = cms.InputTag("CkfElectronCandidates"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string(''),
    Fitter = cms.string('GsfElectronFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(False),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('gsf'),
    Propagator = cms.string('fwdElectronPropagator')
)


process.HcalHaloData = cms.EDProducer("HcalHaloDataProducer",
    SumHcalEnergyThresholdParam = cms.double(18),
    NHitsHcalThresholdParam = cms.int32(4),
    HcalMinMatchingRadiusParam = cms.double(110.0),
    HORecHitLabel = cms.InputTag("horeco"),
    HBHERecHitLabel = cms.InputTag("hbhereco"),
    HERecHitEnergyThresholdParam = cms.double(0.5),
    HcalMaxMatchingRadiusParam = cms.double(490.0),
    HFRecHitLabel = cms.InputTag("hfreco"),
    HBRecHitEnergyThresholdParam = cms.double(0.5)
)


process.JPTAntiKt5JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("ak5CaloJets"),
    jet2TracksAtCALO = cms.InputTag("JPTAntiKt5JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("JPTAntiKt5JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.5)
)


process.JPTAntiKt5JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    jets = cms.InputTag("TCTauJetPlusTrackZSPCorJetAntiKt5"),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator")
)


process.JPTAntiKt5JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    jets = cms.InputTag("TCTauJetPlusTrackZSPCorJetAntiKt5"),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5)
)


process.JPTCaloRecoTauProducer = cms.EDProducer("CaloRecoTauProducer",
    LeadTrack_minPt = cms.double(0.5),
    MatchingConeSize_min = cms.double(0.0),
    ECALSignalConeSizeFormula = cms.string('0.15'),
    TrackerIsolConeMetric = cms.string('DR'),
    TrackerSignalConeMetric = cms.string('DR'),
    EBRecHitsSource = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    IsolationTrack_minPt = cms.double(1.0),
    ECALSignalConeSize_min = cms.double(0.0),
    ECALRecHit_minEt = cms.double(0.5),
    MatchingConeMetric = cms.string('DR'),
    TrackerSignalConeSizeFormula = cms.string('0.07'),
    MatchingConeSizeFormula = cms.string('0.10'),
    TrackerIsolConeSize_min = cms.double(0.0),
    TrackerIsolConeSize_max = cms.double(0.6),
    TrackerSignalConeSize_max = cms.double(0.6),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    ESRecHitsSource = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    TrackerSignalConeSize_min = cms.double(0.0),
    JetPtMin = cms.double(0.0),
    AreaMetric_recoElements_maxabsEta = cms.double(2.5),
    ECALIsolConeMetric = cms.string('DR'),
    ECALIsolConeSizeFormula = cms.string('0.50'),
    ECALIsolConeSize_max = cms.double(0.6),
    EERecHitsSource = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    IsolationTrack_minHits = cms.uint32(0),
    ECALSignalConeMetric = cms.string('DR'),
    TrackLeadTrack_maxDZ = cms.double(1.0),
    Track_minPt = cms.double(0.5),
    TrackerIsolConeSizeFormula = cms.string('0.50'),
    ECALSignalConeSize_max = cms.double(0.6),
    ECALIsolConeSize_min = cms.double(0.0),
    UseTrackLeadTrackDZconstraint = cms.bool(True),
    smearedPVsigmaY = cms.double(0.0015),
    smearedPVsigmaX = cms.double(0.0015),
    smearedPVsigmaZ = cms.double(0.005),
    CaloRecoTauTagInfoProducer = cms.InputTag("caloRecoTauTagInfoProducer"),
    MatchingConeSize_max = cms.double(0.6)
)


process.JPTeidTight = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('tight'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.JetMETMCProducer = cms.EDProducer("HLTTauMCProducer",
    GenParticles = cms.untracked.InputTag("source"),
    ptMinElectron = cms.untracked.double(5),
    EtaMax = cms.untracked.double(2.5),
    ptMinTau = cms.untracked.double(10),
    BosonID = cms.untracked.int32(23),
    ptMinMuon = cms.untracked.double(3)
)


process.JetPlusTrackZSPCorJetAntiKt5 = cms.EDProducer("JetPlusTrackProducer",
    VectorialCorrection = cms.bool(True),
    ElectronIds = cms.InputTag("JPTeidTight"),
    UseMuons = cms.bool(True),
    Muons = cms.InputTag("muons"),
    UseTrackQuality = cms.bool(True),
    JetTracksAssociationAtVertex = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    LeakageMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackLeakage.txt'),
    UseOutOfConeTracks = cms.bool(True),
    UseInConeTracks = cms.bool(True),
    UseOutOfVertexTracks = cms.bool(True),
    UseResponseInVecCorr = cms.bool(False),
    ResponseMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_3110_response.txt'),
    EfficiencyMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackNonEff.txt'),
    UsePions = cms.bool(True),
    Electrons = cms.InputTag("gsfElectrons"),
    JetSplitMerge = cms.int32(2),
    DzVertexCut = cms.double(0.2),
    MaxJetEta = cms.double(3.0),
    Verbose = cms.bool(True),
    UseElectrons = cms.bool(True),
    JetTracksAssociationAtCaloFace = cms.InputTag("ak5JetTracksAssociatorAtCaloFace"),
    PtErrorQuality = cms.double(0.05),
    TrackQuality = cms.string('highPurity'),
    UseEfficiency = cms.bool(True),
    src = cms.InputTag("ak5CaloJets"),
    PU = cms.int32(-1),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    FixedPU = cms.int32(0),
    alias = cms.untracked.string('JetPlusTrackZSPCorJetAntiKt5'),
    tagName = cms.vstring('ZSP_CMSSW390_Akt_05_PU0'),
    tagNameOffset = cms.vstring(),
    UseZSP = cms.bool(True)
)


process.JetPlusTrackZSPCorJetIcone5 = cms.EDProducer("JetPlusTrackProducer",
    VectorialCorrection = cms.bool(True),
    ElectronIds = cms.InputTag("JPTeidTight"),
    UseMuons = cms.bool(True),
    Muons = cms.InputTag("muons"),
    UseTrackQuality = cms.bool(True),
    JetTracksAssociationAtVertex = cms.InputTag("iterativeCone5JetTracksAssociatorAtVertex"),
    LeakageMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackLeakage.txt'),
    UseOutOfConeTracks = cms.bool(True),
    UseInConeTracks = cms.bool(True),
    UseOutOfVertexTracks = cms.bool(True),
    UseResponseInVecCorr = cms.bool(False),
    ResponseMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_3110_response.txt'),
    EfficiencyMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackNonEff.txt'),
    UsePions = cms.bool(True),
    Electrons = cms.InputTag("gsfElectrons"),
    JetSplitMerge = cms.int32(0),
    DzVertexCut = cms.double(0.2),
    MaxJetEta = cms.double(3.0),
    Verbose = cms.bool(True),
    UseElectrons = cms.bool(True),
    JetTracksAssociationAtCaloFace = cms.InputTag("iterativeCone5JetTracksAssociatorAtCaloFace"),
    PtErrorQuality = cms.double(0.05),
    TrackQuality = cms.string('highPurity'),
    UseEfficiency = cms.bool(True),
    src = cms.InputTag("iterativeCone5CaloJets"),
    PU = cms.int32(-1),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    FixedPU = cms.int32(0),
    alias = cms.untracked.string('JetPlusTrackZSPCorJetIcone5'),
    tagName = cms.vstring('ZSP_CMSSW390_Akt_05_PU0'),
    tagNameOffset = cms.vstring(),
    UseZSP = cms.bool(True)
)


process.JetPlusTrackZSPCorJetSiscone5 = cms.EDProducer("JetPlusTrackProducer",
    VectorialCorrection = cms.bool(True),
    ElectronIds = cms.InputTag("JPTeidTight"),
    UseMuons = cms.bool(True),
    Muons = cms.InputTag("muons"),
    UseTrackQuality = cms.bool(True),
    JetTracksAssociationAtVertex = cms.InputTag("sisCone5JetTracksAssociatorAtVertex"),
    LeakageMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackLeakage.txt'),
    UseOutOfConeTracks = cms.bool(True),
    UseInConeTracks = cms.bool(True),
    UseOutOfVertexTracks = cms.bool(True),
    UseResponseInVecCorr = cms.bool(False),
    ResponseMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_3110_response.txt'),
    EfficiencyMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackNonEff.txt'),
    UsePions = cms.bool(True),
    Electrons = cms.InputTag("gsfElectrons"),
    JetSplitMerge = cms.int32(1),
    DzVertexCut = cms.double(0.2),
    MaxJetEta = cms.double(3.0),
    Verbose = cms.bool(True),
    UseElectrons = cms.bool(True),
    JetTracksAssociationAtCaloFace = cms.InputTag("sisCone5JetTracksAssociatorAtCaloFace"),
    PtErrorQuality = cms.double(0.05),
    TrackQuality = cms.string('highPurity'),
    UseEfficiency = cms.bool(True),
    src = cms.InputTag("ak5CaloJets"),
    PU = cms.int32(-1),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    FixedPU = cms.int32(0),
    alias = cms.untracked.string('JetPlusTrackZSPCorJetSiscone5'),
    tagName = cms.vstring('ZSP_CMSSW390_Akt_05_PU0'),
    tagNameOffset = cms.vstring(),
    UseZSP = cms.bool(True)
)


process.MEtoEDMConverter = cms.EDProducer("MEtoEDMConverter",
    deleteAfterCopy = cms.untracked.bool(True),
    Verbosity = cms.untracked.int32(0),
    Frequency = cms.untracked.int32(50),
    Name = cms.untracked.string('MEtoEDMConverter'),
    MEPathToSave = cms.untracked.string('')
)


process.MuonSeed = cms.EDProducer("MuonSeedProducer",
    SMB_21 = cms.vdouble(1.043, -0.124, 0.0, 0.183, 0.0, 
        0.0),
    SMB_20 = cms.vdouble(1.011, -0.052, 0.0, 0.188, 0.0, 
        0.0),
    SMB_22 = cms.vdouble(1.474, -0.758, 0.0, 0.185, 0.0, 
        0.0),
    OL_2213 = cms.vdouble(0.117, 0.0, 0.0, 0.044, 0.0, 
        0.0),
    SME_11 = cms.vdouble(3.295, -1.527, 0.112, 0.378, 0.02, 
        0.0),
    SME_13 = cms.vdouble(-1.286, 1.711, 0.0, 0.356, 0.0, 
        0.0),
    SME_12 = cms.vdouble(0.102, 0.599, 0.0, 0.38, 0.0, 
        0.0),
    SME_32 = cms.vdouble(-0.901, 1.333, -0.47, 0.41, 0.073, 
        0.0),
    SME_31 = cms.vdouble(-1.594, 1.482, -0.317, 0.487, 0.097, 
        0.0),
    OL_1213 = cms.vdouble(0.96, -0.737, 0.0, 0.052, 0.0, 
        0.0),
    DT_13 = cms.vdouble(0.315, 0.068, -0.127, 0.051, -0.002, 
        0.0),
    DT_12 = cms.vdouble(0.183, 0.054, -0.087, 0.028, 0.002, 
        0.0),
    DT_14 = cms.vdouble(0.359, 0.052, -0.107, 0.072, -0.004, 
        0.0),
    OL_1232 = cms.vdouble(0.184, 0.0, 0.0, 0.066, 0.0, 
        0.0),
    CSC_23 = cms.vdouble(-0.081, 0.113, -0.029, 0.015, 0.008, 
        0.0),
    CSC_24 = cms.vdouble(0.004, 0.021, -0.002, 0.053, 0.0, 
        0.0),
    CSC_03 = cms.vdouble(0.787, -0.338, 0.029, 0.101, -0.008, 
        0.0),
    CSC_01 = cms.vdouble(0.166, 0.0, 0.0, 0.031, 0.0, 
        0.0),
    SMB_32 = cms.vdouble(0.67, -0.327, 0.0, 0.22, 0.0, 
        0.0),
    SMB_30 = cms.vdouble(0.505, -0.022, 0.0, 0.215, 0.0, 
        0.0),
    SMB_31 = cms.vdouble(0.549, -0.145, 0.0, 0.207, 0.0, 
        0.0),
    SMB_10 = cms.vdouble(1.387, -0.038, 0.0, 0.19, 0.0, 
        0.0),
    SMB_11 = cms.vdouble(1.247, 0.72, -0.802, 0.229, -0.075, 
        0.0),
    SMB_12 = cms.vdouble(2.128, -0.956, 0.0, 0.199, 0.0, 
        0.0),
    DT_23 = cms.vdouble(0.13, 0.023, -0.057, 0.028, 0.004, 
        0.0),
    DT_24 = cms.vdouble(0.176, 0.014, -0.051, 0.051, 0.003, 
        0.0),
    SME_21 = cms.vdouble(-0.529, 1.194, -0.358, 0.472, 0.086, 
        0.0),
    SME_22 = cms.vdouble(-1.207, 1.491, -0.251, 0.189, 0.243, 
        0.0),
    CSC_34 = cms.vdouble(0.062, -0.067, 0.019, 0.021, 0.003, 
        0.0),
    CSC_02 = cms.vdouble(0.612, -0.207, -0.0, 0.067, -0.001, 
        0.0),
    SME_42 = cms.vdouble(-0.003, 0.005, 0.005, 0.608, 0.076, 
        0.0),
    SME_41 = cms.vdouble(-0.003, 0.005, 0.005, 0.608, 0.076, 
        0.0),
    OL_2222 = cms.vdouble(0.107, 0.0, 0.0, 0.04, 0.0, 
        0.0),
    DT_34 = cms.vdouble(0.044, 0.004, -0.013, 0.029, 0.003, 
        0.0),
    CSC_14 = cms.vdouble(0.606, -0.181, -0.002, 0.111, -0.003, 
        0.0),
    OL_1222 = cms.vdouble(0.848, -0.591, 0.0, 0.062, 0.0, 
        0.0),
    CSC_13 = cms.vdouble(0.901, -1.302, 0.533, 0.045, 0.005, 
        0.0),
    CSC_12 = cms.vdouble(-0.161, 0.254, -0.047, 0.042, -0.007, 
        0.0),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
    DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
    CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
    SME_13_0_scale = cms.vdouble(0.104905, 0.0),
    SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
    DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
    OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
    OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
    SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
    DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
    CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
    OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
    CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
    OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
    SME_11_0_scale = cms.vdouble(1.325085, 0.0),
    CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
    SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
    SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
    DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
    SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
    CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
    DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
    SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
    CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
    CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
    DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
    SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
    DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
    SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
    SME_12_0_scale = cms.vdouble(2.279181, 0.0),
    CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
    DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
    SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
    SME_22_0_scale = cms.vdouble(-3.457901, 0.0),
    SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
    DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
    CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
    DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
    DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
    CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
    CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
    OL_2222_0_scale = cms.vdouble(-7.667231, 0.0),
    minimumSeedPt = cms.double(5.0),
    minCSCHitsPerSegment = cms.int32(4),
    maxDeltaPhiDT = cms.double(0.3),
    defaultSeedPt = cms.double(25.0),
    EnableCSCMeasurement = cms.bool(True),
    maxDeltaPhiOverlap = cms.double(0.25),
    minDTHitsPerSegment = cms.int32(2),
    CSCSegmentLabel = cms.InputTag("cscSegments"),
    maxEtaResolutionCSC = cms.double(0.06),
    maxPhiResolutionCSC = cms.double(0.03),
    maxDeltaEtaOverlap = cms.double(0.08),
    EnableDTMeasurement = cms.bool(True),
    DTSegmentLabel = cms.InputTag("dt4DSegments"),
    SeedPtSystematics = cms.double(0.1),
    maximumSeedPt = cms.double(3000.0),
    maxEtaResolutionDT = cms.double(0.02),
    maxDeltaEtaCSC = cms.double(0.2),
    maxDeltaPhiCSC = cms.double(0.5),
    maxDeltaEtaDT = cms.double(0.3),
    DebugMuonSeed = cms.bool(False),
    maxPhiResolutionDT = cms.double(0.03)
)


process.PhotonIDProd = cms.EDProducer("PhotonIDProducer",
    LoosePhotonHollowNTrkEB = cms.int32(999999999),
    LoosePhotonEcalIsoRelativeCutSlopeEB = cms.double(0.006),
    LoosePhotonEcalIsoRelativeCutSlopeEE = cms.double(0.006),
    LoosePhotonHollowNTrkEE = cms.int32(999999999),
    DoHcalTowerIsolationCut = cms.bool(True),
    LooseEMSolidTrkSlopeEB = cms.double(0.0),
    LooseEMSolidTrkSlopeEE = cms.double(0.0),
    LooseEMHollowTrkSlopeEE = cms.double(0.0),
    LooseEMHollowTrkSlopeEB = cms.double(0.0),
    DoSolidConeTrackIsolationCut = cms.bool(False),
    LooseEMHcalTowerIsoOffsetEB = cms.double(2.2),
    LooseEMHcalTowerIsoOffsetEE = cms.double(2.2),
    LoosePhotonEtaWidthEB = cms.double(999999999),
    LooseEMSolidTrkEB = cms.double(999999999),
    LooseEMEcalIsoRelativeCutOffsetEB = cms.double(4.2),
    LooseEMEcalIsoRelativeCutOffsetEE = cms.double(4.2),
    LooseEMSolidTrkEE = cms.double(999999999),
    LoosePhotonEtaWidthEE = cms.double(999999999),
    DoSolidConeNTrkCut = cms.bool(False),
    TightPhotonSolidTrkEB = cms.double(999999999),
    TightPhotonSolidTrkEE = cms.double(999999999),
    LoosePhotonHcalTowerIsoOffsetEB = cms.double(2.2),
    LoosePhotonSolidTrkEB = cms.double(999999999),
    LoosePhotonSolidTrkEE = cms.double(999999999),
    LoosePhotonHcalTowerIsoOffsetEE = cms.double(2.2),
    TightPhotonHollowNTrkEB = cms.int32(999999999),
    TightPhotonHollowNTrkEE = cms.int32(999999999),
    DoHadOverEMCut = cms.bool(True),
    photonCutBasedIDTightLabel = cms.string('PhotonCutBasedIDTight'),
    LoosePhotonHcalTowerIsoSlopeEB = cms.double(0.0025),
    LoosePhotonEcalIsoRelativeCutOffsetEB = cms.double(4.2),
    LoosePhotonEcalIsoRelativeCutOffsetEE = cms.double(4.2),
    LoosePhotonHcalTowerIsoSlopeEE = cms.double(0.0025),
    photonLabel = cms.string(''),
    TightPhotonSolidTrkOffsetEB = cms.double(999999999),
    TightPhotonSolidTrkOffsetEE = cms.double(999999999),
    TightPhotonSolidTrkSlopeEE = cms.double(0.0),
    TightPhotonSolidTrkSlopeEB = cms.double(0.0),
    TightPhotonEcalIsoRelativeCutOffsetEB = cms.double(4.2),
    DoHollowConeNTrkCut = cms.bool(False),
    doCutBased = cms.bool(True),
    TightPhotonEcalIsoRelativeCutOffsetEE = cms.double(4.2),
    LoosePhotonR9CutEE = cms.double(0.0),
    LoosePhotonR9CutEB = cms.double(0.0),
    RequireFiducial = cms.bool(False),
    TightPhotonHadOverEMEE = cms.double(0.05),
    LooseEMHollowNTrkEB = cms.int32(999999999),
    DoEcalRecHitIsolationCut = cms.bool(True),
    LooseEMHollowTrkOffsetEB = cms.double(999999999),
    LooseEMHollowTrkOffsetEE = cms.double(999999999),
    LooseEMHollowNTrkEE = cms.int32(999999999),
    LooseEMR9CutEE = cms.double(0.0),
    LooseEMR9CutEB = cms.double(0.0),
    LooseEMHadOverEMEE = cms.double(0.05),
    LooseEMHadOverEMEB = cms.double(0.05),
    photonCutBasedIDLooseEMLabel = cms.string('PhotonCutBasedIDLooseEM'),
    TightPhotonHcalTowerIsoSlopeEE = cms.double(0.0025),
    TightPhotonHcalTowerIsoSlopeEB = cms.double(0.0025),
    TightPhotonSolidNTrkEE = cms.int32(999999999),
    TightPhotonSolidNTrkEB = cms.int32(999999999),
    TightPhotonHollowTrkOffsetEB = cms.double(2.0),
    TightPhotonHollowTrkOffsetEE = cms.double(2.0),
    TightPhotonHollowTrkSlopeEB = cms.double(0.001),
    TightPhotonHollowTrkSlopeEE = cms.double(0.001),
    DoR9Cut = cms.bool(False),
    LoosePhotonSolidTrkSlopeEB = cms.double(0.0),
    LoosePhotonSolidTrkSlopeEE = cms.double(0.0),
    TightPhotonEtaWidthEB = cms.double(0.013),
    TightPhotonEtaWidthEE = cms.double(0.03),
    DoHollowConeTrackIsolationCut = cms.bool(True),
    LooseEMHcalTowerIsoSlopeEB = cms.double(0.0025),
    LooseEMHcalTowerIsoSlopeEE = cms.double(0.0025),
    LoosePhotonHollowTrkSlopeEE = cms.double(0.001),
    LoosePhotonHollowTrkSlopeEB = cms.double(0.001),
    TightPhotonHadOverEMEB = cms.double(0.05),
    DoEtaWidthCut = cms.bool(True),
    photonCutBasedIDLooseLabel = cms.string('PhotonCutBasedIDLoose'),
    LooseEMEcalIsoRelativeCutSlopeEB = cms.double(0.006),
    LooseEMEcalIsoRelativeCutSlopeEE = cms.double(0.006),
    TightPhotonR9CutEE = cms.double(0.0),
    TightPhotonR9CutEB = cms.double(0.0),
    DoEcalIsoRelativeCut = cms.bool(True),
    photonProducer = cms.string('photons'),
    LooseEMSolidNTrkEE = cms.int32(999999999),
    TightPhotonEcalIsoRelativeCutSlopeEE = cms.double(0.006),
    TightPhotonEcalIsoRelativeCutSlopeEB = cms.double(0.006),
    LooseEMSolidNTrkEB = cms.int32(999999999),
    LooseEMEtaWidthEB = cms.double(999999999),
    LooseEMEtaWidthEE = cms.double(999999999),
    TightPhotonHcalTowerIsoOffsetEB = cms.double(2.2),
    TightPhotonHcalTowerIsoOffsetEE = cms.double(2.2),
    LoosePhotonHollowTrkOffsetEB = cms.double(3.5),
    LoosePhotonHadOverEMEE = cms.double(0.05),
    LoosePhotonHadOverEMEB = cms.double(0.05),
    LoosePhotonHollowTrkOffsetEE = cms.double(3.5),
    LooseEMSolidTrkOffsetEB = cms.double(999999999),
    LooseEMSolidTrkOffsetEE = cms.double(999999999),
    LoosePhotonSolidTrkOffsetEB = cms.double(999999999),
    LoosePhotonSolidNTrkEE = cms.int32(999999999),
    LoosePhotonSolidNTrkEB = cms.int32(999999999),
    LoosePhotonSolidTrkOffsetEE = cms.double(999999999)
)


process.SETMuonSeed = cms.EDProducer("SETMuonSeedProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    SETTrajBuilderParameters = cms.PSet(
        SMB_21 = cms.vdouble(0.918425, -0.141199, 0.0, 0.254515, -0.111848, 
            0.0),
        SMB_20 = cms.vdouble(0.861314, -0.16233, 0.0, 0.248879, -0.113879, 
            0.0),
        SMB_22 = cms.vdouble(1.308565, -0.701634, 0.0, -0.302861, 0.675785, 
            0.0),
        OL_2213 = cms.vdouble(0.563218, -0.493991, 0.0, 0.943776, -0.591751, 
            0.0),
        SME_11 = cms.vdouble(2.39479, -0.888663, 0.0, -4.604546, 3.623464, 
            0.0),
        SME_13 = cms.vdouble(0.398851, 0.028176, 0.0, 0.567015, 2.623232, 
            0.0),
        SMB_31 = cms.vdouble(0.398661, -0.024853, 0.0, 0.863324, -0.413048, 
            0.0),
        SME_32 = cms.vdouble(-0.021912, -0.008995, 0.0, -49.779764, 30.780972, 
            0.0),
        SME_31 = cms.vdouble(-0.588188, 0.316961, 0.0, -95.261732, 45.444051, 
            0.0),
        OL_1213 = cms.vdouble(0.960544, -0.75644, 0.0, 0.1636, 0.114178, 
            0.0),
        DT_13 = cms.vdouble(0.298842, 0.076531, -0.14293, 0.219923, -0.145026, 
            0.155638),
        DT_12 = cms.vdouble(0.176182, 0.058535, -0.090549, 0.202363, -0.203126, 
            0.222219),
        DT_14 = cms.vdouble(0.388423, 0.068698, -0.145925, 0.159515, 0.124299, 
            -0.133269),
        OL_1232 = cms.vdouble(0.162626, 0.000843, 0.0, 0.396271, 0.002791, 
            0.0),
        CSC_23 = cms.vdouble(-0.095236, 0.122061, -0.029852, -11.396689, 15.933598, 
            -4.267065),
        CSC_24 = cms.vdouble(-0.049769, 0.063087, -0.011029, -13.765978, 16.296143, 
            -4.241835),
        CSC_03 = cms.vdouble(0.498992, -0.086235, -0.025772, 2.761006, -2.667607, 
            0.72802),
        CSC_01 = cms.vdouble(0.155906, -0.000406, 0.0, 0.194022, -0.010181, 
            0.0),
        SMB_32 = cms.vdouble(0.421649, -0.111654, 0.0, -0.044613, 1.134858, 
            0.0),
        SMB_30 = cms.vdouble(0.399628, 0.014922, 0.0, 0.665622, 0.358439, 
            0.0),
        OL_2222 = cms.vdouble(0.087587, 0.005729, 0.0, 0.535169, -0.087675, 
            0.0),
        SMB_10 = cms.vdouble(1.160532, 0.148991, 0.0, 0.182785, -0.093776, 
            0.0),
        SMB_11 = cms.vdouble(1.289468, -0.139653, 0.0, 0.137191, 0.01217, 
            0.0),
        SMB_12 = cms.vdouble(1.923091, -0.913204, 0.0, 0.161556, 0.020215, 
            0.0),
        DT_23 = cms.vdouble(0.120647, 0.034743, -0.070855, 0.302427, -0.21417, 
            0.261012),
        DT_24 = cms.vdouble(0.189527, 0.037328, -0.088523, 0.251936, 0.032411, 
            0.010984),
        SME_21 = cms.vdouble(0.64895, -0.148762, 0.0, -5.07676, 6.284227, 
            0.0),
        SME_22 = cms.vdouble(-0.624708, 0.641043, 0.0, 32.581295, -19.604264, 
            0.0),
        CSC_34 = cms.vdouble(0.144321, -0.142283, 0.035636, 190.260708, -180.888643, 
            43.430395),
        CSC_02 = cms.vdouble(0.600235, -0.205683, 0.001113, 0.655625, -0.682129, 
            0.253916),
        SME_42 = cms.vdouble(-0.021912, -0.008995, 0.0, -49.779764, 30.780972, 
            0.0),
        SME_41 = cms.vdouble(-0.187116, 0.076415, 0.0, -58.552583, 27.933864, 
            0.0),
        SME_12 = cms.vdouble(-0.277294, 0.7616, 0.0, -0.243326, 1.446792, 
            0.0),
        DT_34 = cms.vdouble(0.049146, -0.003494, -0.010099, 0.672095, 0.36459, 
            -0.304346),
        CSC_14 = cms.vdouble(0.952517, -0.532733, 0.084601, 1.615881, -1.630744, 
            0.514139),
        OL_1222 = cms.vdouble(0.215915, 0.002556, 0.0, 0.313596, -0.021465, 
            0.0),
        CSC_13 = cms.vdouble(1.22495, -1.792358, 0.711378, 5.271848, -6.280625, 
            2.0142),
        CSC_12 = cms.vdouble(-0.363549, 0.569552, -0.173186, 7.777069, -10.203618, 
            3.478874),
        DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
        DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
        CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
        SME_13_0_scale = cms.vdouble(0.104905, 0.0),
        SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
        DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
        OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
        OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
        SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
        DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
        CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
        OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
        CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
        OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
        SME_11_0_scale = cms.vdouble(1.325085, 0.0),
        CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
        SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
        SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
        DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
        SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
        CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
        DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
        SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
        CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
        CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
        DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
        SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
        DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
        SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
        SME_12_0_scale = cms.vdouble(2.279181, 0.0),
        CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
        DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
        SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
        SME_22_0_scale = cms.vdouble(-3.457901, 0.0),
        SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
        DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
        CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
        DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
        DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
        CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
        CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
        OL_2222_0_scale = cms.vdouble(-7.667231, 0.0),
        scaleDT = cms.bool(True),
        Apply_prePruning = cms.bool(True),
        UseSegmentsInTrajectory = cms.bool(False),
        FilterParameters = cms.PSet(
            OutsideChamberErrorScale = cms.double(1.0),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            MinLocalSegmentAngle = cms.double(0.09),
            EnableRPCMeasurement = cms.bool(True),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            EnableDTMeasurement = cms.bool(True),
            maxActiveChambers = cms.int32(100),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            EnableCSCMeasurement = cms.bool(True)
        )
    ),
    beamSpotTag = cms.InputTag("offlineBeamSpot")
)


process.TCTauJetPlusTrackZSPCorJetAntiKt5 = cms.EDProducer("JetPlusTrackProducer",
    VectorialCorrection = cms.bool(True),
    ElectronIds = cms.InputTag("JPTeidTight"),
    UseMuons = cms.bool(True),
    Muons = cms.InputTag("muons"),
    UseTrackQuality = cms.bool(True),
    JetTracksAssociationAtVertex = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    LeakageMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackLeakage.txt'),
    UseOutOfConeTracks = cms.bool(True),
    UseInConeTracks = cms.bool(True),
    UseOutOfVertexTracks = cms.bool(True),
    UseResponseInVecCorr = cms.bool(False),
    ResponseMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_resptowers.txt'),
    EfficiencyMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackNonEff.txt'),
    UsePions = cms.bool(True),
    Electrons = cms.InputTag("gsfElectrons"),
    JetSplitMerge = cms.int32(2),
    DzVertexCut = cms.double(0.2),
    MaxJetEta = cms.double(3.0),
    Verbose = cms.bool(True),
    UseElectrons = cms.bool(True),
    JetTracksAssociationAtCaloFace = cms.InputTag("ak5JetTracksAssociatorAtCaloFace"),
    PtErrorQuality = cms.double(0.05),
    TrackQuality = cms.string('highPurity'),
    UseEfficiency = cms.bool(False),
    src = cms.InputTag("ak5CaloJets"),
    PU = cms.int32(-1),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    FixedPU = cms.int32(0),
    alias = cms.untracked.string('JetPlusTrackZSPCorJetAntiKt5'),
    tagName = cms.vstring('ZSP_CMSSW390_Akt_05_PU0'),
    tagNameOffset = cms.vstring(),
    UseZSP = cms.bool(False)
)


process.TauDecayModeCutMutliplexerPrototype = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.TauMCProducer = cms.EDProducer("HLTTauMCProducer",
    GenParticles = cms.untracked.InputTag("genParticles"),
    ptMinElectron = cms.untracked.double(5),
    EtaMax = cms.untracked.double(2.5),
    ptMinTau = cms.untracked.double(10),
    BosonID = cms.untracked.vint32(23, 24, 25, 32, 33, 
        34, 35, 36, 37),
    ptMinMuon = cms.untracked.double(3)
)


process.TauRefCombiner = cms.EDProducer("HLTTauRefCombiner",
    OutputCollection = cms.string(''),
    MatchDeltaR = cms.double(0.15),
    InputCollections = cms.VInputTag(cms.InputTag("TauMCProducer","HadronicTauOneAndThreeProng"), cms.InputTag("TauRelvalRefProducer","PFTaus"))
)


process.TauRefProducer = cms.EDProducer("HLTTauRefProducer",
    PFTaus = cms.untracked.PSet(
        PFTauDiscriminators = cms.untracked.VInputTag(cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding"), cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackPtCut"), cms.InputTag("shrinkingConePFTauDiscriminationByIsolation")),
        doPFTaus = cms.untracked.bool(True),
        ptMin = cms.untracked.double(10.0),
        PFTauProducer = cms.untracked.InputTag("shrinkingConePFTauProducer")
    ),
    Towers = cms.untracked.PSet(
        etMin = cms.untracked.double(10.0),
        towerIsolation = cms.untracked.double(5.0),
        TowerCollection = cms.untracked.InputTag("towerMaker"),
        doTowers = cms.untracked.bool(True)
    ),
    Photons = cms.untracked.PSet(
        ECALIso = cms.untracked.double(3.0),
        PhotonCollection = cms.untracked.InputTag("photons"),
        etMin = cms.untracked.double(10.0),
        doPhotons = cms.untracked.bool(True)
    ),
    Electrons = cms.untracked.PSet(
        doID = cms.untracked.bool(False),
        ElectronCollection = cms.untracked.InputTag("gsfElectrons"),
        lipMinTrack = cms.untracked.double(0.2),
        InnerConeDR = cms.untracked.double(0.02),
        MaxIsoVar = cms.untracked.double(0.02),
        doTrackIso = cms.untracked.bool(True),
        TrackCollection = cms.untracked.InputTag("generalTracks"),
        ptMin = cms.untracked.double(10.0),
        ptMinTrack = cms.untracked.double(1.5),
        OuterConeDR = cms.untracked.double(0.6),
        doElectrons = cms.untracked.bool(True),
        IdCollection = cms.untracked.InputTag("elecIDext")
    ),
    Jets = cms.untracked.PSet(
        JetCollection = cms.untracked.InputTag("iterativeCone5CaloJets"),
        etMin = cms.untracked.double(10.0),
        doJets = cms.untracked.bool(True)
    ),
    Muons = cms.untracked.PSet(
        doMuons = cms.untracked.bool(True),
        MuonCollection = cms.untracked.InputTag("muons"),
        ptMin = cms.untracked.double(5.0)
    ),
    EtaMax = cms.untracked.double(2.5)
)


process.TauRelvalRefProducer = cms.EDProducer("HLTTauRefProducer",
    PFTaus = cms.untracked.PSet(
        PFTauDiscriminators = cms.untracked.VInputTag(cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding"), cms.InputTag("hpsPFTauDiscriminationByLooseIsolation")),
        doPFTaus = cms.untracked.bool(True),
        ptMin = cms.untracked.double(10.0),
        PFTauProducer = cms.untracked.InputTag("hpsPFTauProducer")
    ),
    Towers = cms.untracked.PSet(
        etMin = cms.untracked.double(10.0),
        towerIsolation = cms.untracked.double(5.0),
        TowerCollection = cms.untracked.InputTag("towerMaker"),
        doTowers = cms.untracked.bool(True)
    ),
    Photons = cms.untracked.PSet(
        ECALIso = cms.untracked.double(3.0),
        PhotonCollection = cms.untracked.InputTag("photons"),
        etMin = cms.untracked.double(10.0),
        doPhotons = cms.untracked.bool(True)
    ),
    Electrons = cms.untracked.PSet(
        doID = cms.untracked.bool(False),
        ElectronCollection = cms.untracked.InputTag("gsfElectrons"),
        lipMinTrack = cms.untracked.double(0.2),
        InnerConeDR = cms.untracked.double(0.02),
        MaxIsoVar = cms.untracked.double(0.02),
        doTrackIso = cms.untracked.bool(True),
        TrackCollection = cms.untracked.InputTag("generalTracks"),
        ptMin = cms.untracked.double(10.0),
        ptMinTrack = cms.untracked.double(1.5),
        OuterConeDR = cms.untracked.double(0.6),
        doElectrons = cms.untracked.bool(True),
        IdCollection = cms.untracked.InputTag("elecIDext")
    ),
    Jets = cms.untracked.PSet(
        JetCollection = cms.untracked.InputTag("iterativeCone5CaloJets"),
        etMin = cms.untracked.double(10.0),
        doJets = cms.untracked.bool(True)
    ),
    Muons = cms.untracked.PSet(
        doMuons = cms.untracked.bool(True),
        MuonCollection = cms.untracked.InputTag("muons"),
        ptMin = cms.untracked.double(5.0)
    ),
    EtaMax = cms.untracked.double(2.5)
)


process.TrackProducer = cms.EDProducer("TrackProducer",
    src = cms.InputTag("ckfTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.ak3HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    doAreaFastjet = cms.bool(True),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.3)
)


process.ak4HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    doAreaFastjet = cms.bool(True),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.4)
)


process.ak5CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("towerMaker"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(True),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.3),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.4),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('CaloJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.5)
)


process.ak5CaloJetsL1 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak5CaloJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ak5CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak5CaloJets"),
    correctors = cms.vstring('ak5CaloL1L2L3')
)


process.ak5CaloJetsL1L2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak5CaloJets"),
    correctors = cms.vstring('ak5CaloL1L2L3L6')
)


process.ak5CaloJetsL2 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak5CaloJets"),
    correctors = cms.vstring('ak5CaloL2Relative')
)


process.ak5CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak5CaloJets"),
    correctors = cms.vstring('ak5CaloL2L3')
)


process.ak5CaloJetsL2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak5CaloJets"),
    correctors = cms.vstring('ak5CaloL2L3L6')
)


process.ak5CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.ak5GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.5)
)


process.ak5GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak5GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak5HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    doAreaFastjet = cms.bool(True),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.5)
)


process.ak5JPTJetsL1 = cms.EDProducer("JPTJetCorrectionProducer",
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt5"),
    correctors = cms.vstring('L1Fastjet')
)


process.ak5JPTJetsL1L2L3 = cms.EDProducer("JPTJetCorrectionProducer",
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt5"),
    correctors = cms.vstring('ak5JPTL1L2L3')
)


process.ak5JPTJetsL2 = cms.EDProducer("JPTJetCorrectionProducer",
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt5"),
    correctors = cms.vstring('ak5JPTL2Relative')
)


process.ak5JPTJetsL2L3 = cms.EDProducer("JPTJetCorrectionProducer",
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt5"),
    correctors = cms.vstring('ak5JPTL2L3')
)


process.ak5JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("ak5CaloJets"),
    jet2TracksAtCALO = cms.InputTag("ak5JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.5)
)


process.ak5JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("ak5CaloJets")
)


process.ak5JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator"),
    jets = cms.InputTag("ak5CaloJets")
)


process.ak5JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    jets = cms.InputTag("ak5CaloJets")
)


process.ak5PFJetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    jets = cms.InputTag("ak5PFJets"),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5)
)


process.ak5PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("particleFlow"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.4),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.5)
)


process.ak5PFJetsL1 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak5PFJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ak5PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak5PFJets"),
    correctors = cms.vstring('ak5PFL1L2L3')
)


process.ak5PFJetsL1L2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak5PFJets"),
    correctors = cms.vstring('ak5PFL1L2L3L6')
)


process.ak5PFJetsL2 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak5PFJets"),
    correctors = cms.vstring('ak5PFL2Relative')
)


process.ak5PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak5PFJets"),
    correctors = cms.vstring('ak5PFL2L3')
)


process.ak5PFJetsL2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak5PFJets"),
    correctors = cms.vstring('ak5PFL2L3L6')
)


process.ak5PFJetsLegacyHPSPiZeros = cms.EDProducer("RecoTauPiZeroProducer",
    massHypothesis = cms.double(0.136),
    ranking = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
        selection = cms.string('algoIs("kStrips")'),
        name = cms.string('InStrip'),
        plugin = cms.string('RecoTauPiZeroStringQuality'),
        selectionFailValue = cms.double(1000)
    )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    outputSelection = cms.string('pt > 0'),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        name = cms.string('s'),
        stripPhiAssociationDistance = cms.double(0.2),
        plugin = cms.string('RecoTauPiZeroStripPlugin'),
        qualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        makeCombinatoricStrips = cms.bool(False),
        stripCandidatesParticleIds = cms.vint32(2, 4),
        stripEtaAssociationDistance = cms.double(0.05),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices")
    ))
)


process.ak5PFJetsLegacyTaNCPiZeros = cms.EDProducer("RecoTauPiZeroProducer",
    massHypothesis = cms.double(0.136),
    ranking = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
        selection = cms.string('mass() < 0.2'),
        name = cms.string('PFTDM'),
        plugin = cms.string('RecoTauPiZeroStringQuality'),
        selectionFailValue = cms.double(1000)
    )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    outputSelection = cms.string('pt > 1.5'),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        plugin = cms.string('RecoTauPiZeroTrivialPlugin'),
        name = cms.string('1'),
        qualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ), 
        cms.PSet(
            maxMass = cms.double(-1.0),
            plugin = cms.string('RecoTauPiZeroCombinatoricPlugin'),
            minMass = cms.double(0.0),
            qualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                useTracksInsteadOfPFHadrons = cms.bool(False),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            choose = cms.uint32(2),
            maxInputGammas = cms.uint32(10),
            name = cms.string('2')
        ))
)


process.ak5PFJetsRecoTauPiZeros = cms.EDProducer("RecoTauPiZeroProducer",
    massHypothesis = cms.double(0.136),
    ranking = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
        selection = cms.string('abs(eta()) < 1.5 & abs(mass() - 0.13579) < 0.05'),
        name = cms.string('nearPiZeroMass'),
        plugin = cms.string('RecoTauPiZeroStringQuality'),
        selectionFailValue = cms.double(1000)
    ), 
        cms.PSet(
            selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
            selection = cms.string('abs(eta()) > 1.5 & mass() < 0.2'),
            name = cms.string('nearPiZeroMass'),
            plugin = cms.string('RecoTauPiZeroStringQuality'),
            selectionFailValue = cms.double(1000)
        ), 
        cms.PSet(
            selectionPassFunction = cms.string('abs(mass() - 0.13579)'),
            selection = cms.string('algoIs("kStrips")'),
            name = cms.string('InStrip'),
            plugin = cms.string('RecoTauPiZeroStringQuality'),
            selectionFailValue = cms.double(1000)
        )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    outputSelection = cms.string('pt > 1.5'),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        maxMass = cms.double(-1.0),
        plugin = cms.string('RecoTauPiZeroCombinatoricPlugin'),
        minMass = cms.double(0.0),
        qualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        choose = cms.uint32(2),
        maxInputGammas = cms.uint32(10),
        name = cms.string('2')
    ), 
        cms.PSet(
            name = cms.string('s'),
            stripPhiAssociationDistance = cms.double(0.2),
            plugin = cms.string('RecoTauPiZeroStripPlugin'),
            qualityCuts = cms.PSet(
                minTrackHits = cms.uint32(3),
                minTrackPt = cms.double(0.5),
                maxTrackChi2 = cms.double(100.0),
                minTrackPixelHits = cms.uint32(0),
                minGammaEt = cms.double(0.5),
                useTracksInsteadOfPFHadrons = cms.bool(False),
                maxDeltaZ = cms.double(0.2),
                maxTransverseImpactParameter = cms.double(0.03)
            ),
            makeCombinatoricStrips = cms.bool(False),
            stripCandidatesParticleIds = cms.vint32(2, 4),
            stripEtaAssociationDistance = cms.double(0.05),
            primaryVertexSrc = cms.InputTag("offlinePrimaryVertices")
        ))
)


process.ak5TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    MinVtxNdof = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    UseOnlyVertexTracks = cms.bool(False),
    radiusPU = cms.double(0.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    DxyTrVtxMax = cms.double(0.2),
    nSigmaPU = cms.double(1.0),
    MaxVtxZ = cms.double(15.0),
    DzTrVtxMax = cms.double(1),
    doPUOffsetCorr = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    jetType = cms.string('TrackJet'),
    inputEMin = cms.double(0.0),
    src = cms.InputTag("trackRefsForJets"),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.5)
)


process.ak5TrackJetsL1 = cms.EDProducer("TrackJetCorrectionProducer",
    src = cms.InputTag("ak5TrackJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ak5TrackJetsL1L2L3 = cms.EDProducer("TrackJetCorrectionProducer",
    src = cms.InputTag("ak5TrackJets"),
    correctors = cms.vstring('ak5TRKL1L2L3')
)


process.ak5TrackJetsL2 = cms.EDProducer("TrackJetCorrectionProducer",
    src = cms.InputTag("ak5TrackJets"),
    correctors = cms.vstring('ak5TRKL2Relative')
)


process.ak5TrackJetsL2L3 = cms.EDProducer("TrackJetCorrectionProducer",
    src = cms.InputTag("ak5TrackJets"),
    correctors = cms.vstring('ak5TRKL2L3')
)


process.ak7BasicJets = cms.EDProducer("FastjetJetProducer",
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("CastorTowerReco"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(True),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    rParam = cms.double(0.7),
    doPUOffsetCorr = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    jetPtMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetType = cms.string('BasicJet'),
    GhostArea = cms.double(0.01),
    inputEMin = cms.double(0.0)
)


process.ak7CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak7CaloJetsL1 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak7CaloJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ak7CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak7CaloJets"),
    correctors = cms.vstring('ak7CaloL1L2L3')
)


process.ak7CaloJetsL1L2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak7CaloJets"),
    correctors = cms.vstring('ak7CaloL1L2L3L6')
)


process.ak7CaloJetsL2 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak7CaloJets"),
    correctors = cms.vstring('ak7CaloL2Relative')
)


process.ak7CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak7CaloJets"),
    correctors = cms.vstring('ak7CaloL2L3')
)


process.ak7CaloJetsL2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ak7CaloJets"),
    correctors = cms.vstring('ak7CaloL2L3L6')
)


process.ak7CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.ak7CastorJetID = cms.EDProducer("CastorJetIDProducer",
    src = cms.InputTag("ak7BasicJets")
)


process.ak7GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak7GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak7GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak7HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    doAreaFastjet = cms.bool(True),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('AntiKt'),
    rParam = cms.double(0.7)
)


process.ak7JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("ak7CaloJets"),
    jet2TracksAtCALO = cms.InputTag("ak7JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("ak7JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.7)
)


process.ak7JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("ak7CaloJets")
)


process.ak7JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator"),
    jets = cms.InputTag("ak7CaloJets")
)


process.ak7JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    jets = cms.InputTag("ak7CaloJets")
)


process.ak7PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ak7PFJetsL1 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak7PFJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ak7PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak7PFJets"),
    correctors = cms.vstring('ak7PFL1L2L3')
)


process.ak7PFJetsL1L2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak7PFJets"),
    correctors = cms.vstring('ak7PFL1L2L3L6')
)


process.ak7PFJetsL2 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak7PFJets"),
    correctors = cms.vstring('ak7PFL2Relative')
)


process.ak7PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak7PFJets"),
    correctors = cms.vstring('ak7PFL2L3')
)


process.ak7PFJetsL2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ak7PFJets"),
    correctors = cms.vstring('ak7PFL2L3L6')
)


process.ak7TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    rParam = cms.double(0.7),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("trackRefsForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.allConversions = cms.EDProducer("ConversionProducer",
    bypassPreselGsf = cms.bool(True),
    AllowD0 = cms.bool(True),
    dEtaTrackBC = cms.double(0.2),
    convertedPhotonCollection = cms.string(''),
    AllowRightBC = cms.bool(False),
    bcBarrelCollection = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    scEndcapProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    MaxChi2Right = cms.double(10.0),
    primaryVertexProducer = cms.string('offlinePrimaryVerticesWithBS'),
    vtxChi2 = cms.double(0.0005),
    maxTrackRho = cms.double(120.0),
    d0 = cms.double(0.0),
    dPhiTrackBC = cms.double(1.0),
    bypassPreselEcal = cms.bool(False),
    dPhicutForSCmatching = cms.double(0.05),
    AllowOppCharge = cms.bool(True),
    bcEndcapCollection = cms.InputTag("multi5x5BasicClusters","multi5x5EndcapBasicClusters"),
    maxDelta = cms.double(0.01),
    HalfwayEta = cms.double(0.1),
    AllowDeltaPhi = cms.bool(False),
    maxTrackZ = cms.double(300.0),
    maxNumOfTrackInPU = cms.int32(999999),
    AllowSingleLeg = cms.bool(False),
    MinApproachHigh = cms.double(1.0),
    EnergyTotalBC = cms.double(0.3),
    dEtacutForSCmatching = cms.double(0.03),
    DeltaPhi = cms.double(0.2),
    scBarrelProducer = cms.InputTag("correctedHybridSuperClusters"),
    dz = cms.double(5.0),
    maxNbrOfIterations = cms.int32(40),
    AllowDeltaCot = cms.bool(True),
    EnergyBC = cms.double(0.3),
    MinHitsLeft = cms.int32(4),
    DeltaCotTheta = cms.double(0.1),
    minChiSqImprovement = cms.double(50.0),
    src = cms.InputTag("gsfGeneralInOutOutInConversionTrackMerger"),
    AllowVertex = cms.bool(True),
    UsePvtx = cms.bool(True),
    bypassPreselEcalEcal = cms.bool(True),
    minSCEt = cms.double(10.0),
    AllowTrackBC = cms.bool(True),
    rCut = cms.double(2.0),
    MinApproachLow = cms.double(-0.25),
    maxReducedChiSq = cms.double(225.0),
    MaxChi2Left = cms.double(10.0),
    AlgorithmName = cms.string('mixed'),
    MinHitsRight = cms.int32(2),
    AllowMinApproach = cms.bool(True)
)


process.ancientMuonSeed = cms.EDProducer("MuonSeedGenerator",
    SMB_21 = cms.vdouble(1.043, -0.124, 0.0, 0.183, 0.0, 
        0.0),
    SMB_20 = cms.vdouble(1.011, -0.052, 0.0, 0.188, 0.0, 
        0.0),
    SMB_22 = cms.vdouble(1.474, -0.758, 0.0, 0.185, 0.0, 
        0.0),
    OL_2213 = cms.vdouble(0.117, 0.0, 0.0, 0.044, 0.0, 
        0.0),
    SME_11 = cms.vdouble(3.295, -1.527, 0.112, 0.378, 0.02, 
        0.0),
    SME_13 = cms.vdouble(-1.286, 1.711, 0.0, 0.356, 0.0, 
        0.0),
    SME_12 = cms.vdouble(0.102, 0.599, 0.0, 0.38, 0.0, 
        0.0),
    SME_32 = cms.vdouble(-0.901, 1.333, -0.47, 0.41, 0.073, 
        0.0),
    SME_31 = cms.vdouble(-1.594, 1.482, -0.317, 0.487, 0.097, 
        0.0),
    OL_1213 = cms.vdouble(0.96, -0.737, 0.0, 0.052, 0.0, 
        0.0),
    DT_13 = cms.vdouble(0.315, 0.068, -0.127, 0.051, -0.002, 
        0.0),
    DT_12 = cms.vdouble(0.183, 0.054, -0.087, 0.028, 0.002, 
        0.0),
    DT_14 = cms.vdouble(0.359, 0.052, -0.107, 0.072, -0.004, 
        0.0),
    OL_1232 = cms.vdouble(0.184, 0.0, 0.0, 0.066, 0.0, 
        0.0),
    CSC_23 = cms.vdouble(-0.081, 0.113, -0.029, 0.015, 0.008, 
        0.0),
    CSC_24 = cms.vdouble(0.004, 0.021, -0.002, 0.053, 0.0, 
        0.0),
    CSC_03 = cms.vdouble(0.787, -0.338, 0.029, 0.101, -0.008, 
        0.0),
    CSC_01 = cms.vdouble(0.166, 0.0, 0.0, 0.031, 0.0, 
        0.0),
    SMB_32 = cms.vdouble(0.67, -0.327, 0.0, 0.22, 0.0, 
        0.0),
    SMB_30 = cms.vdouble(0.505, -0.022, 0.0, 0.215, 0.0, 
        0.0),
    SMB_31 = cms.vdouble(0.549, -0.145, 0.0, 0.207, 0.0, 
        0.0),
    SMB_10 = cms.vdouble(1.387, -0.038, 0.0, 0.19, 0.0, 
        0.0),
    SMB_11 = cms.vdouble(1.247, 0.72, -0.802, 0.229, -0.075, 
        0.0),
    SMB_12 = cms.vdouble(2.128, -0.956, 0.0, 0.199, 0.0, 
        0.0),
    DT_23 = cms.vdouble(0.13, 0.023, -0.057, 0.028, 0.004, 
        0.0),
    DT_24 = cms.vdouble(0.176, 0.014, -0.051, 0.051, 0.003, 
        0.0),
    SME_21 = cms.vdouble(-0.529, 1.194, -0.358, 0.472, 0.086, 
        0.0),
    SME_22 = cms.vdouble(-1.207, 1.491, -0.251, 0.189, 0.243, 
        0.0),
    CSC_34 = cms.vdouble(0.062, -0.067, 0.019, 0.021, 0.003, 
        0.0),
    CSC_02 = cms.vdouble(0.612, -0.207, -0.0, 0.067, -0.001, 
        0.0),
    SME_42 = cms.vdouble(-0.003, 0.005, 0.005, 0.608, 0.076, 
        0.0),
    SME_41 = cms.vdouble(-0.003, 0.005, 0.005, 0.608, 0.076, 
        0.0),
    OL_2222 = cms.vdouble(0.107, 0.0, 0.0, 0.04, 0.0, 
        0.0),
    DT_34 = cms.vdouble(0.044, 0.004, -0.013, 0.029, 0.003, 
        0.0),
    CSC_14 = cms.vdouble(0.606, -0.181, -0.002, 0.111, -0.003, 
        0.0),
    OL_1222 = cms.vdouble(0.848, -0.591, 0.0, 0.062, 0.0, 
        0.0),
    CSC_13 = cms.vdouble(0.901, -1.302, 0.533, 0.045, 0.005, 
        0.0),
    CSC_12 = cms.vdouble(-0.161, 0.254, -0.047, 0.042, -0.007, 
        0.0),
    DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
    DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
    CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
    SME_13_0_scale = cms.vdouble(0.104905, 0.0),
    SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
    DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
    OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
    OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
    SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
    DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
    CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
    OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
    CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
    OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
    SME_11_0_scale = cms.vdouble(1.325085, 0.0),
    CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
    SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
    SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
    DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
    SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
    CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
    DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
    SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
    CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
    CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
    DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
    SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
    DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
    SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
    SME_12_0_scale = cms.vdouble(2.279181, 0.0),
    CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
    DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
    SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
    SME_22_0_scale = cms.vdouble(-3.457901, 0.0),
    SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
    DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
    CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
    DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
    DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
    CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
    CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
    OL_2222_0_scale = cms.vdouble(-7.667231, 0.0),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    crackWindow = cms.double(0.04),
    crackEtas = cms.vdouble(0.2, 1.6, 1.7),
    CSCRecSegmentLabel = cms.InputTag("cscSegments"),
    scaleDT = cms.bool(True),
    EnableDTMeasurement = cms.bool(True),
    DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
    EnableCSCMeasurement = cms.bool(True)
)


process.assoc2GsfTracks = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(False),
    associator = cms.string('TrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("electronGsfTracks")
)


process.assoc2secStepTk = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(False),
    associator = cms.string('TrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("secStep")
)


process.assoc2thStepTk = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(False),
    associator = cms.string('TrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("thStep")
)


process.assocInOutConversionTracks = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(False),
    associator = cms.string('TrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("ckfInOutTracksFromConversions")
)


process.assocOutInConversionTracks = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(False),
    associator = cms.string('TrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("ckfOutInTracksFromConversions")
)


process.baseMuonAssociatorFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("globalMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.beamhaloTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("beamhaloTrackerSeeds"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('BeamHaloPropagatorAlong'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('BeamHaloPropagatorOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('BeamHaloNavigationSchool'),
    TrajectoryBuilder = cms.string('CkfTrajectoryBuilderBH'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.beamhaloTrackerSeeds = cms.EDProducer("CtfSpecialSeedGenerator",
    ErrorRescaling = cms.double(50.0),
    OrderedHitsFactoryPSets = cms.VPSet(cms.PSet(
        ComponentName = cms.string('BeamHaloPairGenerator'),
        maxTheta = cms.double(0.1),
        NavigationDirection = cms.string('outsideIn'),
        LayerPSet = cms.PSet(
            TEC4 = cms.PSet(
                minRing = cms.int32(1),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(True),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(2)
            ),
            TEC5 = cms.PSet(
                minRing = cms.int32(1),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(True),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(2)
            ),
            TEC6 = cms.PSet(
                minRing = cms.int32(1),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(True),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(2)
            ),
            TEC = cms.PSet(
                minRing = cms.int32(5),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(False),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(7)
            ),
            TEC1 = cms.PSet(
                minRing = cms.int32(1),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(True),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(2)
            ),
            TEC2 = cms.PSet(
                minRing = cms.int32(1),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(True),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(2)
            ),
            TEC3 = cms.PSet(
                minRing = cms.int32(1),
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(True),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                maxRing = cms.int32(2)
            ),
            FPix = cms.PSet(
                hitErrorRZ = cms.double(0.0036),
                hitErrorRPhi = cms.double(0.0051),
                TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
                HitProducer = cms.string('siPixelRecHits'),
                useErrorsFromParam = cms.bool(True)
            ),
            TID = cms.PSet(
                matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                useRingSlector = cms.bool(False),
                TTRHBuilder = cms.string('WithTrackAngle'),
                rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit")
            ),
            layerList = cms.vstring('FPix1_pos+FPix2_pos', 
                'FPix1_neg+FPix2_neg', 
                'TID2_pos+TID3_pos', 
                'TID2_neg+TID3_neg', 
                'TEC1_neg+TEC2_neg', 
                'TEC1_pos+TEC2_pos', 
                'TEC2_neg+TEC3_neg', 
                'TEC2_pos+TEC3_pos', 
                'TEC3_neg+TEC4_neg', 
                'TEC3_pos+TEC4_pos', 
                'TEC4_neg+TEC5_neg', 
                'TEC4_pos+TEC5_pos', 
                'TEC5_neg+TEC6_neg', 
                'TEC5_pos+TEC6_pos', 
                'TEC7_neg+TEC8_neg', 
                'TEC7_pos+TEC8_pos', 
                'TEC8_neg+TEC9_neg', 
                'TEC8_pos+TEC9_pos')
        ),
        PropagationDirection = cms.string('alongMomentum')
    ), 
        cms.PSet(
            ComponentName = cms.string('BeamHaloPairGenerator'),
            maxTheta = cms.double(0.1),
            NavigationDirection = cms.string('outsideIn'),
            LayerPSet = cms.PSet(
                TEC4 = cms.PSet(
                    minRing = cms.int32(1),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(True),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(2)
                ),
                TEC5 = cms.PSet(
                    minRing = cms.int32(1),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(True),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(2)
                ),
                TEC6 = cms.PSet(
                    minRing = cms.int32(1),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(True),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(2)
                ),
                TEC = cms.PSet(
                    minRing = cms.int32(5),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(False),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(7)
                ),
                TEC1 = cms.PSet(
                    minRing = cms.int32(1),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(True),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(2)
                ),
                TEC2 = cms.PSet(
                    minRing = cms.int32(1),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(True),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(2)
                ),
                TEC3 = cms.PSet(
                    minRing = cms.int32(1),
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(True),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
                    maxRing = cms.int32(2)
                ),
                FPix = cms.PSet(
                    hitErrorRZ = cms.double(0.0036),
                    hitErrorRPhi = cms.double(0.0051),
                    TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
                    HitProducer = cms.string('siPixelRecHits'),
                    useErrorsFromParam = cms.bool(True)
                ),
                TID = cms.PSet(
                    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
                    useRingSlector = cms.bool(False),
                    TTRHBuilder = cms.string('WithTrackAngle'),
                    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit")
                ),
                layerList = cms.vstring('FPix1_pos+FPix2_pos', 
                    'FPix1_neg+FPix2_neg', 
                    'TID2_pos+TID3_pos', 
                    'TID2_neg+TID3_neg', 
                    'TEC1_neg+TEC2_neg', 
                    'TEC1_pos+TEC2_pos', 
                    'TEC2_neg+TEC3_neg', 
                    'TEC2_pos+TEC3_pos', 
                    'TEC3_neg+TEC4_neg', 
                    'TEC3_pos+TEC4_pos', 
                    'TEC4_neg+TEC5_neg', 
                    'TEC4_pos+TEC5_pos', 
                    'TEC5_neg+TEC6_neg', 
                    'TEC5_pos+TEC6_pos', 
                    'TEC7_neg+TEC8_neg', 
                    'TEC7_pos+TEC8_pos', 
                    'TEC8_neg+TEC9_neg', 
                    'TEC8_pos+TEC9_pos')
            ),
            PropagationDirection = cms.string('oppositeToMomentum')
        )),
    Charges = cms.vint32(-1, 1),
    PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(10000),
    UseScintillatorsConstraint = cms.bool(False),
    SetMomentum = cms.bool(True),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            originHalfLength = cms.double(15.9),
            originZPos = cms.double(0.0),
            originYPos = cms.double(0.0),
            ptMin = cms.double(0.9),
            originXPos = cms.double(0.0),
            originRadius = cms.double(0.2)
        ),
        ComponentName = cms.string('GlobalRegionProducer')
    ),
    SeedsFromNegativeY = cms.bool(False),
    TTRHBuilder = cms.string('WithTrackAngle'),
    doClusterCheck = cms.bool(True),
    SeedsFromPositiveY = cms.bool(False),
    MaxNumberOfPixelClusters = cms.uint32(10000),
    SeedMomentum = cms.double(15.0),
    maxSeeds = cms.int32(10000),
    CheckHitsAreOnDifferentLayers = cms.bool(False),
    ClusterCollectionLabel = cms.InputTag("siStripClusters"),
    requireBOFF = cms.bool(False)
)


process.beamhaloTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("beamhaloTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherBH'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('beamhaloTracks'),
    NavigationSchool = cms.string('BeamHaloNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('beamhalo'),
    Propagator = cms.string('BeamHaloPropagatorAlong')
)


process.ca4CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("towerMaker"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(True),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.3),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.4),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('CaloJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('CambridgeAachen'),
    rParam = cms.double(0.4)
)


process.ca4CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.4),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.ca4GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('CambridgeAachen'),
    rParam = cms.double(0.4)
)


process.ca4GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.4),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca4GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.4),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca4JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("ca4CaloJets")
)


process.ca4PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("particleFlow"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.4),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('CambridgeAachen'),
    rParam = cms.double(0.4)
)


process.ca4TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    MinVtxNdof = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    UseOnlyVertexTracks = cms.bool(False),
    radiusPU = cms.double(0.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    DxyTrVtxMax = cms.double(0.2),
    nSigmaPU = cms.double(1.0),
    MaxVtxZ = cms.double(15.0),
    DzTrVtxMax = cms.double(1),
    doPUOffsetCorr = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    jetType = cms.string('TrackJet'),
    inputEMin = cms.double(0.0),
    src = cms.InputTag("trackRefsForJets"),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('CambridgeAachen'),
    rParam = cms.double(0.4)
)


process.ca6CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca6CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.ca6GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca6GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca6GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca6JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("ca6CaloJets")
)


process.ca6PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ca6TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('CambridgeAachen'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    rParam = cms.double(0.6),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("trackRefsForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.caloRecoTauDiscriminationAgainstElectron = cms.EDProducer("CaloRecoTauDiscriminationAgainstElectron",
    CaloTauProducer = cms.InputTag("caloRecoTauProducer"),
    leadTrack_HCAL3x3hitsEtSumOverPt_minvalue = cms.double(0.1),
    maxleadTrackHCAL3x3hottesthitDEta = cms.double(0.1),
    ApplyCut_maxleadTrackHCAL3x3hottesthitDEta = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyCut_leadTrackavoidsECALcrack = cms.bool(True)
)


process.caloRecoTauDiscriminationAgainstMuon = cms.EDProducer("CaloRecoTauDiscriminationAgainstMuon",
    CaloTauProducer = cms.InputTag("caloRecoTauProducer"),
    muonSource = cms.InputTag("muons"),
    segmCompCoefficient = cms.double(0.5),
    muonCompCut = cms.double(0.0),
    dRmatch = cms.double(0.5),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    discriminatorOption = cms.string('noSegMatch'),
    caloCompCoefficient = cms.double(0.5)
)


process.caloRecoTauDiscriminationByECALIsolation = cms.EDProducer("CaloRecoTauDiscriminationByIsolation",
    ECALisolAnnulus_maximumSumEtCut = cms.double(1.5),
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    TrackerIsolAnnulus_maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    CaloTauProducer = cms.InputTag("caloRecoTauProducer")
)


process.caloRecoTauDiscriminationByIsolation = cms.EDProducer("CaloRecoTauDiscriminationByIsolation",
    ECALisolAnnulus_maximumSumEtCut = cms.double(1.5),
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    TrackerIsolAnnulus_maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    CaloTauProducer = cms.InputTag("caloRecoTauProducer")
)


process.caloRecoTauDiscriminationByLeadingTrackFinding = cms.EDProducer("CaloRecoTauDiscriminationByLeadingTrackPtCut",
    MinPtLeadingTrack = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    CaloTauProducer = cms.InputTag("caloRecoTauProducer")
)


process.caloRecoTauDiscriminationByLeadingTrackPtCut = cms.EDProducer("CaloRecoTauDiscriminationByLeadingTrackPtCut",
    MinPtLeadingTrack = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    CaloTauProducer = cms.InputTag("caloRecoTauProducer")
)


process.caloRecoTauDiscriminationByTrackIsolation = cms.EDProducer("CaloRecoTauDiscriminationByIsolation",
    ECALisolAnnulus_maximumSumEtCut = cms.double(1.5),
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    TrackerIsolAnnulus_maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    CaloTauProducer = cms.InputTag("caloRecoTauProducer")
)


process.caloRecoTauProducer = cms.EDProducer("TCRecoTauProducer",
    tkminTrackerHitsn = cms.int32(5),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    EtCaloOverTrackMin = cms.double(-0.9),
    EERecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    tkmaxChi2 = cms.double(100.0),
    EtHcalOverTrackMin = cms.double(-0.3),
    CaloRecoTauProducer = cms.InputTag("JPTCaloRecoTauProducer"),
    EBRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    tkminPixelHitsn = cms.int32(0),
    MatchingConeSize = cms.double(0.1),
    TrackCollection = cms.InputTag("generalTracks"),
    HBHERecHitCollection = cms.InputTag("hbhereco"),
    EtCaloOverTrackMax = cms.double(0.0),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    SignalConeSize = cms.double(0.2),
    EcalConeSize = cms.double(0.5),
    Track_minPt = cms.double(1.0),
    EtHcalOverTrackMax = cms.double(1.0),
    HFRecHitCollection = cms.InputTag("hfreco"),
    DropRejectedJets = cms.untracked.bool(False),
    HORecHitCollection = cms.InputTag("horeco"),
    DropCaloJets = cms.untracked.bool(False),
    tkmaxipt = cms.double(0.1)
)


process.caloRecoTauTagInfoProducer = cms.EDProducer("CaloRecoTauTagInfoProducer",
    tkminTrackerHitsn = cms.int32(3),
    tkminPixelHitsn = cms.int32(0),
    ECALBasicClusterpropagTrack_matchingDRConeSize = cms.double(0.015),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    tkminPt = cms.double(0.5),
    BarrelBasicClustersSource = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    UsePVconstraint = cms.bool(True),
    tkmaxChi2 = cms.double(100.0),
    EndcapBasicClustersSource = cms.InputTag("multi5x5BasicClusters","multi5x5EndcapBasicClusters"),
    smearedPVsigmaY = cms.double(0.0015),
    smearedPVsigmaX = cms.double(0.0015),
    ECALBasicClusterminE = cms.double(1.0),
    smearedPVsigmaZ = cms.double(0.005),
    tkQuality = cms.string('highPurity'),
    tkPVmaxDZ = cms.double(1.0),
    UseTrackQuality = cms.bool(True),
    ECALBasicClustersAroundCaloJet_DRConeSize = cms.double(0.5),
    tkmaxipt = cms.double(0.1),
    CaloJetTracksAssociatorProducer = cms.InputTag("JPTAntiKt5JetTracksAssociatorAtVertex")
)


process.caloTowersForMET = cms.EDProducer("CaloTowerCandidateCreator",
    minimumE = cms.double(-1.0),
    minimumEt = cms.double(-1.0),
    src = cms.InputTag("towerMaker")
)


process.caloTowersOpt = cms.EDProducer("CaloTowerCandidateCreator",
    minimumE = cms.double(-1.0),
    minimumEt = cms.double(-1.0),
    src = cms.InputTag("calotoweroptmaker")
)


process.calomuons = cms.EDProducer("CaloMuonProducer",
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    MuonCaloCompatibility = cms.PSet(
        allSiPMHO = cms.bool(False),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    inputMuons = cms.InputTag("muons"),
    inputTracks = cms.InputTag("generalTracks"),
    minCaloCompatibility = cms.double(0.6),
    inputCollection = cms.InputTag("muons"),
    minPt = cms.double(1.0)
)


process.calotowermaker = cms.EDProducer("CaloTowersCreator",
    EBSumThreshold = cms.double(0.2),
    MomHBDepth = cms.double(0.2),
    UseEtEBTreshold = cms.bool(False),
    hfInput = cms.InputTag("hfreco"),
    AllowMissingInputs = cms.bool(False),
    HBThreshold = cms.double(0.7),
    EESumThreshold = cms.double(0.45),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF1Weight = cms.double(1.0),
    MomEEDepth = cms.double(0.0),
    UseEcalRecoveredHits = cms.bool(False),
    MomConstrMethod = cms.int32(1),
    MomHEDepth = cms.double(0.4),
    HcalThreshold = cms.double(-1000.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseSymEBTreshold = cms.bool(True),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEWeight = cms.double(1.0),
    UseHO = cms.bool(True),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HESWeight = cms.double(1.0),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOThresholdPlus1 = cms.double(3.5),
    EBWeight = cms.double(1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    EBThreshold = cms.double(0.07),
    hbheInput = cms.InputTag("hbhereco"),
    HF2Weight = cms.double(1.0),
    HF2Threshold = cms.double(0.85),
    HcalAcceptSeverityLevel = cms.uint32(9),
    EEThreshold = cms.double(0.3),
    HESThreshold = cms.double(0.8),
    HOThresholdPlus2 = cms.double(3.5),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    hoInput = cms.InputTag("horeco"),
    HF1Threshold = cms.double(0.5),
    HOThresholdMinus1 = cms.double(3.5),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    HEDWeight = cms.double(1.0),
    HOWeight = cms.double(1.0),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    UseSymEETreshold = cms.bool(True),
    HEDThreshold = cms.double(0.8),
    UseRejectedHitsOnly = cms.bool(False),
    EcutTower = cms.double(-1000.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseHcalRecoveredHits = cms.bool(True),
    HOThresholdMinus2 = cms.double(3.5),
    HOThreshold0 = cms.double(1.1),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    MomEBDepth = cms.double(0.3),
    HBWeight = cms.double(1.0),
    EcalAcceptSeverityLevel = cms.uint32(1),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0)
)


process.calotoweroptmaker = cms.EDProducer("CaloTowersCreator",
    EBSumThreshold = cms.double(0.2),
    MomHBDepth = cms.double(0.2),
    UseEtEBTreshold = cms.bool(False),
    hfInput = cms.InputTag("hfreco"),
    AllowMissingInputs = cms.bool(False),
    HBThreshold = cms.double(0.5),
    EESumThreshold = cms.double(0.45),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    MomEEDepth = cms.double(0.0),
    UseEcalRecoveredHits = cms.bool(False),
    MomConstrMethod = cms.int32(1),
    MomHEDepth = cms.double(0.4),
    HcalThreshold = cms.double(-1000.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseSymEBTreshold = cms.bool(True),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEWeight = cms.double(1.0),
    UseHO = cms.bool(False),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF1Weight = cms.double(1.0),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeight = cms.double(1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HESWeight = cms.double(1.0),
    HESThreshold = cms.double(0.7),
    hbheInput = cms.InputTag("hbhereco"),
    HF2Weight = cms.double(1.0),
    HF2Threshold = cms.double(0.85),
    HcalAcceptSeverityLevel = cms.uint32(9),
    EEThreshold = cms.double(0.3),
    HOThresholdPlus1 = cms.double(3.5),
    HOThresholdPlus2 = cms.double(3.5),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    hoInput = cms.InputTag("horeco"),
    HF1Threshold = cms.double(0.5),
    HOThresholdMinus1 = cms.double(3.5),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EcutTower = cms.double(-1000.0),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeight = cms.double(1.0),
    HEDWeight = cms.double(1.0),
    UseSymEETreshold = cms.bool(True),
    HEDThreshold = cms.double(0.5),
    EBThreshold = cms.double(0.07),
    UseRejectedHitsOnly = cms.bool(False),
    UseHcalRecoveredHits = cms.bool(True),
    HOThresholdMinus2 = cms.double(3.5),
    HOThreshold0 = cms.double(1.1),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    MomEBDepth = cms.double(0.3),
    HBWeight = cms.double(1.0),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EcalAcceptSeverityLevel = cms.uint32(1)
)


process.calotoweroptmakerWithHO = cms.EDProducer("CaloTowersCreator",
    EBSumThreshold = cms.double(0.2),
    MomHBDepth = cms.double(0.2),
    UseEtEBTreshold = cms.bool(False),
    hfInput = cms.InputTag("hfreco"),
    AllowMissingInputs = cms.bool(False),
    HBThreshold = cms.double(0.5),
    EESumThreshold = cms.double(0.45),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF1Weight = cms.double(1.0),
    MomEEDepth = cms.double(0.0),
    EBThreshold = cms.double(0.07),
    UseEcalRecoveredHits = cms.bool(False),
    MomConstrMethod = cms.int32(1),
    MomHEDepth = cms.double(0.4),
    HcalThreshold = cms.double(-1000.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseSymEBTreshold = cms.bool(True),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEWeight = cms.double(1.0),
    UseHO = cms.bool(True),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOThresholdPlus1 = cms.double(3.5),
    EBWeight = cms.double(1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HESWeight = cms.double(1.0),
    hbheInput = cms.InputTag("hbhereco"),
    HF2Weight = cms.double(1.0),
    HF2Threshold = cms.double(0.85),
    HcalAcceptSeverityLevel = cms.uint32(9),
    EEThreshold = cms.double(0.3),
    HESThreshold = cms.double(0.7),
    HOThresholdPlus2 = cms.double(3.5),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    hoInput = cms.InputTag("horeco"),
    HF1Threshold = cms.double(0.5),
    HOThresholdMinus1 = cms.double(3.5),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    HEDWeight = cms.double(1.0),
    HOWeight = cms.double(1.0),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    UseSymEETreshold = cms.bool(True),
    HEDThreshold = cms.double(0.5),
    UseRejectedHitsOnly = cms.bool(False),
    EcutTower = cms.double(-1000.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseHcalRecoveredHits = cms.bool(True),
    HOThresholdMinus2 = cms.double(3.5),
    HOThreshold0 = cms.double(1.1),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    MomEBDepth = cms.double(0.3),
    HBWeight = cms.double(1.0),
    EcalAcceptSeverityLevel = cms.uint32(1),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0)
)


process.castorDigis = cms.EDProducer("CastorRawToDigi",
    CastorFirstFED = cms.untracked.int32(690),
    FilterDataQuality = cms.bool(True),
    silent = cms.untracked.bool(False),
    lastSample = cms.int32(9),
    InputLabel = cms.InputTag("rawDataCollector"),
    ComplainEmptyData = cms.untracked.bool(False),
    FEDs = cms.untracked.vint32(690, 691, 692),
    UnpackTTP = cms.untracked.bool(True),
    ExceptionEmptyData = cms.untracked.bool(False),
    firstSample = cms.int32(0)
)


process.castorreco = cms.EDProducer("CastorSimpleReconstructor",
    correctionPhaseNS = cms.double(0.0),
    digiLabel = cms.InputTag("castorDigis"),
    samplesToAdd = cms.int32(2),
    Subdetector = cms.string('CASTOR'),
    correctForTimeslew = cms.bool(False),
    correctForPhaseContainment = cms.bool(False),
    firstSample = cms.int32(4)
)


process.chargedak5GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('AntiKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("chargedParticles"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.ckfInOutTracksFromConversions = cms.EDProducer("TrackProducerWithSCAssociation",
    src = cms.InputTag("conversionTrackCandidates","inOutTracksFromConversions"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string('conversionTrackCandidates'),
    Fitter = cms.string('KFFittingSmootherForInOut'),
    ComponentName = cms.string('ckfInOutTracksFromConversions'),
    MeasurementTracker = cms.string(''),
    trackCandidateSCAssociationCollection = cms.string('inOutTrackCandidateSCAssociationCollection'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('inOutEcalSeededConv'),
    Propagator = cms.string('alongMomElePropagator'),
    recoTrackSCAssociationCollection = cms.string('inOutTrackSCAssociationCollection')
)


process.ckfOutInTracksFromConversions = cms.EDProducer("TrackProducerWithSCAssociation",
    src = cms.InputTag("conversionTrackCandidates","outInTracksFromConversions"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string('conversionTrackCandidates'),
    Fitter = cms.string('KFFitterForOutIn'),
    ComponentName = cms.string('ckfOutInTracksFromConversions'),
    MeasurementTracker = cms.string(''),
    trackCandidateSCAssociationCollection = cms.string('outInTrackCandidateSCAssociationCollection'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('outInEcalSeededConv'),
    Propagator = cms.string('alongMomElePropagator'),
    recoTrackSCAssociationCollection = cms.string('outInTrackSCAssociationCollection')
)


process.ckfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("globalMixedSeeds"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.ckfTrackCandidatesCombinedSeeds = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("globalCombinedSeeds"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.ckfTrackCandidatesNoOverlaps = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("globalMixedSeeds"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('CkfTrajectoryBuilder'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.ckfTrackCandidatesP5 = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("combinatorialcosmicseedfinderP5"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('CosmicNavigationSchool'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilderP5'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.ckfTrackCandidatesPixelLess = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("globalPixelLessSeeds"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.cleanedHybridSuperClusters = cms.EDProducer("HybridClusterProducer",
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(7.4),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    severityRecHitThreshold = cms.double(4.0),
    RecHitFlagToBeExcluded = cms.vint32(3, 5, 9, 10),
    eseed = cms.double(0.35),
    eThreshA = cms.double(0.003),
    basicclusterCollection = cms.string('hybridBarrelBasicClusters'),
    eThreshB = cms.double(0.1),
    dynamicPhiRoad = cms.bool(False),
    severitySpikeId = cms.int32(2),
    excludeFlagged = cms.bool(True),
    clustershapecollection = cms.string(''),
    ethresh = cms.double(0.1),
    ewing = cms.double(0.0),
    RecHitSeverityToBeExcluded = cms.vint32(4, 5, 3),
    step = cms.int32(17),
    debugLevel = cms.string('INFO'),
    dynamicEThresh = cms.bool(False),
    superclusterCollection = cms.string(''),
    shapeAssociation = cms.string('hybridShapeAssoc'),
    HybridBarrelSeedThr = cms.double(1.0),
    ecalhitcollection = cms.string('EcalRecHitsEB'),
    severitySpikeThreshold = cms.double(0.95),
    ecalhitproducer = cms.string('ecalRecHit')
)


process.combinatoricRecoTaus = cms.EDProducer("RecoTauProducer",
    piZeroSrc = cms.InputTag("ak5PFJetsLegacyHPSPiZeros"),
    modifiers = cms.VPSet(cms.PSet(
        pvSrc = cms.InputTag("offlinePrimaryVertices"),
        name = cms.string('sipt'),
        plugin = cms.string('RecoTauImpactParameterSignificancePlugin')
    ), 
        cms.PSet(
            ElectronPreIDProducer = cms.InputTag("elecpreid"),
            name = cms.string('elec_rej'),
            plugin = cms.string('RecoTauElectronRejectionPlugin'),
            DataType = cms.string('AOD'),
            maximumForElectrionPreIDOutput = cms.double(-0.1),
            EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
            EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
            EcalStripSumE_minClusEnergy = cms.double(0.1),
            ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
            EcalStripSumE_deltaEta = cms.double(0.03)
        ), 
        cms.PSet(
            pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
            name = cms.string('TTIworkaround'),
            plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
        )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        name = cms.string('combinatoric'),
        plugin = cms.string('RecoTauBuilderCombinatoricPlugin'),
        qualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        decayModes = cms.VPSet(cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(1),
            maxPiZeros = cms.uint32(0),
            maxTracks = cms.uint32(6)
        ), 
            cms.PSet(
                nPiZeros = cms.uint32(1),
                nCharged = cms.uint32(1),
                maxPiZeros = cms.uint32(6),
                maxTracks = cms.uint32(6)
            ), 
            cms.PSet(
                nPiZeros = cms.uint32(2),
                nCharged = cms.uint32(1),
                maxPiZeros = cms.uint32(5),
                maxTracks = cms.uint32(6)
            ), 
            cms.PSet(
                nPiZeros = cms.uint32(0),
                nCharged = cms.uint32(3),
                maxPiZeros = cms.uint32(0),
                maxTracks = cms.uint32(6)
            )),
        isolationConeSize = cms.double(0.5),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    buildNullTaus = cms.bool(True)
)


process.combinatoricRecoTausDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    UseOnlyChargedHadrons = cms.bool(False),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus")
)


process.combinatoricRecoTausDiscriminationByTanc = cms.EDProducer("RecoTauMVADiscriminator",
    discriminantOptions = cms.PSet(
        BinnedMaskedHcalIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            mask = cms.PSet(
                finalHcalCone = cms.double(0.08),
                ecalCone = cms.double(0.15),
                hcalCone = cms.double(0.3),
                maxSigmas = cms.double(2)
            ),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(1.0, 1.79, 4.03),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.15, 1.8, 4.03),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.22, 1.81, 4.03),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.27, 1.83, 4.03),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.31, 1.84, 4.03),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(1.31, 1.84, 4.03),
            plugin = cms.string('RecoTauDiscriminationBinnedMaskedHCALIsolation')
        ),
        InvariantOpeningAngle = cms.PSet(
            defaultRMS = cms.string('max(0.3/max(pt, 1.0), 0.005)'),
            plugin = cms.string('RecoTauDiscriminantInvariantWidth'),
            decayModes = cms.VPSet(cms.PSet(
                nPiZeros = cms.uint32(1),
                rms = cms.string('2.7e-3 + 0.23/max(pt, 1.0)'),
                nCharged = cms.uint32(1),
                mean = cms.string('5.0e-3 + 0.43/max(pt, 1.0)')
            ), 
                cms.PSet(
                    nPiZeros = cms.uint32(2),
                    rms = cms.string('7.5e-3 + 0.3/max(pt, 1.0)'),
                    nCharged = cms.uint32(1),
                    mean = cms.string('4.7e-3 + 0.9/max(pt, 1.0)')
                ), 
                cms.PSet(
                    nPiZeros = cms.uint32(0),
                    rms = cms.string('0.38/max(pt, 1.0)'),
                    nCharged = cms.uint32(3),
                    mean = cms.string('0.87/max(pt, 1.0)')
                )),
            defaultMean = cms.string('max(0.87/max(pt, 1.0), 0.005)')
        ),
        BinnedMaskedEcalIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            mask = cms.PSet(
                finalHcalCone = cms.double(0.08),
                ecalCone = cms.double(0.15),
                hcalCone = cms.double(0.3),
                maxSigmas = cms.double(2)
            ),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(0.5, 0.85, 1.84),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.63, 0.91, 1.84),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.7, 0.96, 1.85),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.75, 0.99, 1.85),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.79, 1.02, 1.86),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(0.79, 1.02, 1.86),
            plugin = cms.string('RecoTauDiscriminationBinnedMaskedECALIsolation')
        ),
        FlightPathSignificance = cms.PSet(
            discSrc = cms.InputTag("hpsTancTausDiscriminationByFlightPath"),
            plugin = cms.string('RecoTauDiscriminantFromDiscriminator')
        ),
        BinnedTrackIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(0.5, 0.86, 1.87),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(0.52, 0.86, 1.87),
            plugin = cms.string('RecoTauDiscriminationBinnedTrackIsolation')
        )
    ),
    mvas = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        mvaLabel = cms.string('1prong0pi0'),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            mvaLabel = cms.string('1prong1pi0'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            mvaLabel = cms.string('1prong2pi0'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            mvaLabel = cms.string('3prong0pi0'),
            nCharged = cms.uint32(3)
        )),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    remapOutput = cms.bool(True),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    dbLabel = cms.string('hpstanc')
)


process.combinatoricRecoTausHPSSelector = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    src = cms.InputTag("combinatoricRecoTaus"),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(5.0),
    coneSizeFormula = cms.string('0.3'),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        )),
    matchingCone = cms.double(0.1)
)


process.combinatoricRecoTausTancTransform = cms.EDProducer("RecoTauMVATransform",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    transforms = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = (cms.vdouble(0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508)+cms.vdouble(0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243693947972, 0.2446621342, 0.25648929965, 0.2608766459, 0.265139843949, 0.268288096025, 0.271490633611, 0.274812027295, 0.278726505561, 0.283196361675, 0.287921047203, 0.293485065795, 0.299327353484, 0.305468394708, 0.310410038477, 0.315654364298, 0.320865024837, 0.324875648584, 0.328691660974, 0.332598633349, 0.336484807993, 0.339893814351, 0.343528868912, 0.346311138119, 0.348525259682, 0.350638868762, 0.352500481165, 0.354385202603, 0.356405103778, 0.358448162743, 0.359626155068, 0.361359527277, 0.362911630832, 0.364767207965, 0.365568276809, 0.367161876825, 0.368245783665, 0.369700987138, 0.370891835827, 0.371335926598, 0.372724067775, 0.374122626292, 0.374872824273, 0.376287585272, 0.377808481377, 0.379437962659, 0.380385427158, 0.381454465894, 0.382529530437, 0.383308773065, 0.383900643462, 0.384488881534, 0.385284008411, 0.385778244795, 0.386880706208, 0.387787417873, 0.389206336729, 0.390430843456, 0.391560096158, 0.392490239284, 0.393218300975, 0.394889524946, 0.396474094424, 0.397328157396, 0.398823062781, 0.400437280424, 0.401846875958, 0.402719262685, 0.403705236447, 0.40437725886, 0.405483096559, 0.40715324019, 0.408161946716, 0.408949958358, 0.410194428622, 0.411674966358, 0.412726139917, 0.413994836217, 0.414922434459, 0.415970963664, 0.417494895799, 0.418345516985, 0.419769194149, 0.42120259427, 0.423008169722, 0.424220511323, 0.425684525769, 0.426912279039, 0.428023327968, 0.429389155258, 0.430889124801, 0.432147128025, 0.433793555744, 0.435196517338, 0.436351162787, 0.437253465009, 0.438419065687, 0.439590897333, 0.440949213705, 0.441921470289, 0.442848592497, 0.44396524306, 0.445223842049, 0.446977728682, 0.448745488265, 0.451078381688, 0.451907557714, 0.452739787751, 0.453638395261, 0.45475822595, 0.456165813144, 0.457223834211, 0.457934807034, 0.45922014571, 0.461017229233, 0.461451032994, 0.463048655665, 0.464804181316, 0.466425147476, 0.467542494191, 0.468517661795, 0.470468799941, 0.47198076935, 0.472892624736, 0.474420238705, 0.476266453893, 0.477505267649, 0.479532143347, 0.481200116592, 0.481613637289, 0.483360304775, 0.485061449421, 0.487101659613, 0.488019909526, 0.488999144832, 0.490200759674, 0.491190516798, 0.493849514855, 0.495306102206, 0.495928489713, 0.4964353883, 0.498082556741, 0.49979254034, 0.500775976586, 0.502679733683, 0.504598020717, 0.505078487853, 0.506619141507, 0.508171974823, 0.509336469886, 0.510953930915, 0.512581697566, 0.513998315702, 0.515647034962, 0.515939613111, 0.517975069449, 0.519430445753, 0.519957296262, 0.521273324958, 0.522406663349, 0.523925469498, 0.524625850033, 0.525907581275, 0.527065315655, 0.52822815856, 0.528783474767, 0.529145626115, 0.529453767868, 0.530435650231, 0.532014259582, 0.532782125184, 0.534528955521, 0.535733634238, 0.539584530704, 0.541410067901, 0.543682312792, 0.545138243861, 0.546811742597, 0.548048893429, 0.548459504636, 0.550158093752, 0.551205716597, 0.552261157841, 0.553773021814, 0.554620522074, 0.557022425024, 0.558787346691, 0.55989408991, 0.562351160997, 0.564603650808, 0.567330572538, 0.568251047692, 0.570322191691, 0.570800554836, 0.573840553165, 0.575722428922, 0.578806943369, 0.580018988744, 0.581943439091, 0.583637839285, 0.583719886077, 0.585230062162, 0.586459819001, 0.58819018682, 0.589432428675, 0.590707557501, 0.59199058109, 0.593311935901, 0.596143502405, 0.598713047084, 0.59985869618, 0.60146038335)+cms.vdouble(0.603073645068, 0.60364159568, 0.605493798425, 0.607716165748, 0.611539567166, 0.61344596304, 0.614868728468, 0.616356298487, 0.617243661796, 0.618356139972, 0.620433033442, 0.623603658141, 0.625027738979, 0.626745245057, 0.630061473707, 0.634451273629, 0.636224368987, 0.638386932974, 0.639666729708, 0.641472541416, 0.643376129813, 0.645998175052, 0.648651724655, 0.650614385321, 0.651964427491, 0.654372246094, 0.656912558238, 0.657658356547, 0.658734274882, 0.661006291486, 0.663094362812, 0.664860224717, 0.667639986138, 0.669224738703, 0.670609710516, 0.672008536945, 0.674322956904, 0.676181757848, 0.680504320591, 0.681701882298, 0.683847428048, 0.687028204213, 0.690096183579, 0.692936565842, 0.698333032093, 0.702469873766, 0.704533440299, 0.706621657637, 0.710308262591, 0.713270705866, 0.714865826284, 0.719086552707, 0.722147885763, 0.725885046087, 0.729450681758, 0.732859861331, 0.739185288999, 0.743172463789, 0.74657896386, 0.751327840506, 0.754658774214, 0.758047388164, 0.762059448212, 0.769914558551, 0.775838239214, 0.780728907111, 0.786952215918, 0.793694146175, 0.796885300439, 0.802863959078, 0.813001141474, 0.820597251397, 0.829350775725, 0.837460143471, 0.84199323298, 0.847433416989, 0.854638027367, 0.860714284529, 0.869959964541, 0.876007819869, 0.884455823419, 0.896538436371, 0.904016005807, 0.910382232961, 0.916770946986, 0.93386870405, 0.943467586229, 0.95165443966, 0.971789456433, 0.970755563959, 0.9679163435, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(3)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = (cms.vdoublecms.vdouble(0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725625489751, 0.725917318629, 0.727526582607, 0.745748231906, 0.750169168536, 0.757185219071, 0.764249672036, 0.767603981959, 0.772574492642, 0.775097031572, 0.777704615235, 0.779407980465, 0.781767581973, 0.784842584326, 0.786420654919, 0.787883166617, 0.790123535551, 0.79208138528, 0.79327247227, 0.795907708578, 0.798503646112, 0.800206834461, 0.802663946447, 0.8031582666, 0.80490222571, 0.806889568691, 0.809394028316, 0.811861583702, 0.813019057268, 0.81342095915, 0.814698723372, 0.816279445985, 0.818232037783, 0.819367026875, 0.819759858707, 0.821328989638, 0.822878675172, 0.82364763472, 0.825358996088, 0.828499118125, 0.829830087025, 0.831236000117, 0.832703495507, 0.833414247004, 0.834436344112, 0.834946785624, 0.835869791486, 0.836486520822, 0.837364626557, 0.838193318858, 0.839702591039, 0.841531457051, 0.842218371935, 0.843640339114, 0.844222988069, 0.845392038566, 0.846778761898, 0.84769605779, 0.848073950379, 0.848849957765, 0.849494110293, 0.8500905241, 0.851335675181, 0.853500950651, 0.853839833615, 0.854227213103, 0.854567621296, 0.854984559013, 0.855203285083, 0.856470785047, 0.857475859603, 0.85892685241, 0.859008202829, 0.859451257957, 0.860468389831, 0.861489507276, 0.861351261404, 0.861705874851, 0.861659795003, 0.861659795003, 0.86179137032, 0.862147375366, 0.862550177315, 0.863312092458, 0.863805642705, 0.864438066642, 0.864754370118, 0.865480701328, 0.866346092335, 0.867168965701, 0.867397571488, 0.868313201223, 0.868771741382, 0.869186401202, 0.86983185136, 0.869929474522, 0.870346507695, 0.870951429469, 0.870863388987, 0.871514279263, 0.872166654676, 0.872355339191, 0.872776974093, 0.873155878735, 0.873579101025, 0.874003066865, 0.873916467734, 0.874211597253, 0.874402872188, 0.87510742975, 0.87525648792, 0.87525648792, 0.875448860228, 0.875598481234, 0.875512416378, 0.87617785231, 0.87617785231, 0.876371452215, 0.877233539228, 0.877818409805, 0.87840545558, 0.87840545558, 0.878601622981, 0.878601622981, 0.879472984901, 0.879712328244, 0.87982581203, 0.879981638026, 0.880179766123, 0.880378141371, 0.880534852587, 0.880691869776, 0.8811323429, 0.881090533252, 0.881531917098, 0.881732079801, 0.8822162463, 0.882902187113, 0.882979722574, 0.88403281278, 0.885010261835, 0.884928594333, 0.885132644083, 0.885050953876, 0.88525535544, 0.886362380543, 0.886487219509, 0.886652934413, 0.887232935079, 0.887728512003, 0.888561331939, 0.889019284728, 0.889438266521, 0.890358658388, 0.890120720891, 0.890292192785, 0.890675834925, 0.890556765164, 0.890981544778, 0.891699669632, 0.891660238395, 0.891969519877, 0.892319678993, 0.892161931402, 0.892513711208, 0.892729546909, 0.893162065429, 0.893339503795, 0.893339503795, 0.893656248099, 0.894427465173, 0.894606969217, 0.894825762437, 0.894928163898, 0.895703822513, 0.89622167567, 0.896663385868, 0.897404545302, 0.89769650475, 0.899189293203, 0.899525558799, 0.900803884235, 0.901822547362, 0.901939302648, 0.902926505697, 0.903082359676, 0.904038745128, 0.90469561985, 0.904927332682, 0.905283513893, 0.906828000044, 0.907062493553, 0.908109372415, 0.908783021349, 0.90898498498, 0.910379224289, 0.911372920866, 0.911751863015, 0.912477297669, 0.913239550237, 0.91300238707, 0.913422855139, 0.915063352192, 0.916893920936, 0.916979020829, 0.91791358353, 0.918350995783, 0.918790342789, 0.919328152961, 0.919993298628, 0.920982245955, 0.922524618114, 0.923591109364)+cms.vdouble(0.924018850534, 0.924248923821, 0.924479515826, 0.925498182241, 0.926493584801, 0.927436921962, 0.927911825271, 0.928716526512, 0.929225746944, 0.929920622352, 0.931640820211, 0.931772433588, 0.932293506679, 0.932760264784, 0.93386870405, 0.934480569506, 0.934731886916, 0.935797384751, 0.936588472051, 0.936817507478, 0.937277790773, 0.938339506605, 0.938808219887, 0.93993649209, 0.94020045716, 0.940781492864, 0.941047196853, 0.942510417566, 0.942629939, 0.942750378489, 0.943616386541, 0.944163684906, 0.945338814696, 0.945845741457, 0.946028661789, 0.946308362468, 0.946541150838, 0.946751152357, 0.947576555912, 0.948029352938, 0.94826905955, 0.948081416726, 0.949376743021, 0.94926144862, 0.949775296374, 0.949706301122, 0.951268968863, 0.953037066674, 0.95357532021, 0.953770570793, 0.953640586734, 0.953509869657, 0.954300159882, 0.955476996866, 0.956207587781, 0.956355833165, 0.956846568485, 0.957770053042, 0.958723171834, 0.958928454571, 0.959445187694, 0.959807967592, 0.959442259047, 0.960697132989, 0.961203278228, 0.963193467582, 0.963932365293, 0.964461162833, 0.964482886627, 0.96526433234, 0.966030150632, 0.966856588211, 0.969491617691, 0.970743493871, 0.972389419268, 0.973307337131, 0.975623617612, 0.976087161844, 0.975647899082, 0.976736074007, 0.979440008803, 0.981271208497, 0.982207028661, 0.984863078211, 0.986956530647, 0.990258251858, 0.990208776979, 0.990702226892, 0.993228159625, 0.99534336087, 0.996696237239, 0.995185049087, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = (cms.vdoublecms.vdouble(0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.786753288885, 0.788132324416, 0.79656141615, 0.810183644995, 0.858360829913, 0.862298212616, 0.867110980413, 0.871372861265, 0.875682014578, 0.880242297589, 0.883696978098, 0.885512278829, 0.887768921813, 0.889264020585, 0.89119925019, 0.892452552697, 0.893185095837, 0.893419577074, 0.894898998675, 0.895774783109, 0.896260903725, 0.896505707407, 0.898082672851, 0.898779137453, 0.89979939771, 0.900120276805, 0.900442301311, 0.900314253861, 0.90063761708, 0.903107169678, 0.903707364412, 0.904624297652, 0.90437518453, 0.904187494019, 0.904648539996, 0.905849328721, 0.90625146477, 0.906593041173, 0.906284313013, 0.906627709554, 0.906627709554, 0.907095652088, 0.906972372385, 0.907318308525, 0.907603995571, 0.907357055463, 0.907233089763, 0.907994846936, 0.908883949265, 0.908883949265, 0.909836831321, 0.909836831321, 0.909776114594, 0.911030037809, 0.911509901723, 0.911871023987, 0.911811279009, 0.911751452972, 0.911691545709, 0.911511334909, 0.911451101085, 0.912784331406, 0.9125455069, 0.9125455069, 0.91297278083, 0.912853317543, 0.912673506387, 0.913592984461, 0.915007651179, 0.915441697726, 0.915324604996, 0.915207187526, 0.915148356591, 0.91552593882, 0.915467174967, 0.9154083293, 0.915290391839, 0.915231299701, 0.915728896806, 0.915728896806, 0.915552071941, 0.916492320764, 0.917377950283, 0.917822427143, 0.918268017622, 0.91871472591, 0.919668295227, 0.919611512782, 0.919554650007, 0.919440682785, 0.919269125195, 0.921306876156, 0.921306876156, 0.921082297245, 0.920969526416, 0.921426208902, 0.921939970027, 0.921939970027, 0.922343069964, 0.923319759486, 0.923727168952, 0.923727168952, 0.92460140151, 0.924492316338, 0.924959238052, 0.926474177051, 0.926474177051, 0.926420752856, 0.926313671218, 0.926785714713, 0.926785714713, 0.926785714713, 0.926732331515, 0.926732331515, 0.926571713811, 0.927521701059, 0.927468561656, 0.927998554333, 0.927945695605, 0.929008220067, 0.928746371941, 0.928693770351, 0.928641091039, 0.929607013105, 0.929554832769, 0.930039996532, 0.93101417799, 0.931554211882, 0.932636161324, 0.932585903271, 0.932585903271, 0.93357188521, 0.933522156167, 0.933967924145, 0.933769185329, 0.934766776762, 0.935267583538, 0.935169629185, 0.935672412756, 0.936176553451, 0.936176553451, 0.93779194569, 0.937554472402, 0.937458974653, 0.937411116161, 0.937970225775, 0.938435668089, 0.938341043455, 0.938341043455, 0.938903099624, 0.93885608225, 0.938808992455, 0.938714594933, 0.939278948765, 0.940409694612, 0.940363611919, 0.940363611919, 0.940884673949, 0.940838860114, 0.940700991551, 0.941179107659, 0.941750185868, 0.941750185868, 0.942276966885, 0.943290568826, 0.943822114749, 0.944267645451, 0.944223792272, 0.944223792272, 0.944223792272, 0.944223792272, 0.944135878551, 0.944091817682, 0.943959217069, 0.944948988041, 0.944817531021, 0.945185418124, 0.945774534438, 0.946869842865, 0.94678443912, 0.947292782482, 0.947803406812, 0.948955745704, 0.949513262437, 0.949431324505, 0.949349120177, 0.949787213059, 0.950350748429, 0.951522477849, 0.952051228023, 0.95197239226, 0.951813940452, 0.951734321829, 0.952189098377, 0.952726227521, 0.952647494583, 0.953226869405, 0.953148724357, 0.95303101596, 0.953497250008, 0.954122169792, 0.954006075021, 0.954594998037, 0.955778170341, 0.955740668477, 0.957457733339, 0.958697023242, 0.958590781777, 0.958519649968, 0.959665182275, 0.960242079268, 0.960242079268, 0.960855701368, 0.960787753107)+cms.vdouble(0.961370655681, 0.961269567079, 0.961823203605, 0.963730727425, 0.963634885553, 0.963570709071, 0.964138473298, 0.964106695414, 0.96404297039, 0.963914839098, 0.963882663464, 0.96452094996, 0.964361812095, 0.96497328025, 0.965587812399, 0.966174859102, 0.966052013818, 0.966021162949, 0.968018795469, 0.96867865254, 0.968592547647, 0.96914294659, 0.969057430126, 0.969000155331, 0.970289180287, 0.971618144708, 0.971511684075, 0.972907637123, 0.972856607143, 0.972753968298, 0.972676478315, 0.973344727784, 0.973217439385, 0.973917083716, 0.973842007934, 0.973791716846, 0.974496912029, 0.974447701286, 0.974373528048, 0.974273957942, 0.974198771106, 0.974791150217, 0.975488253999, 0.976165676348, 0.977513433798, 0.977332925695, 0.978053351441, 0.978734902423, 0.97864854949, 0.979275680612, 0.979190505138, 0.979039751165, 0.978974471583, 0.978886796984, 0.980438334358, 0.981887328142, 0.982567303114, 0.983312443593, 0.983168209088, 0.983021459539, 0.98366063828, 0.983606342672, 0.983441268961, 0.983291720735, 0.985747459607, 0.985615866821, 0.988157949486, 0.988031989052, 0.987786602856, 0.988507380959, 0.988364321833, 0.988127868612, 0.987928555371, 0.987641272072, 0.987408197679, 0.98704162283, 0.986691071046, 0.986360943929, 0.987048151948, 0.989952686544, 0.991766844123, 0.992193166195, 0.99456966538, 0.995655052048, 0.994746673755, 0.993062299865, 0.995491593707, 0.993997811711, 0.991951166261, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = (cms.vdouble(0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277)+cms.vdouble(0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320785409267, 0.320785409267, 0.320785409267, 0.320967688479, 0.32115017496, 0.32115017496, 0.32115017496, 0.32115017496, 0.321332869066, 0.321607300294, 0.321790515012, 0.322065728828, 0.322709728783, 0.337811096719, 0.33917314626, 0.341489359417, 0.343051156809, 0.344690580804, 0.34605531485, 0.347729452006, 0.349352972192, 0.351698761571, 0.354076266303, 0.356364861761, 0.357459291064, 0.358806090169, 0.360659074159, 0.361655179522, 0.363285639001, 0.363823848893, 0.365224296488, 0.366635567078, 0.368317558281, 0.36949108301, 0.370409007364, 0.370997606343, 0.372726361337, 0.373488515297, 0.374412657806, 0.375752608537, 0.377534910678, 0.378625338634, 0.379181030815, 0.379877944035, 0.382266731549, 0.382549741971, 0.383828491978, 0.38525242259, 0.386835650852, 0.38785063627, 0.389317222671, 0.390498501728, 0.392134514369, 0.392433445129, 0.393938724972, 0.395003106909, 0.395165758646, 0.395929379967, 0.396695958257, 0.397011143016, 0.398247378442, 0.399356983741, 0.399994683207, 0.401254354869, 0.40236309389, 0.403477977186, 0.404278112546, 0.405403648355, 0.406718341929, 0.408044942586, 0.409053791836, 0.409879342767, 0.410568240656, 0.411067477386, 0.412572498902, 0.413612340683, 0.414628216181, 0.41718987191, 0.417878334739, 0.41856907358, 0.419300644011, 0.420520753157, 0.420777117228, 0.422716149289, 0.423248081689, 0.424315972822, 0.425568676714, 0.426697968924, 0.427784748237, 0.428512348538, 0.429242428143, 0.430526071506, 0.4311350135, 0.432803583714, 0.433609675616, 0.434608917639, 0.436308891919, 0.436878509184, 0.437640316502, 0.438596319943, 0.440520911858, 0.441683795845, 0.443048277506, 0.444696219849, 0.446478472767, 0.44715804854, 0.448645092811, 0.450058431683, 0.450666877959, 0.450755388115, 0.451660727674, 0.452685605028, 0.453508861839, 0.455164391331, 0.456611329026, 0.456920461171, 0.457863702358, 0.45902581005, 0.459451411686, 0.460410936031, 0.461808077134, 0.4630001435, 0.46452516501, 0.465632370863, 0.466972634942, 0.467639712811, 0.468206417853, 0.469000443277, 0.470125946746, 0.471938031657, 0.473437184975, 0.474815974144, 0.475643583896, 0.477037107394, 0.478345116523, 0.479756398109, 0.482127131145, 0.483321305722, 0.484827612962, 0.485378450947, 0.486839313932, 0.488800865348, 0.488631796262, 0.489784626283, 0.49019813266, 0.490696455307, 0.492699918902, 0.493707798202, 0.495481544763, 0.497780890453, 0.499067549901, 0.499842743245, 0.501067711008, 0.501110885208, 0.503739653301, 0.504533670387, 0.507669169039, 0.508207246665, 0.510099534144, 0.511125093239, 0.513041788431, 0.514972912765, 0.517927881794, 0.519848789077, 0.52116702462, 0.522598588906, 0.524038039421, 0.524905522273, 0.525729939569, 0.527349110611, 0.528189103375, 0.529884063982, 0.531038635091, 0.531258876588, 0.533372518417, 0.532652261497, 0.533222445036, 0.533832435241, 0.534714171593, 0.536561182549, 0.536184284139, 0.538295230995, 0.539204274194, 0.539743792118, 0.542257448251, 0.543191981222, 0.54415669717, 0.545124845911, 0.546421082543, 0.548704392123, 0.551006864138, 0.551639517385, 0.554308295208, 0.554286639155, 0.555277851271, 0.557294734318, 0.558661984326, 0.560735788966, 0.561777981725, 0.56352691872, 0.56493793563, 0.567793486879, 0.568888208725, 0.57034433091, 0.570356276084, 0.572191934216, 0.573659294894, 0.574044772549, 0.575543527534, 0.577054482298, 0.578553389267, 0.580816407199, 0.582777514902, 0.58546601664, 0.587013469943, 0.586699955875, 0.587164603914, 0.589909772096, 0.590347109603, 0.591182964289, 0.593622213241, 0.595632610766, 0.596088895792)+cms.vdouble(0.596547219627, 0.597007595967, 0.59905000376, 0.59875479532, 0.600402032492, 0.601476624751, 0.602375325225, 0.604611692334, 0.606308877758, 0.609454442616, 0.612487831768, 0.615198564485, 0.616345932738, 0.617679752716, 0.620364786891, 0.621560433387, 0.622923085077, 0.622771613804, 0.627021967049, 0.629464905691, 0.630636176618, 0.632414811477, 0.635412621765, 0.636860801036, 0.638359784998, 0.642296739762, 0.64372019874, 0.646732193739, 0.649419880322, 0.653004922396, 0.654536589972, 0.657493324695, 0.65872664624, 0.662116021475, 0.666837437051, 0.668332370106, 0.670194812833, 0.671514734427, 0.671514734427, 0.672844093862, 0.672352092845, 0.678607302272, 0.681605563269, 0.681020472505, 0.682082800049, 0.684848783291, 0.686959317553, 0.690918830645, 0.691984674993, 0.694695530605, 0.697455651971, 0.700496795416, 0.703736816672, 0.704917801757, 0.706220722464, 0.707858889942, 0.71018130526, 0.714321429016, 0.720425948473, 0.724503155871, 0.727977004139, 0.730714468803, 0.735012362904, 0.739735756402, 0.750660954162, 0.757799352464, 0.760515374245, 0.768004247792, 0.77935327172, 0.784646260495, 0.789164336822, 0.791123170072, 0.795276817521, 0.804299018936, 0.819103217408, 0.822961151625, 0.833298258018, 0.842807182616, 0.85334688934, 0.86724344838, 0.872176831791, 0.87195156781, 0.87843961359, 0.891494313173, 0.912879175226, 0.924218217451, 0.937234161591, 0.94206607914, 0.958884557005, 0.959595443343, 0.93904371889, 0.927733482302, 0.93386870405, 0.916051159827, 0.943467586229, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        )),
    toTransform = cms.InputTag("combinatoricRecoTausDiscriminationByTanc"),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus")
)


process.combinedMVABJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedMVA'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("secondaryVertexTagInfos"), cms.InputTag("softMuonTagInfos"), cms.InputTag("softElectronTagInfos"))
)


process.combinedSecondaryVertexBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedSecondaryVertex'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("secondaryVertexTagInfos"))
)


process.combinedSecondaryVertexMVABJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('combinedSecondaryVertexMVA'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("secondaryVertexTagInfos"))
)


process.conditionsInEdm = cms.EDProducer("ConditionDumperInEdm",
    gtEvmDigisLabel = cms.InputTag("gtEvmDigis")
)


process.consecutiveHEs = cms.EDProducer("EventWithHistoryProducerFromL1ABC",
    l1ABCCollection = cms.InputTag("scalersRawToDigi")
)


process.conversionTrackCandidates = cms.EDProducer("ConversionTrackCandidateProducer",
    scHybridBarrelProducer = cms.InputTag("correctedHybridSuperClusters"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('alongMomElePropagator'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('oppositeToMomElePropagator')
    ),
    inOutTrackCandidateCollection = cms.string('inOutTracksFromConversions'),
    useHitsSplitting = cms.bool(False),
    outInTrackCandidateSCAssociationCollection = cms.string('outInTrackCandidateSCAssociationCollection'),
    MeasurementTrackerName = cms.string(''),
    bcBarrelCollection = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    scIslandEndcapProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    hcalTowers = cms.InputTag("towerMaker"),
    maxHOverE = cms.double(0.5),
    maxNumOfSeedsOutIn = cms.int32(50),
    bcEndcapCollection = cms.InputTag("multi5x5BasicClusters","multi5x5EndcapBasicClusters"),
    InOutRedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    maxNumOfSeedsInOut = cms.int32(50),
    fractionShared = cms.double(0.5),
    minSCEt = cms.double(10.0),
    OutInRedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    outInTrackCandidateCollection = cms.string('outInTracksFromConversions'),
    hOverEConeSize = cms.double(0.15),
    inOutTrackCandidateSCAssociationCollection = cms.string('inOutTrackCandidateSCAssociationCollection'),
    TrajectoryBuilder = cms.string('TrajectoryBuilderForConversions'),
    allowSharedFirstHit = cms.bool(False)
)


process.conversions = cms.EDProducer("ConvertedPhotonProducer",
    scHybridBarrelProducer = cms.InputTag("correctedHybridSuperClusters"),
    convertedPhotonCollection = cms.string('uncleanedConversions'),
    dRForConversionRecovery = cms.double(0.3),
    bcBarrelCollection = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    conversionIOTrackProducer = cms.string('ckfInOutTracksFromConversions'),
    deltaCotCut = cms.double(0.05),
    scIslandEndcapProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    maxReducedChiSq = cms.double(225.0),
    hcalTowers = cms.InputTag("towerMaker"),
    recoverOneTrackCase = cms.bool(True),
    inOutTrackSCAssociation = cms.string('inOutTrackSCAssociationCollection'),
    maxDelta = cms.double(0.01),
    bcEndcapCollection = cms.InputTag("multi5x5BasicClusters","multi5x5EndcapBasicClusters"),
    risolveConversionAmbiguity = cms.bool(True),
    inOutTrackCollection = cms.string(''),
    outInTrackSCAssociation = cms.string('outInTrackSCAssociationCollection'),
    outInTrackCollection = cms.string(''),
    cleanedConvertedPhotonCollection = cms.string(''),
    minSCEt = cms.double(10.0),
    maxNbrOfIterations = cms.int32(40),
    maxHOverE = cms.double(0.5),
    conversionOITrackProducer = cms.string('ckfOutInTracksFromConversions'),
    hOverEConeSize = cms.double(0.15),
    minApproachDisCut = cms.double(0.0),
    maxNumOfCandidates = cms.int32(3),
    minChiSqImprovement = cms.double(50.0),
    MVA_weights_location = cms.string('RecoEgamma/EgammaTools/data/TMVAnalysis_Likelihood.weights.txt'),
    AlgorithmName = cms.string('ecalSeeded')
)


process.corMetGlobalMuons = cms.EDProducer("MuonMET",
    muonMETDepositValueMapInputTag = cms.InputTag("muonMETValueMapProducer","muCorrData"),
    metTypeInputTag = cms.InputTag("CaloMET"),
    muonsInputTag = cms.InputTag("muons"),
    uncorMETInputTag = cms.InputTag("met")
)


process.correctedHybridSuperClusters = cms.EDProducer("EgammaSCCorrectionMaker",
    corectedSuperClusterCollection = cms.string(''),
    sigmaElectronicNoise = cms.double(0.03),
    superClusterAlgo = cms.string('Hybrid'),
    etThresh = cms.double(0.0),
    rawSuperClusterProducer = cms.InputTag("hybridSuperClusters"),
    applyEnergyCorrection = cms.bool(True),
    VerbosityLevel = cms.string('ERROR'),
    applyCrackCorrection = cms.bool(True),
    hyb_fCorrPset = cms.PSet(
        brLinearLowThr = cms.double(1.1),
        fEtEtaVec = cms.vdouble(0, 1.00121, -0.63672, 0, 0, 
            0, 0.5655, 6.457, 0.5081, 8.0, 
            1.023, -0.00181),
        brLinearHighThr = cms.double(8.0),
        fBremVec = cms.vdouble(-0.04382, 0.1169, 0.9267, -0.0009413, 1.419)
    ),
    recHitProducer = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.correctedMulti5x5SuperClustersWithPreshower = cms.EDProducer("EgammaSCCorrectionMaker",
    corectedSuperClusterCollection = cms.string(''),
    sigmaElectronicNoise = cms.double(0.15),
    superClusterAlgo = cms.string('Multi5x5'),
    etThresh = cms.double(0.0),
    rawSuperClusterProducer = cms.InputTag("multi5x5SuperClustersWithPreshower"),
    applyEnergyCorrection = cms.bool(True),
    fix_fCorrPset = cms.PSet(
        brLinearLowThr = cms.double(0.9),
        fEtEtaVec = cms.vdouble(1, -0.4386, -32.38, 0.6372, 15.67, 
            -0.0928, -2.462, 1.138, 20.93),
        brLinearHighThr = cms.double(6.0),
        fBremVec = cms.vdouble(-0.05228, 0.08738, 0.9508, 0.002677, 1.221)
    ),
    VerbosityLevel = cms.string('ERROR'),
    applyCrackCorrection = cms.bool(True),
    recHitProducer = cms.InputTag("ecalRecHit","EcalRecHitsEE")
)


process.cosmicMuons = cms.EDProducer("CosmicMuonProducer",
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        PutTrajectoryIntoEvent = cms.untracked.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False),
        AllowNoVertex = cms.untracked.bool(True),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False)
    ),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrajectoryBuilderParameters = cms.PSet(
        BackwardMuonTrajectoryUpdatorParameters = cms.PSet(
            MaxChi2 = cms.double(100.0),
            RescaleErrorFactor = cms.double(1.0),
            Granularity = cms.int32(2),
            ExcludeRPCFromFit = cms.bool(True),
            UseInvalidHits = cms.bool(False),
            RescaleError = cms.bool(False)
        ),
        DTRecSegmentLabel = cms.InputTag("dt4DCosmicSegments"),
        MuonTrajectoryUpdatorParameters = cms.PSet(
            MaxChi2 = cms.double(3000.0),
            RescaleErrorFactor = cms.double(1.0),
            Granularity = cms.int32(0),
            ExcludeRPCFromFit = cms.bool(True),
            UseInvalidHits = cms.bool(False),
            RescaleError = cms.bool(False)
        ),
        EnableRPCMeasurement = cms.bool(True),
        CSCRecSegmentLabel = cms.InputTag("cscSegments"),
        BuildTraversingMuon = cms.bool(False),
        Strict1Leg = cms.bool(False),
        EnableDTMeasurement = cms.bool(True),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        MuonSmootherParameters = cms.PSet(
            PropagatorAlong = cms.string('SteppingHelixPropagatorAny'),
            PropagatorOpposite = cms.string('SteppingHelixPropagatorAny'),
            RescalingFactor = cms.double(5.0)
        ),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        EnableCSCMeasurement = cms.bool(True),
        MuonNavigationParameters = cms.PSet(
            Barrel = cms.bool(True),
            Endcap = cms.bool(True)
        )
    ),
    MuonSeedCollectionLabel = cms.string('CosmicMuonSeed')
)


process.cosmicMuons1Leg = cms.EDProducer("CosmicMuonProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrajectoryBuilderParameters = cms.PSet(
        BackwardMuonTrajectoryUpdatorParameters = cms.PSet(
            MaxChi2 = cms.double(100.0),
            RescaleErrorFactor = cms.double(1.0),
            Granularity = cms.int32(2),
            ExcludeRPCFromFit = cms.bool(True),
            UseInvalidHits = cms.bool(False),
            RescaleError = cms.bool(False)
        ),
        DTRecSegmentLabel = cms.InputTag("dt4DCosmicSegments"),
        MuonTrajectoryUpdatorParameters = cms.PSet(
            MaxChi2 = cms.double(3000.0),
            RescaleErrorFactor = cms.double(1.0),
            Granularity = cms.int32(0),
            ExcludeRPCFromFit = cms.bool(True),
            UseInvalidHits = cms.bool(False),
            RescaleError = cms.bool(False)
        ),
        EnableRPCMeasurement = cms.bool(True),
        CSCRecSegmentLabel = cms.InputTag("cscSegments"),
        BuildTraversingMuon = cms.bool(True),
        Strict1Leg = cms.bool(True),
        EnableDTMeasurement = cms.bool(True),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        MuonSmootherParameters = cms.PSet(
            PropagatorAlong = cms.string('SteppingHelixPropagatorAny'),
            PropagatorOpposite = cms.string('SteppingHelixPropagatorAny'),
            RescalingFactor = cms.double(5.0)
        ),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        EnableCSCMeasurement = cms.bool(True),
        MuonNavigationParameters = cms.PSet(
            Barrel = cms.bool(True),
            Endcap = cms.bool(True)
        )
    ),
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        PutTrajectoryIntoEvent = cms.untracked.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False),
        AllowNoVertex = cms.untracked.bool(True),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False)
    ),
    MuonSeedCollectionLabel = cms.string('CosmicMuonSeed')
)


process.cosmicsVeto = cms.EDProducer("CosmicsMuonIdProducer",
    CosmicCompFillerParameters = cms.PSet(
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                'SteppingHelixPropagatorAlong', 
                'SteppingHelixPropagatorOpposite', 
                'SteppingHelixPropagatorL2Any', 
                'SteppingHelixPropagatorL2Along', 
                'SteppingHelixPropagatorL2Opposite', 
                'SteppingHelixPropagatorAnyNoError', 
                'SteppingHelixPropagatorAlongNoError', 
                'SteppingHelixPropagatorOppositeNoError', 
                'SteppingHelixPropagatorL2AnyNoError', 
                'SteppingHelixPropagatorL2AlongNoError', 
                'SteppingHelixPropagatorL2OppositeNoError', 
                'PropagatorWithMaterial', 
                'PropagatorWithMaterialOpposite', 
                'SmartPropagator', 
                'SmartPropagatorOpposite', 
                'SmartPropagatorAnyOpposite', 
                'SmartPropagatorAny', 
                'SmartPropagatorRK', 
                'SmartPropagatorAnyRK', 
                'StraightLinePropagator'),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        deltaPt = cms.double(0.1),
        maxdzTight = cms.double(10.0),
        offTimeNegTight = cms.double(-20.0),
        maxvertRho = cms.double(5),
        ipCut = cms.double(0.02),
        segmentComp = cms.double(0.4),
        sharedFrac = cms.double(0.75),
        angleCut = cms.double(0.1),
        hIpTrvProb = cms.double(0.5),
        InputMuonCollections = cms.VInputTag(cms.InputTag("globalMuons"), cms.InputTag("muons")),
        maxdxyTight = cms.double(1.0),
        maxdzLoose = cms.double(0.1),
        InputTrackCollections = cms.VInputTag(cms.InputTag("generalTracks"), cms.InputTag("cosmicsVetoTracks")),
        maxdxyTightMult = cms.double(1.0),
        corrTimeNeg = cms.double(-10),
        offTimePosTight = cms.double(25.0),
        maxdzLooseMult = cms.double(0.1),
        maxvertZ = cms.double(20),
        nChamberMatches = cms.int32(1),
        corrTimePos = cms.double(5),
        offTimeNegLoose = cms.double(-15.0),
        maxdxyLooseMult = cms.double(0.01),
        offTimePosTightMult = cms.double(25.0),
        offTimePosLoose = cms.double(15.0),
        largedxyMult = cms.double(3.0),
        largedxy = cms.double(2.0),
        nTrackThreshold = cms.int32(3),
        maxdzTightMult = cms.double(10.0),
        InputCosmicMuonCollection = cms.InputTag("muonsFromCosmics1Leg"),
        minvProb = cms.double(0.001),
        hIpTrdxy = cms.double(0.02),
        InputVertexCollection = cms.InputTag("offlinePrimaryVertices"),
        offTimePosLooseMult = cms.double(15.0),
        offTimeNegLooseMult = cms.double(-15.0),
        sharedHits = cms.int32(5),
        maxdxyLoose = cms.double(0.01),
        offTimeNegTightMult = cms.double(-20.0)
    ),
    muonCollection = cms.InputTag("muons"),
    trackCollections = cms.VInputTag(cms.InputTag("generalTracks"), cms.InputTag("cosmicsVetoTracks"))
)


process.cosmicsVetoSeeds = cms.EDProducer("TrajectorySeedFromMuonProducer",
    skipMatchedMuons = cms.bool(False),
    muonCollectionTag = cms.InputTag("muons"),
    trackCollectionTag = cms.InputTag("generalTracks")
)


process.cosmicsVetoTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("cosmicsVetoSeeds"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('none'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('CosmicNavigationSchool'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilderP5'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.cosmicsVetoTracks = cms.EDProducer("CosmicTrackSelector",
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(110.0),
    minNumber3DLayers = cms.uint32(0),
    src = cms.InputTag("cosmicsVetoTracksRaw"),
    copyExtras = cms.untracked.bool(True),
    min_pt = cms.double(1.0),
    copyTrajectories = cms.untracked.bool(True),
    qualityBit = cms.string(''),
    minNumberLayers = cms.uint32(0),
    chi2n_par = cms.double(10.0),
    max_eta = cms.double(2.0),
    min_nPixelHit = cms.uint32(0),
    min_nHit = cms.uint32(5),
    max_z0 = cms.double(300.0),
    beamspot = cms.InputTag("offlineBeamSpot")
)


process.cosmicsVetoTracksRaw = cms.EDProducer("TrackProducer",
    src = cms.InputTag("cosmicsVetoTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('FittingSmootherRKP5'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('ctf'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.cosmictrackSelector = cms.EDProducer("CosmicTrackSelector",
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(110.0),
    minNumber3DLayers = cms.uint32(0),
    src = cms.InputTag("ctfWithMaterialTracksCosmics"),
    copyExtras = cms.untracked.bool(True),
    min_pt = cms.double(1.0),
    copyTrajectories = cms.untracked.bool(True),
    qualityBit = cms.string(''),
    minNumberLayers = cms.uint32(0),
    chi2n_par = cms.double(10.0),
    max_eta = cms.double(2.0),
    min_nPixelHit = cms.uint32(0),
    min_nHit = cms.uint32(5),
    max_z0 = cms.double(300.0),
    beamspot = cms.InputTag("offlineBeamSpot")
)


process.csc2DRecHits = cms.EDProducer("CSCRecHitDProducer",
    XTasymmetry_ME1b = cms.double(0.01),
    XTasymmetry_ME1a = cms.double(0.023),
    ConstSyst_ME1a = cms.double(0.01),
    ConstSyst_ME1b = cms.double(0.02),
    XTasymmetry_ME41 = cms.double(0.023),
    XTasymmetry_ME22 = cms.double(0.023),
    XTasymmetry_ME21 = cms.double(0.023),
    ConstSyst_ME21 = cms.double(0.03),
    ConstSyst_ME22 = cms.double(0.03),
    XTasymmetry_ME31 = cms.double(0.023),
    NoiseLevel_ME13 = cms.double(4.0),
    NoiseLevel_ME12 = cms.double(7.0),
    NoiseLevel_ME32 = cms.double(7.0),
    NoiseLevel_ME31 = cms.double(5.0),
    XTasymmetry_ME32 = cms.double(0.023),
    ConstSyst_ME41 = cms.double(0.03),
    XTasymmetry_ME13 = cms.double(0.02),
    XTasymmetry_ME12 = cms.double(0.015),
    ConstSyst_ME12 = cms.double(0.02),
    ConstSyst_ME13 = cms.double(0.03),
    ConstSyst_ME32 = cms.double(0.03),
    ConstSyst_ME31 = cms.double(0.03),
    NoiseLevel_ME1a = cms.double(9.0),
    NoiseLevel_ME1b = cms.double(6.0),
    NoiseLevel_ME21 = cms.double(5.0),
    NoiseLevel_ME22 = cms.double(7.0),
    NoiseLevel_ME41 = cms.double(5.0),
    CSCStripClusterSize = cms.untracked.int32(3),
    UseAverageTime = cms.bool(False),
    CSCStripPeakThreshold = cms.double(10.0),
    readBadChannels = cms.bool(True),
    CSCUseStaticPedestals = cms.bool(False),
    stripDigiTag = cms.InputTag("muonCSCDigis","MuonCSCStripDigi"),
    readBadChambers = cms.bool(True),
    CSCStripxtalksOffset = cms.double(0.03),
    CSCstripWireDeltaTime = cms.int32(8),
    CSCUseCalibrations = cms.bool(True),
    CSCUseTimingCorrections = cms.bool(True),
    CSCNoOfTimeBinsForDynamicPedestal = cms.int32(2),
    UseParabolaFit = cms.bool(False),
    wireDigiTag = cms.InputTag("muonCSCDigis","MuonCSCWireDigi"),
    UseFivePoleFit = cms.bool(True),
    CSCDebug = cms.untracked.bool(False),
    CSCWireClusterDeltaT = cms.int32(1),
    CSCStripClusterChargeCut = cms.double(25.0)
)


process.cscSegments = cms.EDProducer("CSCSegmentProducer",
    inputObjects = cms.InputTag("csc2DRecHits"),
    algo_psets = cms.VPSet(cms.PSet(
        chamber_types = cms.vstring('ME1/a', 
            'ME1/b', 
            'ME1/2', 
            'ME1/3', 
            'ME2/1', 
            'ME2/2', 
            'ME3/1', 
            'ME3/2', 
            'ME4/1'),
        algo_name = cms.string('CSCSegAlgoSK'),
        parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
            1, 1, 1, 1),
        algo_psets = cms.VPSet(cms.PSet(
            dPhiFineMax = cms.double(0.025),
            verboseInfo = cms.untracked.bool(True),
            chi2Max = cms.double(99999.0),
            dPhiMax = cms.double(0.003),
            wideSeg = cms.double(3.0),
            minLayersApart = cms.int32(2),
            dRPhiFineMax = cms.double(8.0),
            dRPhiMax = cms.double(8.0)
        ), 
            cms.PSet(
                dPhiFineMax = cms.double(0.025),
                verboseInfo = cms.untracked.bool(True),
                chi2Max = cms.double(99999.0),
                dPhiMax = cms.double(0.025),
                wideSeg = cms.double(3.0),
                minLayersApart = cms.int32(2),
                dRPhiFineMax = cms.double(3.0),
                dRPhiMax = cms.double(8.0)
            ))
    ), 
        cms.PSet(
            chamber_types = cms.vstring('ME1/a', 
                'ME1/b', 
                'ME1/2', 
                'ME1/3', 
                'ME2/1', 
                'ME2/2', 
                'ME3/1', 
                'ME3/2', 
                'ME4/1'),
            algo_name = cms.string('CSCSegAlgoTC'),
            parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
                1, 1, 1, 1),
            algo_psets = cms.VPSet(cms.PSet(
                dPhiFineMax = cms.double(0.02),
                verboseInfo = cms.untracked.bool(True),
                SegmentSorting = cms.int32(1),
                chi2Max = cms.double(6000.0),
                dPhiMax = cms.double(0.003),
                chi2ndfProbMin = cms.double(0.0001),
                minLayersApart = cms.int32(2),
                dRPhiFineMax = cms.double(6.0),
                dRPhiMax = cms.double(1.2)
            ), 
                cms.PSet(
                    dPhiFineMax = cms.double(0.013),
                    verboseInfo = cms.untracked.bool(True),
                    SegmentSorting = cms.int32(1),
                    chi2Max = cms.double(6000.0),
                    dPhiMax = cms.double(0.00198),
                    chi2ndfProbMin = cms.double(0.0001),
                    minLayersApart = cms.int32(2),
                    dRPhiFineMax = cms.double(3.0),
                    dRPhiMax = cms.double(0.6)
                ))
        ), 
        cms.PSet(
            chamber_types = cms.vstring('ME1/a', 
                'ME1/b', 
                'ME1/2', 
                'ME1/3', 
                'ME2/1', 
                'ME2/2', 
                'ME3/1', 
                'ME3/2', 
                'ME4/1'),
            algo_name = cms.string('CSCSegAlgoDF'),
            parameters_per_chamber_type = cms.vint32(3, 1, 2, 2, 1, 
                2, 1, 2, 1),
            algo_psets = cms.VPSet(cms.PSet(
                tanThetaMax = cms.double(1.2),
                maxRatioResidualPrune = cms.double(3.0),
                dPhiFineMax = cms.double(0.025),
                tanPhiMax = cms.double(0.5),
                dXclusBoxMax = cms.double(8.0),
                preClustering = cms.untracked.bool(False),
                chi2Max = cms.double(5000.0),
                minHitsPerSegment = cms.int32(3),
                minHitsForPreClustering = cms.int32(10),
                minLayersApart = cms.int32(2),
                dRPhiFineMax = cms.double(8.0),
                nHitsPerClusterIsShower = cms.int32(20),
                CSCSegmentDebug = cms.untracked.bool(False),
                Pruning = cms.untracked.bool(False),
                dYclusBoxMax = cms.double(8.0)
            ), 
                cms.PSet(
                    tanThetaMax = cms.double(2.0),
                    maxRatioResidualPrune = cms.double(3.0),
                    dPhiFineMax = cms.double(0.025),
                    tanPhiMax = cms.double(0.8),
                    dXclusBoxMax = cms.double(8.0),
                    preClustering = cms.untracked.bool(False),
                    chi2Max = cms.double(5000.0),
                    minHitsPerSegment = cms.int32(3),
                    minHitsForPreClustering = cms.int32(10),
                    minLayersApart = cms.int32(2),
                    dRPhiFineMax = cms.double(12.0),
                    nHitsPerClusterIsShower = cms.int32(20),
                    CSCSegmentDebug = cms.untracked.bool(False),
                    Pruning = cms.untracked.bool(False),
                    dYclusBoxMax = cms.double(12.0)
                ), 
                cms.PSet(
                    tanThetaMax = cms.double(1.2),
                    maxRatioResidualPrune = cms.double(3.0),
                    dPhiFineMax = cms.double(0.025),
                    tanPhiMax = cms.double(0.5),
                    dXclusBoxMax = cms.double(8.0),
                    preClustering = cms.untracked.bool(False),
                    chi2Max = cms.double(5000.0),
                    minHitsPerSegment = cms.int32(3),
                    minHitsForPreClustering = cms.int32(30),
                    minLayersApart = cms.int32(2),
                    dRPhiFineMax = cms.double(8.0),
                    nHitsPerClusterIsShower = cms.int32(20),
                    CSCSegmentDebug = cms.untracked.bool(False),
                    Pruning = cms.untracked.bool(False),
                    dYclusBoxMax = cms.double(8.0)
                ))
        ), 
        cms.PSet(
            chamber_types = cms.vstring('ME1/a', 
                'ME1/b', 
                'ME1/2', 
                'ME1/3', 
                'ME2/1', 
                'ME2/2', 
                'ME3/1', 
                'ME3/2', 
                'ME4/1', 
                'ME4/2'),
            algo_name = cms.string('CSCSegAlgoST'),
            parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
                1, 1, 1, 1, 1),
            algo_psets = cms.VPSet(cms.PSet(
                maxRatioResidualPrune = cms.double(3),
                yweightPenalty = cms.double(1.5),
                maxRecHitsInCluster = cms.int32(20),
                preClusteringUseChaining = cms.bool(True),
                ForceCovariance = cms.bool(False),
                hitDropLimit6Hits = cms.double(0.3333),
                NormChi2Cut2D = cms.double(20.0),
                BPMinImprovement = cms.double(10000.0),
                Covariance = cms.double(0.0),
                tanPhiMax = cms.double(0.5),
                onlyBestSegment = cms.bool(False),
                SeedBig = cms.double(0.0015),
                dRPhiFineMax = cms.double(8.0),
                SeedSmall = cms.double(0.0002),
                curvePenalty = cms.double(2.0),
                dXclusBoxMax = cms.double(4.0),
                BrutePruning = cms.bool(True),
                curvePenaltyThreshold = cms.double(0.85),
                CorrectTheErrors = cms.bool(True),
                hitDropLimit4Hits = cms.double(0.6),
                useShowering = cms.bool(False),
                CSCDebug = cms.untracked.bool(False),
                yweightPenaltyThreshold = cms.double(1.0),
                tanThetaMax = cms.double(1.2),
                NormChi2Cut3D = cms.double(10.0),
                minHitsPerSegment = cms.int32(3),
                ForceCovarianceAll = cms.bool(False),
                dPhiFineMax = cms.double(0.025),
                prePrunLimit = cms.double(3.17),
                hitDropLimit5Hits = cms.double(0.8),
                preClustering = cms.bool(True),
                prePrun = cms.bool(True),
                maxDPhi = cms.double(999.0),
                maxDTheta = cms.double(999.0),
                Pruning = cms.bool(True),
                dYclusBoxMax = cms.double(8.0)
            ), 
                cms.PSet(
                    maxRatioResidualPrune = cms.double(3),
                    yweightPenalty = cms.double(1.5),
                    maxRecHitsInCluster = cms.int32(24),
                    preClusteringUseChaining = cms.bool(True),
                    ForceCovariance = cms.bool(False),
                    hitDropLimit6Hits = cms.double(0.3333),
                    NormChi2Cut2D = cms.double(20.0),
                    BPMinImprovement = cms.double(10000.0),
                    Covariance = cms.double(0.0),
                    tanPhiMax = cms.double(0.5),
                    onlyBestSegment = cms.bool(False),
                    SeedBig = cms.double(0.0015),
                    dRPhiFineMax = cms.double(8.0),
                    SeedSmall = cms.double(0.0002),
                    curvePenalty = cms.double(2.0),
                    dXclusBoxMax = cms.double(4.0),
                    BrutePruning = cms.bool(True),
                    curvePenaltyThreshold = cms.double(0.85),
                    CorrectTheErrors = cms.bool(True),
                    hitDropLimit4Hits = cms.double(0.6),
                    useShowering = cms.bool(False),
                    CSCDebug = cms.untracked.bool(False),
                    yweightPenaltyThreshold = cms.double(1.0),
                    tanThetaMax = cms.double(1.2),
                    NormChi2Cut3D = cms.double(10.0),
                    minHitsPerSegment = cms.int32(3),
                    ForceCovarianceAll = cms.bool(False),
                    dPhiFineMax = cms.double(0.025),
                    prePrunLimit = cms.double(3.17),
                    hitDropLimit5Hits = cms.double(0.8),
                    preClustering = cms.bool(True),
                    prePrun = cms.bool(True),
                    maxDPhi = cms.double(999.0),
                    maxDTheta = cms.double(999.0),
                    Pruning = cms.bool(True),
                    dYclusBoxMax = cms.double(8.0)
                ))
        )),
    algo_type = cms.int32(4)
)


process.csctfDigis = cms.EDProducer("CSCTFUnpacker",
    mappingFile = cms.string(''),
    producer = cms.InputTag("rawDataCollector"),
    MaxBX = cms.int32(9),
    slot2sector = cms.vint32(0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 
        0, 0),
    swapME1strips = cms.bool(False),
    MinBX = cms.int32(3)
)


process.ctfCombinedSeeds = cms.EDProducer("TrackProducer",
    src = cms.InputTag("ckfTrackCandidatesCombinedSeeds"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.ctfNoOverlaps = cms.EDProducer("TrackProducer",
    src = cms.InputTag("ckfTrackCandidatesNoOverlaps"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.ctfPixelLess = cms.EDProducer("TrackProducer",
    src = cms.InputTag("ckfTrackCandidatesPixelLess"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('RKFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.ctfWithMaterialTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("ckfTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.ctfWithMaterialTracksCosmics = cms.EDProducer("TrackProducer",
    src = cms.InputTag("ckfTrackCandidatesP5"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('FittingSmootherRKP5'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('ctf'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.dedxDiscrimASmi = cms.EDProducer("DeDxDiscriminatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    ProbabilityMode = cms.untracked.string('Accumulation'),
    tracks = cms.InputTag("generalTracks"),
    UsePixel = cms.bool(False),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    Formula = cms.untracked.uint32(3),
    Reccord = cms.untracked.string('SiStripDeDxMip_3D_Rcd'),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxDiscrimBTag = cms.EDProducer("DeDxDiscriminatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    ProbabilityMode = cms.untracked.string('Accumulation'),
    tracks = cms.InputTag("generalTracks"),
    UsePixel = cms.bool(False),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    Formula = cms.untracked.uint32(1),
    Reccord = cms.untracked.string('SiStripDeDxMip_3D_Rcd'),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxDiscrimProd = cms.EDProducer("DeDxDiscriminatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    ProbabilityMode = cms.untracked.string('Accumulation'),
    tracks = cms.InputTag("generalTracks"),
    UsePixel = cms.bool(False),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    Formula = cms.untracked.uint32(0),
    Reccord = cms.untracked.string('SiStripDeDxMip_3D_Rcd'),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxDiscrimSmi = cms.EDProducer("DeDxDiscriminatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    ProbabilityMode = cms.untracked.string('Accumulation'),
    tracks = cms.InputTag("generalTracks"),
    UsePixel = cms.bool(False),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    Formula = cms.untracked.uint32(2),
    Reccord = cms.untracked.string('SiStripDeDxMip_3D_Rcd'),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxHarmonic2 = cms.EDProducer("DeDxEstimatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    tracks = cms.InputTag("generalTracks"),
    estimator = cms.string('generic'),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    trajectoryTrackAssociation = cms.InputTag("generalTracks"),
    UsePixel = cms.bool(False),
    exponent = cms.double(-2.0)
)


process.dedxMedian = cms.EDProducer("DeDxEstimatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    tracks = cms.InputTag("generalTracks"),
    estimator = cms.string('median'),
    ShapeTest = cms.bool(False),
    MeVperADCStrip = cms.double(0.00095665),
    UsePixel = cms.bool(False),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxTruncated40 = cms.EDProducer("DeDxEstimatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    tracks = cms.InputTag("generalTracks"),
    estimator = cms.string('truncated'),
    ShapeTest = cms.bool(True),
    fraction = cms.double(0.4),
    MeVperADCStrip = cms.double(0.00095665),
    UsePixel = cms.bool(False),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dedxUnbinned = cms.EDProducer("DeDxEstimatorProducer",
    UseStrip = cms.bool(True),
    MeVperADCPixel = cms.double(3.61e-06),
    UseCalibration = cms.bool(False),
    calibrationPath = cms.string(''),
    tracks = cms.InputTag("generalTracks"),
    estimator = cms.string('unbinnedFit'),
    ShapeTest = cms.bool(True),
    MeVperADCStrip = cms.double(0.00095665),
    UsePixel = cms.bool(False),
    trajectoryTrackAssociation = cms.InputTag("generalTracks")
)


process.dt1DCosmicRecHits = cms.EDProducer("DTRecHitProducer",
    recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
    recAlgoConfig = cms.PSet(
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        doVdriftCorr = cms.bool(False),
        debug = cms.untracked.bool(False),
        tTrigModeConfig = cms.PSet(
            vPropWire = cms.double(24.4),
            doTOFCorrection = cms.bool(False),
            tofCorrType = cms.int32(0),
            wirePropCorrType = cms.int32(0),
            tTrigLabel = cms.string('cosmics'),
            doWirePropCorrection = cms.bool(False),
            doT0Correction = cms.bool(True),
            debug = cms.untracked.bool(False)
        ),
        maxTime = cms.double(420.0)
    ),
    debug = cms.untracked.bool(False),
    dtDigiLabel = cms.InputTag("muonDTDigis")
)


process.dt1DRecHits = cms.EDProducer("DTRecHitProducer",
    recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
    recAlgoConfig = cms.PSet(
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        doVdriftCorr = cms.bool(True),
        debug = cms.untracked.bool(False),
        tTrigModeConfig = cms.PSet(
            vPropWire = cms.double(24.4),
            doTOFCorrection = cms.bool(True),
            tofCorrType = cms.int32(0),
            wirePropCorrType = cms.int32(0),
            tTrigLabel = cms.string(''),
            doWirePropCorrection = cms.bool(True),
            doT0Correction = cms.bool(True),
            debug = cms.untracked.bool(False)
        ),
        maxTime = cms.double(420.0)
    ),
    debug = cms.untracked.bool(False),
    dtDigiLabel = cms.InputTag("muonDTDigis")
)


process.dt2DCosmicSegments = cms.EDProducer("DTRecSegment2DProducer",
    Reco2DAlgoConfig = cms.PSet(
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(True),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(True),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string(''),
                doWirePropCorrection = cms.bool(True),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        segmCleanerMode = cms.int32(2),
        nSharedHitsMax = cms.int32(2),
        AlphaMaxPhi = cms.double(1.0),
        hit_afterT0_resolution = cms.double(0.03),
        MaxAllowedHits = cms.uint32(50),
        performT0_vdriftSegCorrection = cms.bool(False),
        AlphaMaxTheta = cms.double(0.9),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False)
    ),
    Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("dt1DCosmicRecHits")
)


process.dt2DSegments = cms.EDProducer("DTRecSegment2DProducer",
    Reco2DAlgoConfig = cms.PSet(
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(True),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(True),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string(''),
                doWirePropCorrection = cms.bool(True),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        segmCleanerMode = cms.int32(2),
        nSharedHitsMax = cms.int32(2),
        AlphaMaxPhi = cms.double(1.0),
        hit_afterT0_resolution = cms.double(0.03),
        MaxAllowedHits = cms.uint32(50),
        performT0_vdriftSegCorrection = cms.bool(False),
        AlphaMaxTheta = cms.double(0.9),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False)
    ),
    Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("dt1DRecHits")
)


process.dt4DCosmicSegments = cms.EDProducer("DTRecSegment4DProducer",
    Reco4DAlgoName = cms.string('DTCombinatorialPatternReco4D'),
    Reco4DAlgoConfig = cms.PSet(
        Reco2DAlgoConfig = cms.PSet(
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                doVdriftCorr = cms.bool(False),
                debug = cms.untracked.bool(False),
                tTrigModeConfig = cms.PSet(
                    vPropWire = cms.double(24.4),
                    doTOFCorrection = cms.bool(False),
                    tofCorrType = cms.int32(0),
                    wirePropCorrType = cms.int32(0),
                    tTrigLabel = cms.string('cosmics'),
                    doWirePropCorrection = cms.bool(False),
                    doT0Correction = cms.bool(True),
                    debug = cms.untracked.bool(False)
                ),
                maxTime = cms.double(420.0)
            ),
            segmCleanerMode = cms.int32(1),
            nSharedHitsMax = cms.int32(2),
            AlphaMaxPhi = cms.double(100.0),
            hit_afterT0_resolution = cms.double(0.03),
            MaxAllowedHits = cms.uint32(50),
            performT0_vdriftSegCorrection = cms.bool(False),
            AlphaMaxTheta = cms.double(100.0),
            debug = cms.untracked.bool(False),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False)
        ),
        Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(False),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(False),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string('cosmics'),
                doWirePropCorrection = cms.bool(False),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        segmCleanerMode = cms.int32(1),
        nSharedHitsMax = cms.int32(2),
        hit_afterT0_resolution = cms.double(0.03),
        performT0_vdriftSegCorrection = cms.bool(False),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        AllDTRecHits = cms.bool(True),
        performT0SegCorrection = cms.bool(False)
    ),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("dt1DCosmicRecHits"),
    recHits2DLabel = cms.InputTag("dt2DCosmicSegments")
)


process.dt4DSegments = cms.EDProducer("DTRecSegment4DProducer",
    Reco4DAlgoName = cms.string('DTCombinatorialPatternReco4D'),
    Reco4DAlgoConfig = cms.PSet(
        Reco2DAlgoConfig = cms.PSet(
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                doVdriftCorr = cms.bool(True),
                debug = cms.untracked.bool(False),
                tTrigModeConfig = cms.PSet(
                    vPropWire = cms.double(24.4),
                    doTOFCorrection = cms.bool(True),
                    tofCorrType = cms.int32(0),
                    wirePropCorrType = cms.int32(0),
                    tTrigLabel = cms.string(''),
                    doWirePropCorrection = cms.bool(True),
                    doT0Correction = cms.bool(True),
                    debug = cms.untracked.bool(False)
                ),
                maxTime = cms.double(420.0)
            ),
            segmCleanerMode = cms.int32(2),
            nSharedHitsMax = cms.int32(2),
            AlphaMaxPhi = cms.double(1.0),
            hit_afterT0_resolution = cms.double(0.03),
            MaxAllowedHits = cms.uint32(50),
            performT0_vdriftSegCorrection = cms.bool(False),
            AlphaMaxTheta = cms.double(0.9),
            debug = cms.untracked.bool(False),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False)
        ),
        Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(True),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(True),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string(''),
                doWirePropCorrection = cms.bool(True),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        hit_afterT0_resolution = cms.double(0.03),
        performT0_vdriftSegCorrection = cms.bool(False),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        AllDTRecHits = cms.bool(True),
        performT0SegCorrection = cms.bool(False)
    ),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("dt1DRecHits"),
    recHits2DLabel = cms.InputTag("dt2DSegments")
)


process.dt4DSegmentsT0Seg = cms.EDProducer("DTSegment4DT0Corrector",
    recAlgo = cms.string('DTLinearDriftAlgo'),
    recAlgoConfig = cms.PSet(
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        minTime = cms.double(-3.0),
        driftVelocity = cms.double(0.00543),
        hitResolution = cms.double(0.02),
        debug = cms.untracked.bool(False),
        maxTime = cms.double(420.0),
        tTrigModeConfig = cms.PSet(
            vPropWire = cms.double(24.4),
            doTOFCorrection = cms.bool(False),
            tofCorrType = cms.int32(0),
            wirePropCorrType = cms.int32(0),
            tTrigLabel = cms.string('cosmics'),
            doWirePropCorrection = cms.bool(False),
            doT0Correction = cms.bool(True),
            debug = cms.untracked.bool(False)
        )
    ),
    debug = cms.untracked.bool(False),
    performT0_vdriftSegCorrection = cms.bool(True),
    hit_afterT0_resolution = cms.double(0.03),
    recHits4DLabel = cms.InputTag("dt4DSegments")
)


process.dtDataIntegrityUnpacker = cms.EDProducer("DTUnpackingModule",
    useStandardFEDid = cms.bool(True),
    inputLabel = cms.InputTag("rawDataCollector"),
    dataType = cms.string('DDU'),
    fedbyType = cms.bool(False),
    readOutParameters = cms.PSet(
        debug = cms.untracked.bool(False),
        rosParameters = cms.PSet(
            writeSC = cms.untracked.bool(True),
            readingDDU = cms.untracked.bool(True),
            performDataIntegrityMonitor = cms.untracked.bool(True),
            readDDUIDfromDDU = cms.untracked.bool(True),
            debug = cms.untracked.bool(False),
            localDAQ = cms.untracked.bool(False)
        ),
        performDataIntegrityMonitor = cms.untracked.bool(True),
        localDAQ = cms.untracked.bool(False)
    ),
    dqmOnly = cms.bool(True)
)


process.dttfDigis = cms.EDProducer("DTTFFEDReader",
    verbose = cms.untracked.bool(False),
    DTTF_FED_Source = cms.InputTag("rawDataCollector")
)


process.ecalCompactTrigPrim = cms.EDProducer("EcalCompactTrigPrimProducer",
    outColl = cms.string(''),
    inColl = cms.InputTag("ecalDigis","EcalTriggerPrimitives")
)


process.ecalDetIdToBeRecovered = cms.EDProducer("EcalDetIdToBeRecoveredProducer",
    ebIntegrityChIdErrors = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    ebDetIdToBeRecovered = cms.string('ebDetId'),
    integrityTTIdErrors = cms.InputTag("ecalDigis","EcalIntegrityTTIdErrors"),
    eeIntegrityGainErrors = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    ebFEToBeRecovered = cms.string('ebFE'),
    ebIntegrityGainErrors = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    eeDetIdToBeRecovered = cms.string('eeDetId'),
    eeIntegrityGainSwitchErrors = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    eeIntegrityChIdErrors = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    ebIntegrityGainSwitchErrors = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    ebSrFlagCollection = cms.InputTag("ecalDigis"),
    eeSrFlagCollection = cms.InputTag("ecalDigis"),
    integrityBlockSizeErrors = cms.InputTag("ecalDigis","EcalIntegrityBlockSizeErrors"),
    eeFEToBeRecovered = cms.string('eeFE')
)


process.ecalDigis = cms.EDProducer("EcalRawToDigi",
    tccUnpacking = cms.bool(True),
    FedLabel = cms.InputTag("listfeds"),
    srpUnpacking = cms.bool(True),
    syncCheck = cms.bool(True),
    feIdCheck = cms.bool(True),
    silentMode = cms.untracked.bool(True),
    InputLabel = cms.InputTag("rawDataCollector"),
    orderedFedList = cms.vint32(601, 602, 603, 604, 605, 
        606, 607, 608, 609, 610, 
        611, 612, 613, 614, 615, 
        616, 617, 618, 619, 620, 
        621, 622, 623, 624, 625, 
        626, 627, 628, 629, 630, 
        631, 632, 633, 634, 635, 
        636, 637, 638, 639, 640, 
        641, 642, 643, 644, 645, 
        646, 647, 648, 649, 650, 
        651, 652, 653, 654),
    eventPut = cms.bool(True),
    numbTriggerTSamples = cms.int32(1),
    numbXtalTSamples = cms.int32(10),
    orderedDCCIdList = cms.vint32(1, 2, 3, 4, 5, 
        6, 7, 8, 9, 10, 
        11, 12, 13, 14, 15, 
        16, 17, 18, 19, 20, 
        21, 22, 23, 24, 25, 
        26, 27, 28, 29, 30, 
        31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 
        41, 42, 43, 44, 45, 
        46, 47, 48, 49, 50, 
        51, 52, 53, 54),
    FEDs = cms.vint32(601, 602, 603, 604, 605, 
        606, 607, 608, 609, 610, 
        611, 612, 613, 614, 615, 
        616, 617, 618, 619, 620, 
        621, 622, 623, 624, 625, 
        626, 627, 628, 629, 630, 
        631, 632, 633, 634, 635, 
        636, 637, 638, 639, 640, 
        641, 642, 643, 644, 645, 
        646, 647, 648, 649, 650, 
        651, 652, 653, 654),
    DoRegional = cms.bool(False),
    feUnpacking = cms.bool(True),
    forceToKeepFRData = cms.bool(False),
    headerUnpacking = cms.bool(True),
    memUnpacking = cms.bool(True)
)


process.ecalDrivenElectronSeeds = cms.EDProducer("ElectronSeedProducer",
    endcapSuperClusters = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    SeedConfiguration = cms.PSet(
        PhiMax2B = cms.double(0.002),
        hOverEPtMin = cms.double(0.0),
        PhiMax2F = cms.double(0.003),
        searchInTIDTEC = cms.bool(True),
        PhiMin2F = cms.double(-0.003),
        deltaZ1WithVertex = cms.double(25.0),
        HighPtThreshold = cms.double(35.0),
        r2MinF = cms.double(-0.15),
        maxHBarrel = cms.double(0.0),
        DeltaPhi1Low = cms.double(0.23),
        DeltaPhi1High = cms.double(0.08),
        ePhiMin1 = cms.double(-0.125),
        hcalTowers = cms.InputTag("towerMaker"),
        LowPtThreshold = cms.double(5.0),
        maxHOverEBarrel = cms.double(0.15),
        dynamicPhiRoad = cms.bool(True),
        ePhiMax1 = cms.double(0.075),
        measurementTrackerName = cms.string(''),
        SizeWindowENeg = cms.double(0.675),
        nSigmasDeltaZ1 = cms.double(5.0),
        rMaxI = cms.double(0.2),
        maxHEndcaps = cms.double(0.0),
        preFilteredSeeds = cms.bool(False),
        r2MaxF = cms.double(0.15),
        maxHOverEEndcaps = cms.double(0.15),
        pPhiMin1 = cms.double(-0.075),
        initialSeeds = cms.InputTag("newCombinedSeeds"),
        pPhiMax1 = cms.double(0.125),
        SCEtCut = cms.double(4.0),
        z2MaxB = cms.double(0.09),
        fromTrackerSeeds = cms.bool(True),
        hcalRecHits = cms.InputTag("hbhereco"),
        z2MinB = cms.double(-0.09),
        rMinI = cms.double(-0.2),
        hOverEConeSize = cms.double(0.15),
        hOverEHBMinE = cms.double(0.7),
        useRecoVertex = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        vertices = cms.InputTag("offlinePrimaryVerticesWithBS"),
        DeltaPhi2F = cms.double(0.012),
        applyHOverECut = cms.bool(True),
        hOverEHFMinE = cms.double(0.8),
        DeltaPhi2B = cms.double(0.008),
        PhiMin2B = cms.double(-0.002)
    ),
    barrelSuperClusters = cms.InputTag("correctedHybridSuperClusters")
)


process.ecalDrivenGsfElectronCores = cms.EDProducer("GsfElectronCoreEcalDrivenProducer",
    ctfTracks = cms.InputTag("generalTracks"),
    gsfTracks = cms.InputTag("electronGsfTracks"),
    gsfPfRecTracks = cms.InputTag("pfTrackElec"),
    useGsfPfRecTracks = cms.bool(True)
)


process.ecalDrivenGsfElectrons = cms.EDProducer("GsfElectronEcalDrivenProducer",
    hOverEPtMin = cms.double(0.0),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    maxSigmaIetaIetaEndcapsPflow = cms.double(999999999.0),
    maxHBarrelPflow = cms.double(0.0),
    minSCEtBarrel = cms.double(4.0),
    etMinEndcaps = cms.double(0.1),
    gsfPfRecTracksTag = cms.InputTag("pfTrackElec"),
    minEOverPBarrelPflow = cms.double(0.0),
    maxHEndcaps = cms.double(0.0),
    eMinBarrel = cms.double(0.08),
    isFiducial = cms.bool(False),
    maxDeltaEtaEndcaps = cms.double(0.02),
    minEOverPBarrel = cms.double(0.0),
    maxVtxDistTk = cms.double(0.2),
    maxFbremBarrel = cms.double(999999999.0),
    applyAmbResolution = cms.bool(False),
    minMVAPflow = cms.double(-0.4),
    ctfTracksTag = cms.InputTag("generalTracks"),
    hOverEConeSizePflow = cms.double(0.15),
    minSCEtEndcaps = cms.double(4.0),
    ambSortingStrategy = cms.uint32(1),
    etMinHcal = cms.double(0.0),
    maxFbremEndcaps = cms.double(999999999.0),
    maxEOverPEndcapsPflow = cms.double(999999999.0),
    pfMvaTag = cms.InputTag("pfElectronTranslator","pf"),
    pflowGsfElectronsTag = cms.InputTag(""),
    maxHBarrel = cms.double(0.0),
    intRadiusEcalBarrel = cms.double(3.0),
    minEOverPEndcapsPflow = cms.double(0.0),
    eMinEndcaps = cms.double(0.0),
    maxDeltaEtaEndcapsPflow = cms.double(999999999.0),
    useNumCrystals = cms.bool(True),
    addPflowElectrons = cms.bool(True),
    ctfTracksCheck = cms.bool(True),
    maxFbremEndcapsPflow = cms.double(999999999.0),
    stripEndcapTk = cms.double(0.015),
    isEndcaps = cms.bool(False),
    seedFromTEC = cms.bool(True),
    maxEOverPBarrel = cms.double(999999999.0),
    maxSigmaIetaIetaBarrelPflow = cms.double(999999999.0),
    hOverEConeSize = cms.double(0.15),
    maxDrbTk = cms.double(999999999.0),
    minSCEtBarrelPflow = cms.double(0.0),
    maxDeltaEtaBarrelPflow = cms.double(999999999.0),
    maxTIPPflow = cms.double(999999999.0),
    reducedEndcapRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    vetoClustered = cms.bool(False),
    hcalTowers = cms.InputTag("towerMaker"),
    etMinBarrel = cms.double(0.0),
    reducedBarrelRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    intRadiusHcal = cms.double(0.15),
    maxHOverEBarrel = cms.double(0.15),
    applyEtaCorrection = cms.bool(False),
    maxHOverEEndcaps = cms.double(0.15),
    isBarrel = cms.bool(False),
    isFiducialPflow = cms.bool(False),
    isBarrelPflow = cms.bool(False),
    minSCEtEndcapsPflow = cms.double(0.0),
    previousGsfElectronsTag = cms.InputTag(""),
    stripBarrelTk = cms.double(0.015),
    maxHEndcapsPflow = cms.double(0.0),
    severityLevelCut = cms.int32(4),
    maxHOverEEndcapsPflow = cms.double(999999999.0),
    maxDeltaEtaBarrel = cms.double(0.02),
    ambClustersOverlapStrategy = cms.uint32(1),
    maxFbremBarrelPflow = cms.double(999999999.0),
    maxTIP = cms.double(999999999.0),
    maxDeltaPhiBarrelPflow = cms.double(999999999.0),
    ptMinTk = cms.double(0.7),
    intRadiusEcalEndcaps = cms.double(3.0),
    minEOverPEndcaps = cms.double(0.0),
    maxEOverPEndcaps = cms.double(999999999.0),
    maxHOverEBarrelPflow = cms.double(999999999.0),
    maxEOverPBarrelPflow = cms.double(999999999.0),
    maxSigmaIetaIetaEndcaps = cms.double(999999999.0),
    jurassicWidth = cms.double(1.5),
    recHitFlagsToBeExcluded = cms.vint32(3, 5, 9, 10),
    maxSigmaIetaIetaBarrel = cms.double(999999999.0),
    maxDeltaPhiEndcaps = cms.double(0.15),
    intRadiusEndcapTk = cms.double(0.015),
    applyPreselection = cms.bool(False),
    isEndcapsPflow = cms.bool(False),
    minMVA = cms.double(-0.4),
    useGsfPfRecTracks = cms.bool(True),
    gsfElectronCoresTag = cms.InputTag("ecalDrivenGsfElectronCores"),
    superClusterErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    seedsTag = cms.InputTag("ecalDrivenElectronSeeds"),
    maxDeltaPhiBarrel = cms.double(0.15),
    maxDeltaPhiEndcapsPflow = cms.double(999999999.0),
    hOverEPtMinPflow = cms.double(0.0),
    intRadiusBarrelTk = cms.double(0.015)
)


process.ecalGlobalUncalibRecHit = cms.EDProducer("EcalUncalibRecHitProducer",
    outOfTimeThresholdGain61pEB = cms.double(100000.0),
    eePulseShape = cms.vdouble(5.2e-05, -5.26e-05, 6.66e-05, 0.1168, 0.7575, 
        1.0, 0.8876, 0.6732, 0.4741, 0.3194),
    amplitudeThresholdEE = cms.double(10),
    EBtimeFitParameters = cms.vdouble(-2.015452, 3.130702, -12.3473, 41.88921, -82.83944, 
        91.01147, -50.35761, 11.05621),
    EEhitCollection = cms.string('EcalUncalibRecHitsEE'),
    EEdigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    EEtimeNconst = cms.double(31.8),
    EBtimeConstantTerm = cms.double(0.6),
    outOfTimeThresholdGain61pEE = cms.double(100000.0),
    doEBtimeCorrection = cms.bool(False),
    EEamplitudeFitParameters = cms.vdouble(1.89, 1.4),
    EBtimeNconst = cms.double(28.5),
    kPoorRecoFlagEB = cms.bool(False),
    ebPulseShape = cms.vdouble(5.2e-05, -5.26e-05, 6.66e-05, 0.1168, 0.7575, 
        1.0, 0.8876, 0.6732, 0.4741, 0.3194),
    EBtimeFitLimits_Lower = cms.double(0.2),
    kPoorRecoFlagEE = cms.bool(False),
    chi2ThreshEB_ = cms.double(33.0),
    EBdigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    EEtimeFitParameters = cms.vdouble(-2.390548, 3.553628, -17.62341, 67.67538, -133.213, 
        140.7432, -75.41106, 16.20277),
    algo = cms.string('EcalUncalibRecHitWorkerGlobal'),
    EEchi2Parameters = cms.vdouble(2.122, 0.022, 2.122, 0.022),
    EEtimeCorrShiftBins = cms.vdouble(-1.052, -1.052, -1.052, -1.052, -0.719, 
        -0.531, -0.383, -0.271, -0.19, -0.145, 
        -0.107, -0.077, -0.076, -0.072, -0.075, 
        -0.068, -0.065, -0.067, -0.072, -0.075, 
        -0.07, -0.058, -0.055, -0.053, -0.042, 
        -0.04, -0.034, -0.025, -0.015, -0.009, 
        0.006, 0.013, 0.004, 0.003, -0.013, 
        0.005, 0.029, 0.057, 0.076, 0.098, 
        0.123, 0.16, 0.195, 0.225, 0.253, 
        0.278, 0.32, 0.36, 0.385, 0.358, 
        0.397, 0.367, 0.434, 0.428),
    outOfTimeThresholdGain12mEE = cms.double(5),
    outOfTimeThresholdGain12mEB = cms.double(5),
    EEtimeFitLimits_Upper = cms.double(1.4),
    EEtimeFitLimits_Lower = cms.double(0.2),
    ebSpikeThreshold = cms.double(1.042),
    EBamplitudeFitParameters = cms.vdouble(1.138, 1.652),
    EEtimeCorrAmplitudeBins = cms.vdouble(15.7, 17.6, 19.7, 22.1, 24.8, 
        27.9, 31.3, 35.1, 39.4, 44.2, 
        49.6, 55.6, 62.4, 70.0, 78.6, 
        88.1, 98.9, 111.0, 124.5, 139.7, 
        156.7, 175.9, 197.3, 221.4, 248.4, 
        278.7, 312.7, 350.9, 393.7, 441.7, 
        495.6, 556.1, 624.0, 700.1, 785.5, 
        881.4, 988.9, 1109.6, 1245.0, 1396.9, 
        1567.3, 1758.6, 1973.1, 2213.9, 2484.0, 
        2787.1, 3127.2, 3508.8, 3936.9, 4417.3, 
        4956.3, 5561.1, 6239.6, 7001.0),
    doEEtimeCorrection = cms.bool(False),
    amplitudeThresholdEB = cms.double(10),
    outOfTimeThresholdGain12pEE = cms.double(5),
    outOfTimeThresholdGain12pEB = cms.double(5),
    EBtimeCorrAmplitudeBins = cms.vdouble(7.9, 8.9, 10.0, 11.2, 12.5, 
        14.1, 15.8, 17.7, 19.9, 22.3, 
        25.0, 28.1, 31.5, 35.3, 39.7, 
        44.5, 49.9, 56.0, 62.8, 70.5, 
        79.1, 88.8, 99.6, 111.7, 125.4, 
        140.7, 157.9, 177.1, 198.7, 223.0, 
        250.2, 280.7, 315.0, 353.4, 396.5, 
        444.9, 499.2, 560.1, 628.4, 705.1, 
        791.1, 887.7, 996.0, 1117.5, 1253.9, 
        1406.8, 1578.5, 1771.1, 1987.2, 2229.7, 
        2501.8, 2807.0, 3149.5, 3533.8, 3895.9, 
        3896.0),
    EBtimeCorrShiftBins = cms.vdouble(-1.641, -1.641, -1.641, -1.641, -1.537, 
        -1.301, -1.121, -0.943, -0.795, -0.679, 
        -0.59, -0.52, -0.465, -0.421, -0.381, 
        -0.345, -0.318, -0.293, -0.273, -0.253, 
        -0.235, -0.22, -0.206, -0.196, -0.188, 
        -0.181, -0.167, -0.148, -0.136, -0.13, 
        -0.118, -0.105, -0.097, -0.082, -0.073, 
        -0.053, -0.039, -0.025, -0.034, -0.022, 
        -0.028, -0.015, 0.025, 0.05, 0.069, 
        0.107, 0.101, 0.13, 0.189, 0.191, 
        0.208, 0.237, 0.244, 0.251, 0.251, 
        -1.0),
    outOfTimeThresholdGain61mEB = cms.double(5),
    EBhitCollection = cms.string('EcalUncalibRecHitsEB'),
    outOfTimeThresholdGain61mEE = cms.double(5),
    EEtimeConstantTerm = cms.double(0.6),
    EBchi2Parameters = cms.vdouble(2.122, 0.022, 2.122, 0.022),
    chi2ThreshEE_ = cms.double(33.0),
    EBtimeFitLimits_Upper = cms.double(1.4)
)


process.ecalPreshowerDigis = cms.EDProducer("ESRawToDigi",
    sourceTag = cms.InputTag("rawDataCollector"),
    debugMode = cms.untracked.bool(False),
    InstanceES = cms.string(''),
    LookupTable = cms.FileInPath('EventFilter/ESDigiToRaw/data/ES_lookup_table.dat'),
    ESdigiCollection = cms.string('')
)


process.ecalPreshowerRecHit = cms.EDProducer("ESRecHitProducer",
    ESRecoAlgo = cms.int32(0),
    ESrechitCollection = cms.string('EcalRecHitsES'),
    algo = cms.string('ESRecHitWorker'),
    ESdigiCollection = cms.InputTag("ecalPreshowerDigis")
)


process.ecalRecHit = cms.EDProducer("EcalRecHitProducer",
    recoverEEVFE = cms.bool(False),
    EErechitCollection = cms.string('EcalRecHitsEE'),
    recoverEBIsolatedChannels = cms.bool(False),
    recoverEBVFE = cms.bool(False),
    laserCorrection = cms.bool(True),
    killDeadChannels = cms.bool(True),
    EEuncalibRecHitCollection = cms.InputTag("ecalGlobalUncalibRecHit","EcalUncalibRecHitsEE"),
    ebFEToBeRecovered = cms.InputTag("ecalDetIdToBeRecovered","ebFE"),
    cleaningConfig = cms.PSet(
        e6e2thresh = cms.double(0.04),
        tightenCrack_e6e2_double = cms.double(3),
        tightenCrack_e4e1_single = cms.double(3),
        cThreshold_barrel = cms.double(4),
        e4e1Threshold_barrel = cms.double(0.08),
        tightenCrack_e1_single = cms.double(2),
        e4e1_b_barrel = cms.double(-0.024),
        e4e1_a_barrel = cms.double(0.04),
        cThreshold_double = cms.double(10),
        ignoreOutOfTimeThresh = cms.double(2.0),
        cThreshold_endcap = cms.double(15),
        e4e1_a_endcap = cms.double(0.02),
        e4e1_b_endcap = cms.double(-0.0125),
        e4e1Threshold_endcap = cms.double(0.3),
        tightenCrack_e1_double = cms.double(2)
    ),
    logWarningEtThreshold_EE_FE = cms.double(50),
    eeDetIdToBeRecovered = cms.InputTag("ecalDetIdToBeRecovered","eeDetId"),
    recoverEBFE = cms.bool(True),
    algo = cms.string('EcalRecHitWorkerSimple'),
    ebDetIdToBeRecovered = cms.InputTag("ecalDetIdToBeRecovered","ebDetId"),
    singleChannelRecoveryThreshold = cms.double(8),
    ChannelStatusToBeExcluded = cms.vint32(3, 4, 8, 9, 10, 
        11, 12, 13, 14),
    EBrechitCollection = cms.string('EcalRecHitsEB'),
    singleChannelRecoveryMethod = cms.string('NeuralNetworks'),
    recoverEEFE = cms.bool(True),
    triggerPrimitiveDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    flagsMapDBReco = cms.vint32(0, 0, 0, 0, 4, 
        -1, -1, -1, 4, 4, 
        7, 7, 7, 8, 9),
    EBuncalibRecHitCollection = cms.InputTag("ecalGlobalUncalibRecHit","EcalUncalibRecHitsEB"),
    algoRecover = cms.string('EcalRecHitWorkerRecover'),
    eeFEToBeRecovered = cms.InputTag("ecalDetIdToBeRecovered","eeFE"),
    logWarningEtThreshold_EB_FE = cms.double(50),
    recoverEEIsolatedChannels = cms.bool(False)
)


process.ecalTPSkim = cms.EDProducer("EcalTPSkimmer",
    doEndcap = cms.bool(True),
    tpOutputCollection = cms.string(''),
    tpInputCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    skipModule = cms.bool(False),
    chStatusToSelectTP = cms.vuint32(13),
    doBarrel = cms.bool(True)
)


process.egammaCTFFinalFitWithMaterial = cms.EDProducer("TrackProducer",
    src = cms.InputTag("siStripElectrons"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('egammaCTFWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(False),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('undefAlgorithm'),
    Propagator = cms.string('PropagatorWithMaterial')
)


process.eidCutBasedExt = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('loose'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('robust'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidLoose = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('loose'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidRobustHighEnergy = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('highenergy'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('robust'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidRobustLoose = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('loose'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('robust'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidRobustTight = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('tight'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('robust'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.eidTight = cms.EDProducer("EleIdCutBasedExtProducer",
    electronQuality = cms.string('tight'),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(10.9, 7.01, 8.75, 3.51, 7.75, 
            1.62, 11.6, 9.9, 4.97, 5.33, 
            3.18, 2.32, 0.164, 5.46, 12.0, 
            0.00604, 4.1, 0.000628),
        cutmishits = cms.vdouble(5.5, 1.5, 0.5, 1.5, 2.5, 
            0.5, 3.5, 5.5, 0.5, 0.5, 
            0.5, 0.5, 0.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0871, 0.0289, 0.0783, 0.0946, 0.0245, 
            0.0363, 0.0671, 0.048, 0.0614, 0.0924, 
            0.0158, 0.049, 0.0382, 0.0915, 0.0451, 
            0.0452, 0.00196, 0.0043),
        cutdeta = cms.vdouble(0.00915, 0.00302, 0.0061, 0.0135, 0.00565, 
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903, 
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659, 
            0.0148, 0.00555, 0.0128),
        cuteopin = cms.vdouble(0.878, 0.859, 0.874, 0.944, 0.737, 
            0.773, 0.86, 0.967, 0.917, 0.812, 
            0.915, 1.01, 0.847, 0.953, 0.979, 
            0.841, 0.771, 1.09),
        cutip = cms.vdouble(0.0239, 0.027, 0.0768, 0.0231, 0.178, 
            0.0957, 0.0102, 0.0168, 0.043, 0.0166, 
            0.0594, 0.0308, 2.1, 0.00527, 3.17, 
            4.91, 0.769, 5.9),
        cutisotk = cms.vdouble(6.53, 4.6, 6.0, 8.63, 3.11, 
            7.77, 5.42, 4.81, 4.06, 6.47, 
            2.8, 3.45, 5.29, 5.18, 15.4, 
            5.38, 4.47, 0.0347),
        cutsee = cms.vdouble(0.0131, 0.0106, 0.0115, 0.0306, 0.028, 
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317, 
            0.029, 0.0289, 0.0142, 0.0106, 0.0103, 
            0.035, 0.0296, 0.0333),
        cutdphi = cms.vdouble(0.0369, 0.0307, 0.117, 0.0475, 0.0216, 
            0.117, 0.0372, 0.0246, 0.0426, 0.0612, 
            0.0142, 0.039, 0.0737, 0.0566, 0.0359, 
            0.0187, 0.012, 0.0358),
        cutisoecal = cms.vdouble(20.0, 27.2, 4.48, 13.5, 4.56, 
            3.19, 12.2, 13.1, 7.42, 7.67, 
            4.12, 4.85, 10.1, 12.4, 11.1, 
            11.0, 10.6, 13.4)
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.032, 0.016, 0.0525, 0.09, 0.025, 
            0.035, 0.065, 0.092),
        hOverE = cms.vdouble(0.05, 0.042, 0.045, 0.0, 0.055, 
            0.037, 0.05, 0.0),
        sigmaEtaEta = cms.vdouble(0.0125, 0.011, 0.01, 0.0, 0.0265, 
            0.0252, 0.026, 0.0),
        deltaEtaIn = cms.vdouble(0.0055, 0.003, 0.0065, 0.0, 0.006, 
            0.0055, 0.0075, 0.0),
        eSeedOverPin = cms.vdouble(0.24, 0.94, 0.11, 0.0, 0.32, 
            0.83, 0.0, 0.0)
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.0225, 0.0114, 0.0234, 0.039, 0.0215, 
            0.0095, 0.0148, 0.0167),
        hOverE = cms.vdouble(0.056, 0.0221, 0.037, 0.0, 0.0268, 
            0.0102, 0.0104, 0.0),
        sigmaEtaEta = cms.vdouble(0.0095, 0.0094, 0.0094, 0.0, 0.026, 
            0.0257, 0.0246, 0.0),
        deltaEtaIn = cms.vdouble(0.0043, 0.00282, 0.0036, 0.0, 0.0066, 
            0.0049, 0.0041, 0.0),
        eSeedOverPin = cms.vdouble(0.32, 0.94, 0.221, 0.0, 0.74, 
            0.89, 0.66, 0.0)
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00811, 0.00341, 0.00633, 0.0103, 0.00667, 
            0.01, 0.0106, 0.0145, 0.0163, 0.0076, 
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857, 
            0.012, 0.0169, 0.00172, 0.00861, 0.00362, 
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119, 
            0.0169, 0.000996),
        cutiso_sum = cms.vdouble(11.8, 8.31, 6.26, 6.18, 3.28, 
            4.38, 4.17, 5.4, 1.57, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0213, 0.0422, 0.0632, 0.0361, 0.073, 
            0.126, 0.171, 0.119, 0.0372, 0.0131, 
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268, 
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761, 
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123, 
            0.0235, 0.00363),
        cuthoe = cms.vdouble(0.0783, 0.0387, 0.105, 0.118, 0.0227, 
            0.062, 0.13, 2.47, 0.38, 0.0888, 
            0.0503, 0.0955, 0.0741, 0.015, 0.03, 
            0.589, 1.13, 0.612, 0.0494, 0.0461, 
            0.0292, 0.0369, 0.0113, 0.0145, 0.124, 
            2.05, 0.61),
        cutfmishits = cms.vdouble(2.5, 1.5, 1.5, 1.5, 1.5, 
            0.5, 2.5, 0.5, 0.5, 2.5, 
            1.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5, -0.5, 2.5, 1.5, 
            0.5, 0.5, 0.5, 0.5, 0.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(13.7, 11.6, 7.14, 9.98, 3.52, 
            4.87, 6.24, 7.96, 2.53, 11.2, 
            11.9, 7.88, 8.16, 5.58, 5.03, 
            11.4, 8.15, 5.79, 10.4, 11.1, 
            10.4, 7.47, 5.08, 5.9, 11.8, 
            14.1, 11.7),
        cutdcotdist = cms.vdouble(0.0393, 0.0256, 0.00691, 0.0394, 0.0386, 
            0.039, 0.0325, 0.0384, 0.0382, 0.0245, 
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107, 
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248, 
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05, 
            0.0189, 0.000928),
        cutsee = cms.vdouble(0.0143, 0.0105, 0.0123, 0.0324, 0.0307, 
            0.0301, 0.0109, 0.027, 0.0292, 0.0133, 
            0.0104, 0.0116, 0.0332, 0.0296, 0.031, 
            0.00981, 0.0307, 0.072, 0.0149, 0.0105, 
            0.011, 0.0342, 0.0307, 0.0303, 0.00954, 
            0.0265, 0.0101),
        cuteseedopcor = cms.vdouble(0.784, 0.366, 0.57, 0.911, 0.298, 
            0.645, 0.51, 0.497, 0.932, 0.835, 
            0.968, 0.969, 0.923, 0.898, 0.98, 
            0.63, 0.971, 1.0, 0.515, 0.963, 
            0.986, 0.823, 0.879, 1.01, 0.931, 
            0.937, 1.05),
        cutdphiin = cms.vdouble(0.0404, 0.0499, 0.263, 0.042, 0.0484, 
            0.241, 0.242, 0.231, 0.286, 0.0552, 
            0.0338, 0.154, 0.0623, 0.0183, 0.0392, 
            0.0547, 0.0588, 0.00654, 0.042, 0.0217, 
            0.0885, 0.0445, 0.0141, 0.0234, 0.065, 
            0.0258, 0.0346),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 13.7, 13.2, 
            13.6, 14.2, 14.1, 13.9, 12.9, 
            14.9, 17.7)
    ),
    electronIDType = cms.string('classbased'),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    electronVersion = cms.string(''),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.015, 0.0092, 0.02, 0.0025, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.018, 0.025, 0.02, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.01, 0.0099, 0.025, 0.004, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.01, 0.028, 0.02, 0.0066, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS"),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.011, 0.09, 0.005, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.1, 0.0275, 0.09, 0.007, -1, 
            -1, 9999.0, 9999.0, 0, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.05, 0.025, 0.053, 0.09, 0.07, 
            0.03, 0.092, 0.092),
        hOverE = cms.vdouble(0.115, 0.1, 0.055, 0.0, 0.145, 
            0.12, 0.15, 0.0),
        sigmaEtaEta = cms.vdouble(0.014, 0.012, 0.0115, 0.0, 0.0275, 
            0.0265, 0.0265, 0.0),
        deltaEtaIn = cms.vdouble(0.009, 0.0045, 0.0085, 0.0, 0.0105, 
            0.0068, 0.01, 0.0),
        eSeedOverPin = cms.vdouble(0.11, 0.91, 0.11, 0.0, 0.0, 
            0.85, 0.0, 0.0)
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaPhiIn = cms.vdouble(0.053, 0.0189, 0.059, 0.099, 0.0278, 
            0.0157, 0.042, 0.08),
        hOverE = cms.vdouble(0.076, 0.033, 0.07, 0.0, 0.083, 
            0.0148, 0.033, 0.0),
        sigmaEtaEta = cms.vdouble(0.0101, 0.0095, 0.0097, 0.0, 0.0271, 
            0.0267, 0.0259, 0.0),
        deltaEtaIn = cms.vdouble(0.0078, 0.00259, 0.0062, 0.0, 0.0078, 
            0.0061, 0.0061, 0.0),
        eSeedOverPin = cms.vdouble(0.3, 0.92, 0.211, 0.0, 0.42, 
            0.88, 0.68, 0.0)
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutisohcal = cms.vdouble(13.5, 9.93, 7.56, 14.8, 8.1, 
            10.8, 42.7, 20.1, 9.11, 10.4, 
            6.89, 5.59, 8.53, 9.59, 24.2, 
            2.78, 8.67, 0.288),
        cutmishits = cms.vdouble(5.5, 1.5, 5.5, 2.5, 2.5, 
            2.5, 3.5, 5.5, 0.5, 1.5, 
            2.5, 0.5, 1.5, 1.5, 0.5, 
            0.5, 0.5, 0.5),
        cuthoe = cms.vdouble(0.0887, 0.0934, 0.0949, 0.0986, 0.0431, 
            0.0878, 0.097, 0.0509, 0.098, 0.0991, 
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966, 
            0.0758, 0.0149, 0.0131),
        cutdeta = cms.vdouble(0.00958, 0.00406, 0.0122, 0.0137, 0.00837, 
            0.0127, 0.011, 0.00336, 0.00977, 0.015, 
            0.00675, 0.0109, 0.014, 0.00508, 0.0109, 
            0.0146, 0.00506, 0.0127),
        cuteopin = cms.vdouble(0.878, 0.802, 0.814, 0.942, 0.735, 
            0.774, 0.829, 0.909, 0.829, 0.813, 
            0.86, 0.897, 0.817, 0.831, 0.818, 
            0.861, 0.787, 0.789),
        cutip = cms.vdouble(0.0246, 0.076, 0.0966, 0.0885, 0.441, 
            0.205, 0.0292, 0.0293, 0.0619, 0.0251, 
            0.159, 0.0815, 7.29, 0.0106, 5.76, 
            6.89, 1.27, 5.89),
        cutisotk = cms.vdouble(24.3, 8.45, 14.4, 27.8, 6.02, 
            10.5, 14.1, 10.2, 14.5, 19.1, 
            6.1, 14.1, 8.59, 8.33, 8.3, 
            8.93, 8.6, 16.0),
        cutsee = cms.vdouble(0.0172, 0.0115, 0.0143, 0.0344, 0.0295, 
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347, 
            0.0307, 0.0316, 0.018, 0.011, 0.0132, 
            0.0349, 0.031, 0.0327),
        cutdphi = cms.vdouble(0.0372, 0.114, 0.118, 0.0488, 0.117, 
            0.119, 0.0606, 0.0548, 0.117, 0.07, 
            0.0355, 0.117, 0.088, 0.045, 0.118, 
            0.0919, 0.0236, 0.0515),
        cutisoecal = cms.vdouble(33.4, 28.1, 7.32, 27.4, 7.33, 
            21.7, 93.8, 102.0, 12.1, 26.0, 
            8.91, 10.0, 16.1, 31.3, 16.9, 
            15.4, 13.3, 37.7)
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdetain = cms.vdouble(0.00989, 0.00484, 0.0146, 0.0146, 0.00902, 
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967, 
            0.00377, 0.00924, 0.013, 0.00666, 0.0123, 
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038, 
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122, 
            0.0193, 0.00239),
        cutiso_sum = cms.vdouble(31.5, 10.3, 8.8, 11.0, 6.13, 
            6.94, 7.52, 9.0, 3.5, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0, 
            100000.0, 100000.0),
        cutip_gsf = cms.vdouble(0.0431, 0.0767, 0.139, 0.101, 0.149, 
            0.154, 0.932, 0.15, 0.124, 0.0238, 
            0.0467, 0.0759, 0.0369, 0.147, 0.0986, 
            0.0626, 0.195, 0.116, 0.0122, 0.0125, 
            0.0693, 0.0162, 0.089, 0.0673, 0.0467, 
            0.0651, 0.0221),
        cuthoe = cms.vdouble(0.166, 0.0771, 0.144, 0.37, 0.0497, 
            0.139, 0.401, 2.68, 0.516, 0.234, 
            0.0556, 0.144, 0.368, 0.031, 0.12, 
            0.602, 2.01, 1.05, 0.104, 0.063, 
            0.0565, 0.38, 0.0192, 0.0294, 0.537, 
            4.65, 1.87),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 2.5, 2.5, 1.5, 2.5, 
            1.5, 1.5, 1.5, 1.5, 0.5, 
            2.5, 2.5, 0.5, 2.5, 1.5, 
            0.5, 1.5, 1.5, 0.5, 2.5, 
            0.5, 0.5),
        cutiso_sumoet = cms.vdouble(28.9, 15.3, 12.0, 18.3, 7.17, 
            9.42, 11.0, 9.81, 3.94, 22.7, 
            15.9, 12.3, 17.0, 7.58, 8.89, 
            15.2, 12.7, 6.17, 20.8, 21.2, 
            17.2, 15.5, 9.37, 10.6, 19.8, 
            22.1, 15.6),
        cutdcotdist = cms.vdouble(0.0393, 0.0392, 0.0397, 0.0394, 0.0393, 
            0.039, 0.0378, 0.0388, 0.0382, 0.0385, 
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388, 
            0.0227, 0.0258, 0.0127, 0.0298, 0.03, 
            0.00946, 0.039, 0.0231, 0.0278, 0.00162, 
            0.0367, 0.0199),
        cutsee = cms.vdouble(0.0175, 0.0127, 0.0177, 0.0373, 0.0314, 
            0.0329, 0.0157, 0.0409, 0.14, 0.0169, 
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354, 
            0.0117, 0.0372, 28.2, 0.0171, 0.0113, 
            0.014, 0.0403, 0.0323, 0.0411, 0.0104, 
            0.0436, 0.0114),
        cuteseedopcor = cms.vdouble(0.78, 0.302, 0.483, 0.904, 0.168, 
            0.645, 0.108, 0.284, 0.324, 0.591, 
            0.286, 0.488, 0.813, 0.791, 0.672, 
            0.398, 0.834, 0.878, 0.515, 0.937, 
            0.806, 0.816, 0.85, 0.507, 0.367, 
            0.83, 0.648),
        cutdphiin = cms.vdouble(0.041, 0.275, 0.365, 0.047, 0.273, 
            0.296, 0.329, 0.465, 0.627, 0.0581, 
            0.0954, 0.327, 0.0702, 0.0582, 0.279, 
            0.117, 0.318, 0.246, 0.0821, 0.052, 
            0.292, 0.116, 0.0435, 0.312, 0.118, 
            0.296, 0.0459),
        cutet = cms.vdouble(-100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0, 
            -100000.0, -100000.0, -100000.0, 12.0, 12.0, 
            12.0, 12.0, 12.0, 12.0, 12.0, 
            12.0, 12.5)
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdetain = cms.vdouble(0.0137, 0.00678, 0.0241, 0.0187, 0.0161, 
            0.0224, 0.0252, 0.0308, 0.0273),
        cutiso_sum = cms.vdouble(33.0, 17.0, 17.9, 18.8, 8.55, 
            12.5, 17.6, 18.5, 2.98),
        cutip_gsf = cms.vdouble(0.0551, 0.0765, 0.143, 0.0874, 0.594, 
            0.37, 0.0913, 1.15, 0.231),
        cutip_gsfl = cms.vdouble(0.0186, 0.0759, 0.138, 0.0473, 0.62, 
            0.304, 0.109, 0.775, 0.0479),
        cuthoe = cms.vdouble(0.247, 0.137, 0.147, 0.371, 0.0588, 
            0.147, 0.52, 0.452, 0.404),
        cutiso_sumoetl = cms.vdouble(11.3, 9.05, 9.07, 9.94, 5.25, 
            6.15, 10.7, 10.8, 4.4),
        cutfmishits = cms.vdouble(4.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 4.5, 3.5, 3.5),
        cuthoel = cms.vdouble(0.236, 0.126, 0.147, 0.375, 0.0392, 
            0.145, 0.365, 0.383, 0.384),
        cutdphiin = cms.vdouble(0.0897, 0.262, 0.353, 0.116, 0.357, 
            0.319, 0.342, 0.404, 0.336),
        cutseel = cms.vdouble(0.0164, 0.0118, 0.015, 0.0523, 0.0326, 
            0.0456, 0.0185, 0.0589, 0.0544),
        cutiso_sumoet = cms.vdouble(34.5, 12.7, 12.1, 19.9, 6.35, 
            8.85, 14.0, 10.5, 9.74),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0176, 0.0125, 0.0181, 0.0415, 0.0364, 
            0.0418, 0.0146, 0.0678, 0.133),
        cuteseedopcor = cms.vdouble(0.63, 0.82, 0.401, 0.718, 0.4, 
            0.458, 0.15, 0.664, 0.373),
        cutdphiinl = cms.vdouble(0.0747, 0.25, 0.356, 0.0956, 0.347, 
            0.326, 0.333, 0.647, 0.289),
        cutdetainl = cms.vdouble(0.0124, 0.00503, 0.0257, 0.0228, 0.0118, 
            0.0178, 0.0188, 0.14, 0.024)
    ),
    src = cms.InputTag("gsfElectrons"),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.0201, 0.0102, 0.0211, 0.00606, -1, 
            -1, 2.34, 3.24, 4.51, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.00253, 0.0291, 0.022, 0.0032, -1, 
            -1, 0.826, 2.7, 0.255, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdetain = cms.vdouble(0.0116, 0.00449, 0.00938, 0.0184, 0.00678, 
            0.0109, 0.0252, 0.0268, 0.0139),
        cutiso_sum = cms.vdouble(15.5, 12.2, 12.2, 11.7, 7.16, 
            9.71, 8.66, 11.9, 2.98),
        cutip_gsf = cms.vdouble(0.0131, 0.0586, 0.0839, 0.0366, 0.452, 
            0.204, 0.0913, 0.0802, 0.0731),
        cutip_gsfl = cms.vdouble(0.0119, 0.0527, 0.0471, 0.0212, 0.233, 
            0.267, 0.109, 0.122, 0.0479),
        cuthoe = cms.vdouble(0.215, 0.0608, 0.147, 0.369, 0.0349, 
            0.102, 0.52, 0.422, 0.404),
        cutiso_sumoetl = cms.vdouble(6.21, 6.81, 5.3, 5.39, 2.73, 
            4.73, 4.84, 3.46, 3.73),
        cutfmishits = cms.vdouble(1.5, 1.5, 1.5, 2.5, 2.5, 
            1.5, 1.5, 2.5, 0.5),
        cuthoel = cms.vdouble(0.228, 0.0836, 0.143, 0.37, 0.0392, 
            0.0979, 0.3, 0.381, 0.339),
        cutdphiin = cms.vdouble(0.0897, 0.0993, 0.295, 0.0979, 0.151, 
            0.252, 0.341, 0.308, 0.328),
        cutseel = cms.vdouble(0.0132, 0.0117, 0.0112, 0.0387, 0.0281, 
            0.0287, 0.00987, 0.0296, 0.0544),
        cutiso_sumoet = cms.vdouble(11.9, 7.81, 6.28, 8.92, 4.65, 
            5.49, 9.36, 8.84, 5.94),
        cutdcotdist = cms.vdouble(9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0),
        cutsee = cms.vdouble(0.0145, 0.0116, 0.012, 0.039, 0.0297, 
            0.0311, 0.00987, 0.0347, 0.0917),
        cuteseedopcor = cms.vdouble(0.637, 0.943, 0.742, 0.748, 0.763, 
            0.631, 0.214, 0.873, 0.473),
        cutdphiinl = cms.vdouble(0.061, 0.14, 0.286, 0.0921, 0.197, 
            0.24, 0.333, 0.303, 0.258),
        cutdetainl = cms.vdouble(0.00816, 0.00401, 0.0081, 0.019, 0.00588, 
            0.00893, 0.0171, 0.0434, 0.0143)
    ),
    algorithm = cms.string('eIDCB'),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 9999, 0.09, 0.005, 0.94, 
            0.83, 7.5, 2, 0.03, 9999.0, 
            0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.05, 0.03, 0.09, 0.007, -1, 
            -1, 15, 2.5, 0.03, 2.5, 
            0, 0.5, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(0.115, 0.014, 0.09, 0.009, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.15, 0.0275, 0.092, 0.0105, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(0.075, 0.0132, 0.058, 0.0077, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.083, 0.027, 0.042, 0.01, -1, 
            -1, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(0.05, 0.0103, 0.8, 0.00688, -1, 
            -1, 7.33, 4.68, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0),
        endcap = cms.vdouble(0.0389, 0.0307, 0.7, 0.00944, -1, 
            -1, 7.76, 3.09, 2.23, 9999.0, 
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 
            9999.0, 9999.0, 9999.0, 0.0, -9999.0, 
            9999.0, 9999.0, 9999, -1, 0, 
            0)
    ),
    additionalCategories = cms.bool(True),
    etBinning = cms.bool(True)
)


process.electronCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("electronMergedSeeds"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('TrajectoryBuilderForElectrons'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.electronEcalRecHitIsolationLcone = cms.EDProducer("EgammaEcalRecHitIsolationProducer",
    useNumCrystals = cms.bool(True),
    etMinBarrel = cms.double(0.0),
    intRadiusEndcap = cms.double(3.0),
    tryBoth = cms.bool(True),
    ecalBarrelRecHitCollection = cms.InputTag("EcalRecHitsEB"),
    eMinEndcap = cms.double(0.0),
    ecalEndcapRecHitCollection = cms.InputTag("EcalRecHitsEE"),
    etMinEndcap = cms.double(0.1),
    eMinBarrel = cms.double(0.08),
    ecalEndcapRecHitProducer = cms.InputTag("ecalRecHit"),
    jurassicWidth = cms.double(1.5),
    ecalBarrelRecHitProducer = cms.InputTag("ecalRecHit"),
    extRadius = cms.double(0.4),
    useIsolEt = cms.bool(True),
    vetoClustered = cms.bool(False),
    intRadiusBarrel = cms.double(3.0),
    subtract = cms.bool(False),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronEcalRecHitIsolationScone = cms.EDProducer("EgammaEcalRecHitIsolationProducer",
    useNumCrystals = cms.bool(True),
    etMinBarrel = cms.double(0.0),
    intRadiusEndcap = cms.double(3.0),
    tryBoth = cms.bool(True),
    ecalBarrelRecHitCollection = cms.InputTag("EcalRecHitsEB"),
    eMinEndcap = cms.double(0.0),
    ecalEndcapRecHitCollection = cms.InputTag("EcalRecHitsEE"),
    etMinEndcap = cms.double(0.1),
    eMinBarrel = cms.double(0.08),
    ecalEndcapRecHitProducer = cms.InputTag("ecalRecHit"),
    jurassicWidth = cms.double(1.5),
    ecalBarrelRecHitProducer = cms.InputTag("ecalRecHit"),
    extRadius = cms.double(0.3),
    useIsolEt = cms.bool(True),
    vetoClustered = cms.bool(False),
    intRadiusBarrel = cms.double(3.0),
    subtract = cms.bool(False),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronGsfTracks = cms.EDProducer("GsfTrackProducer",
    src = cms.InputTag("electronCkfTrackCandidates"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string(''),
    Fitter = cms.string('GsfElectronFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    AlgorithmName = cms.string('gsf'),
    Propagator = cms.string('fwdGsfElectronPropagator')
)


process.electronHcalDepth1TowerIsolationLcone = cms.EDProducer("EgammaTowerIsolationProducer",
    absolut = cms.bool(True),
    intRadius = cms.double(0.15),
    extRadius = cms.double(0.4),
    Depth = cms.int32(1),
    towerProducer = cms.InputTag("towerMaker"),
    etMin = cms.double(0.0),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronHcalDepth1TowerIsolationScone = cms.EDProducer("EgammaTowerIsolationProducer",
    absolut = cms.bool(True),
    intRadius = cms.double(0.15),
    extRadius = cms.double(0.3),
    Depth = cms.int32(1),
    towerProducer = cms.InputTag("towerMaker"),
    etMin = cms.double(0.0),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronHcalDepth2TowerIsolationLcone = cms.EDProducer("EgammaTowerIsolationProducer",
    absolut = cms.bool(True),
    intRadius = cms.double(0.15),
    extRadius = cms.double(0.4),
    Depth = cms.int32(2),
    towerProducer = cms.InputTag("towerMaker"),
    etMin = cms.double(0.0),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronHcalDepth2TowerIsolationScone = cms.EDProducer("EgammaTowerIsolationProducer",
    absolut = cms.bool(True),
    intRadius = cms.double(0.15),
    extRadius = cms.double(0.3),
    Depth = cms.int32(2),
    towerProducer = cms.InputTag("towerMaker"),
    etMin = cms.double(0.0),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronHcalTowerIsolationLcone = cms.EDProducer("EgammaTowerIsolationProducer",
    absolut = cms.bool(True),
    intRadius = cms.double(0.15),
    extRadius = cms.double(0.4),
    Depth = cms.int32(-1),
    towerProducer = cms.InputTag("towerMaker"),
    etMin = cms.double(0.0),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronHcalTowerIsolationScone = cms.EDProducer("EgammaTowerIsolationProducer",
    absolut = cms.bool(True),
    intRadius = cms.double(0.15),
    extRadius = cms.double(0.3),
    Depth = cms.int32(-1),
    towerProducer = cms.InputTag("towerMaker"),
    etMin = cms.double(0.0),
    emObjectProducer = cms.InputTag("gsfElectrons")
)


process.electronMergedSeeds = cms.EDProducer("ElectronSeedMerger",
    EcalBasedSeeds = cms.InputTag("ecalDrivenElectronSeeds"),
    TkBasedSeeds = cms.InputTag("trackerDrivenElectronSeeds","SeedsForGsf")
)


process.electronTrackIsolationLcone = cms.EDProducer("EgammaElectronTkIsolationProducer",
    absolut = cms.bool(True),
    trackProducer = cms.InputTag("generalTracks"),
    stripBarrel = cms.double(0.015),
    intRadiusEndcap = cms.double(0.015),
    electronProducer = cms.InputTag("gsfElectrons"),
    maxVtxDistXY = cms.double(9999.0),
    extRadius = cms.double(0.4),
    ptMin = cms.double(0.7),
    maxVtxDist = cms.double(0.2),
    stripEndcap = cms.double(0.015),
    intRadiusBarrel = cms.double(0.015),
    BeamspotProducer = cms.InputTag("offlineBeamSpot")
)


process.electronTrackIsolationScone = cms.EDProducer("EgammaElectronTkIsolationProducer",
    absolut = cms.bool(True),
    trackProducer = cms.InputTag("generalTracks"),
    stripBarrel = cms.double(0.015),
    intRadiusEndcap = cms.double(0.015),
    electronProducer = cms.InputTag("gsfElectrons"),
    maxVtxDistXY = cms.double(9999.0),
    extRadius = cms.double(0.3),
    ptMin = cms.double(0.7),
    maxVtxDist = cms.double(0.2),
    stripEndcap = cms.double(0.015),
    intRadiusBarrel = cms.double(0.015),
    BeamspotProducer = cms.InputTag("offlineBeamSpot")
)


process.extractedGlobalMuons = cms.EDProducer("MuonTrackProducer",
    selectionTags = cms.vstring('AllGlobalMuons'),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    trackType = cms.string('globalTrack'),
    muonsTag = cms.InputTag("muons"),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments")
)


process.fifthClusters = cms.EDProducer("TrackClusterRemover",
    oldClusterRemovalInfo = cms.InputTag("fourthClusters"),
    trajectories = cms.InputTag("fourthfilter"),
    pixelClusters = cms.InputTag("fourthClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(30.0)
    ),
    stripClusters = cms.InputTag("fourthClusters")
)


process.fifthPixelRecHits = cms.EDProducer("SiPixelRecHitConverter",
    VerboseLevel = cms.untracked.int32(0),
    src = cms.InputTag("fifthClusters"),
    CPE = cms.string('PixelCPEGeneric')
)


process.fifthSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('fifthlayerPairs')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("fifthClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(50000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("fifthClusters"),
        MaxNumberOfPixelClusters = cms.uint32(10000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(6.0),
            ptMin = cms.double(0.6),
            originHalfLength = cms.double(30.0)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.fifthStripRecHits = cms.EDProducer("SiStripRecHitConverter",
    StripCPE = cms.ESInputTag("StripCPEfromTrackAngleESProducer","StripCPEfromTrackAngle"),
    LazyGetterProducer = cms.InputTag("SiStripRawToClustersFacility"),
    stereoRecHits = cms.string('stereoRecHit'),
    useSiStripQuality = cms.bool(False),
    matchedRecHits = cms.string('matchedRecHit'),
    Regional = cms.bool(False),
    ClusterProducer = cms.InputTag("fifthClusters"),
    VerbosityLevel = cms.untracked.int32(1),
    rphiRecHits = cms.string('rphiRecHit'),
    Matcher = cms.ESInputTag("SiStripRecHitMatcherESProducer","StandardMatcher"),
    siStripQualityLabel = cms.ESInputTag(""),
    MaskBadAPVFibers = cms.bool(False)
)


process.fifthTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("fifthSeeds"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('fifthCkfTrajectoryBuilder'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.fifthWithMaterialTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("fifthTrackCandidates"),
    clusterRemovalInfo = cms.InputTag("fifthClusters"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('fifthFittingSmootherWithOutlierRejection'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter5'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.firstStepTracksWithQuality = cms.EDProducer("SimpleTrackListMerger",
    ShareFrac = cms.double(0.19),
    promoteTrackQuality = cms.bool(False),
    MinPT = cms.double(0.05),
    copyExtras = cms.untracked.bool(False),
    Epsilon = cms.double(-0.001),
    allowFirstHitShare = cms.bool(True),
    newQuality = cms.string('confirmed'),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    TrackProducer2 = cms.string('preMergingFirstStepTracksWithQuality'),
    TrackProducer1 = cms.string('zeroStepTracksWithQuality')
)


process.firstStepWithLooseQuality = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(0),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('loose'),
    minNumberLayers = cms.uint32(0),
    chi2n_par = cms.double(1.6),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(0.45, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(0.65, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("preFilterStepOneTracks"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(0.55, 4.0),
    d0_par1 = cms.vdouble(0.55, 4.0),
    res_par = cms.vdouble(0.003, 0.01)
)


process.firstStepWithTightQuality = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('tight'),
    minNumberLayers = cms.uint32(3),
    chi2n_par = cms.double(0.7),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(0.4, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(0.35, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(2),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("firstStepWithLooseQuality"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(0.4, 4.0),
    d0_par1 = cms.vdouble(0.3, 4.0),
    res_par = cms.vdouble(0.003, 0.01)
)


process.firstfilter = cms.EDProducer("QualityFilter",
    TrackQuality = cms.string('highPurity'),
    recTracks = cms.InputTag("preMergingFirstStepTracksWithQuality")
)


process.fixedConePFTauDecayModeIndexProducer = cms.EDProducer("PFRecoTauDecayModeIndexProducer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    PFTauDecayModeProducer = cms.InputTag("fixedConePFTauDecayModeProducer")
)


process.fixedConePFTauDecayModeProducer = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer")
)


process.fixedConePFTauDiscriminationAgainstElectron = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.fixedConePFTauDiscriminationAgainstMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    discriminatorOption = cms.string('noSegMatch')
)


process.fixedConePFTauDiscriminationByECALIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauDiscriminationByECALIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauDiscriminationByIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauDiscriminationByIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.fixedConePFTauDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.fixedConePFTauDiscriminationByLeadingTrackPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.fixedConePFTauDiscriminationByTrackIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauDiscriminationByTrackIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("fixedConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("fixedConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.fixedConePFTauProducer = cms.EDProducer("RecoTauProducer",
    piZeroSrc = cms.InputTag("ak5PFJetsRecoTauPiZeros"),
    modifiers = cms.VPSet(cms.PSet(
        ElectronPreIDProducer = cms.InputTag("elecpreid"),
        name = cms.string('shrinkingConeElectronRej'),
        plugin = cms.string('RecoTauElectronRejectionPlugin'),
        DataType = cms.string('AOD'),
        maximumForElectrionPreIDOutput = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
        EcalStripSumE_minClusEnergy = cms.double(0.1),
        ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
        EcalStripSumE_deltaEta = cms.double(0.03)
    )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        signalConeNeutralHadrons = cms.string('0.10'),
        name = cms.string('fixedCone'),
        plugin = cms.string('RecoTauBuilderConePlugin'),
        isoConeChargedHadrons = cms.string('0.5'),
        isoConePiZeros = cms.string('0.5'),
        isoConeNeutralHadrons = cms.string('0.5'),
        matchingCone = cms.string('0.1'),
        signalConeChargedHadrons = cms.string('0.07'),
        leadObjectPt = cms.double(5.0),
        qualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalConePiZeros = cms.string('0.15'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    buildNullTaus = cms.bool(True)
)


process.fixedConeRecoTaus = cms.EDProducer("RecoTauProducer",
    piZeroSrc = cms.InputTag("ak5PFJetsRecoTauPiZeros"),
    modifiers = cms.VPSet(cms.PSet(
        ElectronPreIDProducer = cms.InputTag("elecpreid"),
        name = cms.string('shrinkingConeElectronRej'),
        plugin = cms.string('RecoTauElectronRejectionPlugin'),
        DataType = cms.string('AOD'),
        maximumForElectrionPreIDOutput = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
        EcalStripSumE_minClusEnergy = cms.double(0.1),
        ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
        EcalStripSumE_deltaEta = cms.double(0.03)
    )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        signalConeNeutralHadrons = cms.string('0.10'),
        name = cms.string('fixedCone'),
        plugin = cms.string('RecoTauBuilderConePlugin'),
        isoConeChargedHadrons = cms.string('0.5'),
        isoConePiZeros = cms.string('0.5'),
        isoConeNeutralHadrons = cms.string('0.5'),
        matchingCone = cms.string('0.1'),
        signalConeChargedHadrons = cms.string('0.07'),
        leadObjectPt = cms.double(5.0),
        qualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalConePiZeros = cms.string('0.15'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    buildNullTaus = cms.bool(True)
)


process.fourthClusters = cms.EDProducer("TrackClusterRemover",
    oldClusterRemovalInfo = cms.InputTag("thClusters"),
    trajectories = cms.InputTag("thfilter"),
    pixelClusters = cms.InputTag("thClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(30.0)
    ),
    stripClusters = cms.InputTag("thClusters")
)


process.fourthPLSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('FourthLayerPairs')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("fourthClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(50000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("fourthClusters"),
        MaxNumberOfPixelClusters = cms.uint32(10000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(2.0),
            ptMin = cms.double(0.5),
            originHalfLength = cms.double(12.0)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.fourthPixelRecHits = cms.EDProducer("SiPixelRecHitConverter",
    VerboseLevel = cms.untracked.int32(0),
    src = cms.InputTag("fourthClusters"),
    CPE = cms.string('PixelCPEGeneric')
)


process.fourthStripRecHits = cms.EDProducer("SiStripRecHitConverter",
    StripCPE = cms.ESInputTag("StripCPEfromTrackAngleESProducer","StripCPEfromTrackAngle"),
    LazyGetterProducer = cms.InputTag("SiStripRawToClustersFacility"),
    stereoRecHits = cms.string('stereoRecHit'),
    useSiStripQuality = cms.bool(False),
    matchedRecHits = cms.string('matchedRecHit'),
    Regional = cms.bool(False),
    ClusterProducer = cms.InputTag("fourthClusters"),
    VerbosityLevel = cms.untracked.int32(1),
    rphiRecHits = cms.string('rphiRecHit'),
    Matcher = cms.ESInputTag("SiStripRecHitMatcherESProducer","StandardMatcher"),
    siStripQualityLabel = cms.ESInputTag(""),
    MaskBadAPVFibers = cms.bool(False)
)


process.fourthTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("fourthPLSeeds"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('fourthCkfTrajectoryBuilder'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.fourthWithMaterialTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("fourthTrackCandidates"),
    clusterRemovalInfo = cms.InputTag("fourthClusters"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter4'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.fourthfilter = cms.EDProducer("QualityFilter",
    TrackQuality = cms.string('highPurity'),
    recTracks = cms.InputTag("pixellessStep")
)


process.gctDigis = cms.EDProducer("GctRawToDigi",
    unpackSharedRegions = cms.bool(False),
    numberOfGctSamplesToUnpack = cms.uint32(1),
    verbose = cms.untracked.bool(False),
    numberOfRctSamplesToUnpack = cms.uint32(1),
    inputLabel = cms.InputTag("rawDataCollector"),
    unpackerVersion = cms.uint32(0),
    gctFedId = cms.untracked.int32(745),
    hltMode = cms.bool(False)
)


process.genParticlesForJets = cms.EDProducer("InputGenJetsParticleSelector",
    src = cms.InputTag("genParticles"),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39),
    partonicFinalState = cms.bool(False),
    excludeResonances = cms.bool(True),
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    tausAsJets = cms.bool(False)
)


process.genParticlesForJetsNoMuNoNu = cms.EDProducer("InputGenJetsParticleSelector",
    src = cms.InputTag("genParticles"),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39, 12, 13, 14, 16),
    partonicFinalState = cms.bool(False),
    excludeResonances = cms.bool(True),
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    tausAsJets = cms.bool(False)
)


process.genParticlesForJetsNoNu = cms.EDProducer("InputGenJetsParticleSelector",
    src = cms.InputTag("genParticles"),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39, 12, 14, 16),
    partonicFinalState = cms.bool(False),
    excludeResonances = cms.bool(True),
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    tausAsJets = cms.bool(False)
)


process.generalConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    setArbitratedMerged = cms.bool(True),
    TrackProducer = cms.string('generalTracks'),
    setArbitratedMergedEcalGeneral = cms.bool(True),
    setTrackerOnly = cms.bool(True),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(False)
)


process.generalInOutOutInConversionTrackMerger = cms.EDProducer("ConversionTrackMerger",
    ShareFrac = cms.double(0.19),
    outputPreferCollection = cms.int32(-1),
    trackerOnlyPreferCollection = cms.int32(-1),
    arbitratedMergedPreferCollection = cms.int32(3),
    allowFirstHitShare = cms.bool(True),
    minProb = cms.double(1e-06),
    arbitratedEcalSeededPreferCollection = cms.int32(-1),
    checkCharge = cms.bool(True),
    arbitratedMergedEcalGeneralPreferCollection = cms.int32(2),
    TrackProducer2 = cms.string('generalConversionTrackProducer'),
    TrackProducer1 = cms.string('inOutOutInConversionTrackMerger')
)


process.generalTracks = cms.EDProducer("SimpleTrackListMerger",
    ShareFrac = cms.double(0.19),
    promoteTrackQuality = cms.bool(True),
    MinPT = cms.double(0.05),
    makeReKeyedSeeds = cms.untracked.bool(True),
    copyExtras = cms.untracked.bool(True),
    Epsilon = cms.double(-0.001),
    allowFirstHitShare = cms.bool(True),
    newQuality = cms.string('confirmed'),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    TrackProducer2 = cms.string('iterTracks'),
    TrackProducer1 = cms.string('firstStepTracksWithQuality')
)


process.generalV0Candidates = cms.EDProducer("V0Producer",
    kShortNormalizedMassCut = cms.double(0.0),
    vtxChi2Cut = cms.double(7.0),
    lambdaNormalizedMassCut = cms.double(0.0),
    selectKshorts = cms.bool(True),
    tkDCACut = cms.double(1.0),
    tkChi2Cut = cms.double(5.0),
    tkNhitsCut = cms.int32(6),
    trackRecoAlgorithm = cms.InputTag("generalTracks"),
    vtxSignificance2DCut = cms.double(15.0),
    selectLambdas = cms.bool(True),
    trackQualities = cms.vstring('loose'),
    vtxSignificance3DCut = cms.double(0.0),
    lambdaMassCut = cms.double(0.05),
    rVtxCut = cms.double(0.0),
    vertexFitter = cms.InputTag("KalmanVertexFitter"),
    impactParameterSigCut = cms.double(2.0),
    collinearityCut = cms.double(0.02),
    lVtxCut = cms.double(0.0),
    kShortMassCut = cms.double(0.07),
    useSmoothing = cms.bool(True),
    innerHitPosCut = cms.double(4.0),
    mPiPiCut = cms.double(0.6)
)


process.ghostTrackBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('ghostTrack'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"), cms.InputTag("ghostTrackVertexTagInfos"))
)


process.ghostTrackVertexTagInfos = cms.EDProducer("SecondaryVertexProducer",
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    vertexReco = cms.PSet(
        primcut = cms.double(2.0),
        seccut = cms.double(4.0),
        maxFitChi2 = cms.double(10.0),
        fitType = cms.string('RefitGhostTrackWithVertices'),
        mergeThreshold = cms.double(3.0),
        finder = cms.string('gtvr')
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    constraint = cms.string('BeamSpot'),
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(2.5),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(3.0),
        multiplicityMin = cms.uint32(1),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(99999.9),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(0.01),
        distSig3dMin = cms.double(-99999.9)
    ),
    trackIPTagInfos = cms.InputTag("impactParameterTagInfos"),
    minimumTrackWeight = cms.double(0.5),
    usePVError = cms.bool(True),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSort = cms.string('sip3dSig')
)


process.gk5CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("towerMaker"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(True),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.3),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.4),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('CaloJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('GeneralizedKt'),
    rParam = cms.double(0.5)
)


process.gk5CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.gk5GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('GeneralizedKt'),
    rParam = cms.double(0.5)
)


process.gk5GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk5GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk5JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("gk5CaloJets")
)


process.gk5PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("particleFlow"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.4),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('GeneralizedKt'),
    rParam = cms.double(0.5)
)


process.gk5TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    MinVtxNdof = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    UseOnlyVertexTracks = cms.bool(False),
    radiusPU = cms.double(0.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    DxyTrVtxMax = cms.double(0.2),
    nSigmaPU = cms.double(1.0),
    MaxVtxZ = cms.double(15.0),
    DzTrVtxMax = cms.double(1),
    doPUOffsetCorr = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    jetType = cms.string('TrackJet'),
    inputEMin = cms.double(0.0),
    src = cms.InputTag("trackRefsForJets"),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('GeneralizedKt'),
    rParam = cms.double(0.5)
)


process.gk7CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk7CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.gk7GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk7GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk7GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk7JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("gk7CaloJets")
)


process.gk7PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.gk7TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('GeneralizedKt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    rParam = cms.double(0.7),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("trackRefsForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.glbTrackQual = cms.EDProducer("GlobalTrackQualityProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    GlobalMuonTrackMatcher = cms.PSet(
        Pt_threshold1 = cms.double(0.0),
        DeltaDCut_3 = cms.double(15.0),
        MinP = cms.double(2.5),
        MinPt = cms.double(1.0),
        Chi2Cut_1 = cms.double(50.0),
        Pt_threshold2 = cms.double(999999999.0),
        LocChi2Cut = cms.double(20.0),
        Eta_threshold = cms.double(1.2),
        Quality_3 = cms.double(7.0),
        Quality_2 = cms.double(15.0),
        Chi2Cut_2 = cms.double(50.0),
        Chi2Cut_3 = cms.double(200.0),
        DeltaDCut_1 = cms.double(2.5),
        DeltaRCut_2 = cms.double(0.2),
        DeltaRCut_3 = cms.double(1.0),
        DeltaDCut_2 = cms.double(10.0),
        DeltaRCut_1 = cms.double(0.1),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        Quality_1 = cms.double(20.0)
    ),
    BaseLabel = cms.string('GLB'),
    MaxChi2 = cms.double(100000.0),
    nSigma = cms.double(3.0),
    InputCollection = cms.InputTag("globalMuons"),
    RefitterParameters = cms.PSet(
        TrackerSkipSection = cms.int32(-1),
        MuonHitsOption = cms.int32(1),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        RefitDirection = cms.string('insideOut'),
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        Propagator = cms.string('SmartPropagatorAnyRK'),
        TrackerSkipSystem = cms.int32(-1),
        DoPredictionsOnly = cms.bool(False),
        Chi2ProbabilityCut = cms.double(30.0),
        PropDirForCosmics = cms.bool(False),
        HitThreshold = cms.int32(1),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        Chi2CutCSC = cms.double(9.0),
        Chi2CutRPC = cms.double(1.0),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitRPCHits = cms.bool(True),
        Chi2CutDT = cms.double(6.0),
        PtCut = cms.double(1.0),
        SkipStation = cms.int32(-1)
    ),
    InputLinksCollection = cms.InputTag("globalMuons")
)


process.globalCombinedSeeds = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag(cms.InputTag("globalSeedsFromTripletsWithVertices"), cms.InputTag("globalSeedsFromPairsWithVertices"))
)


process.globalCosmicMuons = cms.EDProducer("GlobalCosmicMuonProducer",
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        PutTrajectoryIntoEvent = cms.untracked.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False),
        AllowNoVertex = cms.untracked.bool(True),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False)
    ),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrajectoryBuilderParameters = cms.PSet(
        GlobalMuonTrackMatcher = cms.PSet(
            Pt_threshold1 = cms.double(0.0),
            DeltaDCut_3 = cms.double(15.0),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Chi2Cut_1 = cms.double(50.0),
            Pt_threshold2 = cms.double(999999999.0),
            LocChi2Cut = cms.double(20.0),
            Eta_threshold = cms.double(1.2),
            Quality_3 = cms.double(7.0),
            Quality_2 = cms.double(15.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(2.5),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            DeltaDCut_2 = cms.double(10.0),
            DeltaRCut_1 = cms.double(0.1),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            Quality_1 = cms.double(20.0)
        ),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        TkTrackCollectionLabel = cms.InputTag("regionalCosmicTracks"),
        SmootherParameters = cms.PSet(
            PropagatorAlong = cms.string('SteppingHelixPropagatorAny'),
            PropagatorOpposite = cms.string('SteppingHelixPropagatorAny'),
            RescalingFactor = cms.double(5.0)
        ),
        Propagator = cms.string('SteppingHelixPropagatorAny')
    ),
    MuonCollectionLabel = cms.InputTag("cosmicMuons")
)


process.globalCosmicMuons1Leg = cms.EDProducer("GlobalCosmicMuonProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrajectoryBuilderParameters = cms.PSet(
        GlobalMuonTrackMatcher = cms.PSet(
            Pt_threshold1 = cms.double(0.0),
            DeltaDCut_3 = cms.double(15.0),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Chi2Cut_1 = cms.double(50.0),
            Pt_threshold2 = cms.double(999999999.0),
            LocChi2Cut = cms.double(20.0),
            Eta_threshold = cms.double(1.2),
            Quality_3 = cms.double(7.0),
            Quality_2 = cms.double(15.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(2.5),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            DeltaDCut_2 = cms.double(10.0),
            DeltaRCut_1 = cms.double(0.1),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            Quality_1 = cms.double(20.0)
        ),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        TkTrackCollectionLabel = cms.InputTag("regionalCosmicTracks"),
        SmootherParameters = cms.PSet(
            PropagatorAlong = cms.string('SteppingHelixPropagatorAny'),
            PropagatorOpposite = cms.string('SteppingHelixPropagatorAny'),
            RescalingFactor = cms.double(5.0)
        ),
        Propagator = cms.string('SteppingHelixPropagatorAny')
    ),
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        PutTrajectoryIntoEvent = cms.untracked.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False),
        AllowNoVertex = cms.untracked.bool(True),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False)
    ),
    MuonCollectionLabel = cms.InputTag("cosmicMuons1Leg")
)


process.globalMixedSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(0.2),
            ptMin = cms.double(0.9),
            originHalfLength = cms.double(15.9)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(50000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(10000)
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('MixedLayerPairs')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.globalMuons = cms.EDProducer("GlobalMuonProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False)
    ),
    GLBTrajBuilderParameters = cms.PSet(
        ScaleTECyFactor = cms.double(-1.0),
        GlbRefitterParameters = cms.PSet(
            TrackerSkipSection = cms.int32(-1),
            DoPredictionsOnly = cms.bool(False),
            PropDirForCosmics = cms.bool(False),
            HitThreshold = cms.int32(1),
            MuonHitsOption = cms.int32(1),
            Chi2CutRPC = cms.double(1.0),
            Fitter = cms.string('GlbMuKFFitter'),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            TrackerRecHitBuilder = cms.string('WithTrackAngle'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            RefitDirection = cms.string('insideOut'),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            Chi2CutCSC = cms.double(150.0),
            Chi2CutDT = cms.double(10.0),
            RefitRPCHits = cms.bool(True),
            PtCut = cms.double(1.0),
            Chi2ProbabilityCut = cms.double(30.0),
            SkipStation = cms.int32(-1),
            Propagator = cms.string('SmartPropagatorAnyRK'),
            TrackerSkipSystem = cms.int32(-1)
        ),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        ScaleTECxFactor = cms.double(-1.0),
        MuonTrackingRegionBuilder = cms.PSet(
            EtaR_UpperLimit_Par1 = cms.double(0.25),
            EtaR_UpperLimit_Par2 = cms.double(0.15),
            OnDemand = cms.double(-1.0),
            Rescale_Dz = cms.double(3.0),
            Eta_min = cms.double(0.1),
            Rescale_phi = cms.double(3.0),
            Eta_fixed = cms.double(0.2),
            DeltaZ_Region = cms.double(15.9),
            MeasurementTrackerName = cms.string(''),
            PhiR_UpperLimit_Par2 = cms.double(0.2),
            vertexCollection = cms.InputTag("pixelVertices"),
            Phi_fixed = cms.double(0.2),
            DeltaR = cms.double(0.2),
            EscapePt = cms.double(1.5),
            UseFixedRegion = cms.bool(False),
            PhiR_UpperLimit_Par1 = cms.double(0.6),
            Rescale_eta = cms.double(3.0),
            Phi_min = cms.double(0.1),
            UseVertex = cms.bool(False),
            beamSpot = cms.InputTag("offlineBeamSpot")
        ),
        RefitRPCHits = cms.bool(True),
        PCut = cms.double(2.5),
        TrackTransformer = cms.PSet(
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('KFFitterForRefitInsideOut'),
            TrackerRecHitBuilder = cms.string('WithTrackAngle'),
            Smoother = cms.string('KFSmootherForRefitInsideOut'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            RefitDirection = cms.string('alongMomentum'),
            RefitRPCHits = cms.bool(True),
            Propagator = cms.string('SmartPropagatorAnyRK')
        ),
        GlobalMuonTrackMatcher = cms.PSet(
            Pt_threshold1 = cms.double(0.0),
            DeltaDCut_3 = cms.double(15.0),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Chi2Cut_1 = cms.double(50.0),
            Pt_threshold2 = cms.double(999999999.0),
            LocChi2Cut = cms.double(20.0),
            Eta_threshold = cms.double(1.2),
            Quality_3 = cms.double(7.0),
            Quality_2 = cms.double(15.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(2.5),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            DeltaDCut_2 = cms.double(10.0),
            DeltaRCut_1 = cms.double(0.1),
            Propagator = cms.string('SmartPropagatorRK'),
            Quality_1 = cms.double(20.0)
        ),
        PtCut = cms.double(1.0),
        TrackerPropagator = cms.string('SteppingHelixPropagatorAny')
    ),
    TrackerCollectionLabel = cms.InputTag("generalTracks"),
    MuonCollectionLabel = cms.InputTag("standAloneMuons","UpdatedAtVtx")
)


process.globalPixelLessSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(0.2),
            ptMin = cms.double(0.9),
            originHalfLength = cms.double(40)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(5000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(10000)
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('pixelLessLayerPairs4PixelLessTracking')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.globalPixelSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(0.2),
            ptMin = cms.double(0.9),
            originHalfLength = cms.double(15.9)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(50000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(10000)
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('PixelLayerPairs')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.globalSETMuons = cms.EDProducer("GlobalMuonProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    GLBTrajBuilderParameters = cms.PSet(
        ScaleTECyFactor = cms.double(-1.0),
        GlbRefitterParameters = cms.PSet(
            TrackerSkipSection = cms.int32(-1),
            DoPredictionsOnly = cms.bool(False),
            PropDirForCosmics = cms.bool(False),
            HitThreshold = cms.int32(1),
            MuonHitsOption = cms.int32(1),
            Chi2CutRPC = cms.double(1.0),
            Fitter = cms.string('GlbMuKFFitter'),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            TrackerRecHitBuilder = cms.string('WithTrackAngle'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            RefitDirection = cms.string('insideOut'),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            Chi2CutCSC = cms.double(150.0),
            Chi2CutDT = cms.double(10.0),
            RefitRPCHits = cms.bool(True),
            PtCut = cms.double(1.0),
            Chi2ProbabilityCut = cms.double(30.0),
            SkipStation = cms.int32(-1),
            Propagator = cms.string('SmartPropagatorAnyRK'),
            TrackerSkipSystem = cms.int32(-1)
        ),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        ScaleTECxFactor = cms.double(-1.0),
        MuonTrackingRegionBuilder = cms.PSet(
            EtaR_UpperLimit_Par1 = cms.double(0.25),
            EtaR_UpperLimit_Par2 = cms.double(0.15),
            OnDemand = cms.double(-1.0),
            Rescale_Dz = cms.double(3.0),
            Eta_min = cms.double(0.1),
            Rescale_phi = cms.double(3.0),
            Eta_fixed = cms.double(0.2),
            DeltaZ_Region = cms.double(15.9),
            MeasurementTrackerName = cms.string(''),
            PhiR_UpperLimit_Par2 = cms.double(0.2),
            vertexCollection = cms.InputTag("pixelVertices"),
            Phi_fixed = cms.double(0.2),
            DeltaR = cms.double(0.2),
            EscapePt = cms.double(1.5),
            UseFixedRegion = cms.bool(False),
            PhiR_UpperLimit_Par1 = cms.double(0.6),
            Rescale_eta = cms.double(3.0),
            Phi_min = cms.double(0.1),
            UseVertex = cms.bool(False),
            beamSpot = cms.InputTag("offlineBeamSpot")
        ),
        RefitRPCHits = cms.bool(True),
        PCut = cms.double(2.5),
        TrackTransformer = cms.PSet(
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('KFFitterForRefitInsideOut'),
            TrackerRecHitBuilder = cms.string('WithTrackAngle'),
            Smoother = cms.string('KFSmootherForRefitInsideOut'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            RefitDirection = cms.string('alongMomentum'),
            RefitRPCHits = cms.bool(True),
            Propagator = cms.string('SmartPropagatorAnyRK')
        ),
        GlobalMuonTrackMatcher = cms.PSet(
            Pt_threshold1 = cms.double(0.0),
            DeltaDCut_3 = cms.double(15.0),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Chi2Cut_1 = cms.double(50.0),
            Pt_threshold2 = cms.double(999999999.0),
            LocChi2Cut = cms.double(20.0),
            Eta_threshold = cms.double(1.2),
            Quality_3 = cms.double(7.0),
            Quality_2 = cms.double(15.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(2.5),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            DeltaDCut_2 = cms.double(10.0),
            DeltaRCut_1 = cms.double(0.1),
            Propagator = cms.string('SmartPropagatorRK'),
            Quality_1 = cms.double(20.0)
        ),
        PtCut = cms.double(1.0),
        TrackerPropagator = cms.string('SteppingHelixPropagatorAny')
    ),
    TrackerCollectionLabel = cms.InputTag("generalTracks"),
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False)
    ),
    MuonCollectionLabel = cms.InputTag("standAloneSETMuons","UpdatedAtVtx")
)


process.globalSeedsFromPairsWithVertices = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            useFixedError = cms.bool(True),
            originRadius = cms.double(0.2),
            sigmaZVertex = cms.double(3.0),
            fixedError = cms.double(0.2),
            VertexCollection = cms.InputTag("pixelVertices"),
            ptMin = cms.double(0.9),
            useFoundVertices = cms.bool(True),
            nSigmaZ = cms.double(3.0)
        ),
        ComponentName = cms.string('GlobalTrackingRegionWithVerticesProducer')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(50000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(10000)
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('MixedLayerPairs')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.globalSeedsFromTriplets = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(0.2),
            ptMin = cms.double(0.9),
            originHalfLength = cms.double(15.9)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(50000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(10000)
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            ComponentName = cms.string('PixelTripletHLTGenerator'),
            extraHitRPhitolerance = cms.double(0.032),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.037)
        ),
        SeedingLayers = cms.string('PixelLayerTriplets')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.gsfConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    setArbitratedMerged = cms.bool(True),
    TrackProducer = cms.string('electronGsfTracks'),
    setArbitratedMergedEcalGeneral = cms.bool(False),
    setTrackerOnly = cms.bool(False),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(False)
)


process.gsfElectronCores = cms.EDProducer("GsfElectronCoreProducer",
    ecalDrivenGsfElectronCoresTag = cms.InputTag("ecalDrivenGsfElectronCores"),
    gsfPfRecTracks = cms.InputTag("pfTrackElec"),
    pflowGsfElectronCoresTag = cms.InputTag("pfElectronTranslator","pf"),
    gsfTracks = cms.InputTag("electronGsfTracks"),
    pfSuperClusterTrackMap = cms.InputTag("pfElectronTranslator","pf"),
    ctfTracks = cms.InputTag("generalTracks"),
    useGsfPfRecTracks = cms.bool(True),
    pfSuperClusters = cms.InputTag("pfElectronTranslator","pf")
)


process.gsfElectrons = cms.EDProducer("GsfElectronProducer",
    hOverEPtMin = cms.double(0.0),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    maxSigmaIetaIetaEndcapsPflow = cms.double(999999999.0),
    maxHBarrelPflow = cms.double(0.0),
    minSCEtBarrel = cms.double(4.0),
    etMinEndcaps = cms.double(0.1),
    gsfPfRecTracksTag = cms.InputTag("pfTrackElec"),
    minEOverPBarrelPflow = cms.double(0.0),
    maxHEndcaps = cms.double(0.0),
    eMinBarrel = cms.double(0.08),
    isFiducial = cms.bool(False),
    maxDeltaEtaEndcaps = cms.double(0.02),
    minEOverPBarrel = cms.double(0.0),
    maxVtxDistTk = cms.double(0.2),
    maxFbremBarrel = cms.double(999999999.0),
    applyAmbResolution = cms.bool(True),
    minMVAPflow = cms.double(-0.1),
    ctfTracksTag = cms.InputTag("generalTracks"),
    hOverEConeSizePflow = cms.double(0.15),
    minSCEtEndcaps = cms.double(4.0),
    ambSortingStrategy = cms.uint32(1),
    etMinHcal = cms.double(0.0),
    maxFbremEndcaps = cms.double(999999999.0),
    maxEOverPEndcapsPflow = cms.double(999999999.0),
    pfMvaTag = cms.InputTag("pfElectronTranslator","pf"),
    pflowGsfElectronsTag = cms.InputTag("pfElectronTranslator","pf"),
    maxHBarrel = cms.double(0.0),
    intRadiusEcalBarrel = cms.double(3.0),
    minEOverPEndcapsPflow = cms.double(0.0),
    eMinEndcaps = cms.double(0.0),
    maxDeltaEtaEndcapsPflow = cms.double(999999999.0),
    useNumCrystals = cms.bool(True),
    addPflowElectrons = cms.bool(True),
    ctfTracksCheck = cms.bool(True),
    maxFbremEndcapsPflow = cms.double(999999999.0),
    stripEndcapTk = cms.double(0.015),
    isEndcaps = cms.bool(False),
    seedFromTEC = cms.bool(True),
    maxEOverPBarrel = cms.double(999999999.0),
    maxSigmaIetaIetaBarrelPflow = cms.double(999999999.0),
    hOverEConeSize = cms.double(0.15),
    maxDrbTk = cms.double(999999999.0),
    minSCEtBarrelPflow = cms.double(0.0),
    maxDeltaEtaBarrelPflow = cms.double(999999999.0),
    maxTIPPflow = cms.double(999999999.0),
    reducedEndcapRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    vetoClustered = cms.bool(False),
    hcalTowers = cms.InputTag("towerMaker"),
    etMinBarrel = cms.double(0.0),
    reducedBarrelRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    intRadiusHcal = cms.double(0.15),
    maxHOverEBarrel = cms.double(0.15),
    applyEtaCorrection = cms.bool(False),
    maxHOverEEndcaps = cms.double(0.15),
    isBarrel = cms.bool(False),
    isFiducialPflow = cms.bool(False),
    isBarrelPflow = cms.bool(False),
    minSCEtEndcapsPflow = cms.double(0.0),
    previousGsfElectronsTag = cms.InputTag("ecalDrivenGsfElectrons"),
    stripBarrelTk = cms.double(0.015),
    maxHEndcapsPflow = cms.double(0.0),
    severityLevelCut = cms.int32(4),
    maxHOverEEndcapsPflow = cms.double(999999999.0),
    maxDeltaEtaBarrel = cms.double(0.02),
    ambClustersOverlapStrategy = cms.uint32(1),
    maxFbremBarrelPflow = cms.double(999999999.0),
    maxTIP = cms.double(999999999.0),
    maxDeltaPhiBarrelPflow = cms.double(999999999.0),
    ptMinTk = cms.double(0.7),
    intRadiusEcalEndcaps = cms.double(3.0),
    minEOverPEndcaps = cms.double(0.0),
    maxEOverPEndcaps = cms.double(999999999.0),
    maxHOverEBarrelPflow = cms.double(999999999.0),
    maxEOverPBarrelPflow = cms.double(999999999.0),
    maxSigmaIetaIetaEndcaps = cms.double(999999999.0),
    jurassicWidth = cms.double(1.5),
    recHitFlagsToBeExcluded = cms.vint32(3, 5, 9, 10),
    maxSigmaIetaIetaBarrel = cms.double(999999999.0),
    maxDeltaPhiEndcaps = cms.double(0.15),
    intRadiusEndcapTk = cms.double(0.015),
    applyPreselection = cms.bool(True),
    isEndcapsPflow = cms.bool(False),
    minMVA = cms.double(-0.1),
    useGsfPfRecTracks = cms.bool(True),
    gsfElectronCoresTag = cms.InputTag("gsfElectronCores"),
    superClusterErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    seedsTag = cms.InputTag("ecalDrivenElectronSeeds"),
    maxDeltaPhiBarrel = cms.double(0.15),
    maxDeltaPhiEndcapsPflow = cms.double(999999999.0),
    hOverEPtMinPflow = cms.double(0.0),
    intRadiusBarrelTk = cms.double(0.015)
)


process.gsfGeneralConversionTrackMerger = cms.EDProducer("ConversionTrackMerger",
    ShareFrac = cms.double(0.19),
    outputPreferCollection = cms.int32(-1),
    trackerOnlyPreferCollection = cms.int32(-1),
    arbitratedMergedPreferCollection = cms.int32(2),
    allowFirstHitShare = cms.bool(True),
    minProb = cms.double(1e-06),
    arbitratedEcalSeededPreferCollection = cms.int32(-1),
    checkCharge = cms.bool(True),
    arbitratedMergedEcalGeneralPreferCollection = cms.int32(-1),
    TrackProducer2 = cms.string('gsfConversionTrackProducer'),
    TrackProducer1 = cms.string('generalConversionTrackProducer')
)


process.gsfGeneralInOutOutInConversionTrackMerger = cms.EDProducer("ConversionTrackMerger",
    ShareFrac = cms.double(0.19),
    outputPreferCollection = cms.int32(-1),
    trackerOnlyPreferCollection = cms.int32(-1),
    arbitratedMergedPreferCollection = cms.int32(2),
    allowFirstHitShare = cms.bool(True),
    minProb = cms.double(1e-06),
    arbitratedEcalSeededPreferCollection = cms.int32(-1),
    checkCharge = cms.bool(True),
    arbitratedMergedEcalGeneralPreferCollection = cms.int32(-1),
    TrackProducer2 = cms.string('gsfConversionTrackProducer'),
    TrackProducer1 = cms.string('generalInOutOutInConversionTrackMerger')
)


process.gtDigis = cms.EDProducer("L1GlobalTriggerRawToDigi",
    DaqGtFedId = cms.untracked.int32(813),
    DaqGtInputTag = cms.InputTag("rawDataCollector"),
    UnpackBxInEvent = cms.int32(-1),
    ActiveBoardsMask = cms.uint32(65535)
)


process.gtEvmDigis = cms.EDProducer("L1GlobalTriggerEvmRawToDigi",
    EvmGtFedId = cms.untracked.int32(812),
    EvmGtInputTag = cms.InputTag("rawDataCollector"),
    UnpackBxInEvent = cms.int32(-1),
    ActiveBoardsMask = cms.uint32(65535),
    BstLengthBytes = cms.int32(-1)
)


process.hbheprereco = cms.EDProducer("HcalHitReconstructor",
    setTimingShapedCutsFlags = cms.bool(True),
    saturationParameters = cms.PSet(
        maxADCvalue = cms.int32(127)
    ),
    tsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(4),
    correctionPhaseNS = cms.double(13.0),
    timingshapedcutsParameters = cms.PSet(
        win_gain = cms.double(3.0),
        win_offset = cms.double(0.0),
        ignorehighest = cms.bool(False),
        ignorelowest = cms.bool(True),
        tfilterEnvelope = cms.vdouble(50.0, -2.0, 4.25, 52.0, -2.0, 
            4.09, 54.0, -2.0, 3.95, 56.0, 
            -2.0, 3.82, 58.0, -2.0, 3.71, 
            60.0, -2.0, 3.6, 63.0, -2.0, 
            3.46, 66.0, -2.0, 3.33, 69.0, 
            -2.0, 3.22, 73.0, -2.0, 3.1, 
            77.0, -2.0, 2.99, 82.0, -2.0, 
            2.87, 88.0, -2.0, 2.75, 95.0, 
            -2.0, 2.64, 103.0, -2.0, 2.54, 
            113.0, -2.0, 2.44, 127.0, -2.0, 
            2.33, 146.0, -2.0, 2.23, 176.0, 
            -2.0, 2.13, 250.0, -2.0, 2.0)
    ),
    digiLabel = cms.InputTag("hcalDigis"),
    pulseShapeParameters = cms.PSet(
        TS4TS5UpperCut = cms.vdouble(1, 0.8, 0.75, 0.72),
        TS4TS5ChargeThreshold = cms.double(70),
        MinimumTS4TS5Threshold = cms.double(100),
        TS4TS5LowerThreshold = cms.vdouble(100, 120, 160, 200, 300, 
            500),
        TrianglePeakTS = cms.uint32(4),
        RMS8MaxCut = cms.vdouble(-13, -11.5, -13),
        UseDualFit = cms.bool(False),
        RightSlopeCut = cms.vdouble(6.2, 5.5, 4.75, 4.38, 4.15),
        TS4TS5UpperThreshold = cms.vdouble(70, 90, 100, 400),
        LinearThreshold = cms.vdouble(20, 70),
        RightSlopeSmallCut = cms.vdouble(1.05, 1.135, 1.175, 1.19, 1.17),
        LeftSlopeThreshold = cms.vdouble(23, 30, 40, 95, 140),
        LeftSlopeCut = cms.vdouble(2.4, 1.95, 1.7, 1.7, 1.83),
        TriangleIgnoreSlow = cms.bool(False),
        TS4TS5LowerCut = cms.vdouble(-1, -0.7, -0.5, -0.4, -0.3, 
            0.1),
        MinimumChargeThreshold = cms.double(20),
        RightSlopeThreshold = cms.vdouble(40, 60, 100, 140, 200),
        LinearCut = cms.vdouble(-2, -0.054),
        RightSlopeSmallThreshold = cms.vdouble(60, 80, 110, 140, 200),
        RMS8MaxThreshold = cms.vdouble(20, 50, 500)
    ),
    setHSCPFlags = cms.bool(True),
    firstAuxTS = cms.int32(4),
    setSaturationFlags = cms.bool(True),
    flagParameters = cms.PSet(
        nominalPedestal = cms.double(3.0),
        hitMultiplicityThreshold = cms.int32(17),
        hitEnergyMinimum = cms.double(1.0),
        pulseShapeParameterSets = cms.VPSet(cms.PSet(
            pulseShapeParameters = cms.vdouble(0.0, 100.0, -50.0, 0.0, -15.0, 
                0.15)
        ), 
            cms.PSet(
                pulseShapeParameters = cms.vdouble(100.0, 2000.0, -50.0, 0.0, -5.0, 
                    0.05)
            ), 
            cms.PSet(
                pulseShapeParameters = cms.vdouble(2000.0, 1000000.0, -50.0, 0.0, 95.0, 
                    0.0)
            ), 
            cms.PSet(
                pulseShapeParameters = cms.vdouble(-1000000.0, 1000000.0, 45.0, 0.1, 1000000.0, 
                    0.0)
            ))
    ),
    setTimingTrustFlags = cms.bool(False),
    correctForPhaseContainment = cms.bool(True),
    correctForTimeslew = cms.bool(True),
    setNoiseFlags = cms.bool(True),
    correctTiming = cms.bool(True),
    Subdetector = cms.string('HBHE'),
    hscpParameters = cms.PSet(
        slopeMax = cms.double(-0.6),
        r1Max = cms.double(1.0),
        r1Min = cms.double(0.15),
        TimingEnergyThreshold = cms.double(30.0),
        slopeMin = cms.double(-1.5),
        outerMin = cms.double(0.0),
        outerMax = cms.double(0.1),
        fracLeaderMin = cms.double(0.4),
        r2Min = cms.double(0.1),
        r2Max = cms.double(0.5),
        fracLeaderMax = cms.double(0.7)
    ),
    dropZSmarkedPassed = cms.bool(True),
    setPulseShapeFlags = cms.bool(True),
    firstSample = cms.int32(4)
)


process.hbhereco = cms.EDProducer("HBHEIsolatedNoiseReflagger",
    eeInput = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    LooseRBXHits1 = cms.int32(14),
    TightHPDHits2 = cms.int32(3),
    TightHPDHits1 = cms.int32(5),
    LooseEcalIsol = cms.double(0.08),
    ebInput = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    MinValidTrackPtBarrel = cms.double(0.9),
    LooseDiHitEne = cms.double(50.0),
    HBThreshold = cms.double(0.7),
    UseEcalRecoveredHits = cms.bool(False),
    TightTrackIsol = cms.double(0.05),
    LooseHPDHits1 = cms.int32(6),
    TightRBXHits2 = cms.int32(10),
    TightRBXHits1 = cms.int32(12),
    LooseRBXHits2 = cms.int32(10),
    TightEcalIsol = cms.double(0.04),
    LooseHcalIsol = cms.double(0.08),
    TightHcalIsol = cms.double(0.04),
    EBThreshold = cms.double(0.07),
    hbheInput = cms.InputTag("hbheprereco"),
    HcalAcceptSeverityLevel = cms.uint32(9),
    EEThreshold = cms.double(0.3),
    HESThreshold = cms.double(0.8),
    TightHPDEne2 = cms.double(25.0),
    TightMonoHitEne = cms.double(15.0),
    TightHPDEne1 = cms.double(10.0),
    LooseHPDHits2 = cms.int32(3),
    LooseHPDEne2 = cms.double(80.0),
    MinValidTrackNHits = cms.int32(5),
    LooseRBXEne1 = cms.double(10.0),
    MinValidTrackPt = cms.double(0.3),
    LooseHPDEne1 = cms.double(10.0),
    HEDThreshold = cms.double(0.8),
    trackExtrapolationInput = cms.InputTag("trackExtrapolator"),
    LooseMonoHitEne = cms.double(35.0),
    TightRBXEne2 = cms.double(50.0),
    LooseRBXEne2 = cms.double(300.0),
    TightRBXEne1 = cms.double(10.0),
    LooseTrackIsol = cms.double(0.1),
    UseHcalRecoveredHits = cms.bool(True),
    TightDiHitEne = cms.double(15.0),
    debug = cms.untracked.bool(False),
    EcalAcceptSeverityLevel = cms.uint32(3)
)


process.hbherecoMB = cms.EDProducer("HcalSimpleReconstructor",
    correctionPhaseNS = cms.double(13.0),
    digiLabel = cms.InputTag("hcalDigis"),
    tsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(4),
    Subdetector = cms.string('HBHE'),
    correctForTimeslew = cms.bool(True),
    dropZSmarkedPassed = cms.bool(False),
    correctForPhaseContainment = cms.bool(True),
    firstSample = cms.int32(4)
)


process.hcalDigis = cms.EDProducer("HcalRawToDigi",
    UnpackZDC = cms.untracked.bool(True),
    FilterDataQuality = cms.bool(True),
    InputLabel = cms.InputTag("rawDataCollector"),
    ComplainEmptyData = cms.untracked.bool(False),
    UnpackCalib = cms.untracked.bool(True),
    UnpackTTP = cms.untracked.bool(True),
    lastSample = cms.int32(9),
    firstSample = cms.int32(0)
)


process.hcalnoise = cms.EDProducer("HcalNoiseInfoProducer",
    lMinRatio = cms.double(0.7),
    lMaxHighEHitTime = cms.double(9999.0),
    pMinHighEHitTime = cms.double(-4.0),
    lMaxLowEHitTime = cms.double(9999.0),
    TS4TS5EnergyThreshold = cms.double(50),
    tMinRBXHits = cms.int32(50),
    TS4TS5UpperThreshold = cms.vdouble(70, 90, 100, 400, 4000),
    lMinHighEHitTime = cms.double(-9999.0),
    pMinRBXHits = cms.int32(20),
    tMinHPDHits = cms.int32(16),
    minRecHitE = cms.double(1.5),
    hlMaxRBXEMF = cms.double(0.01),
    pMinEEMF = cms.double(10.0),
    pMaxRatio = cms.double(0.85),
    tMinZeros = cms.int32(8),
    minEEMF = cms.double(50.0),
    tMaxLowEHitTime = cms.double(9999.0),
    minHighHitE = cms.double(25.0),
    lMinZeros = cms.int32(10),
    lMinRBXHits = cms.int32(999),
    minERatio = cms.double(50.0),
    lMinHPDNoOtherHits = cms.int32(10),
    hlMaxHPDEMF = cms.double(-9999.0),
    minLowHitE = cms.double(10.0),
    pMinRatio = cms.double(0.75),
    pMaxRBXEMF = cms.double(0.02),
    tMaxRatio = cms.double(0.92),
    tMinHighEHitTime = cms.double(-7.0),
    TS4TS5LowerCut = cms.vdouble(-1, -0.7, -0.4, -0.2, -0.08, 
        0, 0.1),
    lMaxRatio = cms.double(0.96),
    minEZeros = cms.double(10.0),
    pMinEZeros = cms.double(5.0),
    pMinERatio = cms.double(25.0),
    pMinZeros = cms.int32(4),
    tMinRatio = cms.double(0.73),
    TS4TS5UpperCut = cms.vdouble(1, 0.8, 0.75, 0.72, 0.72),
    pMinLowEHitTime = cms.double(-6.0),
    pMinHPDHits = cms.int32(10),
    lMinLowEHitTime = cms.double(-9999.0),
    tMinHPDNoOtherHits = cms.int32(9),
    pMaxHPDEMF = cms.double(0.02),
    tMinLowEHitTime = cms.double(-9999.0),
    tMaxHighEHitTime = cms.double(6.0),
    pMaxLowEHitTime = cms.double(6.0),
    lMinHPDHits = cms.int32(17),
    TS4TS5LowerThreshold = cms.vdouble(100, 120, 150, 200, 300, 
        400, 500),
    pMinE = cms.double(40.0),
    pMinHPDNoOtherHits = cms.int32(7),
    pMaxHighEHitTime = cms.double(5.0),
    fillTracks = cms.bool(True),
    HcalAcceptSeverityLevel = cms.uint32(9),
    digiCollName = cms.string('hcalDigis'),
    minTrackPt = cms.double(1.0),
    fillDigis = cms.bool(True),
    maxTrackEta = cms.double(2.0),
    recHitCollName = cms.string('hbhereco'),
    fillRecHits = cms.bool(True),
    caloTowerCollName = cms.string('towerMaker'),
    maxProblemRBXs = cms.int32(20),
    trackCollName = cms.string('generalTracks'),
    fillCaloTowers = cms.bool(True),
    maxCaloTowerIEta = cms.int32(20)
)


process.hfEMClusters = cms.EDProducer("HFEMClusterProducer",
    hits = cms.InputTag("hfreco"),
    usePMTFlag = cms.bool(True),
    minTowerEnergy = cms.double(4.0),
    maximumRenergy = cms.double(50),
    maximumSL = cms.double(98),
    usePulseFlag = cms.bool(True),
    forcePulseFlagMC = cms.bool(False),
    correctionType = cms.int32(0),
    seedThresholdET = cms.double(5.0)
)


process.hfRecoEcalCandidate = cms.EDProducer("HFRecoEcalCandidateProducer",
    e9e25Cut = cms.double(0.94),
    Correct = cms.bool(True),
    intercept2DCut = cms.double(0.5),
    hfclusters = cms.InputTag("hfEMClusters")
)


process.hfreco = cms.EDProducer("HcalHitReconstructor",
    S9S1stat = cms.PSet(
        longETParams = cms.vdouble(0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0),
        shortEnergyParams = cms.vdouble(35.1773, 35.37, 35.7933, 36.4472, 37.3317, 
            38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 
            47.4813, 49.98, 52.7093),
        flagsToSkip = cms.int32(24),
        shortETParams = cms.vdouble(0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0),
        short_optimumSlope = cms.vdouble(-99999, 0.0164905, 0.0238698, 0.0321383, 0.041296, 
            0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 
            0.135313, 0.136289, 0.0589927),
        longEnergyParams = cms.vdouble(43.5, 45.7, 48.32, 51.36, 54.82, 
            58.7, 63.0, 67.72, 72.86, 78.42, 
            84.4, 90.8, 97.62),
        long_optimumSlope = cms.vdouble(-99999, 0.0164905, 0.0238698, 0.0321383, 0.041296, 
            0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 
            0.135313, 0.136289, 0.0589927),
        isS8S1 = cms.bool(False)
    ),
    saturationParameters = cms.PSet(
        maxADCvalue = cms.int32(127)
    ),
    tsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(2),
    correctionPhaseNS = cms.double(0.0),
    HFInWindowStat = cms.PSet(
        hflongEthresh = cms.double(40.0),
        hflongMinWindowTime = cms.vdouble(-10),
        hfshortEthresh = cms.double(40.0),
        hflongMaxWindowTime = cms.vdouble(10),
        hfshortMaxWindowTime = cms.vdouble(10),
        hfshortMinWindowTime = cms.vdouble(-12)
    ),
    digiLabel = cms.InputTag("hcalDigis"),
    setHSCPFlags = cms.bool(True),
    firstAuxTS = cms.int32(3),
    digistat = cms.PSet(
        HFdigiflagFirstSample = cms.int32(3),
        HFdigiflagMinEthreshold = cms.double(40),
        HFdigiflagSamplesToAdd = cms.int32(3),
        HFdigiflagCoef0 = cms.double(0.93),
        HFdigiflagCoef2 = cms.double(-0.012667),
        HFdigiflagCoef1 = cms.double(-0.38275),
        HFdigiflagExpectedPeak = cms.int32(4)
    ),
    hfTimingTrustParameters = cms.PSet(
        hfTimingTrustLevel2 = cms.int32(4),
        hfTimingTrustLevel1 = cms.int32(1)
    ),
    PETstat = cms.PSet(
        longETParams = cms.vdouble(0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0),
        short_R_29 = cms.vdouble(0.8),
        shortEnergyParams = cms.vdouble(35.1773, 35.37, 35.7933, 36.4472, 37.3317, 
            38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 
            47.4813, 49.98, 52.7093),
        flagsToSkip = cms.int32(0),
        short_R = cms.vdouble(0.8),
        shortETParams = cms.vdouble(0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0),
        long_R_29 = cms.vdouble(0.8),
        longEnergyParams = cms.vdouble(43.5, 45.7, 48.32, 51.36, 54.82, 
            58.7, 63.0, 67.72, 72.86, 78.42, 
            84.4, 90.8, 97.62),
        long_R = cms.vdouble(0.98)
    ),
    setSaturationFlags = cms.bool(True),
    setTimingTrustFlags = cms.bool(True),
    S8S1stat = cms.PSet(
        longETParams = cms.vdouble(0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0),
        shortEnergyParams = cms.vdouble(40, 100, 100, 100, 100, 
            100, 100, 100, 100, 100, 
            100, 100, 100),
        flagsToSkip = cms.int32(16),
        shortETParams = cms.vdouble(0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 
            0, 0, 0),
        short_optimumSlope = cms.vdouble(0.3, 0.1, 0.1, 0.1, 0.1, 
            0.1, 0.1, 0.1, 0.1, 0.1, 
            0.1, 0.1, 0.1),
        longEnergyParams = cms.vdouble(40, 100, 100, 100, 100, 
            100, 100, 100, 100, 100, 
            100, 100, 100),
        long_optimumSlope = cms.vdouble(0.3, 0.1, 0.1, 0.1, 0.1, 
            0.1, 0.1, 0.1, 0.1, 0.1, 
            0.1, 0.1, 0.1),
        isS8S1 = cms.bool(True)
    ),
    correctForPhaseContainment = cms.bool(False),
    correctForTimeslew = cms.bool(False),
    setNoiseFlags = cms.bool(True),
    correctTiming = cms.bool(True),
    Subdetector = cms.string('HF'),
    dropZSmarkedPassed = cms.bool(True),
    setPulseShapeFlags = cms.bool(False),
    firstSample = cms.int32(4)
)


process.hfrecoMB = cms.EDProducer("HcalSimpleReconstructor",
    correctionPhaseNS = cms.double(0.0),
    digiLabel = cms.InputTag("hcalDigis"),
    tsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(2),
    Subdetector = cms.string('HF'),
    correctForTimeslew = cms.bool(False),
    dropZSmarkedPassed = cms.bool(False),
    correctForPhaseContainment = cms.bool(False),
    firstSample = cms.int32(4)
)


process.hiGenParticlesForJets = cms.EDProducer("InputGenJetsParticleSelector",
    src = cms.InputTag("hiGenParticles"),
    ignoreParticleIDs = cms.vuint32(1000022, 1000012, 1000014, 1000016, 2000012, 
        2000014, 2000016, 1000039, 5100039, 4000012, 
        4000014, 4000016, 9900012, 9900014, 9900016, 
        39),
    partonicFinalState = cms.bool(False),
    excludeResonances = cms.bool(True),
    excludeFromResonancePids = cms.vuint32(12, 13, 14, 16),
    tausAsJets = cms.bool(False)
)


process.horeco = cms.EDProducer("HcalHitReconstructor",
    samplesToAdd = cms.int32(4),
    digiLabel = cms.InputTag("hcalDigis"),
    setNoiseFlags = cms.bool(True),
    correctionPhaseNS = cms.double(13.0),
    setSaturationFlags = cms.bool(True),
    correctTiming = cms.bool(True),
    saturationParameters = cms.PSet(
        maxADCvalue = cms.int32(127)
    ),
    tsFromDB = cms.bool(True),
    setHSCPFlags = cms.bool(True),
    firstAuxTS = cms.int32(4),
    Subdetector = cms.string('HO'),
    setTimingTrustFlags = cms.bool(False),
    correctForTimeslew = cms.bool(True),
    dropZSmarkedPassed = cms.bool(True),
    setPulseShapeFlags = cms.bool(False),
    correctForPhaseContainment = cms.bool(True),
    firstSample = cms.int32(4)
)


process.horecoMB = cms.EDProducer("HcalSimpleReconstructor",
    correctionPhaseNS = cms.double(13.0),
    digiLabel = cms.InputTag("hcalDigis"),
    tsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(4),
    Subdetector = cms.string('HO'),
    correctForTimeslew = cms.bool(True),
    dropZSmarkedPassed = cms.bool(False),
    correctForPhaseContainment = cms.bool(True),
    firstSample = cms.int32(4)
)


process.hpsLooseIsolationCleaner = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.hpsMediumIsolationCleaner = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(0.8),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.8),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.hpsPFTauDiscriminationByDecayModeFinding = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(0.0),
    coneSizeFormula = cms.string('max(min(0.5, 2.8/pt()),0.05)'),
    matchingCone = cms.double(0.1),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        ))
)


process.hpsPFTauDiscriminationByLooseElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(0.6),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsPFTauDiscriminationByLooseIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.hpsPFTauDiscriminationByLooseMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noSegMatch')
)


process.hpsPFTauDiscriminationByMediumElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(True),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsPFTauDiscriminationByMediumIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(0.8),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.8),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.hpsPFTauDiscriminationByTightElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(True),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(True),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsPFTauDiscriminationByTightIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.hpsPFTauDiscriminationByTightMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noAllArbitrated')
)


process.hpsPFTauDiscriminationByVLooseIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("hpsPFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(2.0),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False),
    customOuterCone = cms.double(0.3)
)


process.hpsPFTauProducer = cms.EDProducer("RecoTauCleaner",
    cleaners = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(charge())-1'),
        selection = cms.string('signalPFChargedHadrCands().size() = 3'),
        name = cms.string('UnitCharge'),
        plugin = cms.string('RecoTauStringCleanerPlugin'),
        selectionFailValue = cms.double(0)
    ), 
        cms.PSet(
            selectionPassFunction = cms.string('0'),
            selection = cms.string('deltaR(eta, phi, jetRef().eta, jetRef().phi) < 0.1'),
            name = cms.string('MatchingCone'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selectionFailValue = cms.double(1000.0)
        ), 
        cms.PSet(
            src = cms.InputTag("hpsSelectionDiscriminator"),
            name = cms.string('HPS_Select'),
            plugin = cms.string('RecoTauDiscriminantCleanerPlugin')
        ), 
        cms.PSet(
            selectionPassFunction = cms.string('isolationPFChargedHadrCandsPtSum()+isolationPFGammaCandsEtSum()'),
            selection = cms.string('leadPFCand().isNonnull()'),
            name = cms.string('CombinedIsolation'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selectionFailValue = cms.double(1000.0)
        )),
    src = cms.InputTag("combinatoricRecoTaus")
)


process.hpsSelectionDiscriminator = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(0.0),
    coneSizeFormula = cms.string('max(min(0.5, 2.8/pt()),0.05)'),
    matchingCone = cms.double(0.1),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        ))
)


process.hpsTancTaus = cms.EDProducer("RecoTauCleaner",
    cleaners = cms.VPSet(cms.PSet(
        selectionPassFunction = cms.string('abs(charge())-1'),
        selection = cms.string('signalPFChargedHadrCands().size() = 3'),
        name = cms.string('UnitCharge'),
        plugin = cms.string('RecoTauStringCleanerPlugin'),
        selectionFailValue = cms.double(0)
    ), 
        cms.PSet(
            selectionPassFunction = cms.string('0'),
            selection = cms.string('deltaR(eta, phi, jetRef().eta, jetRef().phi) < 0.1'),
            name = cms.string('MatchingCone'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selectionFailValue = cms.double(1000.0)
        ), 
        cms.PSet(
            src = cms.InputTag("combinatoricRecoTausDiscriminationByLeadingPionPtCut"),
            name = cms.string('lead pion'),
            plugin = cms.string('RecoTauDiscriminantCleanerPlugin')
        ), 
        cms.PSet(
            src = cms.InputTag("combinatoricRecoTausHPSSelector"),
            name = cms.string('HPS selection'),
            plugin = cms.string('RecoTauDiscriminantCleanerPlugin')
        ), 
        cms.PSet(
            selectionPassFunction = cms.string('isolationPFChargedHadrCandsPtSum()+isolationPFGammaCandsEtSum()'),
            selection = cms.string('leadPFCand().isNonnull()'),
            name = cms.string('CombinedIsolation'),
            plugin = cms.string('RecoTauStringCleanerPlugin'),
            selectionFailValue = cms.double(1000.0)
        )),
    src = cms.InputTag("combinatoricRecoTaus")
)


process.hpsTancTausDiscriminationAgainstCaloMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstCaloMuon",
    srcHcalRecHits = cms.InputTag("hbhereco"),
    minLeadTrackPt = cms.double(15.0),
    maxEnToTrackRatio = cms.double(0.25),
    srcVertex = cms.InputTag("offlinePrimaryVerticesWithBS"),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    srcEcalRecHitsBarrel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    dRhcal = cms.double(25.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByLeadingTrackFinding")
        )
    ),
    maxEnEcal = cms.double(3.0),
    maxEnHcal = cms.double(8.0),
    dRecal = cms.double(15.0),
    srcEcalRecHitsEndcap = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    minLeadTrackPtFraction = cms.double(0.8)
)


process.hpsTancTausDiscriminationByDecayModeSelection = cms.EDProducer("PFRecoTauDiscriminationByHPSSelection",
    src = cms.InputTag("combinatoricRecoTaus"),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    minTauPt = cms.double(5.0),
    coneSizeFormula = cms.string('0.3'),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        minMass = cms.double(-0.1),
        maxMass = cms.double(1),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            assumeStripMass = cms.double(0.1349),
            minMass = cms.double(0.3),
            maxMass = cms.double(1.3),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            minPi0Mass = cms.double(0.05),
            maxMass = cms.double(1.2),
            maxPi0Mass = cms.double(0.2),
            nPiZeros = cms.uint32(2),
            minMass = cms.double(0.4),
            nCharged = cms.uint32(1),
            assumeStripMass = cms.double(0.0)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            minMass = cms.double(0.8),
            maxMass = cms.double(1.5),
            nCharged = cms.uint32(3)
        )),
    matchingCone = cms.double(0.1)
)


process.hpsTancTausDiscriminationByFlightPath = cms.EDProducer("PFRecoTauDiscriminationByFlight",
    refitPV = cms.bool(True),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    vertexSource = cms.InputTag("offlinePrimaryVertices"),
    beamspot = cms.InputTag("offlineBeamSpot")
)


process.hpsTancTausDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.hpsTancTausDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.hpsTancTausDiscriminationByLeadingTrackPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.hpsTancTausDiscriminationByLooseElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(0.6),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsTancTausDiscriminationByLooseIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.hpsTancTausDiscriminationByLooseMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noSegMatch')
)


process.hpsTancTausDiscriminationByMediumElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(True),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsTancTausDiscriminationByMediumIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(0.8),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.8),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.hpsTancTausDiscriminationByTanc = cms.EDProducer("RecoTauMVATransform",
    Prediscriminants = cms.PSet(
        hpsSelect = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        ),
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByLeadingPionPtCut")
        )
    ),
    transforms = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = (cms.vdouble(0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508)+cms.vdouble(0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243693947972, 0.2446621342, 0.25648929965, 0.2608766459, 0.265139843949, 0.268288096025, 0.271490633611, 0.274812027295, 0.278726505561, 0.283196361675, 0.287921047203, 0.293485065795, 0.299327353484, 0.305468394708, 0.310410038477, 0.315654364298, 0.320865024837, 0.324875648584, 0.328691660974, 0.332598633349, 0.336484807993, 0.339893814351, 0.343528868912, 0.346311138119, 0.348525259682, 0.350638868762, 0.352500481165, 0.354385202603, 0.356405103778, 0.358448162743, 0.359626155068, 0.361359527277, 0.362911630832, 0.364767207965, 0.365568276809, 0.367161876825, 0.368245783665, 0.369700987138, 0.370891835827, 0.371335926598, 0.372724067775, 0.374122626292, 0.374872824273, 0.376287585272, 0.377808481377, 0.379437962659, 0.380385427158, 0.381454465894, 0.382529530437, 0.383308773065, 0.383900643462, 0.384488881534, 0.385284008411, 0.385778244795, 0.386880706208, 0.387787417873, 0.389206336729, 0.390430843456, 0.391560096158, 0.392490239284, 0.393218300975, 0.394889524946, 0.396474094424, 0.397328157396, 0.398823062781, 0.400437280424, 0.401846875958, 0.402719262685, 0.403705236447, 0.40437725886, 0.405483096559, 0.40715324019, 0.408161946716, 0.408949958358, 0.410194428622, 0.411674966358, 0.412726139917, 0.413994836217, 0.414922434459, 0.415970963664, 0.417494895799, 0.418345516985, 0.419769194149, 0.42120259427, 0.423008169722, 0.424220511323, 0.425684525769, 0.426912279039, 0.428023327968, 0.429389155258, 0.430889124801, 0.432147128025, 0.433793555744, 0.435196517338, 0.436351162787, 0.437253465009, 0.438419065687, 0.439590897333, 0.440949213705, 0.441921470289, 0.442848592497, 0.44396524306, 0.445223842049, 0.446977728682, 0.448745488265, 0.451078381688, 0.451907557714, 0.452739787751, 0.453638395261, 0.45475822595, 0.456165813144, 0.457223834211, 0.457934807034, 0.45922014571, 0.461017229233, 0.461451032994, 0.463048655665, 0.464804181316, 0.466425147476, 0.467542494191, 0.468517661795, 0.470468799941, 0.47198076935, 0.472892624736, 0.474420238705, 0.476266453893, 0.477505267649, 0.479532143347, 0.481200116592, 0.481613637289, 0.483360304775, 0.485061449421, 0.487101659613, 0.488019909526, 0.488999144832, 0.490200759674, 0.491190516798, 0.493849514855, 0.495306102206, 0.495928489713, 0.4964353883, 0.498082556741, 0.49979254034, 0.500775976586, 0.502679733683, 0.504598020717, 0.505078487853, 0.506619141507, 0.508171974823, 0.509336469886, 0.510953930915, 0.512581697566, 0.513998315702, 0.515647034962, 0.515939613111, 0.517975069449, 0.519430445753, 0.519957296262, 0.521273324958, 0.522406663349, 0.523925469498, 0.524625850033, 0.525907581275, 0.527065315655, 0.52822815856, 0.528783474767, 0.529145626115, 0.529453767868, 0.530435650231, 0.532014259582, 0.532782125184, 0.534528955521, 0.535733634238, 0.539584530704, 0.541410067901, 0.543682312792, 0.545138243861, 0.546811742597, 0.548048893429, 0.548459504636, 0.550158093752, 0.551205716597, 0.552261157841, 0.553773021814, 0.554620522074, 0.557022425024, 0.558787346691, 0.55989408991, 0.562351160997, 0.564603650808, 0.567330572538, 0.568251047692, 0.570322191691, 0.570800554836, 0.573840553165, 0.575722428922, 0.578806943369, 0.580018988744, 0.581943439091, 0.583637839285, 0.583719886077, 0.585230062162, 0.586459819001, 0.58819018682, 0.589432428675, 0.590707557501, 0.59199058109, 0.593311935901, 0.596143502405, 0.598713047084, 0.59985869618, 0.60146038335)+cms.vdouble(0.603073645068, 0.60364159568, 0.605493798425, 0.607716165748, 0.611539567166, 0.61344596304, 0.614868728468, 0.616356298487, 0.617243661796, 0.618356139972, 0.620433033442, 0.623603658141, 0.625027738979, 0.626745245057, 0.630061473707, 0.634451273629, 0.636224368987, 0.638386932974, 0.639666729708, 0.641472541416, 0.643376129813, 0.645998175052, 0.648651724655, 0.650614385321, 0.651964427491, 0.654372246094, 0.656912558238, 0.657658356547, 0.658734274882, 0.661006291486, 0.663094362812, 0.664860224717, 0.667639986138, 0.669224738703, 0.670609710516, 0.672008536945, 0.674322956904, 0.676181757848, 0.680504320591, 0.681701882298, 0.683847428048, 0.687028204213, 0.690096183579, 0.692936565842, 0.698333032093, 0.702469873766, 0.704533440299, 0.706621657637, 0.710308262591, 0.713270705866, 0.714865826284, 0.719086552707, 0.722147885763, 0.725885046087, 0.729450681758, 0.732859861331, 0.739185288999, 0.743172463789, 0.74657896386, 0.751327840506, 0.754658774214, 0.758047388164, 0.762059448212, 0.769914558551, 0.775838239214, 0.780728907111, 0.786952215918, 0.793694146175, 0.796885300439, 0.802863959078, 0.813001141474, 0.820597251397, 0.829350775725, 0.837460143471, 0.84199323298, 0.847433416989, 0.854638027367, 0.860714284529, 0.869959964541, 0.876007819869, 0.884455823419, 0.896538436371, 0.904016005807, 0.910382232961, 0.916770946986, 0.93386870405, 0.943467586229, 0.95165443966, 0.971789456433, 0.970755563959, 0.9679163435, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(3)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = (cms.vdoublecms.vdouble(0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725625489751, 0.725917318629, 0.727526582607, 0.745748231906, 0.750169168536, 0.757185219071, 0.764249672036, 0.767603981959, 0.772574492642, 0.775097031572, 0.777704615235, 0.779407980465, 0.781767581973, 0.784842584326, 0.786420654919, 0.787883166617, 0.790123535551, 0.79208138528, 0.79327247227, 0.795907708578, 0.798503646112, 0.800206834461, 0.802663946447, 0.8031582666, 0.80490222571, 0.806889568691, 0.809394028316, 0.811861583702, 0.813019057268, 0.81342095915, 0.814698723372, 0.816279445985, 0.818232037783, 0.819367026875, 0.819759858707, 0.821328989638, 0.822878675172, 0.82364763472, 0.825358996088, 0.828499118125, 0.829830087025, 0.831236000117, 0.832703495507, 0.833414247004, 0.834436344112, 0.834946785624, 0.835869791486, 0.836486520822, 0.837364626557, 0.838193318858, 0.839702591039, 0.841531457051, 0.842218371935, 0.843640339114, 0.844222988069, 0.845392038566, 0.846778761898, 0.84769605779, 0.848073950379, 0.848849957765, 0.849494110293, 0.8500905241, 0.851335675181, 0.853500950651, 0.853839833615, 0.854227213103, 0.854567621296, 0.854984559013, 0.855203285083, 0.856470785047, 0.857475859603, 0.85892685241, 0.859008202829, 0.859451257957, 0.860468389831, 0.861489507276, 0.861351261404, 0.861705874851, 0.861659795003, 0.861659795003, 0.86179137032, 0.862147375366, 0.862550177315, 0.863312092458, 0.863805642705, 0.864438066642, 0.864754370118, 0.865480701328, 0.866346092335, 0.867168965701, 0.867397571488, 0.868313201223, 0.868771741382, 0.869186401202, 0.86983185136, 0.869929474522, 0.870346507695, 0.870951429469, 0.870863388987, 0.871514279263, 0.872166654676, 0.872355339191, 0.872776974093, 0.873155878735, 0.873579101025, 0.874003066865, 0.873916467734, 0.874211597253, 0.874402872188, 0.87510742975, 0.87525648792, 0.87525648792, 0.875448860228, 0.875598481234, 0.875512416378, 0.87617785231, 0.87617785231, 0.876371452215, 0.877233539228, 0.877818409805, 0.87840545558, 0.87840545558, 0.878601622981, 0.878601622981, 0.879472984901, 0.879712328244, 0.87982581203, 0.879981638026, 0.880179766123, 0.880378141371, 0.880534852587, 0.880691869776, 0.8811323429, 0.881090533252, 0.881531917098, 0.881732079801, 0.8822162463, 0.882902187113, 0.882979722574, 0.88403281278, 0.885010261835, 0.884928594333, 0.885132644083, 0.885050953876, 0.88525535544, 0.886362380543, 0.886487219509, 0.886652934413, 0.887232935079, 0.887728512003, 0.888561331939, 0.889019284728, 0.889438266521, 0.890358658388, 0.890120720891, 0.890292192785, 0.890675834925, 0.890556765164, 0.890981544778, 0.891699669632, 0.891660238395, 0.891969519877, 0.892319678993, 0.892161931402, 0.892513711208, 0.892729546909, 0.893162065429, 0.893339503795, 0.893339503795, 0.893656248099, 0.894427465173, 0.894606969217, 0.894825762437, 0.894928163898, 0.895703822513, 0.89622167567, 0.896663385868, 0.897404545302, 0.89769650475, 0.899189293203, 0.899525558799, 0.900803884235, 0.901822547362, 0.901939302648, 0.902926505697, 0.903082359676, 0.904038745128, 0.90469561985, 0.904927332682, 0.905283513893, 0.906828000044, 0.907062493553, 0.908109372415, 0.908783021349, 0.90898498498, 0.910379224289, 0.911372920866, 0.911751863015, 0.912477297669, 0.913239550237, 0.91300238707, 0.913422855139, 0.915063352192, 0.916893920936, 0.916979020829, 0.91791358353, 0.918350995783, 0.918790342789, 0.919328152961, 0.919993298628, 0.920982245955, 0.922524618114, 0.923591109364)+cms.vdouble(0.924018850534, 0.924248923821, 0.924479515826, 0.925498182241, 0.926493584801, 0.927436921962, 0.927911825271, 0.928716526512, 0.929225746944, 0.929920622352, 0.931640820211, 0.931772433588, 0.932293506679, 0.932760264784, 0.93386870405, 0.934480569506, 0.934731886916, 0.935797384751, 0.936588472051, 0.936817507478, 0.937277790773, 0.938339506605, 0.938808219887, 0.93993649209, 0.94020045716, 0.940781492864, 0.941047196853, 0.942510417566, 0.942629939, 0.942750378489, 0.943616386541, 0.944163684906, 0.945338814696, 0.945845741457, 0.946028661789, 0.946308362468, 0.946541150838, 0.946751152357, 0.947576555912, 0.948029352938, 0.94826905955, 0.948081416726, 0.949376743021, 0.94926144862, 0.949775296374, 0.949706301122, 0.951268968863, 0.953037066674, 0.95357532021, 0.953770570793, 0.953640586734, 0.953509869657, 0.954300159882, 0.955476996866, 0.956207587781, 0.956355833165, 0.956846568485, 0.957770053042, 0.958723171834, 0.958928454571, 0.959445187694, 0.959807967592, 0.959442259047, 0.960697132989, 0.961203278228, 0.963193467582, 0.963932365293, 0.964461162833, 0.964482886627, 0.96526433234, 0.966030150632, 0.966856588211, 0.969491617691, 0.970743493871, 0.972389419268, 0.973307337131, 0.975623617612, 0.976087161844, 0.975647899082, 0.976736074007, 0.979440008803, 0.981271208497, 0.982207028661, 0.984863078211, 0.986956530647, 0.990258251858, 0.990208776979, 0.990702226892, 0.993228159625, 0.99534336087, 0.996696237239, 0.995185049087, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = (cms.vdoublecms.vdouble(0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.786753288885, 0.788132324416, 0.79656141615, 0.810183644995, 0.858360829913, 0.862298212616, 0.867110980413, 0.871372861265, 0.875682014578, 0.880242297589, 0.883696978098, 0.885512278829, 0.887768921813, 0.889264020585, 0.89119925019, 0.892452552697, 0.893185095837, 0.893419577074, 0.894898998675, 0.895774783109, 0.896260903725, 0.896505707407, 0.898082672851, 0.898779137453, 0.89979939771, 0.900120276805, 0.900442301311, 0.900314253861, 0.90063761708, 0.903107169678, 0.903707364412, 0.904624297652, 0.90437518453, 0.904187494019, 0.904648539996, 0.905849328721, 0.90625146477, 0.906593041173, 0.906284313013, 0.906627709554, 0.906627709554, 0.907095652088, 0.906972372385, 0.907318308525, 0.907603995571, 0.907357055463, 0.907233089763, 0.907994846936, 0.908883949265, 0.908883949265, 0.909836831321, 0.909836831321, 0.909776114594, 0.911030037809, 0.911509901723, 0.911871023987, 0.911811279009, 0.911751452972, 0.911691545709, 0.911511334909, 0.911451101085, 0.912784331406, 0.9125455069, 0.9125455069, 0.91297278083, 0.912853317543, 0.912673506387, 0.913592984461, 0.915007651179, 0.915441697726, 0.915324604996, 0.915207187526, 0.915148356591, 0.91552593882, 0.915467174967, 0.9154083293, 0.915290391839, 0.915231299701, 0.915728896806, 0.915728896806, 0.915552071941, 0.916492320764, 0.917377950283, 0.917822427143, 0.918268017622, 0.91871472591, 0.919668295227, 0.919611512782, 0.919554650007, 0.919440682785, 0.919269125195, 0.921306876156, 0.921306876156, 0.921082297245, 0.920969526416, 0.921426208902, 0.921939970027, 0.921939970027, 0.922343069964, 0.923319759486, 0.923727168952, 0.923727168952, 0.92460140151, 0.924492316338, 0.924959238052, 0.926474177051, 0.926474177051, 0.926420752856, 0.926313671218, 0.926785714713, 0.926785714713, 0.926785714713, 0.926732331515, 0.926732331515, 0.926571713811, 0.927521701059, 0.927468561656, 0.927998554333, 0.927945695605, 0.929008220067, 0.928746371941, 0.928693770351, 0.928641091039, 0.929607013105, 0.929554832769, 0.930039996532, 0.93101417799, 0.931554211882, 0.932636161324, 0.932585903271, 0.932585903271, 0.93357188521, 0.933522156167, 0.933967924145, 0.933769185329, 0.934766776762, 0.935267583538, 0.935169629185, 0.935672412756, 0.936176553451, 0.936176553451, 0.93779194569, 0.937554472402, 0.937458974653, 0.937411116161, 0.937970225775, 0.938435668089, 0.938341043455, 0.938341043455, 0.938903099624, 0.93885608225, 0.938808992455, 0.938714594933, 0.939278948765, 0.940409694612, 0.940363611919, 0.940363611919, 0.940884673949, 0.940838860114, 0.940700991551, 0.941179107659, 0.941750185868, 0.941750185868, 0.942276966885, 0.943290568826, 0.943822114749, 0.944267645451, 0.944223792272, 0.944223792272, 0.944223792272, 0.944223792272, 0.944135878551, 0.944091817682, 0.943959217069, 0.944948988041, 0.944817531021, 0.945185418124, 0.945774534438, 0.946869842865, 0.94678443912, 0.947292782482, 0.947803406812, 0.948955745704, 0.949513262437, 0.949431324505, 0.949349120177, 0.949787213059, 0.950350748429, 0.951522477849, 0.952051228023, 0.95197239226, 0.951813940452, 0.951734321829, 0.952189098377, 0.952726227521, 0.952647494583, 0.953226869405, 0.953148724357, 0.95303101596, 0.953497250008, 0.954122169792, 0.954006075021, 0.954594998037, 0.955778170341, 0.955740668477, 0.957457733339, 0.958697023242, 0.958590781777, 0.958519649968, 0.959665182275, 0.960242079268, 0.960242079268, 0.960855701368, 0.960787753107)+cms.vdouble(0.961370655681, 0.961269567079, 0.961823203605, 0.963730727425, 0.963634885553, 0.963570709071, 0.964138473298, 0.964106695414, 0.96404297039, 0.963914839098, 0.963882663464, 0.96452094996, 0.964361812095, 0.96497328025, 0.965587812399, 0.966174859102, 0.966052013818, 0.966021162949, 0.968018795469, 0.96867865254, 0.968592547647, 0.96914294659, 0.969057430126, 0.969000155331, 0.970289180287, 0.971618144708, 0.971511684075, 0.972907637123, 0.972856607143, 0.972753968298, 0.972676478315, 0.973344727784, 0.973217439385, 0.973917083716, 0.973842007934, 0.973791716846, 0.974496912029, 0.974447701286, 0.974373528048, 0.974273957942, 0.974198771106, 0.974791150217, 0.975488253999, 0.976165676348, 0.977513433798, 0.977332925695, 0.978053351441, 0.978734902423, 0.97864854949, 0.979275680612, 0.979190505138, 0.979039751165, 0.978974471583, 0.978886796984, 0.980438334358, 0.981887328142, 0.982567303114, 0.983312443593, 0.983168209088, 0.983021459539, 0.98366063828, 0.983606342672, 0.983441268961, 0.983291720735, 0.985747459607, 0.985615866821, 0.988157949486, 0.988031989052, 0.987786602856, 0.988507380959, 0.988364321833, 0.988127868612, 0.987928555371, 0.987641272072, 0.987408197679, 0.98704162283, 0.986691071046, 0.986360943929, 0.987048151948, 0.989952686544, 0.991766844123, 0.992193166195, 0.99456966538, 0.995655052048, 0.994746673755, 0.993062299865, 0.995491593707, 0.993997811711, 0.991951166261, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            transform = cms.PSet(
                max = cms.double(1.99833333333),
                transform = (cms.vdouble(0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277)+cms.vdouble(0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320785409267, 0.320785409267, 0.320785409267, 0.320967688479, 0.32115017496, 0.32115017496, 0.32115017496, 0.32115017496, 0.321332869066, 0.321607300294, 0.321790515012, 0.322065728828, 0.322709728783, 0.337811096719, 0.33917314626, 0.341489359417, 0.343051156809, 0.344690580804, 0.34605531485, 0.347729452006, 0.349352972192, 0.351698761571, 0.354076266303, 0.356364861761, 0.357459291064, 0.358806090169, 0.360659074159, 0.361655179522, 0.363285639001, 0.363823848893, 0.365224296488, 0.366635567078, 0.368317558281, 0.36949108301, 0.370409007364, 0.370997606343, 0.372726361337, 0.373488515297, 0.374412657806, 0.375752608537, 0.377534910678, 0.378625338634, 0.379181030815, 0.379877944035, 0.382266731549, 0.382549741971, 0.383828491978, 0.38525242259, 0.386835650852, 0.38785063627, 0.389317222671, 0.390498501728, 0.392134514369, 0.392433445129, 0.393938724972, 0.395003106909, 0.395165758646, 0.395929379967, 0.396695958257, 0.397011143016, 0.398247378442, 0.399356983741, 0.399994683207, 0.401254354869, 0.40236309389, 0.403477977186, 0.404278112546, 0.405403648355, 0.406718341929, 0.408044942586, 0.409053791836, 0.409879342767, 0.410568240656, 0.411067477386, 0.412572498902, 0.413612340683, 0.414628216181, 0.41718987191, 0.417878334739, 0.41856907358, 0.419300644011, 0.420520753157, 0.420777117228, 0.422716149289, 0.423248081689, 0.424315972822, 0.425568676714, 0.426697968924, 0.427784748237, 0.428512348538, 0.429242428143, 0.430526071506, 0.4311350135, 0.432803583714, 0.433609675616, 0.434608917639, 0.436308891919, 0.436878509184, 0.437640316502, 0.438596319943, 0.440520911858, 0.441683795845, 0.443048277506, 0.444696219849, 0.446478472767, 0.44715804854, 0.448645092811, 0.450058431683, 0.450666877959, 0.450755388115, 0.451660727674, 0.452685605028, 0.453508861839, 0.455164391331, 0.456611329026, 0.456920461171, 0.457863702358, 0.45902581005, 0.459451411686, 0.460410936031, 0.461808077134, 0.4630001435, 0.46452516501, 0.465632370863, 0.466972634942, 0.467639712811, 0.468206417853, 0.469000443277, 0.470125946746, 0.471938031657, 0.473437184975, 0.474815974144, 0.475643583896, 0.477037107394, 0.478345116523, 0.479756398109, 0.482127131145, 0.483321305722, 0.484827612962, 0.485378450947, 0.486839313932, 0.488800865348, 0.488631796262, 0.489784626283, 0.49019813266, 0.490696455307, 0.492699918902, 0.493707798202, 0.495481544763, 0.497780890453, 0.499067549901, 0.499842743245, 0.501067711008, 0.501110885208, 0.503739653301, 0.504533670387, 0.507669169039, 0.508207246665, 0.510099534144, 0.511125093239, 0.513041788431, 0.514972912765, 0.517927881794, 0.519848789077, 0.52116702462, 0.522598588906, 0.524038039421, 0.524905522273, 0.525729939569, 0.527349110611, 0.528189103375, 0.529884063982, 0.531038635091, 0.531258876588, 0.533372518417, 0.532652261497, 0.533222445036, 0.533832435241, 0.534714171593, 0.536561182549, 0.536184284139, 0.538295230995, 0.539204274194, 0.539743792118, 0.542257448251, 0.543191981222, 0.54415669717, 0.545124845911, 0.546421082543, 0.548704392123, 0.551006864138, 0.551639517385, 0.554308295208, 0.554286639155, 0.555277851271, 0.557294734318, 0.558661984326, 0.560735788966, 0.561777981725, 0.56352691872, 0.56493793563, 0.567793486879, 0.568888208725, 0.57034433091, 0.570356276084, 0.572191934216, 0.573659294894, 0.574044772549, 0.575543527534, 0.577054482298, 0.578553389267, 0.580816407199, 0.582777514902, 0.58546601664, 0.587013469943, 0.586699955875, 0.587164603914, 0.589909772096, 0.590347109603, 0.591182964289, 0.593622213241, 0.595632610766, 0.596088895792)+cms.vdouble(0.596547219627, 0.597007595967, 0.59905000376, 0.59875479532, 0.600402032492, 0.601476624751, 0.602375325225, 0.604611692334, 0.606308877758, 0.609454442616, 0.612487831768, 0.615198564485, 0.616345932738, 0.617679752716, 0.620364786891, 0.621560433387, 0.622923085077, 0.622771613804, 0.627021967049, 0.629464905691, 0.630636176618, 0.632414811477, 0.635412621765, 0.636860801036, 0.638359784998, 0.642296739762, 0.64372019874, 0.646732193739, 0.649419880322, 0.653004922396, 0.654536589972, 0.657493324695, 0.65872664624, 0.662116021475, 0.666837437051, 0.668332370106, 0.670194812833, 0.671514734427, 0.671514734427, 0.672844093862, 0.672352092845, 0.678607302272, 0.681605563269, 0.681020472505, 0.682082800049, 0.684848783291, 0.686959317553, 0.690918830645, 0.691984674993, 0.694695530605, 0.697455651971, 0.700496795416, 0.703736816672, 0.704917801757, 0.706220722464, 0.707858889942, 0.71018130526, 0.714321429016, 0.720425948473, 0.724503155871, 0.727977004139, 0.730714468803, 0.735012362904, 0.739735756402, 0.750660954162, 0.757799352464, 0.760515374245, 0.768004247792, 0.77935327172, 0.784646260495, 0.789164336822, 0.791123170072, 0.795276817521, 0.804299018936, 0.819103217408, 0.822961151625, 0.833298258018, 0.842807182616, 0.85334688934, 0.86724344838, 0.872176831791, 0.87195156781, 0.87843961359, 0.891494313173, 0.912879175226, 0.924218217451, 0.937234161591, 0.94206607914, 0.958884557005, 0.959595443343, 0.93904371889, 0.927733482302, 0.93386870405, 0.916051159827, 0.943467586229, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
                min = cms.double(-0.998333333333)
            ),
            nCharged = cms.uint32(1)
        )),
    toTransform = cms.InputTag("hpsTancTausDiscriminationByTancRaw"),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByTancLoose = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        tancCut = cms.PSet(
            cut = cms.double(0.95),
            Producer = cms.InputTag("hpsTancTausDiscriminationByTanc")
        )
    ),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.hpsTancTausDiscriminationByTancMedium = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        tancCut = cms.PSet(
            cut = cms.double(0.97),
            Producer = cms.InputTag("hpsTancTausDiscriminationByTanc")
        )
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByTancRaw = cms.EDProducer("RecoTauMVADiscriminator",
    discriminantOptions = cms.PSet(
        BinnedMaskedHcalIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            mask = cms.PSet(
                finalHcalCone = cms.double(0.08),
                ecalCone = cms.double(0.15),
                hcalCone = cms.double(0.3),
                maxSigmas = cms.double(2)
            ),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(1.0, 1.79, 4.03),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.15, 1.8, 4.03),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.22, 1.81, 4.03),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.27, 1.83, 4.03),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(1.31, 1.84, 4.03),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(1.31, 1.84, 4.03),
            plugin = cms.string('RecoTauDiscriminationBinnedMaskedHCALIsolation')
        ),
        InvariantOpeningAngle = cms.PSet(
            defaultRMS = cms.string('max(0.3/max(pt, 1.0), 0.005)'),
            plugin = cms.string('RecoTauDiscriminantInvariantWidth'),
            decayModes = cms.VPSet(cms.PSet(
                nPiZeros = cms.uint32(1),
                rms = cms.string('2.7e-3 + 0.23/max(pt, 1.0)'),
                nCharged = cms.uint32(1),
                mean = cms.string('5.0e-3 + 0.43/max(pt, 1.0)')
            ), 
                cms.PSet(
                    nPiZeros = cms.uint32(2),
                    rms = cms.string('7.5e-3 + 0.3/max(pt, 1.0)'),
                    nCharged = cms.uint32(1),
                    mean = cms.string('4.7e-3 + 0.9/max(pt, 1.0)')
                ), 
                cms.PSet(
                    nPiZeros = cms.uint32(0),
                    rms = cms.string('0.38/max(pt, 1.0)'),
                    nCharged = cms.uint32(3),
                    mean = cms.string('0.87/max(pt, 1.0)')
                )),
            defaultMean = cms.string('max(0.87/max(pt, 1.0), 0.005)')
        ),
        BinnedMaskedEcalIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            mask = cms.PSet(
                finalHcalCone = cms.double(0.08),
                ecalCone = cms.double(0.15),
                hcalCone = cms.double(0.3),
                maxSigmas = cms.double(2)
            ),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(0.5, 0.85, 1.84),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.63, 0.91, 1.84),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.7, 0.96, 1.85),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.75, 0.99, 1.85),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.79, 1.02, 1.86),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(0.79, 1.02, 1.86),
            plugin = cms.string('RecoTauDiscriminationBinnedMaskedECALIsolation')
        ),
        FlightPathSignificance = cms.PSet(
            discSrc = cms.InputTag("hpsTancTausDiscriminationByFlightPath"),
            plugin = cms.string('RecoTauDiscriminantFromDiscriminator')
        ),
        BinnedTrackIsolation = cms.PSet(
            vtxSource = cms.InputTag("recoTauPileUpVertices"),
            binning = cms.VPSet(cms.PSet(
                binLowEdges = cms.vdouble(0.5, 0.86, 1.87),
                nPUVtx = cms.int32(0)
            ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                    nPUVtx = cms.int32(1)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                    nPUVtx = cms.int32(2)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                    nPUVtx = cms.int32(3)
                ), 
                cms.PSet(
                    binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                    nPUVtx = cms.int32(4)
                )),
            defaultBinning = cms.vdouble(0.52, 0.86, 1.87),
            plugin = cms.string('RecoTauDiscriminationBinnedTrackIsolation')
        )
    ),
    mvas = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        mvaLabel = cms.string('1prong0pi0'),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            mvaLabel = cms.string('1prong1pi0'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            mvaLabel = cms.string('1prong2pi0'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            mvaLabel = cms.string('3prong0pi0'),
            nCharged = cms.uint32(3)
        )),
    remapOutput = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    Prediscriminants = cms.PSet(
        hpsSelect = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        ),
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByLeadingPionPtCut")
        )
    ),
    dbLabel = cms.string('hpstanc')
)


process.hpsTancTausDiscriminationByTancTight = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        tancCut = cms.PSet(
            cut = cms.double(0.985),
            Producer = cms.InputTag("hpsTancTausDiscriminationByTanc")
        )
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByTancVLoose = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        tancCut = cms.PSet(
            cut = cms.double(0.9),
            Producer = cms.InputTag("hpsTancTausDiscriminationByTanc")
        )
    ),
    UseOnlyChargedHadrons = cms.bool(True),
    PFTauProducer = cms.InputTag("hpsTancTaus")
)


process.hpsTancTausDiscriminationByTightElectronRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    ApplyCut_BremCombined = cms.bool(True),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(True),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.hpsTancTausDiscriminationByTightIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.hpsTancTausDiscriminationByTightMuonRejection = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    discriminatorOption = cms.string('noAllArbitrated')
)


process.hpsTancTausDiscriminationByVLooseIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("hpsTancTaus"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        decayMode = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    customOuterCone = cms.double(0.3),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(2.0),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.hpsTightIsolationCleaner = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.hpsVLooseIsolationCleaner = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("combinatoricRecoTaus"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    customOuterCone = cms.double(0.3),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(2.0),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.htMet = cms.EDProducer("METProducer",
    src = cms.InputTag("midPointCone5CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMET'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetAK5 = cms.EDProducer("METProducer",
    src = cms.InputTag("ak5CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETAK5'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetAK7 = cms.EDProducer("METProducer",
    src = cms.InputTag("ak7CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETAK7'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetIC5 = cms.EDProducer("METProducer",
    src = cms.InputTag("iterativeCone5CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETIC5'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetKT4 = cms.EDProducer("METProducer",
    src = cms.InputTag("kt4CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETKT4'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetKT6 = cms.EDProducer("METProducer",
    src = cms.InputTag("kt6CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETKT6'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetSC5 = cms.EDProducer("METProducer",
    src = cms.InputTag("sisCone5CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETSC5'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.htMetSC7 = cms.EDProducer("METProducer",
    src = cms.InputTag("sisCone7CaloJets"),
    METType = cms.string('MET'),
    alias = cms.string('HTMETSC7'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(20.0),
    InputType = cms.string('CaloJetCollection')
)


process.hybridSuperClusters = cms.EDProducer("UnifiedSCCollectionProducer",
    bcCollectionUncleanOnly = cms.string('uncleanOnlyHybridBarrelBasicClusters'),
    scCollection = cms.string(''),
    bcCollection = cms.string('hybridBarrelBasicClusters'),
    uncleanScCollection = cms.InputTag("uncleanedHybridSuperClusters"),
    cleanBcCollection = cms.InputTag("cleanedHybridSuperClusters","hybridBarrelBasicClusters"),
    cleanScCollection = cms.InputTag("cleanedHybridSuperClusters"),
    uncleanBcCollection = cms.InputTag("uncleanedHybridSuperClusters","hybridBarrelBasicClusters"),
    scCollectionUncleanOnly = cms.string('uncleanOnlyHybridSuperClusters')
)


process.ic5CaloJetsL1 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ic5CaloJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ic5CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ic5CaloJets"),
    correctors = cms.vstring('ic5CaloL1L2L3')
)


process.ic5CaloJetsL1L2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ic5CaloJets"),
    correctors = cms.vstring('ic5CaloL1L2L3L6')
)


process.ic5CaloJetsL2 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ic5CaloJets"),
    correctors = cms.vstring('ic5CaloL2Relative')
)


process.ic5CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ic5CaloJets"),
    correctors = cms.vstring('ic5CaloL2L3')
)


process.ic5CaloJetsL2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("ic5CaloJets"),
    correctors = cms.vstring('ic5CaloL2L3L6')
)


process.ic5JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("iterativeCone5CaloJets")
)


process.ic5JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    jets = cms.InputTag("iterativeCone5CaloJets")
)


process.ic5PFJetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    jets = cms.InputTag("iterativeCone5PFJets")
)


process.ic5PFJetsL1 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ic5PFJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.ic5PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ic5PFJets"),
    correctors = cms.vstring('ic5PFL1L2L3')
)


process.ic5PFJetsL1L2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ic5PFJets"),
    correctors = cms.vstring('ic5PFL1L2L3L6')
)


process.ic5PFJetsL2 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ic5PFJets"),
    correctors = cms.vstring('ic5PFL2Relative')
)


process.ic5PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ic5PFJets"),
    correctors = cms.vstring('ic5PFL2L3')
)


process.ic5PFJetsL2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("ic5PFJets"),
    correctors = cms.vstring('ic5PFL2L3L6')
)


process.ic7JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("iterativeCone7CaloJets")
)


process.impactParameterMVABJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('impactParameterMVAComputer'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.impactParameterTagInfos = cms.EDProducer("TrackIPProducer",
    maximumTransverseImpactParameter = cms.double(0.2),
    minimumNumberOfHits = cms.int32(8),
    minimumTransverseMomentum = cms.double(1.0),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    maximumLongitudinalImpactParameter = cms.double(17.0),
    computeProbabilities = cms.bool(True),
    ghostTrackPriorDeltaR = cms.double(0.03),
    jetTracks = cms.InputTag("ak5JetTracksAssociatorAtVertex"),
    jetDirectionUsingGhostTrack = cms.bool(False),
    minimumNumberOfPixelHits = cms.int32(2),
    jetDirectionUsingTracks = cms.bool(False),
    computeGhostTrack = cms.bool(True),
    useTrackQuality = cms.bool(False),
    maximumChiSquared = cms.double(5.0)
)


process.inOutConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    setArbitratedMerged = cms.bool(True),
    TrackProducer = cms.string('ckfInOutTracksFromConversions'),
    setArbitratedMergedEcalGeneral = cms.bool(True),
    setTrackerOnly = cms.bool(False),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(True)
)


process.inOutOutInConversionTrackMerger = cms.EDProducer("ConversionTrackMerger",
    ShareFrac = cms.double(0.19),
    outputPreferCollection = cms.int32(-1),
    trackerOnlyPreferCollection = cms.int32(-1),
    arbitratedMergedPreferCollection = cms.int32(3),
    allowFirstHitShare = cms.bool(True),
    minProb = cms.double(1e-06),
    arbitratedEcalSeededPreferCollection = cms.int32(3),
    checkCharge = cms.bool(True),
    arbitratedMergedEcalGeneralPreferCollection = cms.int32(3),
    TrackProducer2 = cms.string('outInConversionTrackProducer'),
    TrackProducer1 = cms.string('inOutConversionTrackProducer')
)


process.interestingEcalDetIdEB = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etaSize = cms.int32(5),
    phiSize = cms.int32(5)
)


process.interestingEcalDetIdEBU = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("hybridSuperClusters","uncleanOnlyHybridBarrelBasicClusters"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etaSize = cms.int32(5),
    phiSize = cms.int32(5)
)


process.interestingEcalDetIdEE = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("multi5x5BasicClusters","multi5x5EndcapBasicClusters"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etaSize = cms.int32(5),
    phiSize = cms.int32(5)
)


process.interestingEleIsoDetId = cms.EDProducer("EleIsoDetIdCollectionProducer",
    outerRadius = cms.double(0.6),
    interestingDetIdCollection = cms.string(''),
    recHitFlagsToBeExcluded = cms.vint32(3, 5, 9, 10),
    innerRadius = cms.double(0.0),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etCandCut = cms.double(0.0),
    severityLevelCut = cms.int32(4),
    emObjectLabel = cms.InputTag("gsfElectrons"),
    etCut = cms.double(0),
    energyCut = cms.double(0.04)
)


process.interestingEleIsoDetIdEB = cms.EDProducer("EleIsoDetIdCollectionProducer",
    outerRadius = cms.double(0.6),
    interestingDetIdCollection = cms.string(''),
    recHitFlagsToBeExcluded = cms.vint32(3, 5, 9, 10),
    innerRadius = cms.double(0.0),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etCandCut = cms.double(0.0),
    severityLevelCut = cms.int32(4),
    emObjectLabel = cms.InputTag("gsfElectrons"),
    etCut = cms.double(0),
    energyCut = cms.double(0.08)
)


process.interestingEleIsoDetIdEE = cms.EDProducer("EleIsoDetIdCollectionProducer",
    outerRadius = cms.double(0.6),
    interestingDetIdCollection = cms.string(''),
    recHitFlagsToBeExcluded = cms.vint32(3, 5, 9, 10),
    innerRadius = cms.double(0.0),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etCandCut = cms.double(0.0),
    severityLevelCut = cms.int32(4),
    emObjectLabel = cms.InputTag("gsfElectrons"),
    etCut = cms.double(0.1),
    energyCut = cms.double(0.0)
)


process.interestingGamIsoDetId = cms.EDProducer("GamIsoDetIdCollectionProducer",
    outerRadius = cms.double(0.6),
    interestingDetIdCollection = cms.string(''),
    recHitFlagsToBeExcluded = cms.vint32(3, 5, 9, 10),
    innerRadius = cms.double(0.0),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etCandCut = cms.double(0.0),
    severityLevelCut = cms.int32(4),
    emObjectLabel = cms.InputTag("photons"),
    etCut = cms.double(0),
    energyCut = cms.double(0.04)
)


process.interestingGamIsoDetIdEB = cms.EDProducer("GamIsoDetIdCollectionProducer",
    outerRadius = cms.double(0.6),
    interestingDetIdCollection = cms.string(''),
    recHitFlagsToBeExcluded = cms.vint32(3, 5, 9, 10),
    innerRadius = cms.double(0.0),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etCandCut = cms.double(0.0),
    severityLevelCut = cms.int32(4),
    emObjectLabel = cms.InputTag("photons"),
    etCut = cms.double(0),
    energyCut = cms.double(0.08)
)


process.interestingGamIsoDetIdEE = cms.EDProducer("GamIsoDetIdCollectionProducer",
    outerRadius = cms.double(0.6),
    interestingDetIdCollection = cms.string(''),
    recHitFlagsToBeExcluded = cms.vint32(3, 5, 9, 10),
    innerRadius = cms.double(0.0),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etCandCut = cms.double(0.0),
    severityLevelCut = cms.int32(4),
    emObjectLabel = cms.InputTag("photons"),
    etCut = cms.double(0.1),
    energyCut = cms.double(0.0)
)


process.interestingTrackEcalDetIds = cms.EDProducer("InterestingTrackEcalDetIdProducer",
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    TrackCollection = cms.InputTag("generalTracks"),
    MinTrackPt = cms.double(50.0)
)


process.isoDepElectronWithCharged = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.isoDepElectronWithNeutral = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.isoDepElectronWithPhotons = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedElectrons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.isoDepPhotonWithCharged = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.isoDepPhotonWithNeutral = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.isoDepPhotonWithPhotons = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag("pfSelectedPhotons"),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotons"),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.isoDeposits = cms.EDProducer("CandIsoDepositProducer",
    src = cms.InputTag(""),
    MultipleDepositsFlag = cms.bool(False),
    trackType = cms.string('candidate'),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(99999.99),
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(99999.99),
        inputCandView = cms.InputTag(""),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string('')
    )
)


process.isoValElectronWithCharged = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("isoDepElectronWithCharged"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.isoValElectronWithNeutral = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("isoDepElectronWithNeutral"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.isoValElectronWithPhotons = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("isoDepElectronWithPhotons"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.isoValPhotonWithCharged = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("isoDepPhotonWithCharged"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring(),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.isoValPhotonWithNeutral = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("isoDepPhotonWithNeutral"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.isoValPhotonWithPhotons = cms.EDProducer("CandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        src = cms.InputTag("isoDepPhotonWithPhotons"),
        deltaR = cms.double(0.4),
        weight = cms.string('1'),
        vetos = cms.vstring('Threshold(0.5)'),
        skipDefaultVeto = cms.bool(True),
        mode = cms.string('sum')
    ))
)


process.iterTracks = cms.EDProducer("SimpleTrackListMerger",
    ShareFrac = cms.double(0.19),
    promoteTrackQuality = cms.bool(True),
    MinPT = cms.double(0.05),
    copyExtras = cms.untracked.bool(False),
    Epsilon = cms.double(-0.001),
    allowFirstHitShare = cms.bool(True),
    newQuality = cms.string('confirmed'),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    TrackProducer2 = cms.string('merge4th5thTracks'),
    TrackProducer1 = cms.string('merge2nd3rdTracks')
)


process.iterativeCone3HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    doAreaFastjet = cms.bool(True),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.3)
)


process.iterativeCone4HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    doAreaFastjet = cms.bool(True),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.4)
)


process.iterativeCone5CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("towerMaker"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(True),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.3),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.4),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('CaloJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.5)
)


process.iterativeCone5CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('IterativeCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.iterativeCone5GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.5)
)


process.iterativeCone5GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('IterativeCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.iterativeCone5GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('IterativeCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.iterativeCone5HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    doAreaFastjet = cms.bool(True),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.5)
)


process.iterativeCone5JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("iterativeCone5CaloJets"),
    jet2TracksAtCALO = cms.InputTag("iterativeCone5JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("iterativeCone5JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.5)
)


process.iterativeCone5JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator"),
    jets = cms.InputTag("iterativeCone5CaloJets")
)


process.iterativeCone5JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    jets = cms.InputTag("iterativeCone5CaloJets")
)


process.iterativeCone5PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("particleFlow"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.4),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.5)
)


process.iterativeCone5TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    MinVtxNdof = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    UseOnlyVertexTracks = cms.bool(False),
    radiusPU = cms.double(0.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    DxyTrVtxMax = cms.double(0.2),
    nSigmaPU = cms.double(1.0),
    MaxVtxZ = cms.double(15.0),
    DzTrVtxMax = cms.double(1),
    doPUOffsetCorr = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    jetType = cms.string('TrackJet'),
    inputEMin = cms.double(0.0),
    src = cms.InputTag("trackRefsForJets"),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.5)
)


process.iterativeCone7HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    doAreaFastjet = cms.bool(True),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('IterativeCone'),
    rParam = cms.double(0.7)
)


process.jetBProbabilityBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('jetBProbability'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.jetProbabilityBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('jetProbability'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.kt3HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    doAreaFastjet = cms.bool(True),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.3)
)


process.kt4CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("towerMaker"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(True),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.3),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.4),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('CaloJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.4)
)


process.kt4CaloJetsL1 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt4CaloJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.kt4CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt4CaloJets"),
    correctors = cms.vstring('kt4CaloL1L2L3')
)


process.kt4CaloJetsL1L2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt4CaloJets"),
    correctors = cms.vstring('kt4CaloL1L2L3L6')
)


process.kt4CaloJetsL2 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt4CaloJets"),
    correctors = cms.vstring('kt4CaloL2Relative')
)


process.kt4CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt4CaloJets"),
    correctors = cms.vstring('kt4CaloL2L3')
)


process.kt4CaloJetsL2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt4CaloJets"),
    correctors = cms.vstring('kt4CaloL2L3L6')
)


process.kt4CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.4),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.kt4GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.4)
)


process.kt4GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.4),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt4GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.4),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt4HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    doAreaFastjet = cms.bool(True),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.4)
)


process.kt4JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("kt4CaloJets"),
    jet2TracksAtCALO = cms.InputTag("kt4JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("kt4JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.5)
)


process.kt4JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("kt4CaloJets")
)


process.kt4JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator"),
    jets = cms.InputTag("kt4CaloJets")
)


process.kt4JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    jets = cms.InputTag("kt4CaloJets")
)


process.kt4PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("particleFlow"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.4),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.4)
)


process.kt4PFJetsL1 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt4PFJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.kt4PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt4PFJets"),
    correctors = cms.vstring('kt4PFL1L2L3')
)


process.kt4PFJetsL1L2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt4PFJets"),
    correctors = cms.vstring('kt4PFL1L2L3L6')
)


process.kt4PFJetsL2 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt4PFJets"),
    correctors = cms.vstring('kt4PFL2Relative')
)


process.kt4PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt4PFJets"),
    correctors = cms.vstring('kt4PFL2L3')
)


process.kt4PFJetsL2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt4PFJets"),
    correctors = cms.vstring('kt4PFL2L3L6')
)


process.kt4TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    MinVtxNdof = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    UseOnlyVertexTracks = cms.bool(False),
    radiusPU = cms.double(0.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    DxyTrVtxMax = cms.double(0.2),
    nSigmaPU = cms.double(1.0),
    MaxVtxZ = cms.double(15.0),
    DzTrVtxMax = cms.double(1),
    doPUOffsetCorr = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    jetType = cms.string('TrackJet'),
    inputEMin = cms.double(0.0),
    src = cms.InputTag("trackRefsForJets"),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.4)
)


process.kt6CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6CaloJetsL1 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt6CaloJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.kt6CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt6CaloJets"),
    correctors = cms.vstring('kt6CaloL1L2L3')
)


process.kt6CaloJetsL1L2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt6CaloJets"),
    correctors = cms.vstring('kt6CaloL1L2L3L6')
)


process.kt6CaloJetsL2 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt6CaloJets"),
    correctors = cms.vstring('kt6CaloL2Relative')
)


process.kt6CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt6CaloJets"),
    correctors = cms.vstring('kt6CaloL2L3')
)


process.kt6CaloJetsL2L3L6 = cms.EDProducer("CaloJetCorrectionProducer",
    src = cms.InputTag("kt6CaloJets"),
    correctors = cms.vstring('kt6CaloL2L3L6')
)


process.kt6CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.kt6GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6HiGenJets = cms.EDProducer("SubEventGenJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("hiGenParticlesForJets"),
    doAreaFastjet = cms.bool(True),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('Kt'),
    rParam = cms.double(0.6)
)


process.kt6JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("kt6CaloJets")
)


process.kt6PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.6),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.kt6PFJetsL1 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt6PFJets"),
    correctors = cms.vstring('L1Fastjet')
)


process.kt6PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt6PFJets"),
    correctors = cms.vstring('kt6PFL1L2L3')
)


process.kt6PFJetsL1L2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt6PFJets"),
    correctors = cms.vstring('kt6PFL1L2L3L6')
)


process.kt6PFJetsL2 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt6PFJets"),
    correctors = cms.vstring('kt6PFL2Relative')
)


process.kt6PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt6PFJets"),
    correctors = cms.vstring('kt6PFL2L3')
)


process.kt6PFJetsL2L3L6 = cms.EDProducer("PFJetCorrectionProducer",
    src = cms.InputTag("kt6PFJets"),
    correctors = cms.vstring('kt6PFL2L3L6')
)


process.kt6TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('Kt'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    rParam = cms.double(0.6),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("trackRefsForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.l1GtRecord = cms.EDProducer("L1GlobalTriggerRecordProducer",
    L1GtReadoutRecordTag = cms.InputTag("gtDigis")
)


process.l1GtTriggerMenuLite = cms.EDProducer("L1GtTriggerMenuLiteProducer")


process.l1extraParticles = cms.EDProducer("L1ExtraParticlesProd",
    centralBxOnly = cms.bool(False),
    tauJetSource = cms.InputTag("gctDigis","tauJets"),
    etTotalSource = cms.InputTag("gctDigis"),
    nonIsolatedEmSource = cms.InputTag("gctDigis","nonIsoEm"),
    htMissSource = cms.InputTag("gctDigis"),
    etMissSource = cms.InputTag("gctDigis"),
    produceMuonParticles = cms.bool(True),
    hfRingEtSumsSource = cms.InputTag("gctDigis"),
    forwardJetSource = cms.InputTag("gctDigis","forJets"),
    ignoreHtMiss = cms.bool(False),
    centralJetSource = cms.InputTag("gctDigis","cenJets"),
    produceCaloParticles = cms.bool(True),
    muonSource = cms.InputTag("gtDigis"),
    isolatedEmSource = cms.InputTag("gctDigis","isoEm"),
    etHadSource = cms.InputTag("gctDigis"),
    hfRingBitCountsSource = cms.InputTag("gctDigis")
)


process.logErrorHarvester = cms.EDProducer("LogErrorHarvester")


process.lumiProducer = cms.EDProducer("LumiProducer",
    lumiversion = cms.untracked.string('0001'),
    ncacheEntries = cms.untracked.uint32(5),
    connect = cms.string('frontier://LumiProd/CMS_LUMI_PROD')
)


process.merge2nd3rdTracks = cms.EDProducer("SimpleTrackListMerger",
    ShareFrac = cms.double(0.19),
    promoteTrackQuality = cms.bool(True),
    MinPT = cms.double(0.05),
    copyExtras = cms.untracked.bool(False),
    Epsilon = cms.double(-0.001),
    allowFirstHitShare = cms.bool(True),
    newQuality = cms.string('confirmed'),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    TrackProducer2 = cms.string('thStep'),
    TrackProducer1 = cms.string('secStep')
)


process.merge4th5thTracks = cms.EDProducer("SimpleTrackListMerger",
    ShareFrac = cms.double(0.19),
    promoteTrackQuality = cms.bool(True),
    MinPT = cms.double(0.05),
    copyExtras = cms.untracked.bool(False),
    Epsilon = cms.double(-0.001),
    allowFirstHitShare = cms.bool(True),
    newQuality = cms.string('confirmed'),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    TrackProducer2 = cms.string('tobtecStep'),
    TrackProducer1 = cms.string('pixellessStep')
)


process.mergedStandAloneMuonSeeds = cms.EDProducer("MuonSeedMerger",
    SeedCollections = cms.VInputTag(cms.InputTag("ancientMuonSeed"), cms.InputTag("MuonSeed"))
)


process.mergedSuperClusters = cms.EDProducer("SuperClusterMerger",
    src = cms.VInputTag(cms.InputTag("correctedHybridSuperClusters"), cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"))
)


process.mergedtruth = cms.EDProducer("TrackingTruthProducer",
    vertexDistanceCut = cms.double(0.003),
    simHitCollections = cms.PSet(
        muon = cms.vstring('g4SimHitsMuonDTHits', 
            'g4SimHitsMuonCSCHits', 
            'g4SimHitsMuonRPCHits'),
        tracker = cms.vstring('g4SimHitsTrackerHitsTIBLowTof', 
            'g4SimHitsTrackerHitsTIBHighTof', 
            'g4SimHitsTrackerHitsTIDLowTof', 
            'g4SimHitsTrackerHitsTIDHighTof', 
            'g4SimHitsTrackerHitsTOBLowTof', 
            'g4SimHitsTrackerHitsTOBHighTof', 
            'g4SimHitsTrackerHitsTECLowTof', 
            'g4SimHitsTrackerHitsTECHighTof'),
        pixel = cms.vstring('g4SimHitsTrackerHitsPixelBarrelLowTof', 
            'g4SimHitsTrackerHitsPixelBarrelHighTof', 
            'g4SimHitsTrackerHitsPixelEndcapLowTof', 
            'g4SimHitsTrackerHitsPixelEndcapHighTof')
    ),
    simHitLabel = cms.string('g4SimHits'),
    volumeRadius = cms.double(1200.0),
    removeDeadModules = cms.bool(False),
    mergedBremsstrahlung = cms.bool(True),
    HepMCDataLabels = cms.vstring('VtxSmeared', 
        'generator', 
        'PythiaSource', 
        'source'),
    useMultipleHepMCLabels = cms.bool(False),
    volumeZ = cms.double(3000.0)
)


process.mergedtruthNoSimHits = cms.EDProducer("TrackingTruthProducer",
    removeDeadModules = cms.bool(False),
    simHitCollections = cms.PSet(
        muon = cms.vstring(),
        tracker = cms.vstring(),
        pixel = cms.vstring()
    ),
    simHitLabel = cms.string('g4SimHits'),
    volumeRadius = cms.double(1200.0),
    vertexDistanceCut = cms.double(0.003),
    mergedBremsstrahlung = cms.bool(True),
    HepMCDataLabels = cms.vstring('VtxSmeared', 
        'generator', 
        'PythiaSource', 
        'source'),
    volumeZ = cms.double(3000.0),
    useMultipleHepMCLabels = cms.bool(False)
)


process.met = cms.EDProducer("METProducer",
    resolutionsEra = cms.string('Spring10'),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HF_PhiResPar = cms.vdouble(0.05022),
    HE_PhiResPar = cms.vdouble(0.02511),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    PF_PhiResType7 = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0),
    src = cms.InputTag("towerMaker"),
    METType = cms.string('CaloMET'),
    calculateSignificance = cms.bool(True),
    alias = cms.string('RawCaloMET'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(0.3),
    InputType = cms.string('CandidateCollection')
)


process.metHO = cms.EDProducer("METProducer",
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    alias = cms.string('RawCaloMETHO'),
    HF_PhiResPar = cms.vdouble(0.05022),
    PF_PhiResType7 = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    noHF = cms.bool(False),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsEra = cms.string('Spring10'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    InputType = cms.string('CandidateCollection'),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    METType = cms.string('CaloMET'),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    globalThreshold = cms.double(0.3),
    EB_PhiResPar = cms.vdouble(0.00502),
    src = cms.InputTag("towerMakerWithHO"),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    resolutionsAlgo = cms.string('AK5PF'),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    calculateSignificance = cms.bool(True),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0)
)


process.metNoHF = cms.EDProducer("METProducer",
    resolutionsEra = cms.string('Spring10'),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HF_PhiResPar = cms.vdouble(0.05022),
    HE_PhiResPar = cms.vdouble(0.02511),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    PF_PhiResType7 = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0),
    src = cms.InputTag("towerMaker"),
    METType = cms.string('CaloMET'),
    calculateSignificance = cms.bool(True),
    alias = cms.string('RawCaloMETNoHF'),
    noHF = cms.bool(True),
    globalThreshold = cms.double(0.3),
    InputType = cms.string('CandidateCollection')
)


process.metNoHFHO = cms.EDProducer("METProducer",
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    alias = cms.string('RawCaloMETNoHFHO'),
    HF_PhiResPar = cms.vdouble(0.05022),
    PF_PhiResType7 = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    noHF = cms.bool(True),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsEra = cms.string('Spring10'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    InputType = cms.string('CandidateCollection'),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    METType = cms.string('CaloMET'),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    globalThreshold = cms.double(0.3),
    EB_PhiResPar = cms.vdouble(0.00502),
    src = cms.InputTag("towerMakerWithHO"),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    resolutionsAlgo = cms.string('AK5PF'),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    calculateSignificance = cms.bool(True),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0)
)


process.metOpt = cms.EDProducer("METProducer",
    resolutionsEra = cms.string('Spring10'),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HF_PhiResPar = cms.vdouble(0.05022),
    HE_PhiResPar = cms.vdouble(0.02511),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    PF_PhiResType7 = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0),
    src = cms.InputTag("calotoweroptmaker"),
    METType = cms.string('CaloMET'),
    calculateSignificance = cms.bool(True),
    alias = cms.string('RawCaloMETOpt'),
    noHF = cms.bool(False),
    globalThreshold = cms.double(0.0),
    InputType = cms.string('CandidateCollection')
)


process.metOptHO = cms.EDProducer("METProducer",
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    alias = cms.string('RawCaloMETOptHO'),
    HF_PhiResPar = cms.vdouble(0.05022),
    PF_PhiResType7 = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    noHF = cms.bool(False),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsEra = cms.string('Spring10'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    InputType = cms.string('CandidateCollection'),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    METType = cms.string('CaloMET'),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    globalThreshold = cms.double(0.0),
    EB_PhiResPar = cms.vdouble(0.00502),
    src = cms.InputTag("calotoweroptmakerWithHO"),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    resolutionsAlgo = cms.string('AK5PF'),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    calculateSignificance = cms.bool(True),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0)
)


process.metOptNoHF = cms.EDProducer("METProducer",
    resolutionsEra = cms.string('Spring10'),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HF_PhiResPar = cms.vdouble(0.05022),
    HE_PhiResPar = cms.vdouble(0.02511),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    PF_PhiResType7 = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0),
    src = cms.InputTag("calotoweroptmaker"),
    METType = cms.string('CaloMET'),
    calculateSignificance = cms.bool(True),
    alias = cms.string('RawCaloMETOptNoHF'),
    noHF = cms.bool(True),
    globalThreshold = cms.double(0.0),
    InputType = cms.string('CandidateCollection')
)


process.metOptNoHFHO = cms.EDProducer("METProducer",
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    alias = cms.string('RawCaloMETOptNoHFHO'),
    HF_PhiResPar = cms.vdouble(0.05022),
    PF_PhiResType7 = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    noHF = cms.bool(True),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsEra = cms.string('Spring10'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    InputType = cms.string('CandidateCollection'),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    METType = cms.string('CaloMET'),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    globalThreshold = cms.double(0.0),
    EB_PhiResPar = cms.vdouble(0.00502),
    src = cms.InputTag("calotoweroptmakerWithHO"),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    resolutionsAlgo = cms.string('AK5PF'),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    calculateSignificance = cms.bool(True),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0)
)


process.metsignificance = cms.EDProducer("METProducer",
    src = cms.InputTag("towerMaker"),
    METType = cms.string('CaloMETSignif'),
    InputType = cms.string('CandidateCollection'),
    HO_PhiResPar = cms.vdouble(0.02511),
    HF_PhiResPar = cms.vdouble(0.05022),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    EE_PhiResPar = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    HB_PhiResPar = cms.vdouble(0.02511),
    alias = cms.string('RawCaloMETSignif'),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    noHF = cms.bool(False),
    globalThreshold = cms.double(0.5),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005)
)


process.mix = cms.EDProducer("MixingModule",
    mixProdStep1 = cms.bool(False),
    mixProdStep2 = cms.bool(False),
    maxBunch = cms.int32(3),
    useCurrentProcessOnly = cms.bool(False),
    LabelPlayback = cms.string(''),
    minBunch = cms.int32(-2),
    bunchspace = cms.int32(50),
    playback = cms.untracked.bool(True),
    input = cms.SecSource("PoolSource",
        nbPileupEvents = cms.PSet(
            histoFileName = cms.untracked.string('histProbFunction.root'),
            seed = cms.untracked.int32(54321),
            probFunctionVariable = cms.vint32(0, 1, 2, 3, 4, 
                5, 6, 7, 8, 9, 
                10, 11, 12, 13, 14, 
                15, 16, 17, 18, 19, 
                20, 21, 22, 23, 24),
            probValue = cms.vdouble(0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 
                0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 
                0.0698146584, 0.0630151648, 0.0526654164, 0.0402754482, 0.0292988928, 
                0.0194384503, 0.0122016783, 0.007207042, 0.004003637, 0.0020278322, 
                0.0010739954, 0.0004595759, 0.0002229748, 0.0001028162, 4.5833715281e-05)
        ),
        OOT_type = cms.untracked.string('Poisson'),
        fileNames = cms.untracked.vstring('/store/relval/CMSSW_4_2_0_pre4/RelValMinBias/GEN-SIM-DIGI-RAW-HLTDEBUG/MC_42_V1-v1/0001/4C824492-2639-E011-9506-001A928116F0.root', 
            '/store/relval/CMSSW_4_2_0_pre4/RelValMinBias/GEN-SIM-DIGI-RAW-HLTDEBUG/MC_42_V1-v1/0000/9ED6309B-C238-E011-A1D6-003048678ADA.root', 
            '/store/relval/CMSSW_4_2_0_pre4/RelValMinBias/GEN-SIM-DIGI-RAW-HLTDEBUG/MC_42_V1-v1/0000/487A3591-CA38-E011-92A8-00248C0BE013.root', 
            '/store/relval/CMSSW_4_2_0_pre4/RelValMinBias/GEN-SIM-DIGI-RAW-HLTDEBUG/MC_42_V1-v1/0000/0E5A4D31-BD38-E011-93B7-0026189437F2.root'),
        manage_OOT = cms.untracked.bool(True),
        sequential = cms.untracked.bool(False),
        type = cms.string('probFunction'),
        seed = cms.int32(1234567)
    )
,
    mixObjects = cms.PSet(
        mixCH = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits","CaloHitsTk"), cms.InputTag("g4SimHits","CastorBU"), cms.InputTag("g4SimHits","CastorFI"), cms.InputTag("g4SimHits","CastorPL"), cms.InputTag("g4SimHits","CastorTU"), 
                cms.InputTag("g4SimHits","EcalHitsEB"), cms.InputTag("g4SimHits","EcalHitsEE"), cms.InputTag("g4SimHits","EcalHitsES"), cms.InputTag("g4SimHits","EcalTBH4BeamHits"), cms.InputTag("g4SimHits","HcalHits"), 
                cms.InputTag("g4SimHits","HcalTB06BeamHits"), cms.InputTag("g4SimHits","ZDCHITS")),
            type = cms.string('PCaloHit'),
            subdets = cms.vstring('CaloHitsTk', 
                'CastorBU', 
                'CastorFI', 
                'CastorPL', 
                'CastorTU', 
                'EcalHitsEB', 
                'EcalHitsEE', 
                'EcalHitsES', 
                'EcalTBH4BeamHits', 
                'HcalHits', 
                'HcalTB06BeamHits', 
                'ZDCHITS')
        ),
        mixHepMC = cms.PSet(
            input = cms.VInputTag(cms.InputTag("generator")),
            type = cms.string('HepMCProduct')
        ),
        mixVertices = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits")),
            type = cms.string('SimVertex')
        ),
        mixSH = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits","BSCHits"), cms.InputTag("g4SimHits","FP420SI"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonRPCHits"), 
                cms.InputTag("g4SimHits","TotemHitsRP"), cms.InputTag("g4SimHits","TotemHitsT1"), cms.InputTag("g4SimHits","TotemHitsT2Gem"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), 
                cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), 
                cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof")),
            type = cms.string('PSimHit'),
            subdets = cms.vstring('BSCHits', 
                'FP420SI', 
                'MuonCSCHits', 
                'MuonDTHits', 
                'MuonRPCHits', 
                'TotemHitsRP', 
                'TotemHitsT1', 
                'TotemHitsT2Gem', 
                'TrackerHitsPixelBarrelHighTof', 
                'TrackerHitsPixelBarrelLowTof', 
                'TrackerHitsPixelEndcapHighTof', 
                'TrackerHitsPixelEndcapLowTof', 
                'TrackerHitsTECHighTof', 
                'TrackerHitsTECLowTof', 
                'TrackerHitsTIBHighTof', 
                'TrackerHitsTIBLowTof', 
                'TrackerHitsTIDHighTof', 
                'TrackerHitsTIDLowTof', 
                'TrackerHitsTOBHighTof', 
                'TrackerHitsTOBLowTof')
        ),
        mixTracks = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits")),
            type = cms.string('SimTrack')
        )
    )
)


process.muIsoDepositCalByAssociatorHits = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("muons"),
        MultipleDepositsFlag = cms.bool(True),
        MuonTrackRefType = cms.string('bestTrkSta'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.025),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.1),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(True),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(False),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(True)
        ),
        Threshold_HO = cms.double(0.1),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    )
)


process.muIsoDepositCalByAssociatorTowers = cms.EDProducer("MuIsoDepositCopyProducer",
    depositNames = cms.vstring('ecal', 
        'hcal', 
        'ho'),
    inputTags = cms.VInputTag(cms.InputTag("muons","ecal"), cms.InputTag("muons","hcal"), cms.InputTag("muons","ho"))
)


process.muIsoDepositJets = cms.EDProducer("MuIsoDepositCopyProducer",
    depositNames = cms.vstring(''),
    inputTags = cms.VInputTag(cms.InputTag("muons","jets"))
)


process.muIsoDepositTk = cms.EDProducer("MuIsoDepositCopyProducer",
    depositNames = cms.vstring(''),
    inputTags = cms.VInputTag(cms.InputTag("muons","tracker"))
)


process.muParamGlobalIsoDepositCalByAssociatorHits = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(True),
        MuonTrackRefType = cms.string('bestTrkSta'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.025),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.1),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(True),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(False),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(True)
        ),
        Threshold_HO = cms.double(0.1),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    )
)


process.muParamGlobalIsoDepositCalByAssociatorTowers = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(True),
        MuonTrackRefType = cms.string('bestTrkSta'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.2),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.5),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(False),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        Threshold_HO = cms.double(0.5),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    )
)


process.muParamGlobalIsoDepositCalEcal = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('track'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        DR_Veto_H = cms.double(0.1),
        Vertex_Constraint_Z = cms.bool(False),
        Threshold_H = cms.double(0.5),
        ComponentName = cms.string('CaloExtractor'),
        Threshold_E = cms.double(0.2),
        DR_Max = cms.double(1.0),
        DR_Veto_E = cms.double(0.07),
        Weight_E = cms.double(1.0),
        Vertex_Constraint_XY = cms.bool(False),
        DepositLabel = cms.untracked.string('EcalPlusHcal'),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        Weight_H = cms.double(0.0)
    )
)


process.muParamGlobalIsoDepositCalHcal = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('track'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        DR_Veto_H = cms.double(0.1),
        Vertex_Constraint_Z = cms.bool(False),
        Threshold_H = cms.double(0.5),
        ComponentName = cms.string('CaloExtractor'),
        Threshold_E = cms.double(0.2),
        DR_Max = cms.double(1.0),
        DR_Veto_E = cms.double(0.07),
        Weight_E = cms.double(0.0),
        Vertex_Constraint_XY = cms.bool(False),
        DepositLabel = cms.untracked.string('EcalPlusHcal'),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        Weight_H = cms.double(1.0)
    )
)


process.muParamGlobalIsoDepositCtfTk = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('bestTrkSta'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("ctfGSWithMaterialTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    )
)


process.muParamGlobalIsoDepositGsTk = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('track'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("ctfGSWithMaterialTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    )
)


process.muParamGlobalIsoDepositJets = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('bestTrkSta'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        ExcludeMuonVeto = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(0.5),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(0.5),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        JetCollectionLabel = cms.InputTag("ak5CaloJets"),
        DR_Veto = cms.double(0.1),
        Threshold = cms.double(5.0)
    )
)


process.muParamGlobalIsoDepositTk = cms.EDProducer("MuIsoDepositProducer",
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('track'),
        InputType = cms.string('MuonCollection')
    ),
    ExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("generalTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    )
)


process.muidAllArbitrated = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('AllArbitrated')
)


process.muidGMStaChiCompatibility = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('GMStaChiCompatibility')
)


process.muidGMTkChiCompatibility = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('GMTkChiCompatibility')
)


process.muidGMTkKinkTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('GMTkKinkTight')
)


process.muidGlobalMuonPromptTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('GlobalMuonPromptTight')
)


process.muidTM2DCompatibilityLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TM2DCompatibilityLoose')
)


process.muidTM2DCompatibilityTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TM2DCompatibilityTight')
)


process.muidTMLastStationAngLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TMLastStationAngLoose')
)


process.muidTMLastStationAngTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TMLastStationAngTight')
)


process.muidTMLastStationLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TMLastStationLoose')
)


process.muidTMLastStationOptimizedLowPtLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TMLastStationOptimizedLowPtLoose')
)


process.muidTMLastStationOptimizedLowPtTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TMLastStationOptimizedLowPtTight')
)


process.muidTMLastStationTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TMLastStationTight')
)


process.muidTMOneStationAngLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TMOneStationAngLoose')
)


process.muidTMOneStationAngTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TMOneStationAngTight')
)


process.muidTMOneStationLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TMOneStationLoose')
)


process.muidTMOneStationTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TMOneStationTight')
)


process.muidTrackerMuonArbitrated = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('TrackerMuonArbitrated')
)


process.multi5x5BasicClusters = cms.EDProducer("Multi5x5ClusterProducer",
    endcapHitCollection = cms.string('EcalRecHitsEE'),
    barrelClusterCollection = cms.string('multi5x5BarrelBasicClusters'),
    IslandEndcapSeedThr = cms.double(0.18),
    doEndcap = cms.bool(True),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(7.4),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    barrelShapeAssociation = cms.string('multi5x5BarrelShapeAssoc'),
    endcapShapeAssociation = cms.string('multi5x5EndcapShapeAssoc'),
    endcapHitProducer = cms.string('ecalRecHit'),
    clustershapecollectionEB = cms.string('multi5x5BarrelShape'),
    VerbosityLevel = cms.string('ERROR'),
    doBarrel = cms.bool(False),
    barrelHitProducer = cms.string('ecalRecHit'),
    RecHitFlagToBeExcluded = cms.vint32(3, 5, 6, 7, 8, 
        9, 10, 14),
    barrelHitCollection = cms.string('EcalRecHitsEB'),
    clustershapecollectionEE = cms.string('multi5x5EndcapShape'),
    endcapClusterCollection = cms.string('multi5x5EndcapBasicClusters'),
    IslandBarrelSeedThr = cms.double(0.5)
)


process.multi5x5PreshowerClusterShape = cms.EDProducer("PreshowerClusterShapeProducer",
    preshStripEnergyCut = cms.double(0.0),
    preshRecHitProducer = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    preshPi0Nstrip = cms.int32(5),
    endcapSClusterProducer = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapSuperClusters"),
    PreshowerClusterShapeCollectionX = cms.string('multi5x5PreshowerXClustersShape'),
    PreshowerClusterShapeCollectionY = cms.string('multi5x5PreshowerYClustersShape'),
    debugLevel = cms.string('INFO')
)


process.multi5x5SuperClusters = cms.EDProducer("Multi5x5SuperClusterProducer",
    barrelSuperclusterCollection = cms.string('multi5x5BarrelSuperClusters'),
    endcapEtaSearchRoad = cms.double(0.14),
    barrelClusterCollection = cms.string('multi5x5BarrelBasicClusters'),
    barrelPhiSearchRoad = cms.double(0.8),
    endcapClusterProducer = cms.string('multi5x5BasicClusters'),
    dynamicPhiRoad = cms.bool(False),
    endcapPhiSearchRoad = cms.double(0.6),
    VerbosityLevel = cms.string('ERROR'),
    seedTransverseEnergyThreshold = cms.double(1.0),
    barrelClusterProducer = cms.string('multi5x5BasicClusters'),
    endcapSuperclusterCollection = cms.string('multi5x5EndcapSuperClusters'),
    barrelEtaSearchRoad = cms.double(0.06),
    doBarrel = cms.bool(False),
    doEndcaps = cms.bool(True),
    endcapClusterCollection = cms.string('multi5x5EndcapBasicClusters'),
    bremRecoveryPset = cms.PSet(
        barrel = cms.PSet(
            cryVec = cms.vint32(16, 13, 11, 10, 9, 
                8, 7, 6, 5, 4, 
                3),
            cryMin = cms.int32(2),
            etVec = cms.vdouble(5.0, 10.0, 15.0, 20.0, 30.0, 
                40.0, 45.0, 55.0, 135.0, 195.0, 
                225.0)
        ),
        endcap = cms.PSet(
            a = cms.double(47.85),
            c = cms.double(0.1201),
            b = cms.double(108.8)
        )
    )
)


process.multi5x5SuperClustersWithPreshower = cms.EDProducer("PreshowerClusterProducer",
    assocSClusterCollection = cms.string(''),
    preshStripEnergyCut = cms.double(0.0),
    preshClusterCollectionY = cms.string('preshowerYClusters'),
    preshClusterCollectionX = cms.string('preshowerXClusters'),
    etThresh = cms.double(0.0),
    preshRecHitProducer = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    endcapSClusterProducer = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapSuperClusters"),
    preshNclust = cms.int32(4),
    debugLevel = cms.string(''),
    preshClusterEnergyCut = cms.double(0.0),
    preshSeededNstrip = cms.int32(15)
)


process.muonCSCDigis = cms.EDProducer("CSCDCCUnpacker",
    PrintEventNumber = cms.untracked.bool(False),
    UseSelectiveUnpacking = cms.bool(True),
    UseExaminer = cms.bool(True),
    ErrorMask = cms.uint32(0),
    InputObjects = cms.InputTag("rawDataCollector"),
    UseFormatStatus = cms.bool(True),
    ExaminerMask = cms.uint32(535557110),
    UnpackStatusDigis = cms.bool(False),
    VisualFEDInspect = cms.untracked.bool(False),
    FormatedEventDump = cms.untracked.bool(False),
    Debug = cms.untracked.bool(False),
    VisualFEDShort = cms.untracked.bool(False)
)


process.muonDTDigis = cms.EDProducer("DTUnpackingModule",
    useStandardFEDid = cms.bool(True),
    inputLabel = cms.InputTag("rawDataCollector"),
    dataType = cms.string('DDU'),
    fedbyType = cms.bool(False),
    readOutParameters = cms.PSet(
        debug = cms.untracked.bool(False),
        rosParameters = cms.PSet(
            writeSC = cms.untracked.bool(True),
            readingDDU = cms.untracked.bool(True),
            performDataIntegrityMonitor = cms.untracked.bool(False),
            readDDUIDfromDDU = cms.untracked.bool(True),
            debug = cms.untracked.bool(False),
            localDAQ = cms.untracked.bool(False)
        ),
        performDataIntegrityMonitor = cms.untracked.bool(False),
        localDAQ = cms.untracked.bool(False)
    ),
    dqmOnly = cms.bool(False)
)


process.muonEcalDetIds = cms.EDProducer("InterestingEcalDetIdProducer",
    inputCollection = cms.InputTag("muons")
)


process.muonMETValueMapProducer = cms.EDProducer("MuonMETValueMapProducer",
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    ),
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    minPt = cms.double(10.0),
    maxNormChi2 = cms.double(10.0),
    minnValidStaHits = cms.int32(1),
    useHO = cms.bool(False),
    minnHits = cms.int32(11),
    useTrackAssociatorPositions = cms.bool(True),
    useRecHits = cms.bool(False),
    maxEta = cms.double(2.5),
    maxd0 = cms.double(0.2),
    towerEtThreshold = cms.double(0.3),
    isAlsoTkMu = cms.bool(True),
    muonInputTag = cms.InputTag("muons")
)


process.muonMix = cms.EDProducer("MixingModule",
    mixProdStep1 = cms.bool(False),
    mixProdStep2 = cms.bool(False),
    maxBunch = cms.int32(3),
    useCurrentProcessOnly = cms.bool(False),
    minBunch = cms.int32(-5),
    bunchspace = cms.int32(25),
    playback = cms.untracked.bool(False),
    LabelPlayback = cms.string(''),
    mixObjects = cms.PSet(
        mixCH = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits","CaloHitsTk"), cms.InputTag("g4SimHits","CastorBU"), cms.InputTag("g4SimHits","CastorFI"), cms.InputTag("g4SimHits","CastorPL"), cms.InputTag("g4SimHits","CastorTU"), 
                cms.InputTag("g4SimHits","EcalHitsEB"), cms.InputTag("g4SimHits","EcalHitsEE"), cms.InputTag("g4SimHits","EcalHitsES"), cms.InputTag("g4SimHits","EcalTBH4BeamHits"), cms.InputTag("g4SimHits","HcalHits"), 
                cms.InputTag("g4SimHits","HcalTB06BeamHits"), cms.InputTag("g4SimHits","ZDCHITS")),
            type = cms.string('PCaloHit'),
            subdets = cms.vstring('CaloHitsTk', 
                'CastorBU', 
                'CastorFI', 
                'CastorPL', 
                'CastorTU', 
                'EcalHitsEB', 
                'EcalHitsEE', 
                'EcalHitsES', 
                'EcalTBH4BeamHits', 
                'HcalHits', 
                'HcalTB06BeamHits', 
                'ZDCHITS')
        ),
        mixHepMC = cms.PSet(
            input = cms.VInputTag(cms.InputTag("generator")),
            type = cms.string('HepMCProduct')
        ),
        mixVertices = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits")),
            type = cms.string('SimVertex')
        ),
        mixSH = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits","BSCHits"), cms.InputTag("g4SimHits","FP420SI"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonRPCHits"), 
                cms.InputTag("g4SimHits","TotemHitsRP"), cms.InputTag("g4SimHits","TotemHitsT1"), cms.InputTag("g4SimHits","TotemHitsT2Gem"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), 
                cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), 
                cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof")),
            type = cms.string('PSimHit'),
            subdets = cms.vstring('BSCHits', 
                'FP420SI', 
                'MuonCSCHits', 
                'MuonDTHits', 
                'MuonRPCHits', 
                'TotemHitsRP', 
                'TotemHitsT1', 
                'TotemHitsT2Gem', 
                'TrackerHitsPixelBarrelHighTof', 
                'TrackerHitsPixelBarrelLowTof', 
                'TrackerHitsPixelEndcapHighTof', 
                'TrackerHitsPixelEndcapLowTof', 
                'TrackerHitsTECHighTof', 
                'TrackerHitsTECLowTof', 
                'TrackerHitsTIBHighTof', 
                'TrackerHitsTIBLowTof', 
                'TrackerHitsTIDHighTof', 
                'TrackerHitsTIDLowTof', 
                'TrackerHitsTOBHighTof', 
                'TrackerHitsTOBLowTof')
        ),
        mixTracks = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits")),
            type = cms.string('SimTrack')
        )
    )
)


process.muonRPCDigis = cms.EDProducer("RPCUnpackingModule",
    InputLabel = cms.InputTag("rawDataCollector"),
    doSynchro = cms.bool(True)
)


process.muonSelectionTypeValueMapProducer = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons"),
    selectionType = cms.string('All')
)


process.muonShowerInformation = cms.EDProducer("MuonShowerInformationProducer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    trackCollection = cms.InputTag("generalTracks"),
    ShowerInformationFillerParameters = cms.PSet(
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                'SteppingHelixPropagatorAlong', 
                'SteppingHelixPropagatorOpposite', 
                'SteppingHelixPropagatorL2Any', 
                'SteppingHelixPropagatorL2Along', 
                'SteppingHelixPropagatorL2Opposite', 
                'SteppingHelixPropagatorAnyNoError', 
                'SteppingHelixPropagatorAlongNoError', 
                'SteppingHelixPropagatorOppositeNoError', 
                'SteppingHelixPropagatorL2AnyNoError', 
                'SteppingHelixPropagatorL2AlongNoError', 
                'SteppingHelixPropagatorL2OppositeNoError', 
                'PropagatorWithMaterial', 
                'PropagatorWithMaterialOpposite', 
                'SmartPropagator', 
                'SmartPropagatorOpposite', 
                'SmartPropagatorAnyOpposite', 
                'SmartPropagatorAny', 
                'SmartPropagatorRK', 
                'SmartPropagatorAnyRK', 
                'StraightLinePropagator'),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        DT4DRecSegmentLabel = cms.InputTag("dt4DSegments"),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        CSCSegmentLabel = cms.InputTag("cscSegments"),
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits")
    ),
    muonCollection = cms.InputTag("muons")
)


process.muonTCMETValueMapProducer = cms.EDProducer("MuonTCMETValueMapProducer",
    vertexRho = cms.double(2.0),
    chi2_muon = cms.double(10),
    muonMinValidStaHits = cms.int32(1),
    vertexZ = cms.double(15.0),
    nLayersTight = cms.int32(0),
    vertexNdof = cms.int32(4),
    ptErr_max = cms.double(0.2),
    useCaloMuons = cms.bool(False),
    eta_max = cms.double(2.65),
    global_muon = cms.bool(True),
    d0cutb = cms.double(0.5),
    d0cuta = cms.double(0.015),
    vertexMaxDZ = cms.double(0.2),
    chi2_max = cms.double(5),
    chi2_max_tight = cms.double(5.0),
    eta_muon = cms.double(2.5),
    track_algos = cms.vint32(),
    tracker_muon = cms.bool(True),
    track_quality = cms.vint32(2),
    nLayers = cms.int32(0),
    muonInputTag = cms.InputTag("muons"),
    pt_max = cms.double(100.0),
    rf_type = cms.int32(1),
    ptErr_max_tight = cms.double(0.2),
    muon_dptrel = cms.double(1),
    deltaR_muon = cms.double(0.05),
    nhits_muon = cms.double(11),
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    usePvtxd0 = cms.bool(False),
    vertexInputTag = cms.InputTag("offlinePrimaryVertices"),
    d0_max = cms.double(0.3),
    maxpt_eta25 = cms.double(0.0),
    nhits_min = cms.double(6),
    trackAlgo_max = cms.int32(8),
    maxpt_eta20 = cms.double(100.0),
    pt_min = cms.double(1.0),
    d0_muon = cms.double(0.2),
    nhits_min_tight = cms.double(9),
    pt_muon = cms.double(10)
)


process.muons = cms.EDProducer("MuonIdProducer",
    MuonCaloCompatibility = cms.PSet(
        allSiPMHO = cms.bool(False),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    TrackExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("generalTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    ),
    ecalDepositName = cms.string('ecal'),
    JetExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        ExcludeMuonVeto = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(0.5),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(0.5),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        JetCollectionLabel = cms.InputTag("ak5CaloJets"),
        DR_Veto = cms.double(0.1),
        Threshold = cms.double(5.0)
    ),
    hcalDepositName = cms.string('hcal'),
    trackDepositName = cms.string('tracker'),
    CaloExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.2),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.5),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(False),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        Threshold_HO = cms.double(0.5),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    ),
    jetDepositName = cms.string('jets'),
    hoDepositName = cms.string('ho'),
    TimingFillerParameters = cms.PSet(
        DTTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            HitError = cms.double(6.0),
            DoWireCorr = cms.bool(True),
            PruneCut = cms.double(10000.0),
            DTsegments = cms.InputTag("dt4DSegments"),
            DropTheta = cms.bool(True),
            RequireBothProjections = cms.bool(False),
            HitsMin = cms.int32(3),
            DTTimeOffset = cms.double(0.0),
            debug = cms.bool(False),
            UseSegmentT0 = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            )
        ),
        CSCTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            CSCsegments = cms.InputTag("csc2DSegments"),
            CSCStripTimeOffset = cms.double(0.0),
            CSCStripError = cms.double(7.0),
            UseStripTime = cms.bool(True),
            debug = cms.bool(False),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            ),
            PruneCut = cms.double(9.0),
            UseWireTime = cms.bool(True)
        ),
        UseDT = cms.bool(True),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseECAL = cms.bool(True)
    ),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        usePosition = cms.bool(True),
        diagonalOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite')
    ),
    maxAbsEta = cms.double(3.0),
    arbitrationCleanerOptions = cms.PSet(
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        ClusterDPhi = cms.double(0.6),
        OverlapDTheta = cms.double(0.02),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        ClusterDTheta = cms.double(0.02)
    ),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    addExtraSoftMuons = cms.bool(False),
    debugWithTruthMatching = cms.bool(False),
    runArbitrationCleaner = cms.bool(True),
    fillEnergy = cms.bool(True),
    inputCollectionTypes = cms.vstring('inner tracks', 
        'links', 
        'outer tracks'),
    minCaloCompatibility = cms.double(0.6),
    fillCaloCompatibility = cms.bool(True),
    minP = cms.double(2.5),
    fillIsolation = cms.bool(True),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    writeIsoDeposits = cms.bool(True),
    maxAbsPullX = cms.double(4.0),
    maxAbsPullY = cms.double(9999.0),
    minPt = cms.double(0.5),
    minPCaloMuon = cms.double(1.0),
    fillMatching = cms.bool(True),
    fillTrackerKink = cms.bool(True),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    inputCollectionLabels = cms.VInputTag(cms.InputTag("generalTracks"), cms.InputTag("globalMuons"), cms.InputTag("standAloneMuons","UpdatedAtVtx")),
    fillGlobalTrackQuality = cms.bool(True),
    maxAbsDx = cms.double(3.0),
    maxAbsDy = cms.double(9999.0),
    minNumberOfMatches = cms.int32(1)
)


process.muonsFromCosmics = cms.EDProducer("MuonIdProducer",
    TrackExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("regionalCosmicTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    ),
    maxAbsEta = cms.double(3.0),
    arbitrationCleanerOptions = cms.PSet(
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        ClusterDPhi = cms.double(0.6),
        OverlapDTheta = cms.double(0.02),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        ClusterDTheta = cms.double(0.02)
    ),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    addExtraSoftMuons = cms.bool(False),
    debugWithTruthMatching = cms.bool(False),
    CaloExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.2),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.5),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(False),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        Threshold_HO = cms.double(0.5),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    ),
    runArbitrationCleaner = cms.bool(True),
    fillEnergy = cms.bool(True),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        usePosition = cms.bool(True),
        diagonalOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite')
    ),
    TimingFillerParameters = cms.PSet(
        DTTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DCosmicSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            HitError = cms.double(6.0),
            DoWireCorr = cms.bool(True),
            PruneCut = cms.double(10000.0),
            DTsegments = cms.InputTag("dt4DCosmicSegments"),
            DropTheta = cms.bool(True),
            RequireBothProjections = cms.bool(False),
            HitsMin = cms.int32(3),
            DTTimeOffset = cms.double(0.0),
            debug = cms.bool(False),
            UseSegmentT0 = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            )
        ),
        CSCTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DCosmicSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            CSCsegments = cms.InputTag("csc2DSegments"),
            CSCStripTimeOffset = cms.double(0.0),
            CSCStripError = cms.double(7.0),
            UseStripTime = cms.bool(True),
            debug = cms.bool(False),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            ),
            PruneCut = cms.double(9.0),
            UseWireTime = cms.bool(True)
        ),
        UseDT = cms.bool(True),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseECAL = cms.bool(True)
    ),
    fillCaloCompatibility = cms.bool(True),
    minCaloCompatibility = cms.double(0.6),
    ecalDepositName = cms.string('ecal'),
    minP = cms.double(2.5),
    fillIsolation = cms.bool(False),
    jetDepositName = cms.string('jets'),
    hoDepositName = cms.string('ho'),
    writeIsoDeposits = cms.bool(True),
    maxAbsPullX = cms.double(4.0),
    maxAbsPullY = cms.double(9999.0),
    minPt = cms.double(0.5),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DCosmicSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    JetExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        ExcludeMuonVeto = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(0.5),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(0.5),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        JetCollectionLabel = cms.InputTag("ak5CaloJets"),
        DR_Veto = cms.double(0.1),
        Threshold = cms.double(5.0)
    ),
    fillGlobalTrackQuality = cms.bool(False),
    minPCaloMuon = cms.double(1.0),
    maxAbsDy = cms.double(9999.0),
    fillMatching = cms.bool(True),
    MuonCaloCompatibility = cms.PSet(
        allSiPMHO = cms.bool(False),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    fillTrackerKink = cms.bool(True),
    inputCollectionTypes = cms.vstring('links', 
        'outer tracks', 
        'inner tracks'),
    hcalDepositName = cms.string('hcal'),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    inputCollectionLabels = cms.VInputTag("globalCosmicMuons", "cosmicMuons", "regionalCosmicTracks"),
    trackDepositName = cms.string('tracker'),
    maxAbsDx = cms.double(3.0),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    minNumberOfMatches = cms.int32(1)
)


process.muonsFromCosmics1Leg = cms.EDProducer("MuonIdProducer",
    TrackExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("regionalCosmicTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    ),
    maxAbsEta = cms.double(3.0),
    arbitrationCleanerOptions = cms.PSet(
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        ClusterDPhi = cms.double(0.6),
        OverlapDTheta = cms.double(0.02),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        ClusterDTheta = cms.double(0.02)
    ),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    addExtraSoftMuons = cms.bool(False),
    debugWithTruthMatching = cms.bool(False),
    CaloExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.2),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.5),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(False),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        Threshold_HO = cms.double(0.5),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    ),
    runArbitrationCleaner = cms.bool(True),
    fillEnergy = cms.bool(True),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        usePosition = cms.bool(True),
        diagonalOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite')
    ),
    TimingFillerParameters = cms.PSet(
        DTTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DCosmicSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            HitError = cms.double(6.0),
            DoWireCorr = cms.bool(True),
            PruneCut = cms.double(10000.0),
            DTsegments = cms.InputTag("dt4DCosmicSegments"),
            DropTheta = cms.bool(True),
            RequireBothProjections = cms.bool(False),
            HitsMin = cms.int32(3),
            DTTimeOffset = cms.double(0.0),
            debug = cms.bool(False),
            UseSegmentT0 = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            )
        ),
        CSCTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DCosmicSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            CSCsegments = cms.InputTag("csc2DSegments"),
            CSCStripTimeOffset = cms.double(0.0),
            CSCStripError = cms.double(7.0),
            UseStripTime = cms.bool(True),
            debug = cms.bool(False),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            ),
            PruneCut = cms.double(9.0),
            UseWireTime = cms.bool(True)
        ),
        UseDT = cms.bool(True),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseECAL = cms.bool(True)
    ),
    fillCaloCompatibility = cms.bool(True),
    minCaloCompatibility = cms.double(0.6),
    ecalDepositName = cms.string('ecal'),
    minP = cms.double(2.5),
    fillIsolation = cms.bool(False),
    jetDepositName = cms.string('jets'),
    hoDepositName = cms.string('ho'),
    writeIsoDeposits = cms.bool(True),
    maxAbsPullX = cms.double(4.0),
    maxAbsPullY = cms.double(9999.0),
    minPt = cms.double(0.5),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DCosmicSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    JetExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        ExcludeMuonVeto = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(0.5),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(0.5),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        JetCollectionLabel = cms.InputTag("ak5CaloJets"),
        DR_Veto = cms.double(0.1),
        Threshold = cms.double(5.0)
    ),
    fillGlobalTrackQuality = cms.bool(False),
    minPCaloMuon = cms.double(1.0),
    maxAbsDy = cms.double(9999.0),
    fillMatching = cms.bool(True),
    MuonCaloCompatibility = cms.PSet(
        allSiPMHO = cms.bool(False),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    fillTrackerKink = cms.bool(True),
    inputCollectionTypes = cms.vstring('links', 
        'outer tracks', 
        'inner tracks'),
    hcalDepositName = cms.string('hcal'),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    inputCollectionLabels = cms.VInputTag("globalCosmicMuons1Leg", "cosmicMuons1Leg", "regionalCosmicTracks"),
    trackDepositName = cms.string('tracker'),
    maxAbsDx = cms.double(3.0),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    minNumberOfMatches = cms.int32(1)
)


process.muonsWithSET = cms.EDProducer("MuonIdProducer",
    TrackExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("generalTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    ),
    maxAbsEta = cms.double(3.0),
    arbitrationCleanerOptions = cms.PSet(
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        ClusterDPhi = cms.double(0.6),
        OverlapDTheta = cms.double(0.02),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        ClusterDTheta = cms.double(0.02)
    ),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    addExtraSoftMuons = cms.bool(False),
    debugWithTruthMatching = cms.bool(False),
    CaloExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.2),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.5),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(False),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        Threshold_HO = cms.double(0.5),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    ),
    runArbitrationCleaner = cms.bool(True),
    fillEnergy = cms.bool(True),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        usePosition = cms.bool(True),
        diagonalOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite')
    ),
    TimingFillerParameters = cms.PSet(
        DTTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            HitError = cms.double(6.0),
            DoWireCorr = cms.bool(True),
            PruneCut = cms.double(10000.0),
            DTsegments = cms.InputTag("dt4DSegments"),
            DropTheta = cms.bool(True),
            RequireBothProjections = cms.bool(False),
            HitsMin = cms.int32(3),
            DTTimeOffset = cms.double(0.0),
            debug = cms.bool(False),
            UseSegmentT0 = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            )
        ),
        CSCTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            CSCsegments = cms.InputTag("csc2DSegments"),
            CSCStripTimeOffset = cms.double(0.0),
            CSCStripError = cms.double(7.0),
            UseStripTime = cms.bool(True),
            debug = cms.bool(False),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            ),
            PruneCut = cms.double(9.0),
            UseWireTime = cms.bool(True)
        ),
        UseDT = cms.bool(True),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseECAL = cms.bool(True)
    ),
    fillCaloCompatibility = cms.bool(True),
    minCaloCompatibility = cms.double(0.6),
    ecalDepositName = cms.string('ecal'),
    minP = cms.double(2.5),
    fillIsolation = cms.bool(True),
    jetDepositName = cms.string('jets'),
    hoDepositName = cms.string('ho'),
    writeIsoDeposits = cms.bool(True),
    maxAbsPullX = cms.double(4.0),
    maxAbsPullY = cms.double(9999.0),
    minPt = cms.double(0.5),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    JetExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        ExcludeMuonVeto = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(0.5),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(0.5),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        JetCollectionLabel = cms.InputTag("ak5CaloJets"),
        DR_Veto = cms.double(0.1),
        Threshold = cms.double(5.0)
    ),
    fillGlobalTrackQuality = cms.bool(True),
    minPCaloMuon = cms.double(1.0),
    maxAbsDy = cms.double(9999.0),
    fillMatching = cms.bool(True),
    MuonCaloCompatibility = cms.PSet(
        allSiPMHO = cms.bool(False),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    fillTrackerKink = cms.bool(True),
    inputCollectionTypes = cms.vstring('inner tracks', 
        'links', 
        'outer tracks'),
    hcalDepositName = cms.string('hcal'),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    inputCollectionLabels = cms.VInputTag("generalTracks", "globalSETMuons", cms.InputTag("standAloneSETMuons","UpdatedAtVtx")),
    trackDepositName = cms.string('tracker'),
    maxAbsDx = cms.double(3.0),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    minNumberOfMatches = cms.int32(1)
)


process.muontiming = cms.EDProducer("MuonTimingProducer",
    TimingFillerParameters = cms.PSet(
        DTTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            HitError = cms.double(6.0),
            DoWireCorr = cms.bool(True),
            PruneCut = cms.double(10000.0),
            DTsegments = cms.InputTag("dt4DSegments"),
            DropTheta = cms.bool(True),
            RequireBothProjections = cms.bool(False),
            HitsMin = cms.int32(3),
            DTTimeOffset = cms.double(0.0),
            debug = cms.bool(False),
            UseSegmentT0 = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            )
        ),
        CSCTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            CSCsegments = cms.InputTag("csc2DSegments"),
            CSCStripTimeOffset = cms.double(0.0),
            CSCStripError = cms.double(7.0),
            UseStripTime = cms.bool(True),
            debug = cms.bool(False),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            ),
            PruneCut = cms.double(9.0),
            UseWireTime = cms.bool(True)
        ),
        UseDT = cms.bool(True),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseECAL = cms.bool(True)
    ),
    MuonCollection = cms.InputTag("muons")
)


process.newClusters = cms.EDProducer("TrackClusterRemover",
    trajectories = cms.InputTag("zeroStepFilter"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(30.0)
    ),
    stripClusters = cms.InputTag("siStripClusters")
)


process.newCombinedSeeds = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag(cms.InputTag("newSeedFromTriplets"), cms.InputTag("newSeedFromPairs")),
    clusterRemovalInfos = cms.VInputTag(cms.InputTag(""), cms.InputTag("newClusters"))
)


process.newPixelRecHits = cms.EDProducer("SiPixelRecHitConverter",
    VerboseLevel = cms.untracked.int32(0),
    src = cms.InputTag("newClusters"),
    CPE = cms.string('PixelCPEGeneric')
)


process.newSeedFromPairs = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        maxElement = cms.uint32(100000),
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.string('newMixedLayerPairs')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("newClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(50000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("newClusters"),
        MaxNumberOfPixelClusters = cms.uint32(10000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            useFixedError = cms.bool(True),
            originRadius = cms.double(0.05),
            sigmaZVertex = cms.double(3.0),
            fixedError = cms.double(0.2),
            VertexCollection = cms.InputTag("pixelVertices"),
            ptMin = cms.double(0.6),
            useFoundVertices = cms.bool(True),
            nSigmaZ = cms.double(3.0)
        ),
        ComponentName = cms.string('GlobalTrackingRegionWithVerticesProducer')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.newSeedFromTriplets = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            ComponentName = cms.string('PixelTripletHLTGenerator'),
            extraHitRPhitolerance = cms.double(0.032),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.037)
        ),
        SeedingLayers = cms.string('PixelLayerTriplets')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(50000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfPixelClusters = cms.uint32(10000)
    ),
    RegionFactoryPSet = cms.PSet(
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot'),
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            originRadius = cms.double(0.2),
            nSigmaZ = cms.double(3.0),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            ptMin = cms.double(0.8)
        )
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.newStripRecHits = cms.EDProducer("SiStripRecHitConverter",
    StripCPE = cms.ESInputTag("StripCPEfromTrackAngleESProducer","StripCPEfromTrackAngle"),
    LazyGetterProducer = cms.InputTag("SiStripRawToClustersFacility"),
    stereoRecHits = cms.string('stereoRecHit'),
    useSiStripQuality = cms.bool(False),
    matchedRecHits = cms.string('matchedRecHit'),
    Regional = cms.bool(False),
    ClusterProducer = cms.InputTag("newClusters"),
    VerbosityLevel = cms.untracked.int32(1),
    rphiRecHits = cms.string('rphiRecHit'),
    Matcher = cms.ESInputTag("SiStripRecHitMatcherESProducer","StandardMatcher"),
    siStripQualityLabel = cms.ESInputTag(""),
    MaskBadAPVFibers = cms.bool(False)
)


process.newTrackCandidateMaker = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("newSeedFromTriplets"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('newTrajectoryBuilder'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.offlineBeamSpot = cms.EDProducer("BeamSpotProducer")


process.offlinePrimaryVertices = cms.EDProducer("PrimaryVertexProducer",
    PVSelParameters = cms.PSet(
        maxDistanceToBeam = cms.double(1.0)
    ),
    verbose = cms.untracked.bool(False),
    algorithm = cms.string('AdaptiveVertexFitter'),
    TkFilterParameters = cms.PSet(
        maxNormalizedChi2 = cms.double(20.0),
        minPt = cms.double(0.0),
        algorithm = cms.string('filter'),
        maxD0Significance = cms.double(5.0),
        trackQuality = cms.string('any'),
        minPixelLayersWithHits = cms.int32(2),
        minSiliconLayersWithHits = cms.int32(5)
    ),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    TrackLabel = cms.InputTag("generalTracks"),
    useBeamConstraint = cms.bool(False),
    minNdof = cms.double(0.0),
    TkClusParameters = cms.PSet(
        TkDAClusParameters = cms.PSet(
            dzCutOff = cms.double(4.0),
            d0CutOff = cms.double(3.0),
            Tmin = cms.double(4.0),
            coolingFactor = cms.double(0.6),
            vertexSize = cms.double(0.01)
        ),
        algorithm = cms.string('DA')
    )
)


process.offlinePrimaryVerticesWithBS = cms.EDProducer("PrimaryVertexProducer",
    PVSelParameters = cms.PSet(
        maxDistanceToBeam = cms.double(1.0)
    ),
    verbose = cms.untracked.bool(False),
    algorithm = cms.string('AdaptiveVertexFitter'),
    TkFilterParameters = cms.PSet(
        maxNormalizedChi2 = cms.double(20.0),
        minPt = cms.double(0.0),
        algorithm = cms.string('filter'),
        maxD0Significance = cms.double(5.0),
        trackQuality = cms.string('any'),
        minPixelLayersWithHits = cms.int32(2),
        minSiliconLayersWithHits = cms.int32(5)
    ),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    TrackLabel = cms.InputTag("generalTracks"),
    useBeamConstraint = cms.bool(True),
    minNdof = cms.double(2.0),
    TkClusParameters = cms.PSet(
        TkDAClusParameters = cms.PSet(
            dzCutOff = cms.double(4.0),
            d0CutOff = cms.double(3.0),
            Tmin = cms.double(4.0),
            coolingFactor = cms.double(0.6),
            vertexSize = cms.double(0.01)
        ),
        algorithm = cms.string('DA')
    )
)


process.outInConversionTrackProducer = cms.EDProducer("ConversionTrackProducer",
    setArbitratedMerged = cms.bool(True),
    TrackProducer = cms.string('ckfOutInTracksFromConversions'),
    setArbitratedMergedEcalGeneral = cms.bool(True),
    setTrackerOnly = cms.bool(False),
    useTrajectory = cms.bool(True),
    setArbitratedEcalSeeded = cms.bool(True)
)


process.particleFlow = cms.EDProducer("PFProducer",
    sumPtTrackIsoForEgammaSC_endcap = cms.double(4.0),
    calibHF_use = cms.bool(False),
    verbose = cms.untracked.bool(False),
    minSignificance = cms.double(2.5),
    pf_nsigma_ECAL = cms.double(0.0),
    usePFConversions = cms.bool(False),
    useCalibrationsFromDB = cms.bool(True),
    calibPFSCEle_endcap = cms.vdouble(1.153, -16.5975, 5.668, -0.1772, 16.22, 
        7.326, 0.0483, -4.068, 9.406),
    pf_convID_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_pfConversionFeb2311.txt'),
    usePFElectrons = cms.bool(True),
    postMuonCleaning = cms.bool(True),
    minSignificanceReduction = cms.double(1.4),
    calibPFSCEle_barrel = cms.vdouble(1.004, -1.536, 22.88, -1.467, 0.3555, 
        0.6227, 14.65, 2051, 25, 0.9932, 
        -0.5444, 0, 0.5438, 0.7109, 7.645, 
        0.2904, 0),
    postHFCleaning = cms.bool(False),
    factors_45 = cms.vdouble(10.0, 100.0),
    cleanedHF = cms.VInputTag(cms.InputTag("particleFlowRecHitHCAL","Cleaned"), cms.InputTag("particleFlowClusterHFHAD","Cleaned"), cms.InputTag("particleFlowClusterHFEM","Cleaned")),
    iCfgCandConnector = cms.PSet(
        nuclCalibFactors = cms.vdouble(0.8, 0.15, 0.5, 0.5, 0.05),
        ptErrorSecondary = cms.double(1.0),
        bCalibPrimary = cms.bool(True),
        bCorrect = cms.bool(True),
        dptRel_MergedTrack = cms.double(5.0),
        dptRel_PrimaryTrack = cms.double(10.0)
    ),
    rejectTracks_Bad = cms.bool(True),
    coneEcalIsoForEgammaSC = cms.double(0.3),
    usePFPhotons = cms.bool(True),
    vertexCollection = cms.InputTag("offlinePrimaryVertices"),
    sumPtTrackIsoForEgammaSC_barrel = cms.double(4.0),
    egammaElectrons = cms.InputTag(""),
    calibHF_a_EMonly = cms.vdouble(0.96945, 0.96701, 0.76309, 0.82268, 0.87583, 
        0.89718, 0.98674, 1.4681, 1.458, 1.458),
    maxDeltaPhiPt = cms.double(7.0),
    sumEtEcalIsoForEgammaSC_endcap = cms.double(2.0),
    pf_electronID_crackCorrection = cms.bool(False),
    minHFCleaningPt = cms.double(5.0),
    nTrackIsoForEgammaSC = cms.uint32(2),
    pf_nsigma_HCAL = cms.double(1.0),
    calibPFSCEle_Fbrem_barrel = cms.vdouble(0.6, 6, -0.0255975, 0.0576727, 0.975442, 
        -0.000546394, 1.26147, 25, -0.02025, 0.04537, 
        0.9728, -0.0008962, 1.172),
    blocks = cms.InputTag("particleFlowBlock"),
    muon_HCAL = cms.vdouble(3.0, 3.0),
    pf_electron_mvaCut = cms.double(-0.1),
    useEGammaElectrons = cms.bool(False),
    nsigma_TRACK = cms.double(1.0),
    pf_electron_output_col = cms.string('electrons'),
    dptRel_DispVtx = cms.double(10.0),
    usePFMuonMomAssign = cms.bool(False),
    useVerticesForNeutral = cms.bool(True),
    pf_conv_mvaCut = cms.double(0.0),
    muons = cms.InputTag("muons"),
    usePFDecays = cms.bool(False),
    useEGammaSupercluster = cms.bool(True),
    calibHF_b_EMHAD = cms.vdouble(1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 
        0.94348, 0.9437, 1.0034, 1.0444, 1.0444),
    rejectTracks_Step45 = cms.bool(True),
    calibHF_b_HADonly = cms.vdouble(1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 
        0.94348, 0.9437, 1.0034, 1.0444, 1.0444),
    sumEtEcalIsoForEgammaSC_barrel = cms.double(1.0),
    calibPFSCEle_Fbrem_endcap = cms.vdouble(0.9, 6.5, -0.0692932, 0.101776, 0.995338, 
        -0.00236548, 0.874998, 1.653, -0.0750184, 0.147, 
        0.923165, 0.000474665, 1.10782),
    coneTrackIsoForEgammaSC = cms.double(0.3),
    usePFNuclearInteractions = cms.bool(True),
    pf_electronID_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_PfElectrons23Jan_IntToFloat.txt'),
    maxSignificance = cms.double(2.5),
    minDeltaMet = cms.double(0.4),
    calibHF_a_EMHAD = cms.vdouble(1.42215, 1.00496, 0.68961, 0.81656, 0.98504, 
        0.98504, 1.00802, 1.0593, 1.4576, 1.4576),
    algoType = cms.uint32(0),
    pt_Error = cms.double(1.0),
    debug = cms.untracked.bool(False),
    muon_ECAL = cms.vdouble(0.5, 0.5),
    calibHF_eta_step = cms.vdouble(0.0, 2.9, 3.0, 3.2, 4.2, 
        4.4, 4.6, 4.8, 5.2, 5.4),
    usePFSCEleCalib = cms.bool(True)
)


process.particleFlowBlock = cms.EDProducer("PFBlockProducer",
    PFClustersHCAL = cms.InputTag("particleFlowClusterHCAL"),
    RecMuons = cms.InputTag("muons"),
    PFClustersHFHAD = cms.InputTag("particleFlowClusterHFHAD"),
    PFConversions = cms.InputTag("pfConversions"),
    useConversions = cms.bool(False),
    nuclearInteractionsPurity = cms.uint32(1),
    PFClustersECAL = cms.InputTag("particleFlowClusterECAL"),
    verbose = cms.untracked.bool(False),
    PFClustersPS = cms.InputTag("particleFlowClusterPS"),
    usePFatHLT = cms.bool(False),
    useIterTracking = cms.bool(True),
    useConvBremPFRecTracks = cms.bool(True),
    useV0 = cms.bool(False),
    RecTracks = cms.InputTag("pfTrack"),
    EGPhotons = cms.InputTag("photons"),
    ConvBremGsfRecTracks = cms.InputTag("pfTrackElec","Secondary"),
    PFClustersHFEM = cms.InputTag("particleFlowClusterHFEM"),
    pf_DPtoverPt_Cut = cms.vdouble(-1.0, -1.0, -1.0, -1.0, -1.0),
    GsfRecTracks = cms.InputTag("pfTrackElec"),
    useNuclear = cms.bool(True),
    useConvBremGsfTracks = cms.bool(False),
    PFNuclear = cms.InputTag("pfDisplacedTrackerVertex"),
    PhotonSelectionCuts = cms.vdouble(10, 2.0, 0.001, 4.2, 0.003, 
        2.2, 0.001, 0.05),
    PFV0 = cms.InputTag("pfV0"),
    debug = cms.untracked.bool(False),
    useEGPhotons = cms.bool(True),
    pf_NHit_Cut = cms.vuint32(3, 3, 3, 3, 3)
)


process.particleFlowClusterECAL = cms.EDProducer("PFClusterProducer",
    posCalcNCrystal = cms.int32(9),
    verbose = cms.untracked.bool(False),
    showerSigma = cms.double(1.5),
    thresh_DoubleSpike_Barrel = cms.double(10.0),
    thresh_Pt_Barrel = cms.double(0.0),
    thresh_Clean_Barrel = cms.double(4.0),
    PFRecHits = cms.InputTag("particleFlowRecHitECAL"),
    cleanRBXandHPDs = cms.bool(False),
    depthCor_B = cms.double(7.4),
    depthCor_A = cms.double(0.89),
    nNeighbours = cms.int32(8),
    thresh_DoubleSpike_Endcap = cms.double(1000000000.0),
    minS4S1_Clean_Barrel = cms.vdouble(0.04, -0.024),
    thresh_Pt_Seed_Barrel = cms.double(0.0),
    thresh_Pt_Endcap = cms.double(0.0),
    thresh_Barrel = cms.double(0.08),
    thresh_Clean_Endcap = cms.double(15.0),
    thresh_Seed_Barrel = cms.double(0.23),
    depthCor_Mode = cms.int32(1),
    depthCor_B_preshower = cms.double(4.0),
    useCornerCells = cms.bool(True),
    depthCor_A_preshower = cms.double(0.89),
    thresh_Endcap = cms.double(0.3),
    thresh_Pt_Seed_Endcap = cms.double(0.15),
    minS4S1_Clean_Endcap = cms.vdouble(0.02, -0.0125),
    thresh_Seed_Endcap = cms.double(0.6),
    minS6S2_DoubleSpike_Endcap = cms.double(-1.0),
    minS6S2_DoubleSpike_Barrel = cms.double(0.04)
)


process.particleFlowClusterHCAL = cms.EDProducer("PFClusterProducer",
    posCalcNCrystal = cms.int32(5),
    verbose = cms.untracked.bool(False),
    showerSigma = cms.double(10.0),
    thresh_DoubleSpike_Barrel = cms.double(1000000000.0),
    thresh_Pt_Barrel = cms.double(0.0),
    thresh_Clean_Barrel = cms.double(100000.0),
    PFRecHits = cms.InputTag("particleFlowRecHitHCAL"),
    cleanRBXandHPDs = cms.bool(True),
    depthCor_B = cms.double(7.4),
    depthCor_A = cms.double(0.89),
    nNeighbours = cms.int32(4),
    thresh_DoubleSpike_Endcap = cms.double(1000000000.0),
    minS4S1_Clean_Barrel = cms.vdouble(0.032, -0.045),
    thresh_Pt_Seed_Barrel = cms.double(0.0),
    thresh_Pt_Endcap = cms.double(0.0),
    thresh_Barrel = cms.double(0.8),
    thresh_Clean_Endcap = cms.double(100000.0),
    thresh_Seed_Barrel = cms.double(0.8),
    depthCor_Mode = cms.int32(0),
    depthCor_B_preshower = cms.double(4.0),
    useCornerCells = cms.bool(True),
    depthCor_A_preshower = cms.double(0.89),
    thresh_Endcap = cms.double(0.8),
    thresh_Pt_Seed_Endcap = cms.double(0.0),
    minS4S1_Clean_Endcap = cms.vdouble(0.032, -0.045),
    thresh_Seed_Endcap = cms.double(1.1),
    minS6S2_DoubleSpike_Endcap = cms.double(-1.0),
    minS6S2_DoubleSpike_Barrel = cms.double(-1.0)
)


process.particleFlowClusterHFEM = cms.EDProducer("PFClusterProducer",
    posCalcNCrystal = cms.int32(5),
    verbose = cms.untracked.bool(False),
    showerSigma = cms.double(10.0),
    thresh_DoubleSpike_Barrel = cms.double(1000000000.0),
    thresh_Pt_Barrel = cms.double(0.0),
    thresh_Clean_Barrel = cms.double(80.0),
    PFRecHits = cms.InputTag("particleFlowRecHitHCAL","HFEM"),
    cleanRBXandHPDs = cms.bool(False),
    depthCor_B = cms.double(7.4),
    depthCor_A = cms.double(0.89),
    nNeighbours = cms.int32(0),
    thresh_DoubleSpike_Endcap = cms.double(1000000000.0),
    minS4S1_Clean_Barrel = cms.vdouble(0.11, -0.19),
    thresh_Pt_Seed_Barrel = cms.double(0.0),
    thresh_Pt_Endcap = cms.double(0.0),
    thresh_Barrel = cms.double(0.8),
    thresh_Clean_Endcap = cms.double(80.0),
    thresh_Seed_Barrel = cms.double(1.4),
    depthCor_Mode = cms.int32(0),
    depthCor_B_preshower = cms.double(4.0),
    useCornerCells = cms.bool(False),
    depthCor_A_preshower = cms.double(0.89),
    thresh_Endcap = cms.double(0.8),
    thresh_Pt_Seed_Endcap = cms.double(0.0),
    minS4S1_Clean_Endcap = cms.vdouble(0.11, -0.19),
    thresh_Seed_Endcap = cms.double(1.4),
    minS6S2_DoubleSpike_Endcap = cms.double(-1.0),
    minS6S2_DoubleSpike_Barrel = cms.double(-1.0)
)


process.particleFlowClusterHFHAD = cms.EDProducer("PFClusterProducer",
    posCalcNCrystal = cms.int32(5),
    verbose = cms.untracked.bool(False),
    showerSigma = cms.double(10.0),
    thresh_DoubleSpike_Barrel = cms.double(1000000000.0),
    thresh_Pt_Barrel = cms.double(0.0),
    thresh_Clean_Barrel = cms.double(120.0),
    PFRecHits = cms.InputTag("particleFlowRecHitHCAL","HFHAD"),
    cleanRBXandHPDs = cms.bool(False),
    depthCor_B = cms.double(7.4),
    depthCor_A = cms.double(0.89),
    nNeighbours = cms.int32(0),
    thresh_DoubleSpike_Endcap = cms.double(1000000000.0),
    minS4S1_Clean_Barrel = cms.vdouble(0.045, -0.08),
    thresh_Pt_Seed_Barrel = cms.double(0.0),
    thresh_Pt_Endcap = cms.double(0.0),
    thresh_Barrel = cms.double(0.8),
    thresh_Clean_Endcap = cms.double(120.0),
    thresh_Seed_Barrel = cms.double(1.4),
    depthCor_Mode = cms.int32(0),
    depthCor_B_preshower = cms.double(4.0),
    useCornerCells = cms.bool(False),
    depthCor_A_preshower = cms.double(0.89),
    thresh_Endcap = cms.double(0.8),
    thresh_Pt_Seed_Endcap = cms.double(0.0),
    minS4S1_Clean_Endcap = cms.vdouble(0.045, -0.08),
    thresh_Seed_Endcap = cms.double(1.4),
    minS6S2_DoubleSpike_Endcap = cms.double(-1.0),
    minS6S2_DoubleSpike_Barrel = cms.double(-1.0)
)


process.particleFlowClusterPS = cms.EDProducer("PFClusterProducer",
    posCalcNCrystal = cms.int32(-1),
    verbose = cms.untracked.bool(False),
    showerSigma = cms.double(0.2),
    thresh_DoubleSpike_Barrel = cms.double(1000000000.0),
    thresh_Pt_Barrel = cms.double(0.0),
    thresh_Clean_Barrel = cms.double(100000.0),
    PFRecHits = cms.InputTag("particleFlowRecHitPS"),
    cleanRBXandHPDs = cms.bool(False),
    depthCor_B = cms.double(7.4),
    depthCor_A = cms.double(0.89),
    nNeighbours = cms.int32(8),
    thresh_DoubleSpike_Endcap = cms.double(1000000000.0),
    minS4S1_Clean_Barrel = cms.vdouble(0.0, 0.0),
    thresh_Pt_Seed_Barrel = cms.double(0.0),
    thresh_Pt_Endcap = cms.double(0.0),
    thresh_Barrel = cms.double(6e-05),
    thresh_Clean_Endcap = cms.double(100000.0),
    thresh_Seed_Barrel = cms.double(0.00012),
    depthCor_Mode = cms.int32(0),
    depthCor_B_preshower = cms.double(4.0),
    useCornerCells = cms.bool(False),
    depthCor_A_preshower = cms.double(0.89),
    thresh_Endcap = cms.double(6e-05),
    thresh_Pt_Seed_Endcap = cms.double(0.0),
    minS4S1_Clean_Endcap = cms.vdouble(0.0, 0.0),
    thresh_Seed_Endcap = cms.double(0.00012),
    minS6S2_DoubleSpike_Endcap = cms.double(-1.0),
    minS6S2_DoubleSpike_Barrel = cms.double(-1.0)
)


process.particleFlowDisplacedVertex = cms.EDProducer("PFDisplacedVertexProducer",
    verbose = cms.untracked.bool(False),
    primaryVertexCut = cms.double(2.9),
    avfParameters = cms.PSet(
        sigmacut = cms.double(6.0),
        ratio = cms.double(0.25),
        Tini = cms.double(256.0)
    ),
    mainVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    vertexIdentifierParameters = cms.PSet(
        logPrimSec_min = cms.double(0.0),
        pt_kink_min = cms.double(3.0),
        masses = cms.vdouble(0.05, 0.485, 0.515, 0.48, 0.52, 
            1.107, 1.125, 0.2),
        angles = cms.vdouble(15, 15),
        pt_min = cms.double(0.5),
        bIdentifyVertices = cms.bool(True),
        looper_eta_max = cms.double(0.1)
    ),
    minAdaptWeight = cms.double(0.5),
    vertexCandidatesLabel = cms.InputTag("particleFlowDisplacedVertexCandidate"),
    transvSize = cms.double(1.0),
    offlineBeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    tracksSelectorParameters = cms.PSet(
        nChi2_max = cms.double(5.0),
        bSelectTracks = cms.bool(True),
        nOuterHits_max = cms.int32(9),
        dxy_min = cms.double(0.2),
        nHits_min = cms.int32(6),
        nChi2_min = cms.double(0.5),
        pt_min = cms.double(0.2),
        quality = cms.string('HighPurity')
    ),
    debug = cms.untracked.bool(False),
    tobCut = cms.double(100),
    longSize = cms.double(5),
    tecCut = cms.double(220)
)


process.particleFlowDisplacedVertexCandidate = cms.EDProducer("PFDisplacedVertexCandidateProducer",
    verbose = cms.untracked.bool(False),
    primaryVertexCut = cms.double(2.2),
    dcaCut = cms.double(0.5),
    dcaPInnerHitCut = cms.double(1000.0),
    tracksSelectorParameters = cms.PSet(
        nChi2_max = cms.double(5.0),
        pt_min = cms.double(0.2)
    ),
    debug = cms.untracked.bool(False),
    trackCollection = cms.InputTag("generalTracks")
)


process.particleFlowRecHitECAL = cms.EDProducer("PFRecHitProducerECAL",
    crossBarrelEndcapBorder = cms.bool(False),
    verbose = cms.untracked.bool(False),
    ecalRecHitsEE = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    ecalRecHitsEB = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    timing_Cleaning = cms.bool(True),
    thresh_Barrel = cms.double(0.08),
    thresh_Cleaning = cms.double(2.0),
    topological_Cleaning = cms.bool(True),
    thresh_Endcap = cms.double(0.3)
)


process.particleFlowRecHitHCAL = cms.EDProducer("PFRecHitProducerHCAL",
    ECAL_Compensate = cms.bool(False),
    ECAL_Dead_Code = cms.uint32(10),
    MinLongTiming_Cut = cms.double(-5.0),
    verbose = cms.untracked.bool(False),
    ECAL_Compensation = cms.double(0.5),
    HCAL_Calib = cms.bool(True),
    weight_HFhad = cms.double(1.0),
    ApplyPulseDPG = cms.bool(False),
    ECAL_Threshold = cms.double(10.0),
    ApplyTimeDPG = cms.bool(False),
    caloTowers = cms.InputTag("towerMakerPF"),
    hcalRecHitsHBHE = cms.InputTag("hbhereco"),
    LongFibre_Fraction = cms.double(0.1),
    MaxShortTiming_Cut = cms.double(5.0),
    thresh_Barrel = cms.double(0.4),
    navigation_HF = cms.bool(True),
    HF_Calib_29 = cms.double(1.07),
    LongFibre_Cut = cms.double(120.0),
    EM_Depth = cms.double(22.0),
    weight_HFem = cms.double(1.0),
    LongShortFibre_Cut = cms.double(1000000000.0),
    MinShortTiming_Cut = cms.double(-5.0),
    MaxLongTiming_Cut = cms.double(5.0),
    thresh_HF = cms.double(0.4),
    thresh_Endcap = cms.double(0.4),
    hcalRecHitsHF = cms.InputTag("hfreco"),
    ShortFibre_Cut = cms.double(60.0),
    ApplyLongShortDPG = cms.bool(True),
    HF_Calib = cms.bool(True),
    HAD_Depth = cms.double(47.0),
    ShortFibre_Fraction = cms.double(0.01),
    HCAL_Calib_29 = cms.double(1.35)
)


process.particleFlowRecHitPS = cms.EDProducer("PFRecHitProducerPS",
    thresh_Barrel = cms.double(7e-06),
    ecalRecHitsES = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    verbose = cms.untracked.bool(False),
    thresh_Endcap = cms.double(7e-06)
)


process.particleFlowSimParticle = cms.EDProducer("PFSimParticleProducer",
    VertexGenerator = cms.PSet(
        type = cms.string('None')
    ),
    MCTruthMatchingInfo = cms.untracked.bool(False),
    RecTracks = cms.InputTag("trackerDrivenElectronSeeds"),
    Fitter = cms.string('KFFittingSmoother'),
    ecalRecHitsEE = cms.InputTag("caloRecHits","EcalRecHitsEE"),
    ecalRecHitsEB = cms.InputTag("caloRecHits","EcalRecHitsEB"),
    process_RecTracks = cms.untracked.bool(False),
    ParticleFilter = cms.PSet(
        EProton = cms.double(5000.0),
        etaMax = cms.double(5.0),
        pTMin = cms.double(0.0),
        EMin = cms.double(0.0)
    ),
    TTRHBuilder = cms.string('WithTrackAngle'),
    famosSimHits = cms.untracked.InputTag("famosSimHits","EcalHitsEB"),
    process_Particles = cms.untracked.bool(True),
    Propagator = cms.string('PropagatorWithMaterial'),
    sim = cms.InputTag("g4SimHits"),
    verbose = cms.untracked.bool(False)
)


process.pfConversions = cms.EDProducer("PFConversionProducer",
    conversionCollection = cms.InputTag("allConversions")
)


process.pfDisplacedTrackerVertex = cms.EDProducer("PFDisplacedTrackerVertexProducer",
    trackColl = cms.InputTag("generalTracks"),
    displacedTrackerVertexColl = cms.InputTag("particleFlowDisplacedVertex")
)


process.pfElectronInterestingEcalDetIdEB = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("pfElectronTranslator","pf"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etaSize = cms.int32(5),
    phiSize = cms.int32(5)
)


process.pfElectronInterestingEcalDetIdEE = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("pfElectronTranslator","pf"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etaSize = cms.int32(5),
    phiSize = cms.int32(5)
)


process.pfElectronTranslator = cms.EDProducer("PFElectronTranslator",
    MVACutBlock = cms.PSet(
        MVACut = cms.double(-0.1)
    ),
    PFBasicClusters = cms.string('pf'),
    PFGsfElectronCore = cms.string('pf'),
    PFGsfElectron = cms.string('pf'),
    PFSuperClusters = cms.string('pf'),
    GSFTracks = cms.InputTag("electronGsfTracks"),
    ElectronMVA = cms.string('pf'),
    PFCandidateElectron = cms.InputTag("particleFlow","electrons"),
    PFPreshowerClusters = cms.string('pf'),
    PFCandidate = cms.InputTag("pfSelectedElectrons"),
    isolationValues = cms.PSet(
        pfNeutralHadrons = cms.InputTag("isoValElectronWithNeutral"),
        pfChargedHadrons = cms.InputTag("isoValElectronWithCharged"),
        pfPhotons = cms.InputTag("isoValElectronWithPhotons")
    ),
    ElectronSC = cms.string('pf')
)


process.pfMet = cms.EDProducer("METProducer",
    resolutionsEra = cms.string('Spring10'),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HF_PhiResPar = cms.vdouble(0.05022),
    HE_PhiResPar = cms.vdouble(0.02511),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    PF_PhiResType7 = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType1 = cms.vdouble(0.002),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0),
    src = cms.InputTag("particleFlow"),
    METType = cms.string('PFMET'),
    calculateSignificance = cms.bool(True),
    alias = cms.string('PFMET'),
    noHF = cms.bool(False),
    jets = cms.InputTag("ak5PFJets"),
    globalThreshold = cms.double(0.0),
    InputType = cms.string('PFCandidateCollection')
)


process.pfNoPileUp = cms.EDProducer("TPPileUpPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlow"),
    enable = cms.bool(True),
    topCollection = cms.InputTag("pfPileUp"),
    name = cms.untracked.string('pileUpOnPFCandidates'),
    verbose = cms.untracked.bool(False)
)


process.pfNuclear = cms.EDProducer("PFNuclearProducer",
    likelihoodCut = cms.double(0.1),
    nuclearColList = cms.VInputTag(cms.InputTag("firstnuclearInteractionMaker"))
)


process.pfPhotonInterestingEcalDetIdEB = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("pfPhotonTranslator","pfphot"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    etaSize = cms.int32(5),
    phiSize = cms.int32(5)
)


process.pfPhotonInterestingEcalDetIdEE = cms.EDProducer("InterestingDetIdCollectionProducer",
    severityLevel = cms.int32(1),
    interestingDetIdCollection = cms.string(''),
    basicClustersLabel = cms.InputTag("pfPhotonTranslator","pfphot"),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etaSize = cms.int32(5),
    phiSize = cms.int32(5)
)


process.pfPhotonTranslator = cms.EDProducer("PFPhotonTranslator",
    hcalTowers = cms.InputTag("towerMaker"),
    PFBasicClusters = cms.string('pfphot'),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    PFSuperClusters = cms.string('pfphot'),
    PFPhotonCores = cms.string('pfphot'),
    PFPhotons = cms.string('pfphot'),
    primaryVertexProducer = cms.string('offlinePrimaryVerticesWithBS'),
    PFPreshowerClusters = cms.string('pfphot'),
    PFCandidate = cms.InputTag("pfSelectedPhotons"),
    hOverEConeSize = cms.double(0.15),
    isolationValues = cms.PSet(
        pfNeutralHadrons = cms.InputTag("isoValPhotonWithNeutral"),
        pfChargedHadrons = cms.InputTag("isoValPhotonWithCharged"),
        pfPhotons = cms.InputTag("isoValPhotonWithPhotons")
    ),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.pfPileUp = cms.EDProducer("PFPileUp",
    PFCandidates = cms.InputTag("particleFlow"),
    Enable = cms.bool(True),
    checkClosestZVertex = cms.bool(True),
    verbose = cms.untracked.bool(False),
    Vertices = cms.InputTag("offlinePrimaryVertices")
)


process.pfRecoTauDiscriminationAgainstCaloMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstCaloMuon",
    srcHcalRecHits = cms.InputTag("hbhereco"),
    minLeadTrackPt = cms.double(15.0),
    maxEnToTrackRatio = cms.double(0.25),
    srcVertex = cms.InputTag("offlinePrimaryVerticesWithBS"),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    srcEcalRecHitsBarrel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    dRhcal = cms.double(25.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    maxEnEcal = cms.double(3.0),
    maxEnHcal = cms.double(8.0),
    dRecal = cms.double(15.0),
    srcEcalRecHitsEndcap = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    minLeadTrackPtFraction = cms.double(0.8)
)


process.pfRecoTauDiscriminationAgainstElectron = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.pfRecoTauDiscriminationAgainstMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    discriminatorOption = cms.string('noSegMatch')
)


process.pfRecoTauDiscriminationByECALIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauDiscriminationByECALIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauDiscriminationByIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauDiscriminationByIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.pfRecoTauDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.pfRecoTauDiscriminationByLeadingTrackPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.pfRecoTauDiscriminationByTrackIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauDiscriminationByTrackIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.pfRecoTauTagInfoProducer = cms.EDProducer("PFRecoTauTagInfoProducer",
    tkminTrackerHitsn = cms.int32(3),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    tkmaxChi2 = cms.double(100.0),
    ChargedHadrCand_AssociationCone = cms.double(0.8),
    ChargedHadrCand_tkminTrackerHitsn = cms.int32(3),
    ChargedHadrCand_tkmaxChi2 = cms.double(100.0),
    tkPVmaxDZ = cms.double(0.2),
    GammaCand_EcalclusMinEt = cms.double(0.5),
    tkminPixelHitsn = cms.int32(0),
    tkminPt = cms.double(0.5),
    PFCandidateProducer = cms.InputTag("particleFlow"),
    ChargedHadrCand_tkminPt = cms.double(0.5),
    ChargedHadrCand_tkmaxipt = cms.double(0.03),
    ChargedHadrCand_tkminPixelHitsn = cms.int32(0),
    UsePVconstraint = cms.bool(True),
    NeutrHadrCand_HcalclusMinEt = cms.double(1.0),
    PFJetTracksAssociatorProducer = cms.InputTag("ak5PFJetTracksAssociatorAtVertex"),
    smearedPVsigmaY = cms.double(0.0015),
    smearedPVsigmaX = cms.double(0.0015),
    smearedPVsigmaZ = cms.double(0.005),
    ChargedHadrCand_tkPVmaxDZ = cms.double(0.2),
    tkmaxipt = cms.double(0.03)
)


process.pfTauDecayMode = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("pfRecoTauProducer")
)


process.pfTauDecayModeHighEfficiency = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("pfRecoTauProducerHighEfficiency")
)


process.pfTauDecayModeIndexProducer = cms.EDProducer("PFRecoTauDecayModeIndexProducer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("pfRecoTauProducer"),
    PFTauDecayModeProducer = cms.InputTag("pfRecoTauDecayModeProducer")
)


process.pfTauDecayModeInsideOut = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("pfRecoTauProducerInsideOut")
)


process.pfTrack = cms.EDProducer("PFTrackProducer",
    TrajInEvents = cms.bool(False),
    TkColList = cms.VInputTag(cms.InputTag("generalTracks")),
    PrimaryVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    GsfTracksInEvents = cms.bool(True),
    UseQuality = cms.bool(True),
    MuColl = cms.InputTag("muons"),
    TrackQuality = cms.string('highPurity'),
    GsfTrackModuleLabel = cms.InputTag("electronGsfTracks")
)


process.pfTrackElec = cms.EDProducer("PFElecTkProducer",
    TrajInEvents = cms.bool(False),
    maxDPhiBremTangGsfAngularCleaning = cms.double(0.05),
    PFConversions = cms.InputTag("pfConversions"),
    useConversions = cms.bool(False),
    MaxConvBremRecoPT = cms.double(49.0),
    ModeMomentum = cms.bool(True),
    PFEcalClusters = cms.InputTag("particleFlowClusterECAL"),
    Propagator = cms.string('fwdElectronPropagator'),
    useV0 = cms.bool(False),
    pf_convBremFinderID_mvaWeightFile = cms.string('RecoParticleFlow/PFTracking/data/MVAnalysis_BDT.weights_convBremFinder_19Apr_IntToFloat.txt'),
    useFifthStepForEcalDrivenGsf = cms.bool(False),
    GsfTrackModuleLabel = cms.InputTag("electronGsfTracks"),
    MinDPhiGsfSC = cms.double(0.15),
    applyEGSelection = cms.bool(False),
    useNuclear = cms.bool(False),
    Fitter = cms.string('GsfElectronFittingSmoother'),
    applyGsfTrackCleaning = cms.bool(True),
    MinDEtaGsfSC = cms.double(0.06),
    PFNuclear = cms.InputTag("pfDisplacedTrackerVertex"),
    useConvBremFinder = cms.bool(True),
    debugGsfCleaning = cms.bool(False),
    applyAlsoGsfAngularCleaning = cms.bool(True),
    PFV0 = cms.InputTag("pfV0"),
    pf_convBremFinderID_mvaCut = cms.double(0.2),
    useFifthStepForTrackerDrivenGsf = cms.bool(False),
    PrimaryVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    MinSCEnergy = cms.double(4.0),
    maxDEtaGsfAngularCleaning = cms.double(0.05),
    TTRHBuilder = cms.string('WithTrackAngle'),
    PFRecTrackLabel = cms.InputTag("pfTrack")
)


process.pfV0 = cms.EDProducer("PFV0Producer",
    V0List = cms.VInputTag(cms.InputTag("generalV0Candidates","Kshort"), cms.InputTag("generalV0Candidates","Lambda"))
)


process.photonCore = cms.EDProducer("PhotonCoreProducer",
    scHybridBarrelProducer = cms.InputTag("correctedHybridSuperClusters"),
    photonCoreCollection = cms.string(''),
    minSCEt = cms.double(10.0),
    pixelSeedProducer = cms.string('electronMergedSeeds'),
    risolveConversionAmbiguity = cms.bool(True),
    scIslandEndcapProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    conversionProducer = cms.InputTag("conversions")
)


process.photons = cms.EDProducer("PhotonProducer",
    usePrimaryVertex = cms.bool(True),
    hcalTowerSumEtOffsetBarrel = cms.double(999999999),
    trackPtSumSolidConeEndcap = cms.double(999999999),
    nTrackSolidConeBarrel = cms.double(999999999),
    ecalRecHitSumEtSlopeEndcap = cms.double(0.0),
    minSCEtBarrel = cms.double(10.0),
    primaryVertexProducer = cms.string('offlinePrimaryVerticesWithBS'),
    hcalTowerSumEtSlopeEndcap = cms.double(0.0),
    posCalc_t0_endcPresh = cms.double(3.6),
    ecalRecHitSumEtOffsetBarrel = cms.double(999999999),
    posCalc_logweight = cms.bool(True),
    hcalTowers = cms.InputTag("towerMaker"),
    nTrackHollowConeBarrel = cms.double(999999999),
    nTrackSolidConeEndcap = cms.double(999999999),
    minR9Endcap = cms.double(0.95),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(7.4),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(6.3),
        T0_endcPresh = cms.double(3.6),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    posCalc_w0 = cms.double(4.2),
    nTrackHollowConeEndcap = cms.double(999999999),
    hbheInstance = cms.string(''),
    maxHoverEEndcap = cms.double(0.5),
    minR9Barrel = cms.double(0.94),
    minSCEtEndcap = cms.double(10.0),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hbheModule = cms.string('hbhereco'),
    maxHoverEBarrel = cms.double(0.5),
    posCalc_t0_barl = cms.double(7.7),
    trackPtSumHollowConeEndcap = cms.double(999999999),
    highEt = cms.double(100.0),
    hcalTowerSumEtSlopeBarrel = cms.double(0.0),
    hOverEConeSize = cms.double(0.15),
    sigmaIetaIetaCutBarrel = cms.double(999999999),
    posCalc_x0 = cms.double(0.89),
    trackPtSumSolidConeBarrel = cms.double(999999999),
    ecalRecHitSumEtSlopeBarrel = cms.double(0.0),
    trackPtSumHollowConeBarrel = cms.double(999999999),
    ecalRecHitSumEtOffsetEndcap = cms.double(999999999),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    isolationSumsCalculatorSet = cms.PSet(
        HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
        HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
        isolationtrackEtaSliceA_Barrel = cms.double(0.015),
        EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
        beamSpotProducer = cms.InputTag("offlineBeamSpot"),
        isolationtrackEtaSliceB_Endcap = cms.double(0.015),
        trackProducer = cms.InputTag("generalTracks"),
        isolationtrackEtaSliceA_Endcap = cms.double(0.015),
        HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
        EcalRecHitThreshEtB_Barrel = cms.double(0.0),
        EcalRecHitThreshEtB_Endcap = cms.double(0.1),
        isolationtrackThresholdA_Endcap = cms.double(0.0),
        EcalRecHitThreshEB_Barrel = cms.double(0.08),
        isolationtrackThresholdB_Endcap = cms.double(0.0),
        HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
        longImpactParameterA_Barrel = cms.double(0.2),
        severityRecHitThreshold = cms.double(5.0),
        EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
        transImpactParameterA_Barrel = cms.double(0.1),
        useNumCrystals = cms.bool(True),
        longImpactParameterB_Barrel = cms.double(0.2),
        longImpactParameterA_Endcap = cms.double(0.2),
        isolationtrackThresholdB_Barrel = cms.double(0.0),
        HcalTowerThreshEA_Endcap = cms.double(0.0),
        EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
        HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
        EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
        TrackConeInnerRadiusA_Endcap = cms.double(0.04),
        HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
        EcalRecHitThreshEtA_Barrel = cms.double(0.0),
        EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
        EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
        transImpactParameterA_Endcap = cms.double(0.1),
        ComponentName = cms.string('isolationSumsCalculator'),
        HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
        modulePhiBoundary = cms.double(0.0087),
        TrackConeOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
        longImpactParameterB_Endcap = cms.double(0.2),
        HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
        transImpactParameterB_Endcap = cms.double(0.1),
        TrackConeOuterRadiusB_Endcap = cms.double(0.3),
        TrackConeInnerRadiusB_Barrel = cms.double(0.04),
        HcalRecHitCollection = cms.InputTag("towerMaker"),
        vetoClustered = cms.bool(False),
        HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
        TrackConeInnerRadiusB_Endcap = cms.double(0.04),
        HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
        moduleEtaBoundary = cms.vdouble(0.0, 0.02, 0.43, 0.46, 0.78, 
            0.81, 1.13, 1.15, 1.45, 1.58),
        EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEA_Barrel = cms.double(0.08),
        HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
        spikeIdThreshold = cms.double(0.95),
        HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
        severityLevelCut = cms.int32(4),
        EcalRecHitThreshEB_Endcap = cms.double(0.0),
        HcalTowerThreshEB_Endcap = cms.double(0.0),
        TrackConeOuterRadiusA_Endcap = cms.double(0.4),
        HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
        HcalTowerThreshEA_Barrel = cms.double(0.0),
        spikeIdString = cms.string('kSwissCrossBordersIncluded'),
        EcalRecHitThreshEtA_Endcap = cms.double(0.1),
        EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeOuterRadiusB_Barrel = cms.double(0.3),
        transImpactParameterB_Barrel = cms.double(0.1),
        isolationtrackThresholdA_Barrel = cms.double(0.0),
        HcalTowerThreshEB_Barrel = cms.double(0.0),
        EcalRecHitThreshEA_Endcap = cms.double(0.0),
        recHitFlagsToBeExcluded = cms.vint32(3, 5, 9, 10),
        EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeInnerRadiusA_Barrel = cms.double(0.04),
        HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
        isolationtrackEtaSliceB_Barrel = cms.double(0.015),
        EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
        HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
        HcalDepth2TowerThreshEB_Barrel = cms.double(0.0)
    ),
    photonCoreProducer = cms.InputTag("photonCore"),
    sigmaIetaIetaCutEndcap = cms.double(999999999),
    posCalc_t0_endc = cms.double(6.3),
    hcalTowerSumEtOffsetEndcap = cms.double(999999999)
)


process.pixelTracks = cms.EDProducer("PixelTrackProducer",
    useFilterWithES = cms.bool(False),
    FilterPSet = cms.PSet(
        chi2 = cms.double(1000.0),
        nSigmaTipMaxTolerance = cms.double(0.0),
        ComponentName = cms.string('PixelTrackFilterByKinematics'),
        nSigmaInvPtTolerance = cms.double(0.0),
        ptMin = cms.double(0.1),
        tipMax = cms.double(1.0)
    ),
    FitterPSet = cms.PSet(
        ComponentName = cms.string('PixelFitterByHelixProjections'),
        TTRHBuilder = cms.string('PixelTTRHBuilderWithoutAngle')
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            nSigmaZ = cms.double(3.0),
            originRadius = cms.double(0.2),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            ptMin = cms.double(0.9)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    CleanerPSet = cms.PSet(
        ComponentName = cms.string('PixelTrackCleanerBySharedHits')
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            ComponentName = cms.string('PixelTripletHLTGenerator'),
            extraHitRPhitolerance = cms.double(0.032),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.037)
        ),
        SeedingLayers = cms.string('PixelLayerTriplets')
    ),
    passLabel = cms.string('pixelTracks')
)


process.pixelVertices = cms.EDProducer("PrimaryVertexProducer",
    PVSelParameters = cms.PSet(
        maxDistanceToBeam = cms.double(2)
    ),
    verbose = cms.untracked.bool(False),
    algorithm = cms.string('AdaptiveVertexFitter'),
    TkFilterParameters = cms.PSet(
        maxNormalizedChi2 = cms.double(100.0),
        minPt = cms.double(0.0),
        algorithm = cms.string('filter'),
        maxD0Significance = cms.double(100.0),
        trackQuality = cms.string('any'),
        minPixelLayersWithHits = cms.int32(3),
        minSiliconLayersWithHits = cms.int32(3)
    ),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    TrackLabel = cms.InputTag("pixelTracks"),
    useBeamConstraint = cms.bool(False),
    minNdof = cms.double(2.0),
    TkClusParameters = cms.PSet(
        TkGapClusParameters = cms.PSet(
            zSeparation = cms.double(0.1)
        ),
        algorithm = cms.string('gap')
    )
)


process.pixellessStep = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('highPurity'),
    minNumberLayers = cms.uint32(5),
    chi2n_par = cms.double(0.25),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.0, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.0, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(0),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("pixellessStepTight"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.0, 4.0),
    d0_par1 = cms.vdouble(1.0, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.pixellessStepLoose = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('loose'),
    minNumberLayers = cms.uint32(5),
    chi2n_par = cms.double(0.5),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.5, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.5, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(1),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("fourthWithMaterialTracks"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.5, 4.0),
    d0_par1 = cms.vdouble(1.5, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.pixellessStepTight = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('tight'),
    minNumberLayers = cms.uint32(5),
    chi2n_par = cms.double(0.35),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.2, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.2, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(0),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("pixellessStepLoose"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.2, 4.0),
    d0_par1 = cms.vdouble(1.2, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.preFilterStepOneTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("stepOneTrackCandidateMaker"),
    clusterRemovalInfo = cms.InputTag("newClusters"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter1'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.preFilterZeroStepTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("newTrackCandidateMaker"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter0'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.preMergingFirstStepTracksWithQuality = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('highPurity'),
    minNumberLayers = cms.uint32(3),
    chi2n_par = cms.double(0.7),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(0.4, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(0.35, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(2),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("firstStepWithTightQuality"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(0.4, 4.0),
    d0_par1 = cms.vdouble(0.3, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.randomEngineStateProducer = cms.EDProducer("RandomEngineStateProducer")


process.recoMuonFromPFProducer = cms.EDProducer("RecoMuonFromPFProducer",
    particles = cms.InputTag("particleFlow"),
    verbose = cms.untracked.bool(False)
)


process.recoTauAK5PFJets08Region = cms.EDProducer("RecoTauJetRegionProducer",
    src = cms.InputTag("ak5PFJets"),
    deltaR = cms.double(0.8),
    pfSrc = cms.InputTag("particleFlow")
)


process.reducedEcalRecHitsEB = cms.EDProducer("ReducedRecHitCollectionProducer",
    interestingDetIdCollections = cms.VInputTag(cms.InputTag("interestingEcalDetIdEB"), cms.InputTag("interestingEcalDetIdEBU"), cms.InputTag("interestingEleIsoDetIdEB"), cms.InputTag("interestingGamIsoDetIdEB"), cms.InputTag("pfElectronInterestingEcalDetIdEB"), 
        cms.InputTag("muonEcalDetIds"), cms.InputTag("interestingTrackEcalDetIds")),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    reducedHitsCollection = cms.string('')
)


process.reducedEcalRecHitsEE = cms.EDProducer("ReducedRecHitCollectionProducer",
    interestingDetIdCollections = cms.VInputTag(cms.InputTag("interestingEcalDetIdEE"), cms.InputTag("interestingEleIsoDetIdEE"), cms.InputTag("interestingGamIsoDetIdEE"), cms.InputTag("pfElectronInterestingEcalDetIdEE"), cms.InputTag("muonEcalDetIds"), 
        cms.InputTag("interestingTrackEcalDetIds")),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    reducedHitsCollection = cms.string('')
)


process.reducedEcalRecHitsES = cms.EDProducer("ReducedESRecHitCollectionProducer",
    interestingDetIds = cms.VInputTag(),
    EndcapSuperClusterCollection = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    scEtThreshold = cms.double(15),
    OutputLabel_ES = cms.string(''),
    EcalRecHitCollectionES = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES")
)


process.reducedHcalRecHits = cms.EDProducer("HcalHitSelection",
    interestingDetIds = cms.VInputTag(),
    hfTag = cms.InputTag("hfreco"),
    hoTag = cms.InputTag("horeco"),
    hbheTag = cms.InputTag("hbhereco"),
    hoSeverityLevel = cms.int32(13)
)


process.regionalCosmicCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("regionalCosmicTrackerSeeds"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('CosmicNavigationSchool'),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.regionalCosmicTrackerSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        MaxNumberOfPixelClusters = cms.uint32(10000),
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(10000),
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        doClusterCheck = cms.bool(False)
    ),
    RegionFactoryPSet = cms.PSet(
        CollectionsPSet = cms.PSet(
            recoMuonsCollection = cms.InputTag("muons"),
            recoTrackMuonsCollection = cms.InputTag("cosmicMuons"),
            recoL2MuonsCollection = cms.InputTag("")
        ),
        ComponentName = cms.string('CosmicRegionalSeedGenerator'),
        RegionInJetsCheckPSet = cms.PSet(
            recoCaloJetsCollection = cms.InputTag("ak5CaloJets"),
            deltaRExclusionSize = cms.double(0.3),
            jetsPtMin = cms.double(5),
            doJetsExclusionCheck = cms.bool(True)
        ),
        ToolsPSet = cms.PSet(
            regionBase = cms.string('seedOnCosmicMuon'),
            thePropagatorName = cms.string('AnalyticalPropagator')
        ),
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            deltaPhiRegion = cms.double(0.1),
            measurementTrackerName = cms.string(''),
            zVertex = cms.double(5),
            deltaEtaRegion = cms.double(0.1),
            ptMin = cms.double(1.0),
            rVertex = cms.double(5)
        )
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('CosmicSeedCreator'),
        maxseeds = cms.int32(10000),
        propagator = cms.string('PropagatorWithMaterial')
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('GenericPairGenerator'),
        LayerPSet = cms.PSet(
            TOB = cms.PSet(
                TTRHBuilder = cms.string('WithTrackAngle')
            ),
            TEC = cms.PSet(
                useRingSlector = cms.bool(False),
                TTRHBuilder = cms.string('WithTrackAngle'),
                minRing = cms.int32(6),
                maxRing = cms.int32(7)
            ),
            layerList = cms.vstring('TOB6+TOB5', 
                'TOB6+TOB4', 
                'TOB6+TOB3', 
                'TOB5+TOB4', 
                'TOB5+TOB3', 
                'TOB4+TOB3', 
                'TEC1_neg+TOB6', 
                'TEC1_neg+TOB5', 
                'TEC1_neg+TOB4', 
                'TEC1_pos+TOB6', 
                'TEC1_pos+TOB5', 
                'TEC1_pos+TOB4')
        )
    ),
    TTRHBuilder = cms.string('WithTrackAngle')
)


process.regionalCosmicTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("regionalCosmicCkfTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('regionalCosmicTracks'),
    NavigationSchool = cms.string('CosmicNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('cosmics'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.roadSearchClouds = cms.EDProducer("RoadSearchCloudMaker",
    MinimalFractionOfUsedLayersPerCloud = cms.double(0.5),
    pixelRecHits = cms.InputTag("siPixelRecHits"),
    MergingFraction = cms.double(0.8),
    MaxDetHitsInCloudPerDetId = cms.uint32(8),
    SeedProducer = cms.InputTag("roadSearchSeeds"),
    DoCloudCleaning = cms.bool(True),
    IncreaseMaxNumberOfConsecutiveMissedLayersPerCloud = cms.uint32(4),
    rphiStripRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    UseStereoRecHits = cms.bool(False),
    ZPhiRoadSize = cms.double(0.06),
    MaximalFractionOfConsecutiveMissedLayersPerCloud = cms.double(0.15),
    stereoStripRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHit"),
    MaximalFractionOfMissedLayersPerCloud = cms.double(0.3),
    scalefactorRoadSeedWindow = cms.double(1.5),
    UsePixelsinRS = cms.bool(True),
    IncreaseMaxNumberOfMissedLayersPerCloud = cms.uint32(3),
    RoadsLabel = cms.string(''),
    MaxRecHitsInCloud = cms.int32(100),
    UseRphiRecHits = cms.bool(False),
    StraightLineNoBeamSpotCloud = cms.bool(False),
    RPhiRoadSize = cms.double(0.02),
    matchedStripRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    MinimumHalfRoad = cms.double(0.55)
)


process.roadSearchSeeds = cms.EDProducer("RoadSearchSeedFinder",
    OuterSeedRecHitAccessMode = cms.string('RPHI'),
    pixelRecHits = cms.InputTag("siPixelRecHits"),
    MaximalEndcapImpactParameter = cms.double(1.2),
    MergeSeedsCenterCut_C = cms.double(0.4),
    MergeSeedsCenterCut_B = cms.double(0.25),
    MergeSeedsCenterCut_A = cms.double(0.05),
    MergeSeedsDifferentHitsCut = cms.uint32(1),
    rphiStripRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    MaximalBarrelImpactParameter = cms.double(0.2),
    PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
    MaxNumberOfSeeds = cms.int32(-1),
    doClusterCheck = cms.bool(False),
    stereoStripRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHit"),
    ClusterCollectionLabel = cms.InputTag("siStripClusters"),
    OuterSeedRecHitAccessUseStereo = cms.bool(False),
    MaxNumberOfCosmicClusters = cms.uint32(300),
    MinimalReconstructedTransverseMomentum = cms.double(1.5),
    PhiRangeForDetIdLookupInRings = cms.double(0.5),
    Mode = cms.string('STANDARD'),
    MaxNumberOfPixelClusters = cms.uint32(300),
    AllNegativeOnly = cms.bool(False),
    RoadsLabel = cms.string(''),
    InnerSeedRecHitAccessMode = cms.string('RPHI'),
    InnerSeedRecHitAccessUseStereo = cms.bool(False),
    OuterSeedRecHitAccessUseRPhi = cms.bool(False),
    MergeSeedsRadiusCut_B = cms.double(0.25),
    MergeSeedsRadiusCut_C = cms.double(0.4),
    matchedStripRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    MergeSeedsRadiusCut_A = cms.double(0.05),
    InnerSeedRecHitAccessUseRPhi = cms.bool(False),
    AllPositiveOnly = cms.bool(False)
)


process.rpcRecHits = cms.EDProducer("RPCRecHitProducer",
    recAlgo = cms.string('RPCRecHitStandardAlgo'),
    deadvecfile = cms.FileInPath('RecoLocalMuon/RPCRecHit/data/RPCDeadVec.dat'),
    rpcDigiLabel = cms.InputTag("muonRPCDigis"),
    maskvecfile = cms.FileInPath('RecoLocalMuon/RPCRecHit/data/RPCMaskVec.dat'),
    recAlgoConfig = cms.PSet(

    ),
    deadSource = cms.string('File'),
    maskSource = cms.string('File')
)


process.rsTrackCandidates = cms.EDProducer("RoadSearchTrackCandidateMaker",
    NumHitCut = cms.int32(5),
    InitialVertexErrorXY = cms.double(0.2),
    HitChi2Cut = cms.double(30.0),
    StraightLineNoBeamSpotCloud = cms.bool(False),
    nFoundMin = cms.int32(4),
    MinimumChunkLength = cms.int32(7),
    TTRHBuilder = cms.string('WithTrackAngle'),
    CosmicTrackMerging = cms.bool(False),
    MeasurementTrackerName = cms.string(''),
    CloudProducer = cms.InputTag("roadSearchClouds"),
    CosmicSeedPt = cms.double(5.0),
    SplitMatchedHits = cms.bool(False)
)


process.rsWithMaterialTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("rsTrackCandidates"),
    clusterRemovalInfo = cms.InputTag(""),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('RKFittingSmoother'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('rs'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.sc5JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("sisCone5CaloJets")
)


process.sc7JetID = cms.EDProducer("JetIDProducer",
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True),
    src = cms.InputTag("sisCone7CaloJets")
)


process.scalerBeamSpot = cms.EDProducer("BeamSpotOnlineProducer",
    maxZ = cms.double(40),
    gtEvmLabel = cms.InputTag("gtEvmDigis"),
    changeToCMSCoordinates = cms.bool(False),
    label = cms.InputTag("scalersRawToDigi"),
    setSigmaZ = cms.double(-1),
    maxRadius = cms.double(2)
)


process.scalersRawToDigi = cms.EDProducer("ScalersRawToDigi",
    scalersInputTag = cms.InputTag("rawDataCollector")
)


process.secClusters = cms.EDProducer("TrackClusterRemover",
    oldClusterRemovalInfo = cms.InputTag("newClusters"),
    trajectories = cms.InputTag("firstfilter"),
    pixelClusters = cms.InputTag("newClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(30.0)
    ),
    stripClusters = cms.InputTag("newClusters")
)


process.secPixelRecHits = cms.EDProducer("SiPixelRecHitConverter",
    VerboseLevel = cms.untracked.int32(0),
    src = cms.InputTag("secClusters"),
    CPE = cms.string('PixelCPEGeneric')
)


process.secStep = cms.EDProducer("SimpleTrackListMerger",
    ShareFrac = cms.double(0.19),
    promoteTrackQuality = cms.bool(True),
    MinPT = cms.double(0.05),
    copyExtras = cms.untracked.bool(False),
    Epsilon = cms.double(-0.001),
    allowFirstHitShare = cms.bool(True),
    newQuality = cms.string('confirmed'),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    TrackProducer2 = cms.string('secStepTrk'),
    TrackProducer1 = cms.string('secStepVtx')
)


process.secStepTrk = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('highPurity'),
    minNumberLayers = cms.uint32(5),
    chi2n_par = cms.double(0.4),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.0, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.0, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(1),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("secStepTrkTight"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.0, 4.0),
    d0_par1 = cms.vdouble(1.0, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.secStepTrkLoose = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(0),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('loose'),
    minNumberLayers = cms.uint32(3),
    chi2n_par = cms.double(0.7),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.6, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.6, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("secWithMaterialTracks"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.6, 4.0),
    d0_par1 = cms.vdouble(1.6, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.secStepTrkTight = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('tight'),
    minNumberLayers = cms.uint32(5),
    chi2n_par = cms.double(0.5),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.1, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.1, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(1),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("secStepTrkLoose"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.1, 4.0),
    d0_par1 = cms.vdouble(1.1, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.secStepVtx = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('highPurity'),
    minNumberLayers = cms.uint32(3),
    chi2n_par = cms.double(0.7),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(0.9, 3.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(0.8, 3.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(1),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("secStepVtxTight"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(0.9, 3.0),
    d0_par1 = cms.vdouble(0.85, 3.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.secStepVtxLoose = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(0),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('loose'),
    minNumberLayers = cms.uint32(3),
    chi2n_par = cms.double(1.6),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.3, 3.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.2, 3.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("secWithMaterialTracks"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.3, 3.0),
    d0_par1 = cms.vdouble(1.2, 3.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.secStepVtxTight = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('tight'),
    minNumberLayers = cms.uint32(3),
    chi2n_par = cms.double(0.7),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.0, 3.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(0.9, 3.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(1),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("secStepVtxLoose"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.0, 3.0),
    d0_par1 = cms.vdouble(0.95, 3.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.secStripRecHits = cms.EDProducer("SiStripRecHitConverter",
    StripCPE = cms.ESInputTag("StripCPEfromTrackAngleESProducer","StripCPEfromTrackAngle"),
    LazyGetterProducer = cms.InputTag("SiStripRawToClustersFacility"),
    stereoRecHits = cms.string('stereoRecHit'),
    useSiStripQuality = cms.bool(False),
    matchedRecHits = cms.string('matchedRecHit'),
    Regional = cms.bool(False),
    ClusterProducer = cms.InputTag("secClusters"),
    VerbosityLevel = cms.untracked.int32(1),
    rphiRecHits = cms.string('rphiRecHit'),
    Matcher = cms.ESInputTag("SiStripRecHitMatcherESProducer","StandardMatcher"),
    siStripQualityLabel = cms.ESInputTag(""),
    MaskBadAPVFibers = cms.bool(False)
)


process.secTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("secTriplets"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('secCkfTrajectoryBuilder'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.secTriplets = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            ComponentName = cms.string('PixelTripletHLTGenerator'),
            extraHitRPhitolerance = cms.double(0.032),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.037)
        ),
        SeedingLayers = cms.string('SecLayerTriplets')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("secClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(50000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("secClusters"),
        MaxNumberOfPixelClusters = cms.uint32(10000)
    ),
    RegionFactoryPSet = cms.PSet(
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot'),
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            originRadius = cms.double(0.2),
            nSigmaZ = cms.double(3.3),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            ptMin = cms.double(0.075)
        )
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.secWithMaterialTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("secTrackCandidates"),
    clusterRemovalInfo = cms.InputTag("secClusters"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter2'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.secfilter = cms.EDProducer("QualityFilter",
    TrackQuality = cms.string('highPurity'),
    recTracks = cms.InputTag("secStep")
)


process.secondaryVertexTagInfos = cms.EDProducer("SecondaryVertexProducer",
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    ),
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(2.5),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(3.0),
        multiplicityMin = cms.uint32(2),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(99999.9),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(0.01),
        distSig3dMin = cms.double(-99999.9)
    ),
    vertexReco = cms.PSet(
        seccut = cms.double(6.0),
        primcut = cms.double(1.8),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001),
        minweight = cms.double(0.5),
        finder = cms.string('avr')
    ),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    constraint = cms.string('BeamSpot'),
    trackIPTagInfos = cms.InputTag("impactParameterTagInfos"),
    minimumTrackWeight = cms.double(0.5),
    usePVError = cms.bool(True),
    trackSort = cms.string('sip3dSig')
)


process.selectDigi = cms.EDProducer("EcalDigiSelector",
    EcalEBDigiTag = cms.InputTag("ecalDigis","ebDigis"),
    nclus_sel = cms.int32(2),
    EcalEEDigiTag = cms.InputTag("ecalDigis","eeDigis"),
    barrelSuperClusterProducer = cms.InputTag("uncleanedHybridSuperClusters"),
    selectedEcalEBDigiCollection = cms.string('selectedEcalEBDigiCollection'),
    selectedEcalEEDigiCollection = cms.string('selectedEcalEEDigiCollection'),
    endcapSuperClusterProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    EcalEBRecHitTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    EcalEERecHitTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    single_cluster_thresh = cms.double(15.0),
    cluster_pt_thresh = cms.double(10.0)
)


process.shrinkingConePFTauDecayModeIndexProducer = cms.EDProducer("PFRecoTauDecayModeIndexProducer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    PFTauDecayModeProducer = cms.InputTag("shrinkingConePFTauDecayModeProducer")
)


process.shrinkingConePFTauDecayModeProducer = cms.EDProducer("PFRecoTauDecayModeDeterminator",
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxPiZeroMass = cms.double(0.2),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1),
    minPtFractionPiZeroes = cms.double(0.15),
    maxNbrOfIterations = cms.int32(10),
    filterTwoProngs = cms.bool(True),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    maxPhotonsToMerge = cms.uint32(2),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationAgainstElectron = cms.EDProducer("PFRecoTauDiscriminationAgainstElectron",
    ApplyCut_ElectronPreID_2D = cms.bool(False),
    ApplyCut_EOverPLead = cms.bool(False),
    ElecPreID0_HOverPLead_minValue = cms.double(0.05),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    ApplyCut_ElectronPreID = cms.bool(False),
    ApplyCut_HcalTotOverPLead = cms.bool(False),
    EOverPLead_minValue = cms.double(0.8),
    ElecPreID1_EOverPLead_maxValue = cms.double(0.8),
    HcalMaxOverPLead_minValue = cms.double(0.1),
    ApplyCut_EmFraction = cms.bool(False),
    EmFraction_maxValue = cms.double(0.9),
    BremCombined_Mass = cms.double(0.55),
    ApplyCut_PFElectronMVA = cms.bool(True),
    PFElectronMVA_maxValue = cms.double(-0.1),
    ApplyCut_HcalMaxOverPLead = cms.bool(False),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    ApplyCut_BremCombined = cms.bool(False),
    Hcal3x3OverPLead_minValue = cms.double(0.1),
    ElecPreID1_HOverPLead_minValue = cms.double(0.15),
    ElecPreID0_EOverPLead_maxValue = cms.double(0.95),
    BremsRecoveryEOverPLead_minValue = cms.double(0.8),
    ApplyCut_EcalCrackCut = cms.bool(False),
    BremCombined_StripSize = cms.double(0.03),
    EOverPLead_maxValue = cms.double(1.8),
    HcalTotOverPLead_minValue = cms.double(0.1),
    ApplyCut_BremsRecoveryEOverPLead = cms.bool(False),
    ApplyCut_Hcal3x3OverPLead = cms.bool(False),
    BremCombined_HOP = cms.double(0.1),
    BremCombined_Fraction = cms.double(0.99),
    BremsRecoveryEOverPLead_maxValue = cms.double(1.8)
)


process.shrinkingConePFTauDiscriminationAgainstMuon = cms.EDProducer("PFRecoTauDiscriminationAgainstMuon",
    a = cms.double(0.5),
    c = cms.double(0.0),
    b = cms.double(0.5),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    discriminatorOption = cms.string('noSegMatch')
)


process.shrinkingConePFTauDiscriminationByECALIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(False),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(True),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByLeadingPionPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByLeadingTrackFinding = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(0.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.shrinkingConePFTauDiscriminationByLeadingTrackPtCut = cms.EDProducer("PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double(5.0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and')
    ),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    UseOnlyChargedHadrons = cms.bool(True)
)


process.shrinkingConePFTauDiscriminationByTaNC = cms.EDProducer("RecoTauMVADiscriminator",
    discriminantOptions = cms.PSet(

    ),
    mvas = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        mvaLabel = cms.string('OneProngNoPiZero'),
        nCharged = cms.uint32(1)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            mvaLabel = cms.string('OneProngOnePiZero'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            mvaLabel = cms.string('OneProngTwoPiZero'),
            nCharged = cms.uint32(1)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            mvaLabel = cms.string('ThreeProngNoPiZero'),
            nCharged = cms.uint32(3)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            mvaLabel = cms.string('ThreeProngOnePiZero'),
            nCharged = cms.uint32(3)
        )),
    remapOutput = cms.bool(True),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    prefailValue = cms.double(-2.0),
    dbLabel = cms.string('')
)


process.shrinkingConePFTauDiscriminationByTaNCfrHalfPercent = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1),
        cut = cms.double(0.9087875)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1),
            cut = cms.double(0.8707145)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1),
            cut = cms.double(0.921793)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3),
            cut = cms.double(0.9451915)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3),
            cut = cms.double(0.9488565)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationByTaNCfrOnePercent = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1),
        cut = cms.double(0.7649845)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1),
            cut = cms.double(0.699697)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1),
            cut = cms.double(0.772231)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3),
            cut = cms.double(0.905071)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3),
            cut = cms.double(0.9238995)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationByTaNCfrQuarterPercent = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1),
        cut = cms.double(0.9539685)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1),
            cut = cms.double(0.940843)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1),
            cut = cms.double(0.9645195)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3),
            cut = cms.double(0.960407)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3),
            cut = cms.double(0.994065)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationByTaNCfrTenthPercent = cms.EDProducer("RecoTauDecayModeCutMultiplexer",
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    decayModes = cms.VPSet(cms.PSet(
        nPiZeros = cms.uint32(0),
        nCharged = cms.uint32(1),
        cut = cms.double(0.959384)
    ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(1),
            cut = cms.double(0.991353)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(2),
            nCharged = cms.uint32(1),
            cut = cms.double(0.9712775)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(0),
            nCharged = cms.uint32(3),
            cut = cms.double(0.9875015)
        ), 
        cms.PSet(
            nPiZeros = cms.uint32(1),
            nCharged = cms.uint32(3),
            cut = cms.double(1.0234655)
        )),
    toMultiplex = cms.InputTag("shrinkingConePFTauDiscriminationByTaNC"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer")
)


process.shrinkingConePFTauDiscriminationByTrackIsolation = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadTrack = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion = cms.EDProducer("PFRecoTauDiscriminationByIsolation",
    ApplyDiscriminationByECALIsolation = cms.bool(False),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    PFTauProducer = cms.InputTag("shrinkingConePFTauProducer"),
    maximumSumPtCut = cms.double(6.0),
    relativeSumPtCut = cms.double(0.0),
    maximumOccupancy = cms.uint32(0),
    Prediscriminants = cms.PSet(
        BooleanOperator = cms.string('and'),
        leadPion = cms.PSet(
            cut = cms.double(0.5),
            Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
        )
    ),
    applyOccupancyCut = cms.bool(True),
    applySumPtCut = cms.bool(False),
    ApplyDiscriminationByTrackerIsolation = cms.bool(True),
    qualityCuts = cms.PSet(
        isolationQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(8),
            minTrackPt = cms.double(1.0),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(1.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalQualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        )
    ),
    applyRelativeSumPtCut = cms.bool(False)
)


process.shrinkingConePFTauProducer = cms.EDProducer("RecoTauProducer",
    piZeroSrc = cms.InputTag("ak5PFJetsLegacyTaNCPiZeros"),
    modifiers = cms.VPSet(cms.PSet(
        ElectronPreIDProducer = cms.InputTag("elecpreid"),
        name = cms.string('shrinkingConeElectronRej'),
        plugin = cms.string('RecoTauElectronRejectionPlugin'),
        DataType = cms.string('AOD'),
        maximumForElectrionPreIDOutput = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
        EcalStripSumE_minClusEnergy = cms.double(0.1),
        ElecPreIDLeadTkMatch_maxDR = cms.double(0.01),
        EcalStripSumE_deltaEta = cms.double(0.03)
    ), 
        cms.PSet(
            pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
            name = cms.string('TTIworkaround'),
            plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
        )),
    jetRegionSrc = cms.InputTag("recoTauAK5PFJets08Region"),
    jetSrc = cms.InputTag("ak5PFJets"),
    builders = cms.VPSet(cms.PSet(
        usePFLeptons = cms.bool(True),
        signalConeNeutralHadrons = cms.string('0.15'),
        name = cms.string('shrinkingCone'),
        plugin = cms.string('RecoTauBuilderConePlugin'),
        isoConeChargedHadrons = cms.string('0.5'),
        isoConePiZeros = cms.string('0.5'),
        isoConeNeutralHadrons = cms.string('0.5'),
        matchingCone = cms.string('0.1'),
        signalConeChargedHadrons = cms.string('min(max(5.0/et(), 0.07), 0.15)'),
        leadObjectPt = cms.double(5.0),
        qualityCuts = cms.PSet(
            minTrackHits = cms.uint32(3),
            minTrackPt = cms.double(0.5),
            maxTrackChi2 = cms.double(100.0),
            minTrackPixelHits = cms.uint32(0),
            minGammaEt = cms.double(0.5),
            useTracksInsteadOfPFHadrons = cms.bool(False),
            maxDeltaZ = cms.double(0.2),
            maxTransverseImpactParameter = cms.double(0.03)
        ),
        signalConePiZeros = cms.string('0.15'),
        primaryVertexSrc = cms.InputTag("offlinePrimaryVertices"),
        pfCandSrc = cms.InputTag("particleFlow")
    )),
    buildNullTaus = cms.bool(True)
)


process.siPixelClusters = cms.EDProducer("SiPixelClusterProducer",
    src = cms.InputTag("siPixelDigis"),
    ChannelThreshold = cms.int32(1000),
    maxNumberOfClusters = cms.int32(-1),
    SplitClusters = cms.bool(False),
    MissCalibrate = cms.untracked.bool(True),
    VCaltoElectronGain = cms.int32(65),
    VCaltoElectronOffset = cms.int32(-414),
    payloadType = cms.string('Offline'),
    SeedThreshold = cms.int32(1000),
    ClusterThreshold = cms.double(4000.0)
)


process.siPixelDigis = cms.EDProducer("SiPixelRawToDigi",
    UseQualityInfo = cms.bool(False),
    CheckPixelOrder = cms.bool(False),
    InputLabel = cms.InputTag("rawDataCollector"),
    UseCablingTree = cms.untracked.bool(True),
    IncludeErrors = cms.bool(True),
    Timing = cms.untracked.bool(False)
)


process.siPixelRecHits = cms.EDProducer("SiPixelRecHitConverter",
    VerboseLevel = cms.untracked.int32(0),
    src = cms.InputTag("siPixelClusters"),
    CPE = cms.string('PixelCPEGeneric')
)


process.siStripClusters = cms.EDProducer("SiStripClusterizer",
    DigiProducersList = cms.VInputTag(cms.InputTag("siStripDigis","ZeroSuppressed"), cms.InputTag("siStripZeroSuppression","VirginRaw"), cms.InputTag("siStripZeroSuppression","ProcessedRaw"), cms.InputTag("siStripZeroSuppression","ScopeMode")),
    Clusterizer = cms.PSet(
        ChannelThreshold = cms.double(2.0),
        MaxSequentialBad = cms.uint32(1),
        Algorithm = cms.string('ThreeThresholdAlgorithm'),
        MaxSequentialHoles = cms.uint32(0),
        MaxAdjacentBad = cms.uint32(0),
        QualityLabel = cms.string(''),
        SeedThreshold = cms.double(3.0),
        ClusterThreshold = cms.double(5.0)
    )
)


process.siStripDigis = cms.EDProducer("SiStripRawToDigiModule",
    UseDaqRegister = cms.bool(False),
    ProductLabel = cms.InputTag("rawDataCollector"),
    UnpackCommonModeValues = cms.bool(False),
    AppendedBytes = cms.int32(0),
    UseFedKey = cms.bool(False),
    ErrorThreshold = cms.uint32(7174),
    UnpackBadChannels = cms.bool(False),
    MarkModulesOnMissingFeds = cms.bool(True),
    TriggerFedId = cms.int32(0),
    DoAllCorruptBufferChecks = cms.bool(False)
)


process.siStripElectronToTrackAssociator = cms.EDProducer("SiStripElectronAssociator",
    siStripElectronCollection = cms.InputTag("siStripElectrons"),
    trackCollection = cms.InputTag("egammaCTFFinalFitWithMaterial"),
    electronsLabel = cms.InputTag("siStripElectrons")
)


process.siStripElectrons = cms.EDProducer("SiStripElectronProducer",
    siStereoHitCollection = cms.string('stereoRecHit'),
    maxHitsOnDetId = cms.int32(4),
    minHits = cms.int32(5),
    trackCandidatesLabel = cms.string(''),
    superClusterProducer = cms.string('correctedHybridSuperClusters'),
    phiBandWidth = cms.double(0.01),
    siStripElectronsLabel = cms.string(''),
    maxNormResid = cms.double(10.0),
    siHitProducer = cms.string('siStripMatchedRecHits'),
    maxReducedChi2 = cms.double(10000.0),
    siRphiHitCollection = cms.string('rphiRecHit'),
    originUncertainty = cms.double(15.0),
    siMatchedHitCollection = cms.string('matchedRecHit'),
    superClusterCollection = cms.string('')
)


process.siStripMatchedRecHits = cms.EDProducer("SiStripRecHitConverter",
    StripCPE = cms.ESInputTag("StripCPEfromTrackAngleESProducer","StripCPEfromTrackAngle"),
    Regional = cms.bool(False),
    stereoRecHits = cms.string('stereoRecHit'),
    useSiStripQuality = cms.bool(False),
    matchedRecHits = cms.string('matchedRecHit'),
    LazyGetterProducer = cms.InputTag("SiStripRawToClustersFacility"),
    ClusterProducer = cms.InputTag("siStripClusters"),
    VerbosityLevel = cms.untracked.int32(1),
    rphiRecHits = cms.string('rphiRecHit'),
    Matcher = cms.ESInputTag("SiStripRecHitMatcherESProducer","StandardMatcher"),
    siStripQualityLabel = cms.ESInputTag(""),
    MaskBadAPVFibers = cms.bool(False)
)


process.siStripZeroSuppression = cms.EDProducer("SiStripZeroSuppression",
    fixCM = cms.bool(False),
    produceCalculatedBaseline = cms.bool(False),
    doAPVRestore = cms.bool(False),
    produceRawDigis = cms.bool(False),
    useCMMeanMap = cms.bool(False),
    RawDigiProducersList = cms.VInputTag(cms.InputTag("siStripDigis","VirginRaw"), cms.InputTag("siStripDigis","ProcessedRaw"), cms.InputTag("siStripDigis","ScopeMode")),
    storeInZScollBadAPV = cms.bool(True),
    mergeCollections = cms.bool(False),
    Algorithms = cms.PSet(
        Fraction = cms.double(0.2),
        PedestalSubtractionFedMode = cms.bool(True),
        CutToAvoidSignal = cms.double(2.0),
        minStripsToFit = cms.uint32(4),
        consecThreshold = cms.uint32(5),
        hitStripThreshold = cms.uint32(40),
        Deviation = cms.uint32(25),
        CommonModeNoiseSubtractionMode = cms.string('Median'),
        TruncateInSuppressor = cms.bool(True),
        restoreThreshold = cms.double(0.5),
        APVInspectMode = cms.string('BaselineFollower'),
        ForceNoRestore = cms.bool(False),
        useRealMeanCM = cms.bool(False),
        DeltaCMThreshold = cms.uint32(20),
        nSigmaNoiseDerTh = cms.uint32(4),
        nSaturatedStrip = cms.uint32(2),
        SiStripFedZeroSuppressionMode = cms.uint32(4),
        APVRestoreMode = cms.string('BaselineFollower'),
        distortionThreshold = cms.uint32(40),
        Iterations = cms.int32(3),
        nSmooth = cms.uint32(9),
        SelfSelectRestoreAlgo = cms.bool(False)
    ),
    storeCM = cms.bool(False),
    produceBaselinePoints = cms.bool(False)
)


process.simEcalTriggerPrimitiveDigis = cms.EDProducer("EcalTrigPrimProducer",
    BarrelOnly = cms.bool(False),
    InstanceEB = cms.string(''),
    InstanceEE = cms.string(''),
    binOfMaximum = cms.int32(6),
    Famos = cms.bool(False),
    TcpOutput = cms.bool(False),
    Debug = cms.bool(False),
    Label = cms.string('simEcalUnsuppressedDigis')
)


process.simpleSecondaryVertexBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex2Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfos"))
)


process.simpleSecondaryVertexHighEffBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex2Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfos"))
)


process.simpleSecondaryVertexHighPurBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('simpleSecondaryVertex3Trk'),
    tagInfos = cms.VInputTag(cms.InputTag("secondaryVertexTagInfos"))
)


process.sisCone5CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("towerMaker"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(True),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.3),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.4),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('CaloJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('SISCone'),
    rParam = cms.double(0.5),
    restrictInputs = cms.bool(True),
    maxInputs = cms.uint32(1000)
)


process.sisCone5CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    restrictInputs = cms.bool(True),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxInputs = cms.uint32(1000),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.sisCone5GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('SISCone'),
    rParam = cms.double(0.5)
)


process.sisCone5GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.sisCone5GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.5),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.sisCone5JetExtender = cms.EDProducer("JetExtender",
    jets = cms.InputTag("sisCone5CaloJets"),
    jet2TracksAtCALO = cms.InputTag("sisCone5JetTracksAssociatorAtCaloFace"),
    jet2TracksAtVX = cms.InputTag("sisCone5JetTracksAssociatorAtVertex"),
    coneSize = cms.double(0.5)
)


process.sisCone5JetTracksAssociatorAtCaloFace = cms.EDProducer("JetTracksAssociatorAtCaloFace",
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator"),
    jets = cms.InputTag("sisCone5CaloJets")
)


process.sisCone5JetTracksAssociatorAtVertex = cms.EDProducer("JetTracksAssociatorAtVertex",
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    jets = cms.InputTag("sisCone5CaloJets")
)


process.sisCone5PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    src = cms.InputTag("particleFlow"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.4),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('PFJet'),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('SISCone'),
    rParam = cms.double(0.5)
)


process.sisCone5TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    MinVtxNdof = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    inputEtMin = cms.double(0.0),
    UseOnlyVertexTracks = cms.bool(False),
    radiusPU = cms.double(0.5),
    GhostArea = cms.double(0.01),
    jetPtMin = cms.double(3.0),
    DxyTrVtxMax = cms.double(0.2),
    nSigmaPU = cms.double(1.0),
    MaxVtxZ = cms.double(15.0),
    DzTrVtxMax = cms.double(1),
    doPUOffsetCorr = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    jetType = cms.string('TrackJet'),
    inputEMin = cms.double(0.0),
    src = cms.InputTag("trackRefsForJets"),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    jetAlgorithm = cms.string('SISCone'),
    rParam = cms.double(0.5)
)


process.sisCone7CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0),
    restrictInputs = cms.bool(True),
    maxInputs = cms.uint32(1000)
)


process.sisCone7CaloJetsPUCorr = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('CaloJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    restrictInputs = cms.bool(True),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(True),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("towerMaker"),
    inputEtMin = cms.double(0.3),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxInputs = cms.uint32(1000),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(True),
    inputEMin = cms.double(0.0)
)


process.sisCone7GenJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.sisCone7GenJetsNoMuNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoMuNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.sisCone7GenJetsNoNu = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(5),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('GenJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.5),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("genParticlesForJetsNoNu"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.sisCone7PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('PFJet'),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    Rho_EtaMax = cms.double(4.4),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    maxRecoveredHcalCells = cms.uint32(9999999),
    rParam = cms.double(0.7),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("particleFlow"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag(""),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.sisCone7TrackJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    doAreaFastjet = cms.bool(False),
    Ghost_EtaMax = cms.double(5.0),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    jetType = cms.string('TrackJet'),
    MinVtxNdof = cms.int32(5),
    doRhoFastjet = cms.bool(False),
    jetAlgorithm = cms.string('SISCone'),
    nSigmaPU = cms.double(1.0),
    GhostArea = cms.double(0.01),
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    doPVCorrection = cms.bool(False),
    MaxVtxZ = cms.double(15.0),
    rParam = cms.double(0.7),
    UseOnlyVertexTracks = cms.bool(False),
    UseOnlyOnePV = cms.bool(False),
    DzTrVtxMax = cms.double(1),
    maxProblematicHcalCells = cms.uint32(9999999),
    src = cms.InputTag("trackRefsForJets"),
    inputEtMin = cms.double(0.0),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    jetPtMin = cms.double(3.0),
    radiusPU = cms.double(0.5),
    DxyTrVtxMax = cms.double(0.2),
    maxProblematicEcalCells = cms.uint32(9999999),
    doPUOffsetCorr = cms.bool(False),
    inputEMin = cms.double(0.0)
)


process.softElectronBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softElectron'),
    tagInfos = cms.VInputTag(cms.InputTag("softElectronTagInfos"))
)


process.softElectronByIP3dBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByIP3d'),
    tagInfos = cms.VInputTag(cms.InputTag("softElectronTagInfos"))
)


process.softElectronByPtBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByPt'),
    tagInfos = cms.VInputTag(cms.InputTag("softElectronTagInfos"))
)


process.softElectronCands = cms.EDProducer("SoftElectronCandProducer",
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.017),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.39),
    BarrelMVACuts = cms.vdouble(-0.1, 1.0),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0),
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.006),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(-0.24, 1.0),
    ForwardInverseFBremCuts = cms.vdouble(1.0, 7.01),
    electrons = cms.InputTag("gsfElectrons")
)


process.softElectronSelector = cms.EDProducer("BtagGsfElectronSelector",
    input = cms.InputTag("gsfElectrons"),
    selection = cms.InputTag("eidLoose"),
    cut = cms.double(0.5)
)


process.softElectronTagInfos = cms.EDProducer("SoftLepton",
    muonSelection = cms.uint32(0),
    leptons = cms.InputTag("gsfElectrons"),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    leptonCands = cms.InputTag("softElectronCands"),
    leptonId = cms.InputTag(""),
    refineJetAxis = cms.uint32(0),
    jets = cms.InputTag("ak5CaloJets"),
    leptonDeltaRCut = cms.double(0.4),
    leptonChi2Cut = cms.double(10.0)
)


process.softMuonBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softMuon'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfos"))
)


process.softMuonByIP3dBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByIP3d'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfos"))
)


process.softMuonByPtBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softLeptonByPt'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfos"))
)


process.softMuonNoIPBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('softMuonNoIP'),
    tagInfos = cms.VInputTag(cms.InputTag("softMuonTagInfos"))
)


process.softMuonTagInfos = cms.EDProducer("SoftLepton",
    muonSelection = cms.uint32(1),
    leptons = cms.InputTag("muons"),
    primaryVertex = cms.InputTag("offlinePrimaryVertices"),
    leptonCands = cms.InputTag(""),
    leptonId = cms.InputTag(""),
    refineJetAxis = cms.uint32(0),
    jets = cms.InputTag("ak5CaloJets"),
    leptonDeltaRCut = cms.double(0.4),
    leptonChi2Cut = cms.double(9999.0)
)


process.standAloneMuons = cms.EDProducer("StandAloneMuonProducer",
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(True)
    ),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    InputObjects = cms.InputTag("ancientMuonSeed"),
    MuonTrajectoryBuilder = cms.string('Exhaustive'),
    STATrajBuilderParameters = cms.PSet(
        DoRefit = cms.bool(False),
        DoSeedRefit = cms.bool(False),
        FilterParameters = cms.PSet(
            NumberOfSigma = cms.double(3.0),
            FitDirection = cms.string('insideOut'),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            MaxChi2 = cms.double(1000.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                MaxChi2 = cms.double(25.0),
                RescaleErrorFactor = cms.double(100.0),
                Granularity = cms.int32(0),
                ExcludeRPCFromFit = cms.bool(False),
                UseInvalidHits = cms.bool(True),
                RescaleError = cms.bool(False)
            ),
            EnableRPCMeasurement = cms.bool(True),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            EnableDTMeasurement = cms.bool(True),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            EnableCSCMeasurement = cms.bool(True)
        ),
        SeedPropagator = cms.string('SteppingHelixPropagatorAny'),
        NavigationType = cms.string('Standard'),
        SeedTransformerParameters = cms.PSet(
            Fitter = cms.string('KFFitterSmootherSTA'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            UseSubRecHits = cms.bool(False),
            NMinRecHits = cms.uint32(2),
            RescaleError = cms.double(100.0)
        ),
        DoBackwardFilter = cms.bool(True),
        SeedPosition = cms.string('in'),
        BWFilterParameters = cms.PSet(
            NumberOfSigma = cms.double(3.0),
            BWSeedType = cms.string('fromGenerator'),
            FitDirection = cms.string('outsideIn'),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            MaxChi2 = cms.double(100.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                MaxChi2 = cms.double(25.0),
                RescaleErrorFactor = cms.double(100.0),
                Granularity = cms.int32(2),
                ExcludeRPCFromFit = cms.bool(False),
                UseInvalidHits = cms.bool(True),
                RescaleError = cms.bool(False)
            ),
            EnableRPCMeasurement = cms.bool(True),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            EnableDTMeasurement = cms.bool(True),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            EnableCSCMeasurement = cms.bool(True)
        ),
        RefitterParameters = cms.PSet(
            FitterName = cms.string('KFFitterSmootherSTA'),
            MaxFractionOfLostHits = cms.double(0.05),
            ForceAllIterations = cms.bool(False),
            NumberOfIterations = cms.uint32(3),
            RescaleError = cms.double(100.0)
        )
    )
)


process.standAloneSETMuons = cms.EDProducer("StandAloneMuonProducer",
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(True)
    ),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    InputObjects = cms.InputTag("SETMuonSeed"),
    MuonTrajectoryBuilder = cms.string('DirectMuonTrajectoryBuilder'),
    STATrajBuilderParameters = cms.PSet(
        SeedTransformerParameters = cms.PSet(
            Fitter = cms.string('KFFitterSmootherSTA'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            UseSubRecHits = cms.bool(False),
            NMinRecHits = cms.uint32(2),
            RescaleError = cms.double(1.0)
        )
    )
)


process.stepOneTrackCandidateMaker = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("newSeedFromPairs"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('stepOneCkfTrajectoryBuilder'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.tcMet = cms.EDProducer("METProducer",
    vertexRho = cms.double(2.0),
    eVetoDeltaPhi = cms.double(100.0),
    PFClustersHCAL = cms.InputTag("particleFlowClusterHCAL"),
    PFClustersHFHAD = cms.InputTag("particleFlowClusterHFHAD"),
    dupMinPt = cms.double(0.0),
    usedeltaRRejection = cms.bool(False),
    vertexZ = cms.double(15.0),
    nLayersTight = cms.int32(0),
    vertexNdof = cms.int32(4),
    ptErr_max = cms.double(0.2),
    corner = cms.double(1.479),
    PFClustersECAL = cms.InputTag("particleFlowClusterECAL"),
    eta_max = cms.double(2.65),
    METType = cms.string('TCMET'),
    eVetoDeltaCotTheta = cms.double(100.0),
    tcmetDepValueMap = cms.InputTag("muonTCMETValueMapProducer","muCorrData"),
    maxd0cut = cms.double(0.3),
    alias = cms.string('TCMET'),
    d0cutb = cms.double(0.5),
    trackInputTag = cms.InputTag("generalTracks"),
    usePFClusters = cms.bool(False),
    vertexMaxDZ = cms.double(0.2),
    deltaRShower = cms.double(0.01),
    chi2_max = cms.double(5),
    zdist = cms.double(314.0),
    noHF = cms.bool(False),
    track_algos = cms.vint32(),
    ptErr_tight_max = cms.double(0.2),
    InputType = cms.string('CaloMET:Electron:Muon:Track'),
    maxTrackAlgo = cms.int32(8),
    nLayers = cms.int32(0),
    muonInputTag = cms.InputTag("muons"),
    correctShowerTracks = cms.bool(False),
    vetoDuplicates = cms.bool(False),
    pt_max = cms.double(100.0),
    nhits_tight_min = cms.double(9),
    nMinOuterHits = cms.int32(2),
    globalThreshold = cms.double(0.0),
    chi2_tight_max = cms.double(5.0),
    src = cms.InputTag("towerMaker"),
    checkTrackPropagation = cms.bool(False),
    dupDPhi = cms.double(0.03),
    electronInputTag = cms.InputTag("gsfElectrons"),
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    d0cuta = cms.double(0.015),
    hOverECut = cms.double(0.1),
    vertexInputTag = cms.InputTag("offlinePrimaryVertices"),
    electronVetoCone = cms.bool(True),
    muonDepValueMap = cms.InputTag("muonMETValueMapProducer","muCorrData"),
    metInputTag = cms.InputTag("met"),
    usePvtxd0 = cms.bool(False),
    dupDCotTh = cms.double(0.0006),
    PFClustersHFEM = cms.InputTag("particleFlowClusterHFEM"),
    maxpt_eta25 = cms.double(0.0),
    nhits_min = cms.double(6),
    eVetoDeltaR = cms.double(0.015),
    maxpt_eta20 = cms.double(100.0),
    pt_min = cms.double(1.0),
    rf_type = cms.int32(1),
    radius = cms.double(130.0),
    track_quality = cms.vint32(2),
    isCosmics = cms.bool(False),
    eVetoMinElectronPt = cms.double(10.0)
)


process.tcMetWithPFclusters = cms.EDProducer("METProducer",
    vertexRho = cms.double(2.0),
    eVetoDeltaPhi = cms.double(100.0),
    PFClustersHCAL = cms.InputTag("particleFlowClusterHCAL"),
    PFClustersHFHAD = cms.InputTag("particleFlowClusterHFHAD"),
    dupMinPt = cms.double(0.0),
    chi2_tight_max = cms.double(5.0),
    vertexZ = cms.double(15.0),
    nLayersTight = cms.int32(0),
    vertexNdof = cms.int32(4),
    ptErr_max = cms.double(0.2),
    corner = cms.double(1.479),
    PFClustersECAL = cms.InputTag("particleFlowClusterECAL"),
    eta_max = cms.double(2.65),
    muonInputTag = cms.InputTag("muons"),
    eVetoDeltaCotTheta = cms.double(100.0),
    maxd0cut = cms.double(0.3),
    PFClustersHFEM = cms.InputTag("particleFlowClusterHFEM"),
    d0cutb = cms.double(0.5),
    checkTrackPropagation = cms.bool(False),
    usePFClusters = cms.bool(True),
    vertexMaxDZ = cms.double(0.2),
    deltaRShower = cms.double(0.01),
    chi2_max = cms.double(5),
    maxpt_eta25 = cms.double(0.0),
    noHF = cms.bool(False),
    track_algos = cms.vint32(),
    ptErr_tight_max = cms.double(0.2),
    InputType = cms.string('CaloMET:Electron:Muon:Track'),
    maxTrackAlgo = cms.int32(8),
    nLayers = cms.int32(0),
    METType = cms.string('TCMET'),
    correctShowerTracks = cms.bool(False),
    vetoDuplicates = cms.bool(False),
    pt_max = cms.double(100.0),
    radius = cms.double(130.0),
    nhits_tight_min = cms.double(9),
    beamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    dupDCotTh = cms.double(0.0006),
    globalThreshold = cms.double(0.0),
    usedeltaRRejection = cms.bool(False),
    src = cms.InputTag("towerMaker"),
    trackInputTag = cms.InputTag("generalTracks"),
    dupDPhi = cms.double(0.03),
    electronInputTag = cms.InputTag("gsfElectrons"),
    tcmetDepValueMap = cms.InputTag("muonTCMETValueMapProducer","muCorrData"),
    d0cuta = cms.double(0.015),
    hOverECut = cms.double(0.1),
    electronVetoCone = cms.bool(True),
    muonDepValueMap = cms.InputTag("muonMETValueMapProducer","muCorrData"),
    metInputTag = cms.InputTag("met"),
    usePvtxd0 = cms.bool(False),
    vertexInputTag = cms.InputTag("offlinePrimaryVertices"),
    alias = cms.string('TCMET'),
    zdist = cms.double(314.0),
    nhits_min = cms.double(6),
    eVetoDeltaR = cms.double(0.015),
    maxpt_eta20 = cms.double(100.0),
    pt_min = cms.double(1.0),
    rf_type = cms.int32(1),
    nMinOuterHits = cms.int32(2),
    track_quality = cms.vint32(2),
    isCosmics = cms.bool(False),
    eVetoMinElectronPt = cms.double(10.0)
)


process.tcRecoTauProducer = cms.EDProducer("TCRecoTauProducer",
    tkminTrackerHitsn = cms.int32(5),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    EtCaloOverTrackMin = cms.double(-0.9),
    EERecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    tkmaxChi2 = cms.double(100.0),
    EtHcalOverTrackMin = cms.double(-0.3),
    CaloRecoTauProducer = cms.InputTag("JPTCaloRecoTauProducer"),
    EBRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    tkminPixelHitsn = cms.int32(0),
    MatchingConeSize = cms.double(0.1),
    TrackCollection = cms.InputTag("generalTracks"),
    HBHERecHitCollection = cms.InputTag("hbhereco"),
    EtCaloOverTrackMax = cms.double(0.0),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    SignalConeSize = cms.double(0.2),
    EcalConeSize = cms.double(0.5),
    Track_minPt = cms.double(1.0),
    EtHcalOverTrackMax = cms.double(1.0),
    HFRecHitCollection = cms.InputTag("hfreco"),
    DropRejectedJets = cms.untracked.bool(False),
    HORecHitCollection = cms.InputTag("horeco"),
    DropCaloJets = cms.untracked.bool(False),
    tkmaxipt = cms.double(0.1)
)


process.tevMuons = cms.EDProducer("TevMuonProducer",
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False)
    ),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    RefitIndex = cms.vint32(1, 2, 3, 4),
    RefitterParameters = cms.PSet(
        TrackerSkipSection = cms.int32(-1),
        MuonHitsOption = cms.int32(1),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        RefitDirection = cms.string('insideOut'),
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        Propagator = cms.string('SmartPropagatorAnyRK'),
        TrackerSkipSystem = cms.int32(-1),
        DoPredictionsOnly = cms.bool(False),
        Chi2ProbabilityCut = cms.double(30.0),
        PropDirForCosmics = cms.bool(False),
        HitThreshold = cms.int32(1),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        Chi2CutCSC = cms.double(9.0),
        Chi2CutRPC = cms.double(1.0),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitRPCHits = cms.bool(True),
        Chi2CutDT = cms.double(6.0),
        PtCut = cms.double(1.0),
        SkipStation = cms.int32(-1)
    ),
    Refits = cms.vstring('default', 
        'firstHit', 
        'picky', 
        'dyt'),
    MuonCollectionLabel = cms.InputTag("globalMuons")
)


process.thClusters = cms.EDProducer("TrackClusterRemover",
    oldClusterRemovalInfo = cms.InputTag("secClusters"),
    trajectories = cms.InputTag("secfilter"),
    pixelClusters = cms.InputTag("secClusters"),
    Common = cms.PSet(
        maxChi2 = cms.double(30.0)
    ),
    stripClusters = cms.InputTag("secClusters")
)


process.thPixelRecHits = cms.EDProducer("SiPixelRecHitConverter",
    VerboseLevel = cms.untracked.int32(0),
    src = cms.InputTag("thClusters"),
    CPE = cms.string('PixelCPEGeneric')
)


process.thStep = cms.EDProducer("SimpleTrackListMerger",
    ShareFrac = cms.double(0.19),
    promoteTrackQuality = cms.bool(True),
    MinPT = cms.double(0.05),
    copyExtras = cms.untracked.bool(False),
    Epsilon = cms.double(-0.001),
    allowFirstHitShare = cms.bool(True),
    newQuality = cms.string('confirmed'),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    TrackProducer2 = cms.string('thStepTrk'),
    TrackProducer1 = cms.string('thStepVtx')
)


process.thStepTrk = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(4),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('highPurity'),
    minNumberLayers = cms.uint32(5),
    chi2n_par = cms.double(0.3),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(0.9, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(0.9, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(0),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("thStepTrkTight"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(0.9, 4.0),
    d0_par1 = cms.vdouble(0.9, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.thStepTrkLoose = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('loose'),
    minNumberLayers = cms.uint32(4),
    chi2n_par = cms.double(0.6),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.2, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.2, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(1),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("thWithMaterialTracks"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.2, 4.0),
    d0_par1 = cms.vdouble(1.2, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.thStepTrkTight = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(4),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('tight'),
    minNumberLayers = cms.uint32(5),
    chi2n_par = cms.double(0.4),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.1, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.1, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(1),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("thStepTrkLoose"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.1, 4.0),
    d0_par1 = cms.vdouble(1.1, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.thStepVtx = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('highPurity'),
    minNumberLayers = cms.uint32(3),
    chi2n_par = cms.double(0.4),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.2, 3.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.1, 3.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(1),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("thStepVtxTight"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.2, 3.0),
    d0_par1 = cms.vdouble(1.1, 3.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.thStepVtxLoose = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(2),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('loose'),
    minNumberLayers = cms.uint32(3),
    chi2n_par = cms.double(1.2),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.3, 3.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.2, 3.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(1),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("thWithMaterialTracks"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.3, 3.0),
    d0_par1 = cms.vdouble(1.2, 3.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.thStepVtxTight = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('tight'),
    minNumberLayers = cms.uint32(3),
    chi2n_par = cms.double(0.6),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.2, 3.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.1, 3.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(1),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("thStepVtxLoose"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.2, 3.0),
    d0_par1 = cms.vdouble(1.1, 3.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.thStripRecHits = cms.EDProducer("SiStripRecHitConverter",
    StripCPE = cms.ESInputTag("StripCPEfromTrackAngleESProducer","StripCPEfromTrackAngle"),
    LazyGetterProducer = cms.InputTag("SiStripRawToClustersFacility"),
    stereoRecHits = cms.string('stereoRecHit'),
    useSiStripQuality = cms.bool(False),
    matchedRecHits = cms.string('matchedRecHit'),
    Regional = cms.bool(False),
    ClusterProducer = cms.InputTag("thClusters"),
    VerbosityLevel = cms.untracked.int32(1),
    rphiRecHits = cms.string('rphiRecHit'),
    Matcher = cms.ESInputTag("SiStripRecHitMatcherESProducer","StandardMatcher"),
    siStripQualityLabel = cms.ESInputTag(""),
    MaskBadAPVFibers = cms.bool(False)
)


process.thTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    src = cms.InputTag("thTriplets"),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        numberMeasurementsForFit = cms.int32(4),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    cleanTrajectoryAfterInOut = cms.bool(True),
    useHitsSplitting = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(100000),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryBuilder = cms.string('thCkfTrajectoryBuilder'),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits')
)


process.thTriplets = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag(cms.InputTag("thTripletsA"), cms.InputTag("thTripletsB"))
)


process.thTripletsA = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            ComponentName = cms.string('PixelTripletLargeTipGenerator'),
            extraHitRPhitolerance = cms.double(0.0),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.0)
        ),
        SeedingLayers = cms.string('ThLayerTripletsA')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("thClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(50000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("thClusters"),
        MaxNumberOfPixelClusters = cms.uint32(10000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(2.0),
            ptMin = cms.double(0.25),
            originHalfLength = cms.double(10.0)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsTripletOnlyCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.thTripletsB = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            ComponentName = cms.string('PixelTripletLargeTipGenerator'),
            extraHitRPhitolerance = cms.double(0.0),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.0)
        ),
        SeedingLayers = cms.string('ThLayerTripletsB')
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    ClusterCheckPSet = cms.PSet(
        PixelClusterCollectionLabel = cms.InputTag("thClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(50000),
        doClusterCheck = cms.bool(True),
        ClusterCollectionLabel = cms.InputTag("thClusters"),
        MaxNumberOfPixelClusters = cms.uint32(10000)
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            originRadius = cms.double(2.0),
            ptMin = cms.double(0.35),
            originHalfLength = cms.double(10.0)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsTripletOnlyCreator'),
        SeedMomentumForBOFF = cms.double(5.0),
        propagator = cms.string('PropagatorWithMaterial')
    )
)


process.thWithMaterialTracks = cms.EDProducer("TrackProducer",
    src = cms.InputTag("thTrackCandidates"),
    clusterRemovalInfo = cms.InputTag("thClusters"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    useHitsSplitting = cms.bool(False),
    MeasurementTracker = cms.string(''),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    TrajectoryInEvent = cms.bool(True),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    AlgorithmName = cms.string('iter3'),
    Propagator = cms.string('RungeKuttaTrackerPropagator')
)


process.thfilter = cms.EDProducer("QualityFilter",
    TrackQuality = cms.string('highPurity'),
    recTracks = cms.InputTag("thStep")
)


process.tobtecStep = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(2),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('highPurity'),
    minNumberLayers = cms.uint32(5),
    chi2n_par = cms.double(0.2),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.3, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.3, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(0),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("tobtecStepTight"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.4, 4.0),
    d0_par1 = cms.vdouble(1.4, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.tobtecStepLoose = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(2),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('loose'),
    minNumberLayers = cms.uint32(5),
    chi2n_par = cms.double(0.4),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.8, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.8, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(1),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("fifthWithMaterialTracks"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(2.0, 4.0),
    d0_par1 = cms.vdouble(2.0, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.tobtecStepTight = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(2),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('tight'),
    minNumberLayers = cms.uint32(5),
    chi2n_par = cms.double(0.3),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(1.4, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(1.4, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(0),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("tobtecStepLoose"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(1.5, 4.0),
    d0_par1 = cms.vdouble(1.5, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.towerMaker = cms.EDProducer("CaloTowersCreator",
    EBSumThreshold = cms.double(0.2),
    MomHBDepth = cms.double(0.2),
    UseEtEBTreshold = cms.bool(False),
    hfInput = cms.InputTag("hfreco"),
    AllowMissingInputs = cms.bool(False),
    HBThreshold = cms.double(0.7),
    EESumThreshold = cms.double(0.45),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    MomEEDepth = cms.double(0.0),
    UseEcalRecoveredHits = cms.bool(False),
    MomConstrMethod = cms.int32(1),
    MomHEDepth = cms.double(0.4),
    HcalThreshold = cms.double(-1000.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseSymEBTreshold = cms.bool(True),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEWeight = cms.double(1.0),
    UseHO = cms.bool(False),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF1Weight = cms.double(1.0),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeight = cms.double(1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HESWeight = cms.double(1.0),
    HESThreshold = cms.double(0.8),
    hbheInput = cms.InputTag("hbhereco"),
    HF2Weight = cms.double(1.0),
    HF2Threshold = cms.double(0.85),
    HcalAcceptSeverityLevel = cms.uint32(9),
    EEThreshold = cms.double(0.3),
    HOThresholdPlus1 = cms.double(3.5),
    HOThresholdPlus2 = cms.double(3.5),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    hoInput = cms.InputTag("horeco"),
    HF1Threshold = cms.double(0.5),
    HOThresholdMinus1 = cms.double(3.5),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EcutTower = cms.double(-1000.0),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeight = cms.double(1.0),
    HEDWeight = cms.double(1.0),
    UseSymEETreshold = cms.bool(True),
    HEDThreshold = cms.double(0.8),
    EBThreshold = cms.double(0.07),
    UseRejectedHitsOnly = cms.bool(False),
    UseHcalRecoveredHits = cms.bool(True),
    HOThresholdMinus2 = cms.double(3.5),
    HOThreshold0 = cms.double(1.1),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    MomEBDepth = cms.double(0.3),
    HBWeight = cms.double(1.0),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EcalAcceptSeverityLevel = cms.uint32(1)
)


process.towerMakerPF = cms.EDProducer("CaloTowersCreator",
    EBSumThreshold = cms.double(0.2),
    MomHBDepth = cms.double(0.2),
    UseEtEBTreshold = cms.bool(False),
    hfInput = cms.InputTag("hfreco"),
    AllowMissingInputs = cms.bool(False),
    HBThreshold = cms.double(0.4),
    EESumThreshold = cms.double(0.45),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    MomEEDepth = cms.double(0.0),
    UseEcalRecoveredHits = cms.bool(False),
    MomConstrMethod = cms.int32(1),
    MomHEDepth = cms.double(0.4),
    HcalThreshold = cms.double(-1000.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseSymEBTreshold = cms.bool(True),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEWeight = cms.double(1.0),
    UseHO = cms.bool(False),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF1Weight = cms.double(1.0),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeight = cms.double(1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HESWeight = cms.double(1.0),
    HESThreshold = cms.double(0.4),
    hbheInput = cms.InputTag("hbhereco"),
    HF2Weight = cms.double(1.0),
    HF2Threshold = cms.double(1.8),
    HcalAcceptSeverityLevel = cms.uint32(11),
    EEThreshold = cms.double(0.3),
    HOThresholdPlus1 = cms.double(1.1),
    HOThresholdPlus2 = cms.double(1.1),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    hoInput = cms.InputTag("horeco"),
    HF1Threshold = cms.double(1.2),
    HOThresholdMinus1 = cms.double(1.1),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EcutTower = cms.double(-1000.0),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeight = cms.double(1.0),
    HEDWeight = cms.double(1.0),
    UseSymEETreshold = cms.bool(True),
    HEDThreshold = cms.double(0.4),
    EBThreshold = cms.double(0.07),
    UseRejectedHitsOnly = cms.bool(False),
    UseHcalRecoveredHits = cms.bool(True),
    HOThresholdMinus2 = cms.double(1.1),
    HOThreshold0 = cms.double(1.1),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    MomEBDepth = cms.double(0.3),
    HBWeight = cms.double(1.0),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EcalAcceptSeverityLevel = cms.uint32(1)
)


process.towerMakerWithHO = cms.EDProducer("CaloTowersCreator",
    EBSumThreshold = cms.double(0.2),
    MomHBDepth = cms.double(0.2),
    UseEtEBTreshold = cms.bool(False),
    hfInput = cms.InputTag("hfreco"),
    AllowMissingInputs = cms.bool(False),
    HBThreshold = cms.double(0.7),
    EESumThreshold = cms.double(0.45),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF1Weight = cms.double(1.0),
    MomEEDepth = cms.double(0.0),
    EBThreshold = cms.double(0.07),
    UseEcalRecoveredHits = cms.bool(False),
    MomConstrMethod = cms.int32(1),
    MomHEDepth = cms.double(0.4),
    HcalThreshold = cms.double(-1000.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseSymEBTreshold = cms.bool(True),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEWeight = cms.double(1.0),
    UseHO = cms.bool(True),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOThresholdPlus1 = cms.double(3.5),
    EBWeight = cms.double(1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HESWeight = cms.double(1.0),
    hbheInput = cms.InputTag("hbhereco"),
    HF2Weight = cms.double(1.0),
    HF2Threshold = cms.double(0.85),
    HcalAcceptSeverityLevel = cms.uint32(9),
    EEThreshold = cms.double(0.3),
    HESThreshold = cms.double(0.8),
    HOThresholdPlus2 = cms.double(3.5),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    hoInput = cms.InputTag("horeco"),
    HF1Threshold = cms.double(0.5),
    HOThresholdMinus1 = cms.double(3.5),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    HEDWeight = cms.double(1.0),
    HOWeight = cms.double(1.0),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    UseSymEETreshold = cms.bool(True),
    HEDThreshold = cms.double(0.8),
    UseRejectedHitsOnly = cms.bool(False),
    EcutTower = cms.double(-1000.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    UseHcalRecoveredHits = cms.bool(True),
    HOThresholdMinus2 = cms.double(3.5),
    HOThreshold0 = cms.double(1.1),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    MomEBDepth = cms.double(0.3),
    HBWeight = cms.double(1.0),
    EcalAcceptSeverityLevel = cms.uint32(1),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0)
)


process.tpToGlbCosmicMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("globalCosmicMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToGlbCosmicTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("globalCosmicMuons")
)


process.tpToGlbMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("extractedGlobalMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToGlbMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("extractedGlobalMuons"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(True)
)


process.tpToGlbSETMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("globalSETMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToGlbSETTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("globalSETMuons")
)


process.tpToGlbTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("extractedGlobalMuons")
)


process.tpToGlbTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("extractedGlobalMuons")
)


process.tpToL2MuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("hltDt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL2Muons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToL2MuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL2Muons"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(False),
    UseMuon = cms.bool(True)
)


process.tpToL2TrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL2Muons")
)


process.tpToL2TrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL2Muons")
)


process.tpToL2UpdMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("hltDt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL2Muons","UpdatedAtVtx"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToL2UpdMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL2Muons","UpdatedAtVtx"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(False),
    UseMuon = cms.bool(True)
)


process.tpToL2UpdTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL2Muons","UpdatedAtVtx")
)


process.tpToL2UpdTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL2Muons","UpdatedAtVtx")
)


process.tpToL3L2TrackTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('OnlineTrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL3Muons","L2Seeded")
)


process.tpToL3L2TrackTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('OnlineTrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL3Muons","L2Seeded")
)


process.tpToL3MuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(False),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(False),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("hltDt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL3Muons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToL3MuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(False),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(False),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL3Muons"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(True)
)


process.tpToL3TkMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(False),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(False),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("hltDt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL3TkTracksFromL2"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(False)
)


process.tpToL3TkMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(False),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(True),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(False),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("hltL3TkTracksFromL2"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(False)
)


process.tpToL3TkTrackTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('OnlineTrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL3TkTracksFromL2")
)


process.tpToL3TkTrackTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('OnlineTrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL3TkTracksFromL2")
)


process.tpToL3TrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL3Muons")
)


process.tpToL3TrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    ignoremissingtrackcollection = cms.untracked.bool(True),
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("hltL3Muons")
)


process.tpToStaCosmicMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("cosmicMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToStaCosmicTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("cosmicMuons")
)


process.tpToStaMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("standAloneMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToStaMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("standAloneMuons"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(False),
    UseMuon = cms.bool(True)
)


process.tpToStaSETMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("standAloneSETMuons"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToStaSETTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("standAloneSETMuons")
)


process.tpToStaSETUpdMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("standAloneSETMuons","UpdatedAtVtx"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToStaSETUpdTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("standAloneSETMuons","UpdatedAtVtx")
)


process.tpToStaTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("standAloneMuons")
)


process.tpToStaTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    label_tr = cms.InputTag("standAloneMuons")
)


process.tpToStaUpdMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(False),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToStaUpdMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(False),
    UseMuon = cms.bool(True)
)


process.tpToStaUpdTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("standAloneMuons","UpdatedAtVtx")
)


process.tpToStaUpdTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    label_tr = cms.InputTag("standAloneMuons","UpdatedAtVtx")
)


process.tpToTevDytMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("tevMuons","dyt"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToTevDytMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("tevMuons","dyt"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(True)
)


process.tpToTevDytTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("tevMuons","dyt")
)


process.tpToTevDytTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("tevMuons","dyt")
)


process.tpToTevFirstMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("tevMuons","firstHit"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToTevFirstMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("tevMuons","firstHit"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(True)
)


process.tpToTevFirstTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("tevMuons","firstHit")
)


process.tpToTevFirstTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("tevMuons","firstHit")
)


process.tpToTevPickyMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("tevMuons","picky"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)


process.tpToTevPickyMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("tevMuons","picky"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(True)
)


process.tpToTevPickyTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("tevMuons","picky")
)


process.tpToTevPickyTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByDeltaR'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("tevMuons","picky")
)


process.tpToTkCosmicMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("ctfWithMaterialTracksP5LHCNavigation"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(False)
)


process.tpToTkCosmicTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("ctfWithMaterialTracksP5LHCNavigation")
)


process.tpToTkMuonAssociation = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("generalTracks"),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(False)
)


process.tpToTkMuonAssociationFS = cms.EDProducer("MuonAssociatorEDProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    tpTag = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dumpDT = cms.bool(False),
    ignoreMissingTrackCollection = cms.untracked.bool(False),
    CSCsimHitsTag = cms.InputTag("MuonSimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","MuonSimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("MuonSimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("famosSimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('famosSimHitsTrackerHits'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","famosSimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    tracksTag = cms.InputTag("generalTracks"),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    RPCsimhitsTag = cms.InputTag("MuonSimHits","MuonRPCHits"),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","MuonSimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(False)
)


process.tpToTkmuTrackAssociation = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("generalTracks")
)


process.tpToTkmuTrackAssociationFS = cms.EDProducer("TrackAssociatorEDProducer",
    associator = cms.string('TrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    label_tr = cms.InputTag("generalTracks")
)


process.trackCountingHighEffBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('trackCounting3D2nd'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.trackCountingHighPurBJetTags = cms.EDProducer("JetTagProducer",
    jetTagComputer = cms.string('trackCounting3D3rd'),
    tagInfos = cms.VInputTag(cms.InputTag("impactParameterTagInfos"))
)


process.trackExtrapolator = cms.EDProducer("TrackExtrapolator",
    trackQuality = cms.string('goodIterative'),
    trackSrc = cms.InputTag("generalTracks")
)


process.trackRefsForJets = cms.EDProducer("ChargedRefCandidateProducer",
    src = cms.InputTag("trackWithVertexRefSelector"),
    particleType = cms.string('pi+')
)


process.trackerDrivenElectronSeeds = cms.EDProducer("GoodSeedProducer",
    HOverPLead_maxValue = cms.double(0.05),
    MaxEOverP = cms.double(3.0),
    Smoother = cms.string('GsfTrajectorySmoother_forPreId'),
    PtThresholdSavePreId = cms.untracked.double(1.0),
    UseQuality = cms.bool(True),
    EOverPLead_minValue = cms.double(0.95),
    ProducePreId = cms.untracked.bool(True),
    PFPSClusterLabel = cms.InputTag("particleFlowClusterPS"),
    ApplyIsolation = cms.bool(False),
    TMVAMethod = cms.string('BDT'),
    MaxEta = cms.double(2.4),
    PFHcalClusterLabel = cms.InputTag("particleFlowClusterHCAL"),
    EtaMap = cms.string('RecoParticleFlow/PFBlockProducer/data/resmap_ECAL_eta.dat'),
    PhiMap = cms.string('RecoParticleFlow/PFBlockProducer/data/resmap_ECAL_phi.dat'),
    EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
    PreCkfLabel = cms.string('SeedsForCkf'),
    NHitsInSeed = cms.int32(3),
    Fitter = cms.string('GsfTrajectoryFitter_forPreId'),
    ThresholdFile = cms.string('RecoParticleFlow/PFTracking/data/Threshold.dat'),
    UsePreShower = cms.bool(False),
    MinEOverP = cms.double(0.3),
    PreIdLabel = cms.string('preid'),
    PreGsfLabel = cms.string('SeedsForGsf'),
    EcalStripSumE_minClusEnergy = cms.double(0.1),
    EcalStripSumE_deltaEta = cms.double(0.03),
    PFEcalClusterLabel = cms.InputTag("particleFlowClusterECAL"),
    PSThresholdFile = cms.string('RecoParticleFlow/PFTracking/data/PSThreshold.dat'),
    MinPt = cms.double(2.0),
    TkColList = cms.VInputTag(cms.InputTag("generalTracks")),
    UseTMVA = cms.untracked.bool(True),
    HcalWindow = cms.double(0.184),
    TrackQuality = cms.string('highPurity'),
    Weights = cms.string('RecoParticleFlow/PFTracking/data/BDT_weights_21.txt'),
    MaxPt = cms.double(50.0),
    EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
    ClusterThreshold = cms.double(0.5)
)


process.trackingParticleRecoTrackAsssociation = cms.EDProducer("TrackAssociatorEDProducer",
    label_tr = cms.InputTag("generalTracks"),
    associator = cms.string('TrackAssociatorByHits'),
    label_tp = cms.InputTag("mergedtruth","MergedTrackTruth"),
    ignoremissingtrackcollection = cms.untracked.bool(False)
)


process.uncleanedHybridSuperClusters = cms.EDProducer("HybridClusterProducer",
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(7.4),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    severityRecHitThreshold = cms.double(4.0),
    RecHitFlagToBeExcluded = cms.vint32(3, 5, 9, 10),
    clustershapecollection = cms.string(''),
    eThreshA = cms.double(0.003),
    basicclusterCollection = cms.string('hybridBarrelBasicClusters'),
    eThreshB = cms.double(0.1),
    dynamicPhiRoad = cms.bool(False),
    severitySpikeId = cms.int32(2),
    excludeFlagged = cms.bool(False),
    eseed = cms.double(0.35),
    ethresh = cms.double(0.1),
    ewing = cms.double(0.0),
    RecHitSeverityToBeExcluded = cms.vint32(999),
    step = cms.int32(17),
    debugLevel = cms.string('INFO'),
    dynamicEThresh = cms.bool(False),
    superclusterCollection = cms.string(''),
    shapeAssociation = cms.string('hybridShapeAssoc'),
    HybridBarrelSeedThr = cms.double(1.0),
    ecalhitcollection = cms.string('EcalRecHitsEB'),
    severitySpikeThreshold = cms.double(0.95),
    ecalhitproducer = cms.string('ecalRecHit')
)


process.zdcreco = cms.EDProducer("ZdcHitReconstructor",
    digiLabel = cms.InputTag("hcalDigis"),
    setNoiseFlags = cms.bool(True),
    correctionPhaseNS = cms.double(0.0),
    setSaturationFlags = cms.bool(True),
    correctTiming = cms.bool(True),
    saturationParameters = cms.PSet(
        maxADCvalue = cms.int32(127)
    ),
    dropZSmarkedPassed = cms.bool(True),
    setHSCPFlags = cms.bool(True),
    Subdetector = cms.string('ZDC'),
    AuxTSvec = cms.vint32(4, 5, 6, 7),
    setTimingTrustFlags = cms.bool(False),
    recoMethod = cms.int32(2),
    correctForPhaseContainment = cms.bool(False),
    correctForTimeslew = cms.bool(False)
)


process.zeroStepFilter = cms.EDProducer("QualityFilter",
    TrackQuality = cms.string('highPurity'),
    recTracks = cms.InputTag("zeroStepTracksWithQuality")
)


process.zeroStepTracksWithQuality = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('highPurity'),
    minNumberLayers = cms.uint32(3),
    chi2n_par = cms.double(0.7),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(0.4, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(0.35, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(2),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("zeroStepWithTightQuality"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(0.4, 4.0),
    d0_par1 = cms.vdouble(0.3, 4.0),
    res_par = cms.vdouble(0.003, 0.001)
)


process.zeroStepWithLooseQuality = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(0),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('loose'),
    minNumberLayers = cms.uint32(0),
    chi2n_par = cms.double(1.6),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(0.45, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(0.65, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("preFilterZeroStepTracks"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(0.55, 4.0),
    d0_par1 = cms.vdouble(0.55, 4.0),
    res_par = cms.vdouble(0.003, 0.01)
)


process.zeroStepWithTightQuality = cms.EDProducer("AnalyticalTrackSelector",
    max_d0 = cms.double(100.0),
    minNumber3DLayers = cms.uint32(3),
    applyAbsCutsIfNoPV = cms.bool(False),
    qualityBit = cms.string('tight'),
    minNumberLayers = cms.uint32(3),
    chi2n_par = cms.double(0.7),
    nSigmaZ = cms.double(3.0),
    dz_par2 = cms.vdouble(0.4, 4.0),
    applyAdaptedPVCuts = cms.bool(True),
    dz_par1 = cms.vdouble(0.35, 4.0),
    copyTrajectories = cms.untracked.bool(True),
    vtxNumber = cms.int32(-1),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(2),
    beamspot = cms.InputTag("offlineBeamSpot"),
    copyExtras = cms.untracked.bool(False),
    vertexCut = cms.string('ndof>=2&!isFake'),
    max_z0 = cms.double(100.0),
    src = cms.InputTag("zeroStepWithLooseQuality"),
    vertices = cms.InputTag("pixelVertices"),
    d0_par2 = cms.vdouble(0.4, 4.0),
    d0_par1 = cms.vdouble(0.3, 4.0),
    res_par = cms.vdouble(0.003, 0.01)
)


process.chargedParticles = cms.EDFilter("GenParticleSelector",
    filter = cms.bool(False),
    src = cms.InputTag("genParticles"),
    cut = cms.string('charge != 0 & pt > 0.05 & status = 1 & eta < 2.5 & eta > -2.5')
)


process.cutsRecoTracksFifth = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring('iter5'),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('loose'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.cutsRecoTracksFifthHp = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring('iter5'),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('highPurity'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.cutsRecoTracksFirst = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring('iter1'),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('loose'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.cutsRecoTracksFirstHp = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring('iter1'),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('highPurity'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.cutsRecoTracksFourth = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring('iter4'),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('loose'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.cutsRecoTracksFourthHp = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring('iter4'),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('highPurity'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.cutsRecoTracksHp = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring(),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('highPurity'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.cutsRecoTracksSecond = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring('iter2'),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('loose'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.cutsRecoTracksSecondHp = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring('iter2'),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('highPurity'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.cutsRecoTracksThird = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring('iter3'),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('loose'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.cutsRecoTracksThirdHp = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring('iter3'),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('highPurity'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.cutsRecoTracksZero = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring('iter0'),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('loose'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.cutsRecoTracksZeroHp = cms.EDFilter("RecoTrackSelector",
    src = cms.InputTag("generalTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring('iter0'),
    maxChi2 = cms.double(10000.0),
    tip = cms.double(120.0),
    quality = cms.vstring('highPurity'),
    minRapidity = cms.double(-5.0),
    lip = cms.double(300.0),
    ptMin = cms.double(0.1),
    maxRapidity = cms.double(5.0),
    min3DHit = cms.int32(0),
    minHit = cms.int32(3)
)


process.dqmInfoES = cms.EDFilter("DQMEventInfo",
    subSystemFolder = cms.untracked.string('EcalPreshower')
)


process.fiducial = cms.EDFilter("EtaPtMinCandViewSelector",
    src = cms.InputTag("genp"),
    etaMin = cms.double(-2.5),
    etaMax = cms.double(2.5),
    ptMin = cms.double(2.0)
)


process.fiducialDiGamma = cms.EDFilter("EtaPtMinCandViewSelector",
    src = cms.InputTag("genpartDiGamma"),
    etaMin = cms.double(-2.5),
    etaMax = cms.double(2.5),
    ptMin = cms.double(2.0)
)


process.fiducialGammaJet = cms.EDFilter("EtaPtMinCandViewSelector",
    src = cms.InputTag("genpartGammaJet"),
    etaMin = cms.double(-2.5),
    etaMax = cms.double(2.5),
    ptMin = cms.double(2.0)
)


process.fiducialWenu = cms.EDFilter("EtaPtMinCandViewSelector",
    src = cms.InputTag("genpartWenu"),
    etaMin = cms.double(-2.5),
    etaMax = cms.double(2.5),
    ptMin = cms.double(2.0)
)


process.fiducialZee = cms.EDFilter("EtaPtMinCandViewSelector",
    src = cms.InputTag("genpartZee"),
    etaMin = cms.double(-2.5),
    etaMax = cms.double(2.5),
    ptMin = cms.double(2.0)
)


process.genp = cms.EDFilter("PdgIdAndStatusCandViewSelector",
    status = cms.vint32(3),
    pdgId = cms.vint32(11),
    src = cms.InputTag("genParticles")
)


process.genpartDiGamma = cms.EDFilter("PdgIdAndStatusCandViewSelector",
    status = cms.vint32(3),
    pdgId = cms.vint32(22),
    src = cms.InputTag("genParticles")
)


process.genpartGammaJet = cms.EDFilter("PdgIdAndStatusCandViewSelector",
    status = cms.vint32(3),
    pdgId = cms.vint32(22),
    src = cms.InputTag("genParticles")
)


process.genpartWenu = cms.EDFilter("PdgIdAndStatusCandViewSelector",
    status = cms.vint32(3),
    pdgId = cms.vint32(11),
    src = cms.InputTag("genParticles")
)


process.genpartZee = cms.EDFilter("PdgIdAndStatusCandViewSelector",
    status = cms.vint32(3),
    pdgId = cms.vint32(11),
    src = cms.InputTag("genParticles")
)


process.pfAllChargedHadrons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(211, -211, 321, -321, 999211, 
        2212, -2212),
    src = cms.InputTag("pfNoPileUp")
)


process.pfAllElectrons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(11, -11),
    src = cms.InputTag("pfNoMuon")
)


process.pfAllMuons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(-13, 13),
    src = cms.InputTag("pfNoPileUp")
)


process.pfAllNeutralHadrons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(111, 130, 310, 2112),
    src = cms.InputTag("pfNoPileUp")
)


process.pfAllPhotons = cms.EDFilter("PdgIdPFCandidateSelector",
    pdgId = cms.vint32(22),
    src = cms.InputTag("pfNoPileUp")
)


process.pfSelectedElectrons = cms.EDFilter("GenericPFCandidateSelector",
    src = cms.InputTag("particleFlow"),
    cut = cms.string('abs(pdgId())==11')
)


process.pfSelectedPhotons = cms.EDFilter("GenericPFCandidateSelector",
    src = cms.InputTag("particleFlow"),
    cut = cms.string('pdgId()==22 && mva_nothing_gamma>0')
)


process.recoTauPileUpVertices = cms.EDFilter("RecoTauPileUpVertexSelector",
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices"),
    minTrackSumPt = cms.double(5)
)


process.tpSelecForEfficiency = cms.EDFilter("TrackingParticleSelector",
    src = cms.InputTag("mergedtruth","MergedTrackTruth"),
    chargedOnly = cms.bool(True),
    pdgId = cms.vint32(),
    tip = cms.double(120),
    signalOnly = cms.bool(False),
    minRapidity = cms.double(-2.5),
    lip = cms.double(280),
    ptMin = cms.double(0.3),
    maxRapidity = cms.double(2.5),
    minHit = cms.int32(0),
    stableOnly = cms.bool(False)
)


process.tpSelecForFakeRate = cms.EDFilter("TrackingParticleSelector",
    src = cms.InputTag("mergedtruth","MergedTrackTruth"),
    chargedOnly = cms.bool(True),
    pdgId = cms.vint32(),
    tip = cms.double(120),
    signalOnly = cms.bool(False),
    minRapidity = cms.double(-2.5),
    lip = cms.double(280),
    ptMin = cms.double(0.0),
    maxRapidity = cms.double(2.5),
    minHit = cms.int32(0),
    stableOnly = cms.bool(False)
)


process.tpSelection = cms.EDFilter("TrackingParticleSelector",
    src = cms.InputTag("mergedtruth","MergedTrackTruth"),
    chargedOnly = cms.bool(True),
    pdgId = cms.vint32(),
    tip = cms.double(120),
    signalOnly = cms.bool(False),
    minRapidity = cms.double(-2.5),
    lip = cms.double(280),
    ptMin = cms.double(1.0),
    maxRapidity = cms.double(2.5),
    minHit = cms.int32(0),
    stableOnly = cms.bool(False)
)


process.trackWithVertexRefSelector = cms.EDFilter("TrackWithVertexRefSelector",
    normalizedChi2 = cms.double(999999.0),
    d0Max = cms.double(999.0),
    numberOfValidHits = cms.uint32(0),
    vtxFallback = cms.bool(True),
    copyExtras = cms.untracked.bool(False),
    quality = cms.string('highPurity'),
    nVertices = cms.uint32(0),
    copyTrajectories = cms.untracked.bool(False),
    ptMax = cms.double(500.0),
    zetaVtx = cms.double(1.0),
    numberOfLostHits = cms.uint32(999),
    etaMin = cms.double(0.0),
    vertexTag = cms.InputTag("offlinePrimaryVertices"),
    ptErrorCut = cms.double(0.2),
    ptMin = cms.double(0.3),
    numberOfValidPixelHits = cms.uint32(0),
    rhoVtx = cms.double(0.2),
    dzMax = cms.double(999.0),
    src = cms.InputTag("generalTracks"),
    etaMax = cms.double(5.0),
    useVtx = cms.bool(True)
)


process.AlcaBeamMonitor = cms.EDAnalyzer("AlcaBeamMonitor",
    ScalerLabel = cms.untracked.InputTag("scalerBeamSpot"),
    BeamSpotLabel = cms.untracked.InputTag("offlineBeamSpot"),
    PrimaryVertexLabel = cms.untracked.InputTag("offlinePrimaryVertices"),
    TrackLabel = cms.untracked.InputTag("generalTracks"),
    BeamFitter = cms.PSet(
        MaximumNormChi2 = cms.untracked.double(10.0),
        MaximumEta = cms.untracked.double(2.4),
        MaximumZ = cms.untracked.double(60),
        SaveNtuple = cms.untracked.bool(False),
        IsMuonCollection = cms.untracked.bool(False),
        WriteAscii = cms.untracked.bool(False),
        FractionOfFittedTrks = cms.untracked.double(0.9),
        deltaSignificanceCut = cms.untracked.double(10),
        WriteDIPAscii = cms.untracked.bool(False),
        OutputFileName = cms.untracked.string('BeamFit.root'),
        AsciiFileName = cms.untracked.string('BeamFit.txt'),
        SaveFitResults = cms.untracked.bool(False),
        TrackCollection = cms.untracked.InputTag("generalTracks"),
        MinimumPixelLayers = cms.untracked.int32(0),
        InputBeamWidth = cms.untracked.double(0.006),
        Debug = cms.untracked.bool(False),
        MinimumPt = cms.untracked.double(1.0),
        TrackAlgorithm = cms.untracked.vstring(),
        MinimumInputTracks = cms.untracked.int32(150),
        AppendRunToFileName = cms.untracked.bool(True),
        SavePVVertices = cms.untracked.bool(False),
        DIPFileName = cms.untracked.string('BeamFitDIP.txt'),
        MinimumTotalLayers = cms.untracked.int32(6),
        TrackQuality = cms.untracked.vstring(),
        MaximumImpactParameter = cms.untracked.double(1.0)
    ),
    PVFitter = cms.PSet(
        minVertexNdf = cms.untracked.double(10.0),
        nSigmaCut = cms.untracked.double(5.0),
        errorScale = cms.untracked.double(0.9),
        Apply3DFit = cms.untracked.bool(True),
        VertexCollection = cms.untracked.InputTag("offlinePrimaryVertices"),
        FitPerBunchCrossing = cms.untracked.bool(False),
        minVertexNTracks = cms.untracked.uint32(0),
        minVertexMeanWeight = cms.untracked.double(0.5),
        maxVertexR = cms.untracked.double(2),
        maxNrStoredVertices = cms.untracked.uint32(10000),
        Debug = cms.untracked.bool(False),
        minNrVerticesForFit = cms.untracked.uint32(50),
        maxVertexNormChi2 = cms.untracked.double(10.0),
        maxVertexZ = cms.untracked.double(10)
    ),
    MonitorName = cms.untracked.string('AlcaBeamMonitor')
)


process.AllCaloTowersValidation = cms.EDAnalyzer("CaloTowersValidation",
    outputFile = cms.untracked.string(''),
    CaloTowerCollectionLabel = cms.untracked.InputTag("towerMaker"),
    mc = cms.untracked.string('no'),
    hcalselector = cms.untracked.string('all')
)


process.AnalyzeBeamHalo = cms.EDAnalyzer("BeamHaloAnalyzer",
    StandardDQM = cms.bool(True),
    ESRecHitLabel = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    BeamHaloMuonLabel = cms.InputTag("muonsBeamHaloEndCapsOnly"),
    HBHERecHitLabel = cms.InputTag("hbhereco"),
    CollisionMuonLabel = cms.InputTag("muons"),
    TextFile = cms.string(''),
    DumpMET = cms.double(20.0),
    EcalHaloDataLabel = cms.InputTag("EcalHaloData"),
    EERecHitLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    PhotonLabel = cms.InputTag("photons"),
    metLabel = cms.InputTag("met"),
    SuperClusterLabel = cms.InputTag("correctedHybridSuperClusters"),
    CSCSegmentLabel = cms.InputTag("cscSegments"),
    HORecHitLabel = cms.InputTag("horeco"),
    L1MuGMTReadoutLabel = cms.InputTag("gtDigis"),
    CosmicStandAloneMuonLabel = cms.InputTag("cosmicMuons"),
    GlobalHaloDataLabel = cms.InputTag("GlobalHaloData"),
    OutputFile = cms.string(''),
    BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
    HcalHaloDataLabel = cms.InputTag("HcalHaloData"),
    CollisionStandAloneMuonLabel = cms.InputTag("standAloneMuons"),
    folderName = cms.string('JetMET/BeamHalo'),
    CaloTowerLabel = cms.InputTag("towerMaker"),
    EBRecHitLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    CSCRecHitLabel = cms.InputTag("csc2DRecHits"),
    HFRecHitLabel = cms.InputTag("hfreco"),
    CSCHaloDataLabel = cms.InputTag("CSCHaloData")
)


process.ClientTrackEfficiencySTACosmicMuons = cms.EDAnalyzer("TrackEfficiencyClient",
    effPhiMin = cms.double(-3.2),
    effEtaMin = cms.double(-3.2),
    trackEfficiency = cms.bool(True),
    effEtaMax = cms.double(3.2),
    FolderName = cms.string('Muons/cosmicMuons'),
    effXMin = cms.double(-100),
    effZBin = cms.int32(50),
    effXMax = cms.double(100),
    effYMin = cms.double(-100),
    effCompatibleLayersMax = cms.double(30),
    effCompatibleLayersMin = cms.double(0),
    effYMax = cms.double(100),
    effPhiBin = cms.int32(50),
    effCompatibleLayersBin = cms.int32(10),
    effYBin = cms.int32(50),
    effPhiMax = cms.double(0.0),
    effD0Bin = cms.int32(50),
    effZMax = cms.double(500),
    effD0Min = cms.double(-100),
    effZMin = cms.double(-500),
    AlgoName = cms.string('STA'),
    effEtaBin = cms.int32(50),
    effXBin = cms.int32(50),
    effD0Max = cms.double(100)
)


process.ClientTrackEfficiencyTkTracks = cms.EDAnalyzer("TrackEfficiencyClient",
    effPhiMin = cms.double(-3.2),
    effEtaMin = cms.double(-3.2),
    trackEfficiency = cms.bool(False),
    effEtaMax = cms.double(3.2),
    FolderName = cms.string('Muons/TKTrack'),
    effXMin = cms.double(-100),
    effZBin = cms.int32(50),
    effXMax = cms.double(100),
    effYMin = cms.double(-100),
    effCompatibleLayersMax = cms.double(30),
    effCompatibleLayersMin = cms.double(0),
    effYMax = cms.double(100),
    effPhiBin = cms.int32(50),
    effCompatibleLayersBin = cms.int32(10),
    effYBin = cms.int32(50),
    effPhiMax = cms.double(0.0),
    effD0Bin = cms.int32(50),
    effZMax = cms.double(500),
    effD0Min = cms.double(-100),
    effZMin = cms.double(-500),
    AlgoName = cms.string('CTF'),
    effEtaBin = cms.int32(50),
    effXBin = cms.int32(50),
    effD0Max = cms.double(100)
)


process.DQMMessageLogger = cms.EDAnalyzer("DQMMessageLogger",
    Directory = cms.string('MessageLogger'),
    Categories = cms.vstring()
)


process.EcalPhiSymMon = cms.EDAnalyzer("HLTAlCaMonEcalPhiSym",
    AlCaStreamEBTag = cms.untracked.InputTag("hltAlCaPhiSymStream","phiSymEcalRecHitsEB"),
    SaveToFile = cms.untracked.bool(False),
    FileName = cms.untracked.string('MonitorAlCaEcalPhiSym.root'),
    AlCaStreamEETag = cms.untracked.InputTag("hltAlCaPhiSymStream","phiSymEcalRecHitsEE"),
    prescaleFactor = cms.untracked.int32(1),
    FolderName = cms.untracked.string('HLT/EcalPhiSym')
)


process.EcalPi0Mon = cms.EDAnalyzer("HLTAlCaMonPi0",
    selePtGammaEndCap = cms.double(0.5),
    seleS4S9GammaEta = cms.double(0.87),
    prescaleFactor = cms.untracked.int32(1),
    selePtGammaEtaEndCap = cms.double(1.0),
    seleMinvMaxPi0 = cms.double(0.26),
    seleMinvMinEta = cms.double(0.2),
    selePtEta = cms.double(3.0),
    seleS9S25GammaEta = cms.double(0.8),
    seleS4S9Gamma = cms.double(0.83),
    seleXtalMinEnergy = cms.double(-0.15),
    seleXtalMinEnergyEndCap = cms.double(-0.75),
    selePi0BeltDetaEndCap = cms.double(0.05),
    selePtPi0 = cms.double(1.6),
    FileName = cms.untracked.string('MonitorAlCaEcalPi0.root'),
    massHighPi0Cand = cms.double(0.156),
    clusSeedThr = cms.double(0.5),
    seleEtaBeltDeta = cms.double(0.1),
    SaveToFile = cms.untracked.bool(False),
    selePtPi0EndCap = cms.double(2.0),
    selePtGammaEta = cms.double(0.8),
    clusPhiSize = cms.int32(3),
    selePi0BeltDREndCap = cms.double(0.2),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(5.7),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    AlCaStreamEEpi0Tag = cms.untracked.InputTag("hltAlCaPi0RecHitsFilter","pi0EcalRecHitsEE"),
    clusEtaSize = cms.int32(3),
    isMonEBpi0 = cms.untracked.bool(True),
    seleEtaBeltDR = cms.double(0.3),
    seleEtaBeltDREndCap = cms.double(0.3),
    AlCaStreamEEetaTag = cms.untracked.InputTag("hltAlCaEtaRecHitsFilter","etaEcalRecHitsEE"),
    ptMinForIsolationEndCap = cms.double(0.5),
    selePi0IsoEndCap = cms.double(0.5),
    selePi0BeltDR = cms.double(0.2),
    seleEtaIso = cms.double(0.5),
    selePi0Iso = cms.double(0.5),
    seleMinvMaxPi0EndCap = cms.double(0.3),
    ptMinForIsolationEtaEndCap = cms.double(0.5),
    seleMinvMinPi0EndCap = cms.double(0.05),
    seleEtaIsoEndCap = cms.double(0.5),
    selePi0BeltDeta = cms.double(0.05),
    selePtEtaEndCap = cms.double(3.0),
    seleS4S9GammaEndCap = cms.double(0.9),
    selePtGamma = cms.double(0.8),
    clusSeedThrEndCap = cms.double(1.0),
    ptMinForIsolation = cms.double(0.5),
    isMonEEpi0 = cms.untracked.bool(True),
    FolderName = cms.untracked.string('HLT/AlCaEcalPi0'),
    seleS9S25GammaEtaEndCap = cms.double(0.85),
    seleS4S9GammaEtaEndCap = cms.double(0.9),
    massLowPi0Cand = cms.double(0.084),
    seleMinvMinPi0 = cms.double(0.04),
    seleMinvMaxEtaEndCap = cms.double(0.9),
    seleMinvMaxEta = cms.double(0.9),
    AlCaStreamEBetaTag = cms.untracked.InputTag("hltAlCaEtaRecHitsFilter","etaEcalRecHitsEB"),
    AlCaStreamEBpi0Tag = cms.untracked.InputTag("hltAlCaPi0RecHitsFilter","pi0EcalRecHitsEB"),
    isMonEEeta = cms.untracked.bool(True),
    seleEtaBeltDetaEndCap = cms.double(0.1),
    ptMinForIsolationEta = cms.double(0.5),
    seleMinvMinEtaEndCap = cms.double(0.2),
    isMonEBeta = cms.untracked.bool(True)
)


process.HLTHiggsBits_2tauH2tau = cms.EDAnalyzer("HLTHiggsBits",
    MCTruth = cms.InputTag("genParticles"),
    OutputMEsInRootFile = cms.bool(False),
    hltBitNamesPh = cms.vstring(''),
    muon = cms.string('muons'),
    Photon = cms.string('correctedPhotons'),
    hltBitNamesMu = cms.vstring('HLT_Mu3', 
        'HLT_Mu9', 
        'HLT_Mu15', 
        'HLT_IsoMu3'),
    OutputFileName = cms.string(''),
    hltBitNames = cms.vstring('HLT_Mu3', 
        'HLT_Mu9', 
        'HLT_Mu15', 
        'HLT_Ele10_LW_L1R', 
        'HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R'),
    hltBitNamesTau = cms.vstring(''),
    Electron = cms.string('gsfElectrons'),
    DQMFolder = cms.untracked.string('HLT/Higgs/H2tau'),
    histName = cms.string(''),
    hltBitNamesEG = cms.vstring('HLT_Ele10_LW_L1R', 
        'HLT_Ele10_LW_EleId_L1R', 
        'HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R'),
    Nchannel = cms.int32(4),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    RunParameters = cms.PSet(
        Debug = cms.bool(True),
        EtaMin = cms.double(-2.5),
        EtaMax = cms.double(2.5),
        Monte = cms.bool(True)
    )
)


process.HLTHiggsBits_WWHWW = cms.EDAnalyzer("HLTHiggsBits",
    MCTruth = cms.InputTag("genParticles"),
    OutputMEsInRootFile = cms.bool(False),
    hltBitNamesPh = cms.vstring(''),
    muon = cms.string('muons'),
    Photon = cms.string('correctedPhotons'),
    hltBitNamesMu = cms.vstring('HLT_Mu3', 
        'HLT_Mu9', 
        'HLT_Mu15', 
        'HLT_DoubleMu3'),
    OutputFileName = cms.string(''),
    hltBitNames = cms.vstring('HLT_Mu3', 
        'HLT_Mu9', 
        'HLT_Mu15', 
        'HLT_Ele10_LW_L1R', 
        'HLT_Ele10_LW_EleId_L1R', 
        'HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R'),
    hltBitNamesTau = cms.vstring(''),
    Electron = cms.string('gsfElectrons'),
    DQMFolder = cms.untracked.string('HLT/Higgs/HWW'),
    histName = cms.string(''),
    hltBitNamesEG = cms.vstring('HLT_Ele10_LW_L1R', 
        'HLT_Ele10_LW_EleId_L1R', 
        'HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R', 
        'HLT_DoubleEle5_SW_L1R'),
    Nchannel = cms.int32(2),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    RunParameters = cms.PSet(
        Debug = cms.bool(True),
        EtaMin = cms.double(-2.5),
        EtaMax = cms.double(2.5),
        Monte = cms.bool(True)
    )
)


process.HLTHiggsBits_ZZHZZ = cms.EDAnalyzer("HLTHiggsBits",
    MCTruth = cms.InputTag("genParticles"),
    OutputMEsInRootFile = cms.bool(False),
    hltBitNamesPh = cms.vstring(''),
    muon = cms.string('muons'),
    Photon = cms.string('correctedPhotons'),
    hltBitNamesMu = cms.vstring('HLT_Mu3', 
        'HLT_Mu9', 
        'HLT_DoubleMu3'),
    Electron = cms.string('gsfElectrons'),
    OutputFileName = cms.string(''),
    hltBitNames = cms.vstring('HLT_Mu3', 
        'HLT_Mu9', 
        'HLT_DoubleMu3', 
        'HLT_Ele10_LW_L1R', 
        'HLT_Ele10_LW_EleId_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R', 
        'HLT_Ele15_SW_L1R', 
        'HLT_DoubleEle5_SW_L1R'),
    hltBitNamesTau = cms.vstring(''),
    genmet = cms.string('genMet'),
    DQMFolder = cms.untracked.string('HLT/Higgs/HZZ'),
    histName = cms.string(''),
    hltBitNamesEG = cms.vstring('HLT_Ele10_LW_L1R', 
        'HLT_Ele10_LW_EleId_L1R', 
        'HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R', 
        'HLT_DoubleEle5_SW_L1R'),
    Nchannel = cms.int32(1),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    RunParameters = cms.PSet(
        Debug = cms.bool(True),
        EtaMin = cms.double(-2.5),
        EtaMax = cms.double(2.5),
        Monte = cms.bool(True)
    )
)


process.HLTHiggsBits_ggHgg = cms.EDAnalyzer("HLTHiggsBits",
    MCTruth = cms.InputTag("genParticles"),
    OutputMEsInRootFile = cms.bool(False),
    hltBitNamesPh = cms.vstring('HLT_Photon15_L1R', 
        'HLT_Photon15_TrackIso_L1R', 
        'HLT_DoublePhoton10_L1R'),
    muon = cms.string('muons'),
    Photon = cms.string('correctedPhotons'),
    hltBitNamesMu = cms.vstring(''),
    OutputFileName = cms.string(''),
    hltBitNames = cms.vstring(''),
    hltBitNamesTau = cms.vstring(''),
    Electron = cms.string('gsfElectrons'),
    DQMFolder = cms.untracked.string('HLT/Higgs/Hgg'),
    histName = cms.string(''),
    hltBitNamesEG = cms.vstring(''),
    Nchannel = cms.int32(3),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    RunParameters = cms.PSet(
        Debug = cms.bool(True),
        EtaMin = cms.double(-2.5),
        EtaMax = cms.double(2.5),
        Monte = cms.bool(True)
    )
)


process.HLTHiggsBits_taunuHtaunu = cms.EDAnalyzer("HLTHiggsBits",
    MCTruth = cms.InputTag("genParticles"),
    OutputMEsInRootFile = cms.bool(False),
    hltBitNamesPh = cms.vstring(''),
    muon = cms.string('muons'),
    Photon = cms.string('correctedPhotons'),
    hltBitNamesMu = cms.vstring(''),
    OutputFileName = cms.string(''),
    hltBitNames = cms.vstring(''),
    hltBitNamesTau = cms.vstring('HLT_SingleLooseIsoTau20'),
    Electron = cms.string('gsfElectrons'),
    DQMFolder = cms.untracked.string('HLT/Higgs/Htaunu'),
    histName = cms.string(''),
    hltBitNamesEG = cms.vstring(''),
    Nchannel = cms.int32(5),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    RunParameters = cms.PSet(
        Debug = cms.bool(True),
        EtaMin = cms.double(-2.5),
        EtaMax = cms.double(2.5),
        Monte = cms.bool(True)
    )
)


process.HLTSusyExoVal = cms.EDAnalyzer("TriggerValidator",
    TurnOnParams = cms.PSet(
        hlt1MuonIsoList = cms.vstring('hltSingleMuIsoLevel1Seed', 
            'hltSingleMuIsoL1Filtered', 
            'hltSingleMuIsoL2PreFiltered', 
            'hltSingleMuIsoL2IsoFiltered', 
            'hltSingleMuIsoL3PreFiltered', 
            'hltSingleMuIsoL3IsoFiltered'),
        hltMuonTracks = cms.string('hltL3MuonCandidates'),
        hlt1MuonNonIsoList = cms.vstring('hltSingleMuNoIsoLevel1Seed', 
            'hltSingleMuNoIsoL1Filtered', 
            'hltSingleMuNoIsoL2PreFiltered', 
            'hltSingleMuNoIsoL3PreFiltered'),
        genMother = cms.string('b'),
        recoMuons = cms.string('muons'),
        mcParticles = cms.string('genParticles')
    ),
    mc_flag = cms.untracked.bool(True),
    triggerTag = cms.InputTag("hltTriggerSummaryAOD"),
    mc_parametersets = cms.VPSet(cms.PSet(
        mc_nMuonRule = cms.string('strictEqual'),
        mc_ptElecMin = cms.double(5.0),
        mc_ptTauMin = cms.double(0.0),
        mc_ptJetForHtMin = cms.double(0.0),
        mc_nTau = cms.int32(0),
        mc_htMin = cms.double(0.0),
        mc_nElecRule = cms.string('strictEqual'),
        mc_nElec = cms.int32(0),
        mc_nJet = cms.int32(2),
        mc_metMin = cms.double(50.0),
        mc_nPhot = cms.int32(0),
        genMet = cms.string('genMetTrue'),
        genJets = cms.string('iterativeCone5GenJets'),
        mcparticles = cms.string('genParticles'),
        mc_ptPhotMin = cms.double(0.0),
        mc_ptJetMin = cms.double(25.0),
        mc_ptMuonMin = cms.double(5.0),
        mc_nMuon = cms.int32(0),
        name = cms.string('RA1')
    ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(3),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA2')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('greaterEqual'),
            mc_ptElecMin = cms.double(0.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('greaterEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(2),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(15.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(0.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA3')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA4_e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA4_m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA5RA6_1e1m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(2),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA5RA6_2e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(2),
            name = cms.string('RA5RA6_2m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(2),
            name = cms.string('RA7_1e2m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(2),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA7_2e1m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(3),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA7_3e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(3),
            name = cms.string('RA7_3m')
        )),
    PlotMakerRecoInput = cms.PSet(
        def_electronPtMin = cms.double(10.0),
        def_muonPtMin = cms.double(7.0),
        calomet = cms.string('met'),
        photons = cms.string(''),
        electrons = cms.string('gsfElectrons'),
        jets = cms.string('iterativeCone5CaloJets'),
        muons = cms.string('muons'),
        def_jetPtMin = cms.double(30.0),
        def_photonPtMin = cms.double(30.0),
        photonProducer = cms.string('photons'),
        BinFactor = cms.int32(1)
    ),
    statFileName = cms.untracked.string('MonElements_LM1_IDEAL_30x_v1_300pre7.stat'),
    hltConfigName = cms.string('HLT'),
    PlotMakerL1Input = cms.PSet(
        l1extramc = cms.string('hltL1extraParticles')
    ),
    muonTag = cms.InputTag("muons"),
    l1_flag = cms.untracked.bool(False),
    triggerName = cms.string('@'),
    reco_parametersets = cms.VPSet(cms.PSet(
        reco_metMin = cms.double(100.0),
        reco_ptMuonMin = cms.double(10.0),
        reco_ptJet1Min = cms.double(80.0),
        photons = cms.string(''),
        reco_ptJet2Min = cms.double(30.0),
        reco_ptPhotMin = cms.double(0.0),
        electrons = cms.string('gsfElectrons'),
        calomet = cms.string('met'),
        muons = cms.string('muons'),
        reco_ptElecMin = cms.double(10.0),
        jets = cms.string('iterativeCone5CaloJets'),
        photonProducer = cms.string('photons'),
        name = cms.string('Reco1')
    )),
    histoFileName = cms.untracked.string('MonElements_LM1_IDEAL_30x_v1_300pre7.root'),
    L1Label = cms.InputTag("hltL1GtObjectMap"),
    dirname = cms.untracked.string('HLT/SusyExo'),
    HltLabel = cms.InputTag("TriggerResults","","HLT")
)


process.HLTSusyExoValFastSim = cms.EDAnalyzer("TriggerValidator",
    TurnOnParams = cms.PSet(
        hlt1MuonIsoList = cms.vstring('hltSingleMuIsoLevel1Seed', 
            'hltSingleMuIsoL1Filtered', 
            'hltSingleMuIsoL2PreFiltered', 
            'hltSingleMuIsoL2IsoFiltered', 
            'hltSingleMuIsoL3PreFiltered', 
            'hltSingleMuIsoL3IsoFiltered'),
        hltMuonTracks = cms.string('hltL3MuonCandidates'),
        hlt1MuonNonIsoList = cms.vstring('hltSingleMuNoIsoLevel1Seed', 
            'hltSingleMuNoIsoL1Filtered', 
            'hltSingleMuNoIsoL2PreFiltered', 
            'hltSingleMuNoIsoL3PreFiltered'),
        genMother = cms.string('b'),
        recoMuons = cms.string('muons'),
        mcParticles = cms.string('genParticles')
    ),
    mc_flag = cms.untracked.bool(True),
    triggerTag = cms.InputTag("hltTriggerSummaryAOD"),
    mc_parametersets = cms.VPSet(cms.PSet(
        mc_nMuonRule = cms.string('strictEqual'),
        mc_ptElecMin = cms.double(5.0),
        mc_ptTauMin = cms.double(0.0),
        mc_ptJetForHtMin = cms.double(0.0),
        mc_nTau = cms.int32(0),
        mc_htMin = cms.double(0.0),
        mc_nElecRule = cms.string('strictEqual'),
        mc_nElec = cms.int32(0),
        mc_nJet = cms.int32(2),
        mc_metMin = cms.double(50.0),
        mc_nPhot = cms.int32(0),
        genMet = cms.string('genMetTrue'),
        genJets = cms.string('iterativeCone5GenJets'),
        mcparticles = cms.string('genParticles'),
        mc_ptPhotMin = cms.double(0.0),
        mc_ptJetMin = cms.double(25.0),
        mc_ptMuonMin = cms.double(5.0),
        mc_nMuon = cms.int32(0),
        name = cms.string('RA1')
    ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(3),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA2')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('greaterEqual'),
            mc_ptElecMin = cms.double(0.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('greaterEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(2),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(15.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(0.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA3')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA4_e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA4_m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA5RA6_1e1m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(2),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA5RA6_2e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(2),
            mc_metMin = cms.double(50.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(25.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(2),
            name = cms.string('RA5RA6_2m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(1),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(2),
            name = cms.string('RA7_1e2m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(2),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(1),
            name = cms.string('RA7_2e1m')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(3),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(0),
            name = cms.string('RA7_3e')
        ), 
        cms.PSet(
            mc_nMuonRule = cms.string('strictEqual'),
            mc_ptElecMin = cms.double(5.0),
            mc_ptTauMin = cms.double(0.0),
            mc_ptJetForHtMin = cms.double(0.0),
            mc_nTau = cms.int32(0),
            mc_htMin = cms.double(0.0),
            mc_nElecRule = cms.string('strictEqual'),
            mc_nElec = cms.int32(0),
            mc_nJet = cms.int32(0),
            mc_metMin = cms.double(0.0),
            mc_nPhot = cms.int32(0),
            genMet = cms.string('genMetTrue'),
            genJets = cms.string('iterativeCone5GenJets'),
            mcparticles = cms.string('genParticles'),
            mc_ptPhotMin = cms.double(0.0),
            mc_ptJetMin = cms.double(0.0),
            mc_ptMuonMin = cms.double(5.0),
            mc_nMuon = cms.int32(3),
            name = cms.string('RA7_3m')
        )),
    PlotMakerRecoInput = cms.PSet(
        def_electronPtMin = cms.double(10.0),
        def_muonPtMin = cms.double(7.0),
        calomet = cms.string('met'),
        photons = cms.string(''),
        electrons = cms.string('gsfElectrons'),
        jets = cms.string('iterativeCone5CaloJets'),
        muons = cms.string('muons'),
        def_jetPtMin = cms.double(30.0),
        def_photonPtMin = cms.double(30.0),
        photonProducer = cms.string('photons'),
        BinFactor = cms.int32(1)
    ),
    statFileName = cms.untracked.string('MonElements_LM1_IDEAL_30x_v1_300pre7.stat'),
    hltConfigName = cms.string('HLT'),
    PlotMakerL1Input = cms.PSet(
        l1extramc = cms.string('hltL1extraParticles')
    ),
    muonTag = cms.InputTag("muons"),
    l1_flag = cms.untracked.bool(False),
    triggerName = cms.string('@'),
    reco_parametersets = cms.VPSet(cms.PSet(
        reco_metMin = cms.double(100.0),
        reco_ptMuonMin = cms.double(10.0),
        reco_ptJet1Min = cms.double(80.0),
        photons = cms.string(''),
        reco_ptJet2Min = cms.double(30.0),
        reco_ptPhotMin = cms.double(0.0),
        electrons = cms.string('gsfElectrons'),
        calomet = cms.string('met'),
        muons = cms.string('muons'),
        reco_ptElecMin = cms.double(10.0),
        jets = cms.string('iterativeCone5CaloJets'),
        photonProducer = cms.string('photons'),
        name = cms.string('Reco1')
    )),
    histoFileName = cms.untracked.string('MonElements_LM1_IDEAL_30x_v1_300pre7.root'),
    L1Label = cms.InputTag("gtDigis"),
    dirname = cms.untracked.string('HLT/SusyExo'),
    HltLabel = cms.InputTag("TriggerResults","","HLT")
)


process.HLTTauPostAnalysis = cms.EDAnalyzer("HLTTauPostProcessor",
    Harvester = cms.PSet(
        L1Dirs = cms.vstring('HLT/TauOffline/Inclusive/L1', 
            'HLT/TauOffline/PFTaus/L1', 
            'HLT/TauOffline/Photons/L1', 
            'HLT/TauOffline/HPD/L1'),
        trackDirs = cms.vstring(),
        caloDirs = cms.vstring('HLT/TauOffline/Inclusive/L2', 
            'HLT/TauOffline/PFTaus/L2', 
            'HLT/TauOffline/Photons/L2', 
            'HLT/TauOffline/HPD/L2'),
        pathSummaryDirs = cms.vstring('HLT/TauOffline/PFTaus/Summary', 
            'HLT/TauOffline/Photons/Summary', 
            'HLT/TauOffline/HPD/Summary'),
        pathDirs = cms.vstring('HLT/TauOffline/PFTaus/DoubleLooseIsoTau', 
            'HLT/TauOffline/Photons/DoubleLooseIsoTau', 
            'HLT/TauOffline/HPD/DoubleLooseIsoTau', 
            'HLT/TauOffline/PFTaus/SingleLooseIsoTau', 
            'HLT/TauOffline/Photons/SingleLooseIsoTau', 
            'HLT/TauOffline/HPD/SingleLooseIsoTau')
    )
)


process.HLTTopVal = cms.EDAnalyzer("TopValidation",
    OutputMEsInRootFile = cms.bool(False),
    hltPaths = cms.vstring('HLT_Mu9', 
        'HLT_Mu15', 
        'HLT_IsoMu9', 
        'HLT_DoubleMu3', 
        'HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R', 
        'HLT_DoubleEle10_SW_L1R'),
    OutputFileName = cms.string(''),
    hltMuonPaths = cms.vstring('HLT_Mu9', 
        'HLT_Mu15', 
        'HLT_IsoMu9', 
        'HLT_DoubleMu3'),
    TriggerResultsCollection = cms.InputTag("TriggerResults","","HLT"),
    hltJetPaths = cms.vstring('HLT_QuadJet30'),
    FolderName = cms.string('HLT/Top/'),
    hltEgPaths = cms.vstring('HLT_Ele15_SW_L1R', 
        'HLT_Ele15_SW_LooseTrackIso_L1R', 
        'HLT_DoubleEle10_SW_L1R')
)


process.HLT_DoubleEle5_SW_L1RDQMZee = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    genEtAcc = cms.double(2.0),
    reqNum = cms.uint32(2),
    filters = cms.VPSet(cms.PSet(
        PlotBounds = cms.vdouble(0.0, 0.0),
        theHLTOutputTypes = cms.int32(-82),
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        HLTCollectionLabels = cms.InputTag("hltL1sL1DoubleEG5","","HLT")
    ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoDoubleElectronEt5L1MatchFilterRegional","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoDoubleElectronEt5EtFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 10.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedElectronHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedElectronHcalIsol","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoDoubleElectronEt5HcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter","","HLT")
        )),
    PtMax = cms.untracked.double(200.0),
    pdgGen = cms.int32(11),
    cutcollection = cms.InputTag("fiducialZee"),
    cutnum = cms.int32(2)
)


process.HLT_DoublePhoton10_L1R_DQMDiGamma = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    useHumanReadableHistTitles = cms.untracked.bool(False),
    genEtAcc = cms.double(10.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        theHLTOutputTypes = cms.int32(-83),
        HLTCollectionHumanName = cms.untracked.string('Level 1'),
        HLTCollectionLabels = cms.InputTag("hltL1sRelaxedDoubleEgammaEt5","","HLT"),
        PlotBounds = cms.vdouble(0.0, 0.0)
    ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('L1 Match Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoDoublePhotonEt10L1MatchFilterRegional","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('Et Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoDoublePhotonEt10EtFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedPhotonHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedPhotonHcalIsol","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('Hcal Iso Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 10.0)
        )),
    PtMax = cms.untracked.double(200.0),
    pdgGen = cms.int32(22),
    cutcollection = cms.InputTag("fiducialDiGamma"),
    cutnum = cms.int32(2)
)


process.HLT_Ele10_LW_EleId_L1RDQMWenu = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    genEtAcc = cms.double(2.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        PlotBounds = cms.vdouble(0.0, 0.0),
        theHLTOutputTypes = cms.int32(-82),
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG5","","HLT")
    ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdL1MatchFilterRegional","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdEtFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdClusterShapeFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 10.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedElectronHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedElectronHcalIsol","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdHcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdPixelMatchFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdOneOEMinusOneOPFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.01),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("hltElectronL1IsoLargeWindowDetaDphi","Deta","HLT"), cms.InputTag("hltElectronL1NonIsoLargeWindowDetaDphi","Deta","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdDetaFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.01),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("hltElectronL1IsoLargeWindowDetaDphi","Dphi","HLT"), cms.InputTag("hltElectronL1NonIsoLargeWindowDetaDphi","Dphi","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdDphiFilter","","HLT")
        )),
    PtMax = cms.untracked.double(100.0),
    pdgGen = cms.int32(11),
    cutcollection = cms.InputTag("fiducialWenu"),
    cutnum = cms.int32(1)
)


process.HLT_Ele10_LW_EleId_L1RDQMZee = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    genEtAcc = cms.double(2.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        PlotBounds = cms.vdouble(0.0, 0.0),
        theHLTOutputTypes = cms.int32(-82),
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG5","","HLT")
    ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdL1MatchFilterRegional","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdEtFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdClusterShapeFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 10.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedElectronHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedElectronHcalIsol","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdHcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdPixelMatchFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdOneOEMinusOneOPFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.01),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("hltElectronL1IsoLargeWindowDetaDphi","Deta","HLT"), cms.InputTag("hltElectronL1NonIsoLargeWindowDetaDphi","Deta","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdDetaFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.01),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("hltElectronL1IsoLargeWindowDetaDphi","Dphi","HLT"), cms.InputTag("hltElectronL1NonIsoLargeWindowDetaDphi","Dphi","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdDphiFilter","","HLT")
        )),
    PtMax = cms.untracked.double(100.0),
    pdgGen = cms.int32(11),
    cutcollection = cms.InputTag("fiducialZee"),
    cutnum = cms.int32(2)
)


process.HLT_Ele10_LW_L1RDQMWenu = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    genEtAcc = cms.double(2.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        PlotBounds = cms.vdouble(0.0, 0.0),
        theHLTOutputTypes = cms.int32(-82),
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG5","","HLT")
    ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10L1MatchFilterRegional","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EtFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 10.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedElectronHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedElectronHcalIsol","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10HcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10PixelMatchFilter","","HLT")
        )),
    PtMax = cms.untracked.double(100.0),
    pdgGen = cms.int32(11),
    cutcollection = cms.InputTag("fiducialWenu"),
    cutnum = cms.int32(1)
)


process.HLT_Ele10_LW_L1RDQMZee = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    genEtAcc = cms.double(2.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        PlotBounds = cms.vdouble(0.0, 0.0),
        theHLTOutputTypes = cms.int32(-82),
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG5","","HLT")
    ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10L1MatchFilterRegional","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10EtFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 10.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedElectronHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedElectronHcalIsol","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10HcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronLWEt10PixelMatchFilter","","HLT")
        )),
    PtMax = cms.untracked.double(100.0),
    pdgGen = cms.int32(11),
    cutcollection = cms.InputTag("fiducialZee"),
    cutnum = cms.int32(2)
)


process.HLT_Ele15_SW_L1RDQMWenu = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    genEtAcc = cms.double(2.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        PlotBounds = cms.vdouble(0.0, 0.0),
        theHLTOutputTypes = cms.int32(-82),
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG8","","HLT")
    ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt15L1MatchFilterRegional","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt15EtFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 10.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedElectronHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedElectronHcalIsol","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt15HcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter","","HLT")
        )),
    PtMax = cms.untracked.double(100.0),
    pdgGen = cms.int32(11),
    cutcollection = cms.InputTag("fiducialWenu"),
    cutnum = cms.int32(1)
)


process.HLT_Ele15_SW_L1RDQMZee = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    genEtAcc = cms.double(2.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        PlotBounds = cms.vdouble(0.0, 0.0),
        theHLTOutputTypes = cms.int32(-82),
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG8","","HLT")
    ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt15L1MatchFilterRegional","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt15EtFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 10.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedElectronHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedElectronHcalIsol","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt15HcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter","","HLT")
        )),
    PtMax = cms.untracked.double(100.0),
    pdgGen = cms.int32(11),
    cutcollection = cms.InputTag("fiducialZee"),
    cutnum = cms.int32(2)
)


process.HLT_Ele15_SiStrip_L1RDQMWenu = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    genEtAcc = cms.double(2.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        PlotBounds = cms.vdouble(0.0, 0.0),
        theHLTOutputTypes = cms.int32(-82),
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG8","","HLT")
    ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15L1MatchFilterRegional","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15EtFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 10.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedElectronHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedElectronHcalIsol","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15HcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15PixelMatchFilter","","HLT")
        )),
    PtMax = cms.untracked.double(100.0),
    pdgGen = cms.int32(11),
    cutcollection = cms.InputTag("fiducialWenu"),
    cutnum = cms.int32(1)
)


process.HLT_Ele15_SiStrip_L1RDQMZee = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    genEtAcc = cms.double(2.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        PlotBounds = cms.vdouble(0.0, 0.0),
        theHLTOutputTypes = cms.int32(-82),
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG8","","HLT")
    ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15L1MatchFilterRegional","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15EtFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 10.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedElectronHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedElectronHcalIsol","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15HcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15PixelMatchFilter","","HLT")
        )),
    PtMax = cms.untracked.double(100.0),
    pdgGen = cms.int32(11),
    cutcollection = cms.InputTag("fiducialZee"),
    cutnum = cms.int32(2)
)


process.HLT_Ele17_SW_TighterEleIdIsol_L1RDQMWenu = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    genEtAcc = cms.double(2.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        PlotBounds = cms.vdouble(0.0, 0.0),
        theHLTOutputTypes = cms.int32(-82),
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG8","","HLT")
    ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolL1MatchFilterRegional","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolClusterShapeFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TIghterEleIdIsolEcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolHEFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolHcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolPixelMatchFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolOneOEMinusOneOPFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolDetaFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolDphiFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolTrackIsolFilter","","HLT")
        )),
    PtMax = cms.untracked.double(100.0),
    pdgGen = cms.int32(11),
    cutcollection = cms.InputTag("fiducialWenu"),
    cutnum = cms.int32(1)
)


process.HLT_Ele17_SW_TighterEleIdIsol_L1RDQMZee = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    genEtAcc = cms.double(2.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        PlotBounds = cms.vdouble(0.0, 0.0),
        theHLTOutputTypes = cms.int32(-82),
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG8","","HLT")
    ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolL1MatchFilterRegional","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolClusterShapeFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TIghterEleIdIsolEcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolHEFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolHcalIsolFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(92),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolPixelMatchFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolOneOEMinusOneOPFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolDetaFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolDphiFilter","","HLT")
        ), 
        cms.PSet(
            PlotBounds = cms.vdouble(0.0, 0.0),
            theHLTOutputTypes = cms.int32(82),
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSingleElectronEt17TighterEleIdIsolTrackIsolFilter","","HLT")
        )),
    PtMax = cms.untracked.double(100.0),
    pdgGen = cms.int32(11),
    cutcollection = cms.InputTag("fiducialZee"),
    cutnum = cms.int32(2)
)


process.HLT_Photon10_L1R_DQMDiGamma = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    useHumanReadableHistTitles = cms.untracked.bool(False),
    genEtAcc = cms.double(10.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        theHLTOutputTypes = cms.int32(-82),
        HLTCollectionHumanName = cms.untracked.string('Level 1'),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG5","","HLT"),
        PlotBounds = cms.vdouble(0.0, 0.0)
    ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('L1 Match Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSinglePhotonEt10L1MatchFilterRegional","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('Et Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSinglePhotonEt10EtFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedPhotonHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedPhotonHcalIsol","","HLT")),
            theHLTOutputTypes = cms.int32(81),
            HLTCollectionHumanName = cms.untracked.string('Hcal Iso Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 10.0)
        )),
    PtMax = cms.untracked.double(80.0),
    pdgGen = cms.int32(22),
    cutcollection = cms.InputTag("fiducialDiGamma"),
    cutnum = cms.int32(2)
)


process.HLT_Photon10_L1R_DQMGammaJet = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    useHumanReadableHistTitles = cms.untracked.bool(False),
    genEtAcc = cms.double(10.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        theHLTOutputTypes = cms.int32(-82),
        HLTCollectionHumanName = cms.untracked.string('Level 1'),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG5","","HLT"),
        PlotBounds = cms.vdouble(0.0, 0.0)
    ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('L1 Match Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSinglePhotonEt10L1MatchFilterRegional","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('Et Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSinglePhotonEt10EtFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedPhotonHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedPhotonHcalIsol","","HLT")),
            theHLTOutputTypes = cms.int32(81),
            HLTCollectionHumanName = cms.untracked.string('Hcal Iso Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 10.0)
        )),
    PtMax = cms.untracked.double(80.0),
    pdgGen = cms.int32(22),
    cutcollection = cms.InputTag("fiducialGammaJet"),
    cutnum = cms.int32(1)
)


process.HLT_Photon15_LooseEcalIso_L1R_DQMGammaJet = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    useHumanReadableHistTitles = cms.untracked.bool(False),
    genEtAcc = cms.double(10.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        theHLTOutputTypes = cms.int32(-82),
        HLTCollectionHumanName = cms.untracked.string('Level 1'),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG8","","HLT"),
        PlotBounds = cms.vdouble(0.0, 0.0)
    ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('L1 Match Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoSinglePhotonEt15LEIL1MatchFilterRegional","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('Et Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoSinglePhotonEt15LEIEtFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedPhotonEcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedPhotonEcalIsol","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('Ecal Iso Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoSinglePhotonEt15LEIEcalIsolFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 10.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedPhotonHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedPhotonHcalIsol","","HLT")),
            theHLTOutputTypes = cms.int32(81),
            HLTCollectionHumanName = cms.untracked.string('Hcal Iso Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 10.0)
        )),
    PtMax = cms.untracked.double(80.0),
    pdgGen = cms.int32(22),
    cutcollection = cms.InputTag("fiducialGammaJet"),
    cutnum = cms.int32(1)
)


process.HLT_Photon15_TrackIso_L1R_DQMGammaJet = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    useHumanReadableHistTitles = cms.untracked.bool(False),
    genEtAcc = cms.double(8.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        theHLTOutputTypes = cms.int32(-82),
        HLTCollectionHumanName = cms.untracked.string('Level 1'),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG8","","HLT"),
        PlotBounds = cms.vdouble(0.0, 0.0)
    ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('L1 Match Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoSinglePhotonEt15HTIL1MatchFilterRegional","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('Et Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoSinglePhotonEt15HTIEtFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedPhotonHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedPhotonHcalIsol","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('Hcal Iso Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoSinglePhotonEt15HTIHcalIsolFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 10.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsoPhotonHollowTrackIsol","","HLT"), cms.InputTag("hltL1NonIsoPhotonHollowTrackIsol","","HLT")),
            theHLTOutputTypes = cms.int32(81),
            HLTCollectionHumanName = cms.untracked.string('Track Iso Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 10.0)
        )),
    PtMax = cms.untracked.double(80.0),
    pdgGen = cms.int32(22),
    cutcollection = cms.InputTag("fiducialGammaJet"),
    cutnum = cms.int32(1)
)


process.HLT_Photon20_Cleaned_L1R_DQMGammaJet = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    useHumanReadableHistTitles = cms.untracked.bool(False),
    genEtAcc = cms.double(10.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        theHLTOutputTypes = cms.int32(-82),
        HLTCollectionHumanName = cms.untracked.string('Level 1'),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG8","","HLT"),
        PlotBounds = cms.vdouble(0.0, 0.0)
    ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('L1 Match Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSinglePhotonEt20CleanedL1MatchFilterRegional","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('Et Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSinglePhotonEt20CleanedEtFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsoR9shape","","HLT"), cms.InputTag("hltL1NonIsoR9shape","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('R9 Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSinglePhotonEt20CleanedR9ShapeFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedPhotonHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedPhotonHcalIsol","","HLT")),
            theHLTOutputTypes = cms.int32(81),
            HLTCollectionHumanName = cms.untracked.string('Hcal Iso Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoSinglePhotonEt20CleanedHcalIsolFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 10.0)
        )),
    PtMax = cms.untracked.double(80.0),
    pdgGen = cms.int32(22),
    cutcollection = cms.InputTag("fiducialGammaJet"),
    cutnum = cms.int32(1)
)


process.HLT_Photon25_LooseEcalIso_TrackIso_L1R_DQMGammaJet = cms.EDAnalyzer("EmDQM",
    genEtaAcc = cms.double(2.5),
    triggerobject = cms.InputTag("hltTriggerSummaryRAW","","HLT"),
    useHumanReadableHistTitles = cms.untracked.bool(False),
    genEtAcc = cms.double(10.0),
    reqNum = cms.uint32(1),
    filters = cms.VPSet(cms.PSet(
        IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
        theHLTOutputTypes = cms.int32(-82),
        HLTCollectionHumanName = cms.untracked.string('Level 1'),
        HLTCollectionLabels = cms.InputTag("hltL1sL1SingleEG8","","HLT"),
        PlotBounds = cms.vdouble(0.0, 0.0)
    ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('L1 Match Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTLEITISinglePhotonEt25L1MatchFilterRegional","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("none","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('Et Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTLEITISinglePhotonEt25EtFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 0.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedPhotonEcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedPhotonEcalIsol","","HLT")),
            theHLTOutputTypes = cms.int32(92),
            HLTCollectionHumanName = cms.untracked.string('Ecal Iso Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTLEITISinglePhotonEt25EcalIsolFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 10.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedPhotonHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedPhotonHcalIsol","","HLT")),
            theHLTOutputTypes = cms.int32(81),
            HLTCollectionHumanName = cms.untracked.string('Hcal Iso Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTLEITISinglePhotonEt25HcalIsolFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 10.0)
        ), 
        cms.PSet(
            IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsoPhotonHollowTrackIsol","","HLT"), cms.InputTag("hltL1NonIsoPhotonHollowTrackIsol","","HLT")),
            theHLTOutputTypes = cms.int32(81),
            HLTCollectionHumanName = cms.untracked.string('Track Iso Filter'),
            HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter","","HLT"),
            PlotBounds = cms.vdouble(0.0, 10.0)
        )),
    PtMax = cms.untracked.double(200.0),
    pdgGen = cms.int32(22),
    cutcollection = cms.InputTag("fiducialGammaJet"),
    cutnum = cms.int32(1)
)


process.HTMHTPath = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_HT240"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_HT300_MHT75"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/HT300MHT75'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.HiggsDQM = cms.EDAnalyzer("HiggsDQM",
    electronCollection = cms.InputTag("gsfElectrons"),
    caloMETCollection = cms.InputTag("corMetGlobalMuons"),
    muonTriggerPathToPass = cms.string('HLT_Mu9'),
    pfMETCollection = cms.InputTag("pfMet"),
    triggerResultsCollection = cms.InputTag("TriggerResults","","HLT"),
    elecTriggerPathToPass = cms.string('HLT_Ele10_LW_L1R'),
    PtThrMu2 = cms.untracked.double(3.0),
    muonCollection = cms.InputTag("muons"),
    genParticleCollection = cms.InputTag("genParticles"),
    caloJetCollection = cms.InputTag("ak5CaloJets"),
    PtThrMu1 = cms.untracked.double(3.0)
)


process.JetAnalyzerAk5Calo = cms.EDAnalyzer("CaloJetTester",
    src = cms.InputTag("ak5CaloJets"),
    genEnergyFractionThreshold = cms.double(0.05),
    genPtThreshold = cms.double(1.0),
    RThreshold = cms.double(0.3),
    reverseEnergyFractionThreshold = cms.double(0.5),
    srcGen = cms.InputTag("ak5GenJets")
)


process.JetAnalyzerAk5JPT = cms.EDAnalyzer("JPTJetTester",
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt5"),
    genEnergyFractionThreshold = cms.double(0.05),
    genPtThreshold = cms.double(1.0),
    RThreshold = cms.double(0.3),
    reverseEnergyFractionThreshold = cms.double(0.5),
    srcGen = cms.InputTag("ak5GenJets")
)


process.JetAnalyzerAk5PF = cms.EDAnalyzer("PFJetTester",
    src = cms.InputTag("ak5PFJets"),
    genEnergyFractionThreshold = cms.double(0.05),
    genPtThreshold = cms.double(1.0),
    RThreshold = cms.double(0.3),
    reverseEnergyFractionThreshold = cms.double(0.5),
    srcGen = cms.InputTag("ak5GenJets")
)


process.JetAnalyzerAk7Calo = cms.EDAnalyzer("CaloJetTester",
    src = cms.InputTag("ak7CaloJets"),
    genEnergyFractionThreshold = cms.double(0.05),
    genPtThreshold = cms.double(1.0),
    RThreshold = cms.double(0.3),
    reverseEnergyFractionThreshold = cms.double(0.5),
    srcGen = cms.InputTag("ak7GenJets")
)


process.JetAnalyzerIC5Calo = cms.EDAnalyzer("CaloJetTester",
    src = cms.InputTag("iterativeCone5CaloJets"),
    genEnergyFractionThreshold = cms.double(0.05),
    genPtThreshold = cms.double(1.0),
    RThreshold = cms.double(0.3),
    reverseEnergyFractionThreshold = cms.double(0.5),
    srcGen = cms.InputTag("iterativeCone5GenJets")
)


process.JetAnalyzerIC5JPT = cms.EDAnalyzer("JPTJetTester",
    src = cms.InputTag("JetPlusTrackZSPCorJetIcone5"),
    genEnergyFractionThreshold = cms.double(0.05),
    genPtThreshold = cms.double(1.0),
    RThreshold = cms.double(0.3),
    reverseEnergyFractionThreshold = cms.double(0.5),
    srcGen = cms.InputTag("iterativeCone5GenJets")
)


process.JetAnalyzerIC5PF = cms.EDAnalyzer("PFJetTester",
    src = cms.InputTag("iterativeCone5PFJets"),
    genEnergyFractionThreshold = cms.double(0.05),
    genPtThreshold = cms.double(1.0),
    RThreshold = cms.double(0.3),
    reverseEnergyFractionThreshold = cms.double(0.5),
    srcGen = cms.InputTag("iterativeCone5GenJets")
)


process.JetAnalyzerKt4Calo = cms.EDAnalyzer("CaloJetTester",
    src = cms.InputTag("kt4CaloJets"),
    genEnergyFractionThreshold = cms.double(0.05),
    genPtThreshold = cms.double(1.0),
    RThreshold = cms.double(0.3),
    reverseEnergyFractionThreshold = cms.double(0.5),
    srcGen = cms.InputTag("kt4GenJets")
)


process.JetAnalyzerKt6Calo = cms.EDAnalyzer("CaloJetTester",
    src = cms.InputTag("kt6CaloJets"),
    genEnergyFractionThreshold = cms.double(0.05),
    genPtThreshold = cms.double(1.0),
    RThreshold = cms.double(0.3),
    reverseEnergyFractionThreshold = cms.double(0.5),
    srcGen = cms.InputTag("kt6GenJets")
)


process.JpsiMuMu = cms.EDAnalyzer("BPAGTrigAnalyzer",
    BeamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    MaxPtParameters = cms.untracked.vdouble(40, 0.0, 80.0),
    HltProcessName = cms.string('HLT'),
    DQMStore = cms.untracked.bool(True),
    PhiParameters = cms.untracked.vdouble(4, -3.15, 3.15),
    ResParameters = cms.untracked.vdouble(50, -0.15, 0.15),
    PtParameters = cms.untracked.vdouble(1.0, 3.0, 4.0, 5.0, 6.0, 
        8.0, 10.0, 20.0),
    TriggerResultLabel = cms.InputTag("TriggerResults","","HLT"),
    HltAodInputTag = cms.InputTag("hltTriggerSummaryAOD"),
    L1DrCut = cms.untracked.double(0.4),
    histoFileName = cms.untracked.string('MuonTrigHistos_RECO.root'),
    matchType = cms.untracked.string('dr'),
    DrParameters = cms.untracked.vdouble(50, 0.0, 0.05),
    TriggerNames = cms.vstring('HLT_Mu3', 
        'HLT_Mu5', 
        'HLT_Mu9'),
    RecoMuonInputTag = cms.InputTag("muons"),
    HltRawInputTag = cms.InputTag("hltTriggerSummaryRAW"),
    customCollection = cms.VPSet(cms.untracked.PSet(
        tagHltCuts = cms.untracked.string('pt > 1.0 && abs(eta) < 2.1 '),
        collectionName = cms.untracked.string('probeJpsiMuon'),
        tagD0cut = cms.untracked.double(2.0),
        tagRecoCuts = cms.untracked.string('pt > 1.0 && abs(eta) < 2.1 '),
        z0cut = cms.untracked.double(25.0),
        tagCollectionName = cms.untracked.string('tagForProbeAnyMuon'),
        trackCollection = cms.untracked.string('innerTrack'),
        tagObjectTrigger = cms.untracked.string(''),
        tagZ0cut = cms.untracked.double(50.0),
        requiredTriggers = cms.untracked.vstring(''),
        recoCuts = cms.untracked.string('pt > 0.5 && abs(eta) < 2.1 '),
        hltCuts = cms.untracked.string('pt > 0.5 && abs(eta) < 2.1 '),
        d0cut = cms.untracked.double(2.0),
        tagTrackCollection = cms.untracked.string('innerTrack')
    )),
    createStandAloneHistos = cms.untracked.bool(False),
    L2DrCut = cms.untracked.double(0.25),
    EtaParameters = cms.untracked.vdouble(4, -2.1, 2.1),
    MassParameters = cms.untracked.vdouble(120, 2.8, 3.4),
    L3DrCut = cms.untracked.double(0.025)
)


process.MEtoMEComparitor = cms.EDAnalyzer("MEtoMEComparitor",
    Diffgoodness = cms.double(0.1),
    processRef = cms.string('HLT'),
    dirDepth = cms.uint32(1),
    KSgoodness = cms.double(0.9),
    runInstance = cms.string('MEtoEDMConverterRun'),
    MEtoEDMLabel = cms.string('MEtoEDMConverter'),
    autoProcess = cms.bool(True),
    processNew = cms.string('RERECO'),
    OverAllgoodness = cms.double(0.9),
    lumiInstance = cms.string('MEtoEDMConverterLumi')
)


process.MonitorTrackGLBMuons = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(150),
    NClus2DStrBin = cms.int32(150),
    Chi2ProbBin = cms.int32(100),
    Z0Min = cms.double(-60.0),
    TECLayBin = cms.int32(15),
    X0Bin = cms.int32(100),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(120),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TrackPxMin = cms.double(-50.0),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Muons/globalCosmicMuons/BeamSpotParameters'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    TIDLayBin = cms.int32(6),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('glb'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(99.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(True),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.2),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("newTrackCandidateMaker"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.2),
    SeedDxyMax = cms.double(0.5),
    VXMax = cms.double(0.5),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    NClus2DPxBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    NClus2DStrMax = cms.double(29999.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(299.5),
    NClus2DStrMin = cms.double(-0.5),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    RecHitMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(False),
    TOBLayMax = cms.double(9.5),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    doGoodTrackPlots = cms.bool(False),
    pzErrMax = cms.double(1.0),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    X0Min = cms.double(-0.5),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(100),
    MeanLayMax = cms.double(19.5),
    TOBHitMin = cms.double(-0.5),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    PhiBin = cms.int32(36),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    NTrk2DBin = cms.int32(30),
    NClusPxBin = cms.int32(50),
    doSeedParameterHistos = cms.bool(False),
    FolderName = cms.string('Muons/globalMuons'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    TrackPxBin = cms.int32(50),
    doAllPlots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(149.5),
    NClus2DPxMax = cms.double(9999.5),
    EtaMin = cms.double(-4.0),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(4.0),
    NClus2DPxMin = cms.double(-0.5),
    NClus2DTotBin = cms.int32(150),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    NClusStrBin = cms.int32(150),
    NClusPxMax = cms.double(1999.5),
    NClus2DTotMin = cms.double(-0.5),
    TCDxyMin = cms.double(-100.0),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TkSizeBin = cms.int32(100),
    Chi2Max = cms.double(199.5),
    Chi2NDFBin = cms.int32(50),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    NClus2DTotMax = cms.double(29999.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("newSeedFromTriplets"),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    EtaBin = cms.int32(80),
    TCDxyMax = cms.double(100.0),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    pyErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    NClusStrMin = cms.double(-0.5),
    TrackProducer = cms.InputTag("globalMuons"),
    NTrk2DMin = cms.double(-0.5),
    NClusStrMax = cms.double(14999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    RecLostBin = cms.int32(10)
)


process.MonitorTrackResiduals = cms.EDAnalyzer("MonitorTrackResiduals",
    OutputMEsInRootFile = cms.bool(False),
    Mod_On = cms.bool(False),
    TH1NormResModules = cms.PSet(
        xmin = cms.double(-5.0),
        Nbinx = cms.int32(100),
        xmax = cms.double(5.0)
    ),
    trajectoryInput = cms.string('generalTracks'),
    OutputFileName = cms.string('test_monitortracks.root'),
    TH1ResModules = cms.PSet(
        xmin = cms.double(-0.05),
        Nbinx = cms.int32(100),
        xmax = cms.double(0.05)
    ),
    Tracks = cms.InputTag("TrackRefitter"),
    ResetAfterRun = cms.bool(True),
    andOr = cms.bool(False),
    l1DBKey = cms.string('SiStripDQM_L1'),
    l1Algorithms = cms.vstring('NOT L1Tech_BSC_halo_beam2_inner.v0', 
        'NOT L1Tech_BSC_halo_beam2_outer.v0', 
        'NOT L1Tech_BSC_halo_beam1_inner.v0', 
        'NOT L1Tech_BSC_halo_beam1_outer.v0', 
        'NOT (L1Tech_BSC_splash_beam1.v0 AND NOT L1Tech_BSC_splash_beam2.v0)', 
        'NOT (L1Tech_BSC_splash_beam2.v0 AND NOT L1Tech_BSC_splash_beam1.v0)'),
    andOrL1 = cms.bool(False),
    errorReplyL1 = cms.bool(True)
)


process.MonitorTrackSTAMuons = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(20),
    TECHitMin = cms.double(-0.5),
    Chi2ProbBin = cms.int32(100),
    Z0Min = cms.double(-30.0),
    TECLayBin = cms.int32(15),
    X0Bin = cms.int32(100),
    Chi2Bin = cms.int32(250),
    TrackPMax = cms.double(1000),
    TrackPzBin = cms.int32(1000),
    TCSizeBin = cms.int32(150),
    SeedDzBin = cms.int32(200),
    Z0Max = cms.double(30.0),
    pErrBin = cms.int32(100),
    TrackPMin = cms.double(0),
    Chi2Min = cms.double(0.0),
    RecLayBin = cms.int32(120),
    VZMax = cms.double(100.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    pyErrMin = cms.double(0.0),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TrackPxMin = cms.double(-500.0),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Muons/standAloneMuonsUpdatedAtVtx/BeamSpotParameters'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    TIDLayBin = cms.int32(6),
    VZMin = cms.double(-100.0),
    pErrMax = cms.double(10.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('sta'),
    TrackPyMin = cms.double(-500.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(10.5),
    Chi2NDFMax = cms.double(19.5),
    TrackPtBin = cms.int32(1000),
    TrackPyMax = cms.double(500.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(False),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(10.0),
    RecHitBin = cms.int32(120),
    Y0Min = cms.double(-3.0),
    TCProducer = cms.InputTag("ckfTrackCandidatesP5"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('default'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    TCSizeMin = cms.double(-0.5),
    SeedDxyMax = cms.double(0.5),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-500.0),
    TOBLayMin = cms.double(-0.5),
    NClus2DPxBin = cms.int32(20),
    OutputFileName = cms.string('monitortrackparameters_stamuons.root'),
    TCHitMax = cms.double(39.5),
    NClus2DStrMax = cms.double(14999.5),
    LSMin = cms.double(0),
    RecHitMax = cms.double(120.0),
    NClus2DStrMin = cms.double(-0.5),
    VYMin = cms.double(-20.0),
    TrackPxMax = cms.double(500.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(500.0),
    VYMax = cms.double(20.0),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(60),
    RecHitMin = cms.double(0.0),
    TCDxyBin = cms.int32(200),
    doProfilesVsLS = cms.bool(False),
    TOBLayMax = cms.double(9.5),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(100),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(100),
    RecLayMax = cms.double(120.0),
    NTrk2DMax = cms.double(199.5),
    TCDzBin = cms.int32(200),
    doGoodTrackPlots = cms.bool(False),
    pzErrMax = cms.double(10.0),
    SeedProducer = cms.InputTag("combinedP5SeedsForCTF"),
    RecLayMin = cms.double(0.0),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.5),
    NClus2DTotMax = cms.double(14999.5),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(10.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(100),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    MeanHitBin = cms.int32(30),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(100),
    MeanLayMax = cms.double(19.5),
    TOBHitMin = cms.double(-0.5),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    PhiBin = cms.int32(36),
    RecLostBin = cms.int32(120),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    DxyMin = cms.double(-0.5),
    MeanHitMin = cms.double(-0.5),
    doSeedParameterHistos = cms.bool(False),
    FolderName = cms.string('Muons/standAloneMuonsUpdatedAtVtx'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(False),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(100),
    TrackPxBin = cms.int32(1000),
    doAllPlots = cms.bool(False),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    NClusPxBin = cms.int32(50),
    PXBHitBin = cms.int32(10),
    TIDLayMax = cms.double(5.5),
    TkSeedSizeMax = cms.double(19.5),
    NClus2DPxMax = cms.double(1999.5),
    EtaMin = cms.double(-3.0),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(3.0),
    NClus2DPxMin = cms.double(-0.5),
    NClus2DTotBin = cms.int32(50),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(1000),
    NClusStrBin = cms.int32(150),
    NClusPxMax = cms.double(1999.5),
    NClus2DTotMin = cms.double(-0.5),
    VXBin = cms.int32(20),
    TECLayMax = cms.double(14.5),
    VZBin = cms.int32(50),
    X0Max = cms.double(3.0),
    SeedDxyBin = cms.int32(100),
    TrackPyBin = cms.int32(1000),
    TkSizeBin = cms.int32(11),
    Chi2NDFBin = cms.int32(200),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    X0Min = cms.double(-3.0),
    PXFLayBin = cms.int32(6),
    NClusPxMin = cms.double(-0.5),
    TrackPtMin = cms.double(0),
    phiErrMax = cms.double(1.0),
    Y0Max = cms.double(3.0),
    TCDxyMin = cms.double(-100.0),
    NTrk2DBin = cms.int32(20),
    Chi2Max = cms.double(500.0),
    TrackPBin = cms.int32(1000),
    pyErrMax = cms.double(10.0),
    TCDxyMax = cms.double(100.0),
    doLumiAnalysis = cms.bool(False),
    TrackQBin = cms.int32(8),
    NClus2DStrBin = cms.int32(50),
    TCDzMax = cms.double(400.0),
    EtaBin = cms.int32(100),
    TkSizeMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    Y0Bin = cms.int32(100),
    TCHitMin = cms.double(-0.5),
    PhiMax = cms.double(3.2),
    ThetaMin = cms.double(0.0),
    PhiMin = cms.double(-3.2),
    TECHitMax = cms.double(24.5),
    pxErrBin = cms.int32(100),
    VXMax = cms.double(20.0),
    VXMin = cms.double(-20.0),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(149.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(20),
    RecLostMax = cms.double(20),
    TCHitBin = cms.int32(40),
    NClusStrMin = cms.double(-0.5),
    TrackProducer = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    NClusStrMax = cms.double(14999.5),
    RecLostMin = cms.double(0.0),
    pzErrBin = cms.int32(100),
    Quality = cms.string(''),
    NTrk2DMin = cms.double(-0.5),
    TrackQMax = cms.double(2.5)
)


process.MuIsoDQM_glb = cms.EDAnalyzer("MuonIsolationDQM",
    requireTRKMuon = cms.untracked.bool(False),
    Global_Muon_Label = cms.untracked.InputTag("muons"),
    requireGLBMuon = cms.untracked.bool(True),
    requireSTAMuon = cms.untracked.bool(False),
    ecalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ecal"),
    hcalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","hcal"),
    hoIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ho"),
    directory = cms.string('Muons/Isolation/global'),
    tkIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositTk")
)


process.MuIsoDQM_sta = cms.EDAnalyzer("MuonIsolationDQM",
    requireTRKMuon = cms.untracked.bool(False),
    Global_Muon_Label = cms.untracked.InputTag("muons"),
    requireGLBMuon = cms.untracked.bool(False),
    requireSTAMuon = cms.untracked.bool(True),
    ecalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ecal"),
    hcalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","hcal"),
    hoIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ho"),
    directory = cms.string('Muons/Isolation/standalone'),
    tkIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositTk")
)


process.MuIsoDQM_trk = cms.EDAnalyzer("MuonIsolationDQM",
    requireTRKMuon = cms.untracked.bool(True),
    Global_Muon_Label = cms.untracked.InputTag("muons"),
    requireGLBMuon = cms.untracked.bool(False),
    requireSTAMuon = cms.untracked.bool(False),
    ecalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ecal"),
    hcalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","hcal"),
    hoIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ho"),
    directory = cms.string('Muons/Isolation/tracker'),
    tkIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositTk")
)


process.MuIsoValidation_global = cms.EDAnalyzer("MuIsoValidation",
    Global_Muon_Label = cms.untracked.InputTag("muons"),
    requireCombinedMuon = cms.untracked.bool(True),
    ecalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ecal"),
    hcalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","hcal"),
    hoIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ho"),
    directory = cms.string('Muons/MuonIsolationV_global'),
    tkIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositTk")
)


process.MuIsoValidation_inc = cms.EDAnalyzer("MuIsoValidation",
    Global_Muon_Label = cms.untracked.InputTag("muons"),
    requireCombinedMuon = cms.untracked.bool(False),
    ecalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ecal"),
    hcalIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","hcal"),
    hoIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositCalByAssociatorTowers","ho"),
    directory = cms.string('Muons/MuonIsolationV_inc'),
    tkIsoDeposit_Label = cms.untracked.InputTag("muIsoDepositTk")
)


process.NoiseRatesValidation = cms.EDAnalyzer("NoiseRates",
    minRBXEnergy = cms.untracked.double(20.0),
    outputFile = cms.untracked.string('NoiseRatesRelVal.root'),
    rbxCollName = cms.untracked.InputTag("hcalnoise"),
    minHitEnergy = cms.untracked.double(1.5)
)


process.PixelTrackingRecHitsValid = cms.EDAnalyzer("SiPixelTrackingRecHitsValid",
    src = cms.untracked.string('generalTracks'),
    outputFile = cms.untracked.string(''),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('g4SimHitsTrackerHitsPixelBarrelLowTof', 
        'g4SimHitsTrackerHitsPixelBarrelHighTof', 
        'g4SimHitsTrackerHitsPixelEndcapLowTof', 
        'g4SimHitsTrackerHitsPixelEndcapHighTof'),
    Fitter = cms.string('KFFittingSmoother'),
    checkType = cms.bool(True),
    MTCCtrack = cms.bool(False),
    debugNtuple = cms.untracked.string(''),
    associateRecoTracks = cms.bool(False),
    associateStrip = cms.bool(False),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    genType = cms.int32(13),
    Propagator = cms.string('PropagatorWithMaterial')
)


process.QcdUeDQM = cms.EDAnalyzer("QcdUeDQM",
    verbose = cms.untracked.int32(3),
    trackTag = cms.untracked.InputTag("generalTracks"),
    vtxTag = cms.untracked.InputTag("offlinePrimaryVertices"),
    minRapidity = cms.double(-2.0),
    quality = cms.vstring('highPurity'),
    diffvtxbs = cms.double(10.0),
    bsuse = cms.bool(False),
    ptErr_pt = cms.double(0.05),
    tip = cms.double(3),
    chargedJetTag = cms.untracked.InputTag("ak5TrackJets"),
    lip = cms.double(3),
    ptMin = cms.double(0.5),
    maxRapidity = cms.double(2.0),
    minHit = cms.int32(3),
    allowTriplets = cms.bool(False),
    pxlLayerMinCut = cms.double(0),
    maxChi2 = cms.double(10000.0),
    requirePIX1 = cms.bool(False),
    bsPos = cms.double(0),
    hltTrgNames = cms.untracked.vstring('HLT_ZeroBias', 
        'HLT_ZeroBiasPixel_SingleTrack', 
        'HLT_MinBiasPixel_SingleTrack', 
        'HLT_L1Jet6U', 
        'HLT_L1Jet10U', 
        'HLT_Jet15U_v3'),
    caloJetTag = cms.untracked.InputTag("ak5CaloJets"),
    min3DHit = cms.int32(0),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    algorithm = cms.vstring(),
    hltTrgResults = cms.untracked.string('TriggerResults'),
    vtxntk = cms.double(4),
    hltProcNames = cms.untracked.vstring('HLT')
)


process.QuadJetPathVal30 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_L1SingleJet36"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_QuadJet40"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/QuadJet40'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.QuadJetPathVal60 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_L1SingleJet36"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_QuadJet60"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/QuadJet60'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.RecHitsValidation = cms.EDAnalyzer("HcalRecHitsValidation",
    outputFile = cms.untracked.string('HcalRecHitValidationRelVal.root'),
    eventype = cms.untracked.string('multi'),
    mc = cms.untracked.string('no'),
    HORecHitCollectionLabel = cms.untracked.InputTag("horeco"),
    hcalselector = cms.untracked.string('all'),
    HFRecHitCollectionLabel = cms.untracked.InputTag("hfreco"),
    ecalselector = cms.untracked.string('yes'),
    HBHERecHitCollectionLabel = cms.untracked.InputTag("hbhereco")
)


process.RelValEcalPhiSymMon = cms.EDAnalyzer("HLTAlCaMonEcalPhiSym",
    AlCaStreamEBTag = cms.untracked.InputTag("hltAlCaPhiSymStream","phiSymEcalRecHitsEB"),
    SaveToFile = cms.untracked.bool(False),
    FileName = cms.untracked.string('MonitorAlCaEcalPhiSym.root'),
    AlCaStreamEETag = cms.untracked.InputTag("hltAlCaPhiSymStream","phiSymEcalRecHitsEE"),
    prescaleFactor = cms.untracked.int32(1),
    FolderName = cms.untracked.string('HLT/EcalPhiSym')
)


process.RelValEcalPi0Mon = cms.EDAnalyzer("HLTAlCaMonPi0",
    selePtGammaEndCap = cms.double(0.8),
    seleS4S9GammaEta = cms.double(0.9),
    prescaleFactor = cms.untracked.int32(1),
    selePtGammaEtaEndCap = cms.double(1.5),
    seleMinvMaxPi0 = cms.double(0.22),
    seleMinvMinEta = cms.double(0.3),
    selePtEta = cms.double(4.0),
    seleS9S25GammaEta = cms.double(0.8),
    seleS4S9Gamma = cms.double(0.83),
    seleXtalMinEnergy = cms.double(-0.15),
    seleXtalMinEnergyEndCap = cms.double(-0.75),
    selePi0BeltDetaEndCap = cms.double(0.05),
    selePtPi0 = cms.double(2.0),
    FileName = cms.untracked.string('MonitorAlCaEcalPi0.root'),
    massHighPi0Cand = cms.double(0.163),
    clusSeedThr = cms.double(0.5),
    seleEtaBeltDeta = cms.double(0.1),
    SaveToFile = cms.untracked.bool(False),
    selePtPi0EndCap = cms.double(3.0),
    selePtGammaEta = cms.double(1.2),
    clusPhiSize = cms.int32(3),
    selePi0BeltDREndCap = cms.double(0.2),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(5.7),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    AlCaStreamEEpi0Tag = cms.untracked.InputTag("hltAlCaPi0RegRecHits","pi0EcalRecHitsEE"),
    clusEtaSize = cms.int32(3),
    isMonEBpi0 = cms.untracked.bool(True),
    seleEtaBeltDR = cms.double(0.3),
    seleEtaBeltDREndCap = cms.double(0.3),
    AlCaStreamEEetaTag = cms.untracked.InputTag("hltAlCaEtaRegRecHits","etaEcalRecHitsEE"),
    ptMinForIsolationEndCap = cms.double(0.5),
    selePi0IsoEndCap = cms.double(0.5),
    selePi0BeltDR = cms.double(0.2),
    seleEtaIso = cms.double(0.5),
    selePi0Iso = cms.double(0.5),
    seleMinvMaxPi0EndCap = cms.double(0.3),
    ptMinForIsolationEtaEndCap = cms.double(0.5),
    seleMinvMinPi0EndCap = cms.double(0.05),
    seleEtaIsoEndCap = cms.double(0.5),
    selePi0BeltDeta = cms.double(0.05),
    selePtEtaEndCap = cms.double(5),
    seleS4S9GammaEndCap = cms.double(0.9),
    selePtGamma = cms.double(1),
    clusSeedThrEndCap = cms.double(1.0),
    ptMinForIsolation = cms.double(1),
    isMonEEpi0 = cms.untracked.bool(True),
    FolderName = cms.untracked.string('HLT/AlCaEcalPi0'),
    seleS9S25GammaEtaEndCap = cms.double(0.85),
    seleS4S9GammaEtaEndCap = cms.double(0.9),
    massLowPi0Cand = cms.double(0.104),
    seleMinvMinPi0 = cms.double(0.06),
    seleMinvMaxEtaEndCap = cms.double(0.8),
    seleMinvMaxEta = cms.double(0.8),
    AlCaStreamEBetaTag = cms.untracked.InputTag("hltAlCaEtaRegRecHits","etaEcalRecHitsEB"),
    AlCaStreamEBpi0Tag = cms.untracked.InputTag("hltAlCaPi0RegRecHits","pi0EcalRecHitsEB"),
    isMonEEeta = cms.untracked.bool(True),
    seleEtaBeltDetaEndCap = cms.double(0.1),
    ptMinForIsolationEta = cms.double(1.0),
    seleMinvMinEtaEndCap = cms.double(0.3),
    isMonEBeta = cms.untracked.bool(True)
)


process.SiPixelClusterSource = cms.EDAnalyzer("SiPixelClusterSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_Cluster.root'),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(True),
    layOn = cms.untracked.bool(True),
    twoDimOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelClusters"),
    isPIB = cms.untracked.bool(False),
    smileyOn = cms.untracked.bool(True),
    ringOn = cms.untracked.bool(False),
    slowDown = cms.untracked.bool(False),
    modOn = cms.untracked.bool(False),
    phiOn = cms.untracked.bool(False),
    bigEventSize = cms.untracked.int32(180),
    diskOn = cms.untracked.bool(True)
)


process.SiPixelDigiSource = cms.EDAnalyzer("SiPixelDigiSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_Digi.root'),
    hiRes = cms.untracked.bool(False),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(True),
    twoDimOnlyLayDisk = cms.untracked.bool(False),
    layOn = cms.untracked.bool(True),
    phiOn = cms.untracked.bool(False),
    twoDimModOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelDigis"),
    isPIB = cms.untracked.bool(False),
    ringOn = cms.untracked.bool(False),
    slowDown = cms.untracked.bool(False),
    modOn = cms.untracked.bool(False),
    twoDimOn = cms.untracked.bool(False),
    bigEventSize = cms.untracked.int32(2600),
    diskOn = cms.untracked.bool(True)
)


process.SiPixelHLTSource = cms.EDAnalyzer("SiPixelHLTSource",
    saveFile = cms.untracked.bool(False),
    outputFile = cms.string('Pixel_DQM_HLT.root'),
    slowDown = cms.untracked.bool(False),
    ErrorInput = cms.InputTag("siPixelDigis"),
    RawInput = cms.InputTag("rawDataCollector"),
    DirName = cms.untracked.string('Pixel/FEDIntegrity/')
)


process.SiPixelHitEfficiencySource = cms.EDAnalyzer("SiPixelHitEfficiencySource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_HitEfficiency.root'),
    nSigma_EdgeCut = cms.untracked.double(2.0),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    updateEfficiencies = cms.untracked.bool(False),
    layOn = cms.untracked.bool(False),
    phiOn = cms.untracked.bool(False),
    ringOn = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    applyEdgeCut = cms.untracked.bool(False),
    modOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelHitEfficiency"),
    trajectoryInput = cms.InputTag("generalTracks"),
    diskOn = cms.untracked.bool(False)
)


process.SiPixelHitEfficiencySource_HeavyIons = cms.EDAnalyzer("SiPixelHitEfficiencySource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_HitEfficiency.root'),
    nSigma_EdgeCut = cms.untracked.double(2.0),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    updateEfficiencies = cms.untracked.bool(False),
    layOn = cms.untracked.bool(False),
    phiOn = cms.untracked.bool(False),
    ringOn = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    applyEdgeCut = cms.untracked.bool(False),
    modOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelHitEfficiency"),
    trajectoryInput = cms.InputTag("hiGlobalPrimTracks"),
    diskOn = cms.untracked.bool(False)
)


process.SiPixelRawDataErrorSource = cms.EDAnalyzer("SiPixelRawDataErrorSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_Error.root'),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(False),
    slowDown = cms.untracked.bool(False),
    isPIB = cms.untracked.bool(False),
    modOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelDigis")
)


process.SiPixelRecHitSource = cms.EDAnalyzer("SiPixelRecHitSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_RecHits.root'),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(True),
    layOn = cms.untracked.bool(True),
    twoDimOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelRecHits"),
    isPIB = cms.untracked.bool(False),
    ringOn = cms.untracked.bool(False),
    slowDown = cms.untracked.bool(False),
    modOn = cms.untracked.bool(False),
    phiOn = cms.untracked.bool(False),
    diskOn = cms.untracked.bool(True)
)


process.SiPixelTrackResidualSource = cms.EDAnalyzer("SiPixelTrackResidualSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_TrackResidual.root'),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(True),
    trajectoryInput = cms.InputTag("generalTracks"),
    layOn = cms.untracked.bool(True),
    phiOn = cms.untracked.bool(False),
    TrackCandidateProducer = cms.string('newTrackCandidateMaker'),
    TrackCandidateLabel = cms.string(''),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    ringOn = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    TTRHBuilder = cms.string('WithTrackAngle'),
    modOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelTrackResiduals"),
    clustersrc = cms.InputTag("siPixelClusters"),
    diskOn = cms.untracked.bool(True)
)


process.SiPixelTrackResidualSource_Cosmics = cms.EDAnalyzer("SiPixelTrackResidualSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_TrackResidual.root'),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(True),
    trajectoryInput = cms.InputTag("rsWithMaterialTracksP5"),
    layOn = cms.untracked.bool(True),
    phiOn = cms.untracked.bool(False),
    TrackCandidateProducer = cms.string('rsTrackCandidatesP5'),
    TrackCandidateLabel = cms.string(''),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    ringOn = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    TTRHBuilder = cms.string('WithTrackAngle'),
    modOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelTrackResiduals"),
    clustersrc = cms.InputTag("siPixelClusters"),
    diskOn = cms.untracked.bool(True)
)


process.SiPixelTrackResidualSource_HeavyIons = cms.EDAnalyzer("SiPixelTrackResidualSource",
    ladOn = cms.untracked.bool(True),
    outputFile = cms.string('Pixel_DQM_TrackResidual.root'),
    bladeOn = cms.untracked.bool(True),
    saveFile = cms.untracked.bool(False),
    reducedSet = cms.untracked.bool(True),
    trajectoryInput = cms.InputTag("hiGlobalPrimTracks"),
    layOn = cms.untracked.bool(True),
    phiOn = cms.untracked.bool(False),
    TrackCandidateProducer = cms.string('hiPrimTrackCandidates'),
    TrackCandidateLabel = cms.string(''),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    ringOn = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    TTRHBuilder = cms.string('WithTrackAngle'),
    modOn = cms.untracked.bool(False),
    src = cms.InputTag("siPixelTrackResiduals"),
    clustersrc = cms.InputTag("siPixelClusters"),
    diskOn = cms.untracked.bool(True)
)


process.SiStripMonitorCluster = cms.EDAnalyzer("SiStripMonitorCluster",
    TProf2ApvCycleVsDBx = cms.PSet(
        zmax = cms.double(0.0),
        ymax = cms.double(800.5),
        zmin = cms.double(0.0),
        Nbinsx = cms.int32(70),
        Nbinsy = cms.int32(800),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        subdetswitchon = cms.bool(False),
        ymin = cms.double(0.5)
    ),
    CreateTrendMEs = cms.bool(False),
    Mod_On = cms.bool(False),
    TH2ClustersApvCycle = cms.PSet(
        yfactor = cms.double(0.2),
        subdetswitchon = cms.bool(False),
        Nbinsx = cms.int32(70),
        Nbinsy = cms.int32(200),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.0)
    ),
    TH1ClusterDigiPos = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(768),
        xmax = cms.double(767.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterNoise = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(9.5),
        layerswitchon = cms.bool(False)
    ),
    Trending = cms.PSet(
        xmin = cms.double(0.0),
        Nbins = cms.int32(360),
        ymin = cms.double(0.0),
        ymax = cms.double(100000.0),
        xmax = cms.double(3600.0)
    ),
    TkHistoMap_On = cms.bool(True),
    HistoryProducer = cms.InputTag("consecutiveHEs"),
    ApvPhaseProducer = cms.InputTag("APVPhases"),
    TProfNumberOfCluster = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5),
        layerswitchon = cms.bool(False)
    ),
    TH1NrOfClusterizedStrips = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(99.5),
        layerswitchon = cms.bool(True)
    ),
    TH1ClusterPos = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(768),
        xmax = cms.double(767.5),
        layerswitchon = cms.bool(False)
    ),
    OutputFileName = cms.string('SiStripMonitorCluster.root'),
    SelectAllDetectors = cms.bool(False),
    ShowMechanicalStructureView = cms.bool(True),
    TH1ModuleLocalOccupancy = cms.PSet(
        xmin = cms.double(-0.01),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(51),
        xmax = cms.double(1.01),
        layerswitchon = cms.bool(True)
    ),
    TH1nClusters = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(11),
        xmax = cms.double(10.5),
        layerswitchon = cms.bool(False)
    ),
    TProfClusterWidth = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5),
        layerswitchon = cms.bool(False)
    ),
    TProfTotalNumberOfClusters = cms.PSet(
        Nbins = cms.int32(600),
        subdetswitchon = cms.bool(True),
        ymax = cms.double(0.0),
        xmax = cms.double(3600.0),
        xmin = cms.double(0.0),
        ymin = cms.double(0.0)
    ),
    ClusterLabel = cms.string(''),
    TH2ApvCycleVsDBxGlobal = cms.PSet(
        ymax = cms.double(800.5),
        globalswitchon = cms.bool(True),
        Nbinsx = cms.int32(70),
        Nbinsy = cms.int32(800),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.5)
    ),
    StripQualityLabel = cms.string(''),
    TProfClustersApvCycle = cms.PSet(
        Nbins = cms.int32(70),
        subdetswitchon = cms.bool(True),
        ymax = cms.double(0.0),
        Nbinsy = cms.int32(200),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.0)
    ),
    ClusterProducer = cms.InputTag("siStripClusters"),
    TH1TotalNumberOfClusters = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(50),
        subdetswitchon = cms.bool(False),
        xmax = cms.double(299.5)
    ),
    UseDCSFiltering = cms.bool(True),
    TH1ClusterStoN = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(100),
        xmax = cms.double(299.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ClusterCharge = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(200),
        xmax = cms.double(799.5),
        layerswitchon = cms.bool(False)
    ),
    TProfClustersVsDBxCycle = cms.PSet(
        Nbins = cms.int32(800),
        subdetswitchon = cms.bool(True),
        ymax = cms.double(0.0),
        xmax = cms.double(800.5),
        xmin = cms.double(0.5),
        ymin = cms.double(0.0)
    ),
    TopFolderName = cms.string('SiStrip'),
    TH1ClusterStoNVsPos = cms.PSet(
        ymax = cms.double(299.5),
        Nbinx = cms.int32(768),
        Nbiny = cms.int32(100),
        moduleswitchon = cms.bool(False),
        xmax = cms.double(767.5),
        xmin = cms.double(-0.5),
        layerswitchon = cms.bool(False),
        ymin = cms.double(-0.5)
    ),
    TH1ClusterWidth = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(20),
        xmax = cms.double(19.5),
        layerswitchon = cms.bool(False)
    ),
    OutputMEsInRootFile = cms.bool(False),
    ResetMEsEachRun = cms.bool(False),
    ShowControlView = cms.bool(False),
    ShowReadoutView = cms.bool(False),
    ClusterConditions = cms.PSet(
        minWidth = cms.double(0.0),
        On = cms.bool(True),
        maxStoN = cms.double(10000.0),
        minStoN = cms.double(0.0),
        maxWidth = cms.double(10000.0)
    )
)


process.SiStripMonitorDigi = cms.EDAnalyzer("SiStripMonitorDigi",
    OutputMEsInRootFile = cms.bool(False),
    CreateTrendMEs = cms.bool(False),
    Mod_On = cms.bool(False),
    Trending = cms.PSet(
        xmin = cms.double(0.0),
        Nbins = cms.int32(600),
        ymin = cms.double(0.0),
        ymax = cms.double(10000.0),
        xmax = cms.double(3600.0)
    ),
    topDir = cms.string('SiStrip'),
    TProfNumberOfDigi = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5),
        layerswitchon = cms.bool(False)
    ),
    ResetMEsEachRun = cms.bool(False),
    ApvPhaseProducer = cms.InputTag("APVPhases"),
    HistoryProducer = cms.InputTag("consecutiveHEs"),
    TProfTotalNumberOfDigisVsLS = cms.PSet(
        subdetswitchon = cms.bool(False)
    ),
    DigiProducersList = cms.VInputTag(cms.InputTag("siStripDigis","ZeroSuppressed"), cms.InputTag("siStripZeroSuppression","VirginRaw"), cms.InputTag("siStripZeroSuppression","ProcessedRaw"), cms.InputTag("siStripZeroSuppression","ScopeMode")),
    TotalNumberOfDigisFailure = cms.PSet(
        Nbins = cms.int32(6),
        subdetswitchon = cms.bool(False),
        ymax = cms.double(1.5),
        Nbinsy = cms.int32(1),
        xmax = cms.double(6.5),
        xmin = cms.double(0.5),
        ymin = cms.double(0.5)
    ),
    OutputFileName = cms.string('test_digi.root'),
    SelectAllDetectors = cms.bool(False),
    ShowMechanicalStructureView = cms.bool(True),
    TH1NumberOfDigisPerStrip = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(768),
        xmax = cms.double(767.5)
    ),
    TH2DigiApvCycle = cms.PSet(
        Nbins = cms.int32(70),
        yfactor = cms.double(0.2),
        subdetswitchon = cms.bool(False),
        Nbinsy = cms.int32(200),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.0)
    ),
    TProfDigiADC = cms.PSet(
        xmin = cms.double(0.0),
        moduleswitchon = cms.bool(False),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5),
        layerswitchon = cms.bool(False)
    ),
    TH1ADCsCoolestStrip = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(60),
        xmax = cms.double(299.5),
        layerswitchon = cms.bool(False)
    ),
    UseDCSFiltering = cms.bool(True),
    TProfTotalNumberOfDigis = cms.PSet(
        Nbins = cms.int32(360),
        subdetswitchon = cms.bool(False),
        ymax = cms.double(0.0),
        xmax = cms.double(3600.0),
        xmin = cms.double(0.0),
        ymin = cms.double(0.0)
    ),
    TH1DigiADCs = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(64),
        xmax = cms.double(255.5),
        layerswitchon = cms.bool(True)
    ),
    TH1StripOccupancy = cms.PSet(
        xmin = cms.double(-0.01),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(51),
        xmax = cms.double(1.01),
        layerswitchon = cms.bool(True)
    ),
    xLumiProf = cms.int32(5),
    TProfDigiApvCycle = cms.PSet(
        Nbins = cms.int32(70),
        subdetswitchon = cms.bool(True),
        ymax = cms.double(0.0),
        Nbinsy = cms.int32(200),
        xmax = cms.double(69.5),
        xmin = cms.double(-0.5),
        ymin = cms.double(0.0)
    ),
    TH1ADCsHottestStrip = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(60),
        xmax = cms.double(299.5),
        layerswitchon = cms.bool(False)
    ),
    CalculateStripOccupancy = cms.bool(False),
    ShowControlView = cms.bool(False),
    TH1NumberOfDigis = cms.PSet(
        xmin = cms.double(-0.5),
        moduleswitchon = cms.bool(True),
        Nbinx = cms.int32(50),
        xmax = cms.double(999.5),
        layerswitchon = cms.bool(True)
    ),
    ShowReadoutView = cms.bool(False),
    TkHistoMap_On = cms.bool(True)
)


process.SiStripMonitorTrack = cms.EDAnalyzer("SiStripMonitorTrack",
    OutputMEsInRootFile = cms.bool(False),
    Mod_On = cms.bool(False),
    Trending = cms.PSet(
        UpdateMode = cms.int32(1),
        Nbins = cms.int32(10),
        Steps = cms.int32(5)
    ),
    TH1ClusterNoise = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(20),
        xmax = cms.double(9.5)
    ),
    TH1ClusterSymmEtaCC = cms.PSet(
        xmin = cms.double(-0.1),
        Nbinx = cms.int32(120),
        xmax = cms.double(1.1)
    ),
    Cluster_src = cms.InputTag("siStripClusters"),
    TkHistoMap_On = cms.bool(True),
    TrackLabel = cms.string(''),
    TH1nClustersOff = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(100),
        xmax = cms.double(999.5)
    ),
    TH1ClusterStoNCorr = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(200),
        xmax = cms.double(199.5)
    ),
    TProfileClusterPGV = cms.PSet(
        ymax = cms.double(1.2),
        Nbinx = cms.int32(20),
        Nbiny = cms.int32(20),
        xmax = cms.double(10.0),
        xmin = cms.double(-10.0),
        ymin = cms.double(-0.1)
    ),
    RawDigis_On = cms.bool(False),
    TH1ClusterWidthCC = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(10),
        xmax = cms.double(9.5)
    ),
    OutputFileName = cms.string('test_monitortrackparameters_rs.root'),
    RawDigiLabel = cms.string('VirginRaw'),
    TH1ClusterStoNCorrMod = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(50),
        xmax = cms.double(199.5)
    ),
    TH1nClustersOn = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(100),
        xmax = cms.double(499.5)
    ),
    HistoFlag_On = cms.bool(False),
    TH1ClusterStoN = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(100),
        xmax = cms.double(299.5)
    ),
    OffHisto_On = cms.bool(True),
    TH1ClusterEstimatorCC = cms.PSet(
        xmin = cms.double(-0.1),
        Nbinx = cms.int32(120),
        xmax = cms.double(1.1)
    ),
    UseDCSFiltering = cms.bool(True),
    TH1ClusterChargeCorr = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(100),
        xmax = cms.double(399.5)
    ),
    TH1ClusterCharge = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(100),
        xmax = cms.double(999.5)
    ),
    AlgoName = cms.string('GenTk'),
    RawDigiProducer = cms.string('simSiStripDigis'),
    TrackProducer = cms.string('generalTracks'),
    TrajectoryInEvent = cms.bool(True),
    ModulesToBeExcluded = cms.vuint32(),
    TH1ClusterWidth = cms.PSet(
        xmin = cms.double(-0.5),
        Nbinx = cms.int32(20),
        xmax = cms.double(19.5)
    ),
    RingFlag_On = cms.bool(False),
    Trend_On = cms.bool(False),
    ClusterConditions = cms.PSet(
        minWidth = cms.double(0.0),
        On = cms.bool(False),
        maxStoN = cms.double(2000.0),
        minStoN = cms.double(0.0),
        maxWidth = cms.double(200.0)
    ),
    andOr = cms.bool(False),
    l1DBKey = cms.string('SiStripDQM_L1'),
    l1Algorithms = cms.vstring('NOT L1Tech_BSC_halo_beam2_inner.v0', 
        'NOT L1Tech_BSC_halo_beam2_outer.v0', 
        'NOT L1Tech_BSC_halo_beam1_inner.v0', 
        'NOT L1Tech_BSC_halo_beam1_outer.v0', 
        'NOT (L1Tech_BSC_splash_beam1.v0 AND NOT L1Tech_BSC_splash_beam2.v0)', 
        'NOT (L1Tech_BSC_splash_beam2.v0 AND NOT L1Tech_BSC_splash_beam1.v0)'),
    andOrL1 = cms.bool(False),
    errorReplyL1 = cms.bool(True)
)


process.SingleJetPathVal100 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_Jet190"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_Jet240"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleJet240'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleJetPathVal15 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_L1SingleJet36"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_Jet30"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleJet30'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleJetPathVal30 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_Jet30"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_Jet60"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleJet60'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleJetPathVal50 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_Jet60"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_Jet80"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleJet80'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleJetPathVal70 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_Jet80"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_Jet110"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleJet110'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleMETPathVal100 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_MET120"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_MET200"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleMET200'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleMETPathVal35 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_L1MET30"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_MET35"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleMET35'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleMETPathVal45 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_L1MET20"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_MET100"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleMET100'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.SingleMETPathVal60 = cms.EDAnalyzer("HLTJetMETValidation",
    GenMETCollection = cms.untracked.InputTag("genMetCalo"),
    CaloMETCollection = cms.untracked.InputTag("hltMet"),
    triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
    HLTLow = cms.untracked.InputTag("HLT_MET100"),
    GenJetAlgorithm = cms.untracked.InputTag("iterativeCone5GenJets"),
    LogFileName = cms.untracked.string('JetMETSingleJetValidation.log'),
    HLTPath = cms.untracked.InputTag("HLT_MET120"),
    DQMFolder = cms.untracked.string('HLT/HLTJETMET/SingleMET120'),
    OutputFileName = cms.untracked.string('relval220_ideal/ttbar_fastsim_output.root'),
    HLTriggerResults = cms.InputTag("TriggerResults","","HLT"),
    CaloJetAlgorithm = cms.untracked.InputTag("hltIterativeCone5CaloJets")
)


process.StripTrackingRecHitsValid = cms.EDAnalyzer("SiStripTrackingRecHitsValid",
    outputFile = cms.untracked.string(''),
    associatePixel = cms.bool(False),
    ROUList = cms.vstring('g4SimHitsTrackerHitsTIBLowTof', 
        'g4SimHitsTrackerHitsTIBHighTof', 
        'g4SimHitsTrackerHitsTIDLowTof', 
        'g4SimHitsTrackerHitsTIDHighTof', 
        'g4SimHitsTrackerHitsTOBLowTof', 
        'g4SimHitsTrackerHitsTOBHighTof', 
        'g4SimHitsTrackerHitsTECLowTof', 
        'g4SimHitsTrackerHitsTECHighTof'),
    trajectoryInput = cms.string('generalTracks'),
    associateRecoTracks = cms.bool(False),
    associateStrip = cms.bool(True)
)


process.TrackEffClient = cms.EDAnalyzer("TrackEfficiencyClient",
    effPhiMin = cms.double(-3.2),
    effEtaMin = cms.double(-3.2),
    trackEfficiency = cms.bool(True),
    effEtaMax = cms.double(3.2),
    FolderName = cms.string('Track/Efficiencies'),
    effXMin = cms.double(-100),
    effZBin = cms.int32(50),
    effXMax = cms.double(100),
    effYMin = cms.double(-100),
    effCompatibleLayersMax = cms.double(30),
    effCompatibleLayersMin = cms.double(0),
    effYMax = cms.double(100),
    effPhiBin = cms.int32(50),
    effCompatibleLayersBin = cms.int32(10),
    effYBin = cms.int32(50),
    effPhiMax = cms.double(0.0),
    AlgoName = cms.string('CTF'),
    effZMax = cms.double(500),
    effD0Min = cms.double(-100),
    effZMin = cms.double(-500),
    effD0Bin = cms.int32(50),
    effEtaBin = cms.int32(50),
    effXBin = cms.int32(50),
    effD0Max = cms.double(100)
)


process.TrackerCollisionTrackMon = cms.EDAnalyzer("TrackingMonitor",
    SeedHitMin = cms.double(-0.5),
    TOBHitMax = cms.double(14.5),
    TkSeedSizeBin = cms.int32(100),
    NClus2DStrBin = cms.int32(150),
    Chi2ProbBin = cms.int32(100),
    Z0Min = cms.double(-60.0),
    TECLayBin = cms.int32(15),
    X0Bin = cms.int32(100),
    Chi2Bin = cms.int32(50),
    TrackPMax = cms.double(100),
    TCSizeBin = cms.int32(100),
    SeedDzBin = cms.int32(120),
    Z0Max = cms.double(60.0),
    pyErrMax = cms.double(1.0),
    pErrBin = cms.int32(50),
    TrackPMin = cms.double(0),
    RecLayBin = cms.int32(25),
    VZMax = cms.double(30.0),
    SeedHitMax = cms.double(5.5),
    PXFHitBin = cms.int32(10),
    TIBLayMin = cms.double(-0.5),
    ptErrMin = cms.double(0.0),
    TrackPxMin = cms.double(-50.0),
    PXBHitMin = cms.double(-0.5),
    BSFolderName = cms.string('Tracking/TrackParameters/BeamSpotParameters'),
    PXFLayMax = cms.double(5.5),
    pErrMin = cms.double(0.0),
    PXBLayBin = cms.int32(6),
    TIDLayBin = cms.int32(6),
    VZMin = cms.double(-30.0),
    pErrMax = cms.double(1.0),
    PXFLayMin = cms.double(-0.5),
    AlgoName = cms.string('GenTk'),
    TrackPyMin = cms.double(-50.0),
    PXBHitMax = cms.double(9.5),
    Chi2NDFMin = cms.double(-0.5),
    TkSizeMax = cms.double(499.5),
    Chi2NDFMax = cms.double(49.5),
    TrackPtBin = cms.int32(100),
    TrackPyMax = cms.double(50.0),
    phiErrMin = cms.double(0.0),
    doTrackerSpecific = cms.bool(True),
    TECLayMin = cms.double(-0.5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TIBLayMax = cms.double(5.5),
    ptErrMax = cms.double(1.0),
    PhiMax = cms.double(3.2),
    Y0Min = cms.double(-0.5),
    TCProducer = cms.InputTag("newTrackCandidateMaker"),
    Chi2ProbMin = cms.double(0.0),
    TIDHitMax = cms.double(14.5),
    MeasurementState = cms.string('ImpactPoint'),
    TIBHitMin = cms.double(-0.5),
    SeedDxyMin = cms.double(-0.5),
    PhiMin = cms.double(-3.2),
    SeedDxyMax = cms.double(0.5),
    VXMax = cms.double(0.5),
    TIBHitMax = cms.double(14.5),
    Chi2ProbMax = cms.double(1.0),
    TrackPzMin = cms.double(-50.0),
    TOBLayMin = cms.double(-0.5),
    NClus2DPxBin = cms.int32(50),
    TCHitMax = cms.double(39.5),
    NClus2DStrMax = cms.double(29999.5),
    LSMin = cms.double(0),
    NTrk2DMax = cms.double(299.5),
    NClus2DStrMin = cms.double(-0.5),
    VYMin = cms.double(-0.5),
    TrackPxMax = cms.double(50.0),
    TkSeedSizeMin = cms.double(-0.5),
    TrackPzMax = cms.double(50.0),
    VYMax = cms.double(0.5),
    PXFHitMin = cms.double(-0.5),
    SeedHitBin = cms.int32(6),
    Z0Bin = cms.int32(120),
    RecHitMin = cms.double(-0.5),
    TCDxyBin = cms.int32(100),
    doProfilesVsLS = cms.bool(True),
    TOBLayMax = cms.double(9.5),
    pzErrMin = cms.double(0.0),
    TIBHitBin = cms.int32(15),
    phiErrBin = cms.int32(50),
    TECHitBin = cms.int32(25),
    etaErrBin = cms.int32(50),
    RecLayMax = cms.double(24.5),
    RecHitMax = cms.double(39.5),
    TCDzBin = cms.int32(100),
    doGoodTrackPlots = cms.bool(True),
    pzErrMax = cms.double(1.0),
    RecLayMin = cms.double(-0.5),
    MeanLayMin = cms.double(-0.5),
    etaErrMax = cms.double(0.1),
    X0Min = cms.double(-0.5),
    PXFHitMax = cms.double(9.5),
    etaErrMin = cms.double(0.0),
    pxErrMax = cms.double(1.0),
    PXBLayMax = cms.double(5.5),
    ptErrBin = cms.int32(50),
    TIBLayBin = cms.int32(6),
    DxyBin = cms.int32(100),
    NClusPxMin = cms.double(-0.5),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    ThetaBin = cms.int32(100),
    MeanLayMax = cms.double(19.5),
    TOBHitMin = cms.double(-0.5),
    PXBLayMin = cms.double(-0.5),
    pxErrMin = cms.double(0.0),
    PhiBin = cms.int32(36),
    VZBin = cms.int32(100),
    LSBin = cms.int32(2000),
    OutputMEsInRootFile = cms.bool(False),
    TIDLayMax = cms.double(5.5),
    DxyMin = cms.double(-0.5),
    NTrk2DBin = cms.int32(30),
    NClusPxBin = cms.int32(50),
    doSeedParameterHistos = cms.bool(True),
    FolderName = cms.string('Tracking/TrackParameters'),
    TIDLayMin = cms.double(-0.5),
    MeanLayBin = cms.int32(20),
    doBeamSpotPlots = cms.bool(True),
    SeedDzMin = cms.double(-30.0),
    pyErrBin = cms.int32(50),
    TrackPxBin = cms.int32(50),
    doAllPlots = cms.bool(True),
    SeedDzMax = cms.double(30.0),
    DxyMax = cms.double(0.5),
    MeanHitMin = cms.double(-0.5),
    PXBHitBin = cms.int32(10),
    OutputFileName = cms.string('MonitorTrack.root'),
    TkSeedSizeMax = cms.double(499.5),
    NClus2DPxMax = cms.double(9999.5),
    EtaMin = cms.double(-4.0),
    TOBHitBin = cms.int32(15),
    EtaMax = cms.double(4.0),
    NClus2DPxMin = cms.double(-0.5),
    NClus2DTotBin = cms.int32(150),
    MeanHitMax = cms.double(29.5),
    TrackPtMax = cms.double(100),
    NClusStrBin = cms.int32(150),
    NClusPxMax = cms.double(1999.5),
    NClus2DTotMin = cms.double(-0.5),
    TCDxyMin = cms.double(-100.0),
    TECLayMax = cms.double(14.5),
    TrackQMax = cms.double(2.5),
    X0Max = cms.double(0.5),
    SeedDxyBin = cms.int32(100),
    TkSizeBin = cms.int32(250),
    Chi2Max = cms.double(199.5),
    Chi2NDFBin = cms.int32(50),
    TrackQMin = cms.double(-2.5),
    TIDHitMin = cms.double(-0.5),
    LSMax = cms.double(2000.0),
    NClus2DTotMax = cms.double(29999.5),
    PXFLayBin = cms.int32(6),
    MeanHitBin = cms.int32(30),
    TrackPtMin = cms.double(0.1),
    phiErrMax = cms.double(0.1),
    Y0Max = cms.double(0.5),
    VXBin = cms.int32(100),
    RecHitBin = cms.int32(40),
    SeedProducer = cms.InputTag("newSeedFromTriplets"),
    TrackPBin = cms.int32(100),
    TrackPzBin = cms.int32(50),
    EtaBin = cms.int32(80),
    TCDxyMax = cms.double(100.0),
    doLumiAnalysis = cms.bool(True),
    TrackQBin = cms.int32(8),
    TECHitMin = cms.double(-0.5),
    TCDzMax = cms.double(400.0),
    pyErrMin = cms.double(0.0),
    TkSizeMin = cms.double(-0.5),
    TIDHitBin = cms.int32(15),
    Y0Bin = cms.int32(100),
    Chi2Min = cms.double(-0.5),
    ThetaMin = cms.double(0.0),
    TCSizeMin = cms.double(-0.5),
    TECHitMax = cms.double(24.5),
    pxErrBin = cms.int32(50),
    TrackPyBin = cms.int32(50),
    VXMin = cms.double(-0.5),
    ThetaMax = cms.double(3.2),
    TCSizeMax = cms.double(499.5),
    TCDzMin = cms.double(-400.0),
    TOBLayBin = cms.int32(10),
    VYBin = cms.int32(100),
    RecLostMax = cms.double(9.5),
    TCHitBin = cms.int32(40),
    NClusStrMin = cms.double(-0.5),
    TrackProducer = cms.InputTag("generalTracks"),
    NTrk2DMin = cms.double(-0.5),
    NClusStrMax = cms.double(14999.5),
    RecLostMin = cms.double(-0.5),
    pzErrBin = cms.int32(50),
    Quality = cms.string(''),
    TCHitMin = cms.double(-0.5),
    RecLostBin = cms.int32(10),
    andOr = cms.bool(False),
    dcsInputTag = cms.InputTag("scalersRawToDigi"),
    dcsPartitions = cms.vint32(24, 25, 26, 27, 28, 
        29),
    andOrDcs = cms.bool(False),
    errorReplyDcs = cms.bool(True),
    l1DBKey = cms.string('SiStripDQM_L1'),
    l1Algorithms = cms.vstring('NOT L1Tech_BSC_halo_beam2_inner.v0', 
        'NOT L1Tech_BSC_halo_beam2_outer.v0', 
        'NOT L1Tech_BSC_halo_beam1_inner.v0', 
        'NOT L1Tech_BSC_halo_beam1_outer.v0', 
        'NOT (L1Tech_BSC_splash_beam1.v0 AND NOT L1Tech_BSC_splash_beam2.v0)', 
        'NOT (L1Tech_BSC_splash_beam2.v0 AND NOT L1Tech_BSC_splash_beam1.v0)'),
    andOrL1 = cms.bool(False),
    errorReplyL1 = cms.bool(True)
)


process.UpsilonMuMu = cms.EDAnalyzer("BPAGTrigAnalyzer",
    BeamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    MaxPtParameters = cms.untracked.vdouble(40, 0.0, 80.0),
    HltProcessName = cms.string('HLT'),
    DQMStore = cms.untracked.bool(True),
    PhiParameters = cms.untracked.vdouble(4, -3.15, 3.15),
    ResParameters = cms.untracked.vdouble(50, -0.15, 0.15),
    PtParameters = cms.untracked.vdouble(1.0, 3.0, 4.0, 5.0, 6.0, 
        8.0, 10.0, 20.0, 50.0),
    TriggerResultLabel = cms.InputTag("TriggerResults","","HLT"),
    HltAodInputTag = cms.InputTag("hltTriggerSummaryAOD"),
    L1DrCut = cms.untracked.double(0.4),
    histoFileName = cms.untracked.string('MuonTrigHistos_RECO.root'),
    matchType = cms.untracked.string('dr'),
    DrParameters = cms.untracked.vdouble(50, 0.0, 0.05),
    TriggerNames = cms.vstring('HLT_Mu3', 
        'HLT_Mu5', 
        'HLT_Mu9'),
    RecoMuonInputTag = cms.InputTag("muons"),
    HltRawInputTag = cms.InputTag("hltTriggerSummaryRAW"),
    customCollection = cms.VPSet(cms.untracked.PSet(
        tagHltCuts = cms.untracked.string('pt > 1.0 && abs(eta) < 2.1 '),
        collectionName = cms.untracked.string('probeUpsilonMuon'),
        tagD0cut = cms.untracked.double(2.0),
        tagRecoCuts = cms.untracked.string('pt > 1.0 && abs(eta) < 2.1 '),
        z0cut = cms.untracked.double(25.0),
        tagCollectionName = cms.untracked.string('tagForProbeAnyMuon'),
        trackCollection = cms.untracked.string('innerTrack'),
        tagObjectTrigger = cms.untracked.string(''),
        tagZ0cut = cms.untracked.double(50.0),
        requiredTriggers = cms.untracked.vstring(''),
        recoCuts = cms.untracked.string('pt > 0.5 && abs(eta) < 2.1 '),
        hltCuts = cms.untracked.string('pt > 0.5 && abs(eta) < 2.1 '),
        d0cut = cms.untracked.double(2.0),
        tagTrackCollection = cms.untracked.string('innerTrack')
    )),
    createStandAloneHistos = cms.untracked.bool(False),
    L2DrCut = cms.untracked.double(0.25),
    EtaParameters = cms.untracked.vdouble(4, -2.1, 2.1),
    MassParameters = cms.untracked.vdouble(100, 8.5, 10.5),
    L3DrCut = cms.untracked.double(0.025)
)


process.ZMuMu = cms.EDAnalyzer("BPAGTrigAnalyzer",
    BeamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    MaxPtParameters = cms.untracked.vdouble(40, 0.0, 80.0),
    HltProcessName = cms.string('HLT'),
    DQMStore = cms.untracked.bool(True),
    PhiParameters = cms.untracked.vdouble(4, -3.15, 3.15),
    ResParameters = cms.untracked.vdouble(50, -0.15, 0.15),
    PtParameters = cms.untracked.vdouble(10.0, 30.0, 40.0, 50.0, 60.0, 
        100.0),
    TriggerResultLabel = cms.InputTag("TriggerResults","","HLT"),
    HltAodInputTag = cms.InputTag("hltTriggerSummaryAOD"),
    L1DrCut = cms.untracked.double(0.4),
    histoFileName = cms.untracked.string('MuonTrigHistos_RECO.root'),
    matchType = cms.untracked.string('dr'),
    DrParameters = cms.untracked.vdouble(50, 0.0, 0.05),
    TriggerNames = cms.vstring('HLT_Mu3', 
        'HLT_Mu5', 
        'HLT_Mu9'),
    RecoMuonInputTag = cms.InputTag("muons"),
    HltRawInputTag = cms.InputTag("hltTriggerSummaryRAW"),
    customCollection = cms.VPSet(cms.untracked.PSet(
        tagHltCuts = cms.untracked.string('pt > 1.0 && abs(eta) < 2.1 '),
        collectionName = cms.untracked.string('probeZMuon'),
        tagD0cut = cms.untracked.double(2.0),
        tagRecoCuts = cms.untracked.string('pt > 1.0 && abs(eta) < 2.1 '),
        z0cut = cms.untracked.double(25.0),
        tagCollectionName = cms.untracked.string('tagForProbeAnyMuon'),
        trackCollection = cms.untracked.string('innerTrack'),
        tagObjectTrigger = cms.untracked.string(''),
        tagZ0cut = cms.untracked.double(50.0),
        requiredTriggers = cms.untracked.vstring(''),
        recoCuts = cms.untracked.string('pt > 0.5 && abs(eta) < 2.1 '),
        hltCuts = cms.untracked.string('pt > 0.5 && abs(eta) < 2.1 '),
        d0cut = cms.untracked.double(2.0),
        tagTrackCollection = cms.untracked.string('innerTrack')
    )),
    createStandAloneHistos = cms.untracked.bool(False),
    L2DrCut = cms.untracked.double(0.25),
    EtaParameters = cms.untracked.vdouble(4, -2.1, 2.1),
    MassParameters = cms.untracked.vdouble(100, 65, 115),
    L3DrCut = cms.untracked.double(0.025)
)


process.bTagAnalysis = cms.EDAnalyzer("BTagPerformanceAnalyzerOnData",
    ptRecJetMin = cms.double(30.0),
    allHistograms = cms.bool(False),
    epsBaseName = cms.string(''),
    produceEps = cms.bool(False),
    ptRecJetMax = cms.double(40000.0),
    psBaseName = cms.string(''),
    update = cms.bool(False),
    ratioMin = cms.double(-1.0),
    ratioMax = cms.double(0.8),
    etaMin = cms.double(0.0),
    ptPartonMin = cms.double(0.0),
    producePs = cms.bool(False),
    softLeptonInfo = cms.InputTag("softElectronTagInfos"),
    jetMCSrc = cms.InputTag("mcJetFlavour"),
    jetIdParameters = cms.PSet(
        vetoFlavour = cms.vstring(),
        rejectBCSplitting = cms.bool(False),
        physicsDefinition = cms.bool(False),
        coneSizeToAssociate = cms.double(0.3),
        fillLeptons = cms.bool(False),
        fillHeavyHadrons = cms.bool(False),
        fillPartons = cms.bool(True),
        mcSource = cms.string('source')
    ),
    ptRanges = cms.vdouble(50.0, 80.0, 120.0),
    etaRanges = cms.vdouble(0.0, 1.4, 2.4),
    etaMax = cms.double(2.4),
    ptPartonMax = cms.double(99999.0),
    partonKinematics = cms.bool(True),
    inputfile = cms.string(''),
    finalizeOnly = cms.bool(False),
    finalizePlots = cms.bool(False),
    tagConfig = cms.VPSet(cms.PSet(
        parameters = cms.PSet(
            NBinsIPE = cms.int32(100),
            NBinsIPS = cms.int32(100),
            LowerIPEBound = cms.double(0.0),
            LowerIPBound = cms.double(-0.1),
            QualityPlots = cms.bool(False),
            MinJetDistance = cms.double(-9999.0),
            startEffPur = cms.double(0.005),
            UpperIPBound = cms.double(0.1),
            MaxJetDistance = cms.double(9999.0),
            nBinEffPur = cms.int32(200),
            UpperIPSBound = cms.double(35.0),
            MinDecayLength = cms.double(-9999.0),
            MaxDecayLength = cms.double(9999.0),
            endEffPur = cms.double(1.005),
            NBinsIP = cms.int32(100),
            LowerIPSBound = cms.double(-35.0),
            UpperIPEBound = cms.double(0.04)
        ),
        folder = cms.string('IPTag'),
        type = cms.string('TrackIP'),
        label = cms.InputTag("impactParameterTagInfos")
    ), 
        cms.PSet(
            parameters = cms.PSet(
                categoryVariable = cms.string('vertexCategory'),
                categories = cms.VPSet(cms.PSet(
                    trackPPar = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(250.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.0)
                    ),
                    trackSumJetEtRatio = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(4.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    trackMomentum = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(250.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.0)
                    ),
                    trackEtaRel = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(9.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(1.3)
                    ),
                    trackSip2dSig = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(80.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(-50.0)
                    ),
                    trackSip3dSig = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(80.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(-50.0)
                    ),
                    trackPParRatio = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(1.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.86)
                    ),
                    trackSip3dVal = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(3.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(-3.0)
                    ),
                    trackDecayLenVal = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(50.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.0)
                    ),
                    trackJetDist = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(0.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(-10.0)
                    ),
                    trackSip2dVal = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(0.2),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(-0.2)
                    ),
                    trackPtRel = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(20.0),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.0)
                    ),
                    trackPtRatio = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(0.5),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.0)
                    ),
                    trackDeltaR = cms.PSet(
                        indices = cms.vuint32(0, 1, 2, 3),
                        max = cms.double(0.3),
                        nBins = cms.uint32(50),
                        logScale = cms.bool(True),
                        min = cms.double(0.0)
                    ),
                    trackSip2dSigAboveCharm = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(80.0),
                        nBins = cms.uint32(50),
                        min = cms.double(-50.0)
                    ),
                    trackSip3dSigAboveCharm = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(80.0),
                        nBins = cms.uint32(50),
                        min = cms.double(-50.0)
                    ),
                    vertexCategory = cms.PSet(
                        logScale = cms.bool(False),
                        max = cms.double(2.5),
                        nBins = cms.uint32(3),
                        min = cms.double(-0.5)
                    ),
                    trackSumJetDeltaR = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(0.3),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    vertexMass = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(10.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    vertexNTracks = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(20.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    vertexJetDeltaR = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(0.5),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    vertexEnergyRatio = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(1.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    flightDistance3dVal = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(10.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.01)
                    ),
                    flightDistance3dSig = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(80.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    flightDistance2dSig = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(80.0),
                        nBins = cms.uint32(50),
                        min = cms.double(3.0)
                    ),
                    jetNSecondaryVertices = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(10.0),
                        nBins = cms.uint32(50),
                        min = cms.double(0.0)
                    ),
                    flightDistance2dVal = cms.PSet(
                        logScale = cms.bool(True),
                        max = cms.double(2.5),
                        nBins = cms.uint32(50),
                        min = cms.double(0.01)
                    )
                ), 
                    cms.PSet(
                        trackPPar = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(250.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackSumJetEtRatio = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(4.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        trackMomentum = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(250.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackEtaRel = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(9.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(1.3)
                        ),
                        trackSip2dSig = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-50.0)
                        ),
                        trackSip3dSig = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-50.0)
                        ),
                        trackPParRatio = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(1.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.86)
                        ),
                        trackSip3dVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(3.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-3.0)
                        ),
                        trackDecayLenVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(50.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackJetDist = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-10.0)
                        ),
                        trackSip2dVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.2),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-0.2)
                        ),
                        trackPtRel = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(20.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackPtRatio = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.5),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackDeltaR = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.3),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackSip2dSigAboveCharm = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(-50.0)
                        ),
                        trackSip3dSigAboveCharm = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(-50.0)
                        ),
                        vertexCategory = cms.PSet(
                            logScale = cms.bool(False),
                            max = cms.double(2.5),
                            nBins = cms.uint32(3),
                            min = cms.double(-0.5)
                        ),
                        trackSumJetDeltaR = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(0.3),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexMass = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(10.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexNTracks = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(20.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexJetDeltaR = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(0.5),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexEnergyRatio = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(1.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        flightDistance3dVal = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(10.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.01)
                        ),
                        flightDistance3dSig = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        flightDistance2dSig = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(3.0)
                        ),
                        jetNSecondaryVertices = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(10.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        flightDistance2dVal = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(2.5),
                            nBins = cms.uint32(50),
                            min = cms.double(0.01)
                        )
                    ), 
                    cms.PSet(
                        trackPPar = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(250.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackSumJetEtRatio = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(4.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        trackMomentum = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(250.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackEtaRel = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(9.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(1.3)
                        ),
                        trackSip2dSig = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-50.0)
                        ),
                        trackSip3dSig = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-50.0)
                        ),
                        trackPParRatio = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(1.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.86)
                        ),
                        trackSip3dVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(3.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-3.0)
                        ),
                        trackDecayLenVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(50.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackJetDist = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-10.0)
                        ),
                        trackSip2dVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.2),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-0.2)
                        ),
                        trackPtRel = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(20.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackPtRatio = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.5),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackDeltaR = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.3),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackSip2dSigAboveCharm = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(-50.0)
                        ),
                        trackSip3dSigAboveCharm = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(-50.0)
                        ),
                        vertexCategory = cms.PSet(
                            logScale = cms.bool(False),
                            max = cms.double(2.5),
                            nBins = cms.uint32(3),
                            min = cms.double(-0.5)
                        ),
                        trackSumJetDeltaR = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(0.3),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexMass = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(10.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexNTracks = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(20.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexJetDeltaR = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(0.5),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        vertexEnergyRatio = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(1.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        )
                    ), 
                    cms.PSet(
                        trackPPar = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(250.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackSumJetEtRatio = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(4.0),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        ),
                        trackMomentum = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(250.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackEtaRel = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(9.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(1.3)
                        ),
                        trackSip2dSig = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-50.0)
                        ),
                        trackSip3dSig = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-50.0)
                        ),
                        trackPParRatio = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(1.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.86)
                        ),
                        trackSip3dVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(3.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-3.0)
                        ),
                        trackDecayLenVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(50.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackJetDist = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-10.0)
                        ),
                        trackSip2dVal = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.2),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(-0.2)
                        ),
                        trackPtRel = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(20.0),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackPtRatio = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.5),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackDeltaR = cms.PSet(
                            indices = cms.vuint32(0, 1, 2, 3),
                            max = cms.double(0.3),
                            nBins = cms.uint32(50),
                            logScale = cms.bool(True),
                            min = cms.double(0.0)
                        ),
                        trackSip2dSigAboveCharm = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(-50.0)
                        ),
                        trackSip3dSigAboveCharm = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(80.0),
                            nBins = cms.uint32(50),
                            min = cms.double(-50.0)
                        ),
                        vertexCategory = cms.PSet(
                            logScale = cms.bool(False),
                            max = cms.double(2.5),
                            nBins = cms.uint32(3),
                            min = cms.double(-0.5)
                        ),
                        trackSumJetDeltaR = cms.PSet(
                            logScale = cms.bool(True),
                            max = cms.double(0.3),
                            nBins = cms.uint32(50),
                            min = cms.double(0.0)
                        )
                    ))
            ),
            folder = cms.string('CSVTag'),
            type = cms.string('GenericMVA'),
            ipTagInfos = cms.InputTag("impactParameterTagInfos"),
            svTagInfos = cms.InputTag("secondaryVertexTagInfos"),
            label = cms.InputTag("combinedSecondaryVertex")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-10.0),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(30.0),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('TCHE'),
            label = cms.InputTag("trackCountingHighEffBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-10.0),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(30.0),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('TCHP'),
            label = cms.InputTag("trackCountingHighPurBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.1),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(2.6),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('JP'),
            label = cms.InputTag("jetProbabilityBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.1),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(8.1),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('JBP'),
            label = cms.InputTag("jetBProbabilityBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(0.0),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(8.0),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('SSVHE'),
            label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(0.0),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(8.0),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('SSVHP'),
            label = cms.InputTag("simpleSecondaryVertexHighPurBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.1),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(1.1),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('CSV'),
            label = cms.InputTag("combinedSecondaryVertexBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.1),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(1.1),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('CSVMVA'),
            label = cms.InputTag("combinedSecondaryVertexMVABJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.1),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.5),
                endEffPur = cms.double(1.005),
                discriminatorEnd = cms.double(1.1),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('GhTrk'),
            label = cms.InputTag("ghostTrackBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.1),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.05),
                endEffPur = cms.double(0.205),
                discriminatorEnd = cms.double(1.1),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('SMT'),
            label = cms.InputTag("softMuonBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-10.0),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.05),
                endEffPur = cms.double(0.205),
                discriminatorEnd = cms.double(30.0),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('SMTIP3d'),
            label = cms.InputTag("softMuonByIP3dBJetTags")
        ), 
        cms.PSet(
            parameters = cms.PSet(
                discriminatorStart = cms.double(-0.01),
                nBinEffPur = cms.int32(200),
                effBConst = cms.double(0.05),
                endEffPur = cms.double(0.205),
                discriminatorEnd = cms.double(8.01),
                startEffPur = cms.double(0.005)
            ),
            folder = cms.string('SMTPt'),
            label = cms.InputTag("softMuonByPtBJetTags")
        )),
    mcPlots = cms.bool(False)
)


process.basicGenParticleValidation = cms.EDAnalyzer("BasicGenParticleValidation",
    hepmcCollection = cms.InputTag("generator"),
    verbosity = cms.untracked.uint32(0),
    genjetsCollection = cms.InputTag("ak5GenJets"),
    matchingPrecision = cms.double(0.001),
    genparticleCollection = cms.InputTag("genParticles")
)


process.basicHepMCValidation = cms.EDAnalyzer("BasicHepMCValidation",
    hepmcCollection = cms.InputTag("generator")
)


process.bpagTrigOffDQM = cms.EDAnalyzer("BPAGTrigAnalyzer",
    BeamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    MaxPtParameters = cms.untracked.vdouble(40, 0.0, 80.0),
    RecoMuonInputTag = cms.InputTag("muons"),
    DQMStore = cms.untracked.bool(True),
    PhiParameters = cms.untracked.vdouble(4, -3.15, 3.15),
    ResParameters = cms.untracked.vdouble(50, -0.15, 0.15),
    PtParameters = cms.untracked.vdouble(0.0, 3.0, 4.5, 6, 8, 
        20.0),
    TriggerResultLabel = cms.InputTag("TriggerResults","","HLT"),
    HltAodInputTag = cms.InputTag("hltTriggerSummaryAOD"),
    L1DrCut = cms.untracked.double(0.4),
    histoFileName = cms.untracked.string('MuonTrigHistos_RECO.root'),
    matchType = cms.untracked.string('dr'),
    DrParameters = cms.untracked.vdouble(50, 0.0, 0.05),
    TriggerNames = cms.vstring('HLT_Mu3', 
        'HLT_Mu5', 
        'HLT_Mu9'),
    HltProcessName = cms.string('HLT'),
    HltRawInputTag = cms.InputTag("hltTriggerSummaryRAW"),
    customCollection = cms.VPSet(cms.untracked.PSet(
        tagHltCuts = cms.untracked.string('pt > 1.0 && abs(eta) < 2.1 '),
        collectionName = cms.untracked.string('probeAnyMuon'),
        tagD0cut = cms.untracked.double(2.0),
        tagRecoCuts = cms.untracked.string('pt > 1.0 && abs(eta) < 2.1 '),
        z0cut = cms.untracked.double(25.0),
        tagCollectionName = cms.untracked.string('tagForProbeAnyMuon'),
        trackCollection = cms.untracked.string('innerTrack'),
        tagObjectTrigger = cms.untracked.string(''),
        tagZ0cut = cms.untracked.double(50.0),
        requiredTriggers = cms.untracked.vstring(''),
        recoCuts = cms.untracked.string('pt > 0.5 && abs(eta) < 2.1 '),
        hltCuts = cms.untracked.string('pt > 0.5 && abs(eta) < 2.1 '),
        d0cut = cms.untracked.double(2.0),
        tagTrackCollection = cms.untracked.string('innerTrack')
    )),
    createStandAloneHistos = cms.untracked.bool(False),
    L2DrCut = cms.untracked.double(0.25),
    EtaParameters = cms.untracked.vdouble(4, -2.1, 2.1),
    MassParameters = cms.untracked.vdouble(50, 2.6, 3.6),
    L3DrCut = cms.untracked.double(0.025)
)


process.bphysicsOniaDQM = cms.EDAnalyzer("BPhysicsOniaDQM",
    MuonCollection = cms.InputTag("muons"),
    vertex = cms.InputTag("offlinePrimaryVertices")
)


process.bphysicsOniaDQMHI = cms.EDAnalyzer("BPhysicsOniaDQM",
    MuonCollection = cms.InputTag("muons"),
    vertex = cms.InputTag("hiSelectedVertex")
)


process.calotowersAnalyzer = cms.EDAnalyzer("CaloTowersValidation",
    outputFile = cms.untracked.string(''),
    CaloTowerCollectionLabel = cms.untracked.InputTag("towerMaker"),
    mc = cms.untracked.string('no'),
    hcalselector = cms.untracked.string('all')
)


process.castorOfflineMonitor = cms.EDAnalyzer("CastorMonitorModule",
    numberSigma = cms.untracked.double(1.5),
    ChannelQualityMonitor = cms.untracked.bool(True),
    pedestalsInFC = cms.untracked.bool(False),
    showTiming = cms.untracked.bool(False),
    PSMonitor = cms.untracked.bool(True),
    RecHitMonitor = cms.untracked.bool(True),
    DigiMonitor = cms.untracked.bool(True),
    dThreshold = cms.untracked.double(1.0),
    digiLabel = cms.InputTag("castorDigis"),
    LastSignalBin = cms.untracked.int32(9),
    CastorRecHitLabel = cms.InputTag("castorreco"),
    HIMonitor = cms.untracked.bool(True),
    DigiInFC = cms.untracked.bool(False),
    OfflineMode = cms.untracked.bool(False),
    averageEnergyMethod = cms.untracked.bool(True),
    RecHitsPerChannel = cms.untracked.bool(True),
    dump2database = cms.untracked.bool(False),
    EDMonitor = cms.untracked.bool(False),
    LED_ADC_Thresh = cms.untracked.double(-1000.0),
    diagnosticPrescaleLS = cms.untracked.int32(-1),
    diagnosticPrescaleUpdate = cms.untracked.int32(-1),
    FirstSignalBin = cms.untracked.int32(0),
    thirdRegionThreshold = cms.untracked.double(100),
    LEDMonitor = cms.untracked.bool(True),
    diagnosticPrescaleTime = cms.untracked.int32(-1),
    LEDPerChannel = cms.untracked.bool(True),
    debug = cms.untracked.int32(0),
    DigiPerChannel = cms.untracked.bool(True),
    rawLabel = cms.InputTag("rawDataCollector"),
    nThreshold = cms.untracked.double(60)
)


process.condDataValidation = cms.EDAnalyzer("SiStripMonitorCondData",
    OutputMEsInRootFile = cms.bool(False),
    SiStripLowThresholdDQM_PSet = cms.PSet(
        Profile_xTitle = cms.string('Strip Number'),
        Summary_LowY = cms.double(0),
        FillSummaryAtLayerLevel = cms.bool(False),
        Summary_xTitle = cms.string('detId'),
        minValue = cms.double(0.0),
        FillCumulativeSummaryAtLayerLevel = cms.bool(True),
        TkMapName = cms.string('LowThresholdTkMap.png'),
        WhichThreshold = cms.string('Low'),
        SummaryOfProfile_yTitle = cms.string('Low Threshold from CondDB(ADC)'),
        SummaryOfProfile_NchY = cms.int32(100),
        FillSummaryProfileAtLayerLevel = cms.bool(True),
        TkMap_On = cms.bool(True),
        maxValue = cms.double(10.0),
        Summary_description = cms.string('Summary_LowThresholdFromCondDB'),
        SummaryOfProfile_LowY = cms.double(0),
        Summary_yTitle = cms.string('Low Threshold from CondDB(ADC)'),
        saturatedFraction = cms.double(0.01),
        SummaryOfProfile_HighY = cms.double(10),
        CondObj_name = cms.string('lowthreshold'),
        CondObj_fillId = cms.string('onlyProfile'),
        Summary_HighY = cms.double(10),
        SummaryOfProfile_description = cms.string('ProfileSummary_LowThresholdFromCondDB'),
        Summary_NchY = cms.int32(100),
        Profile_description = cms.string('Profile_LowThresholdFromCondDB'),
        SummaryOfProfile_xTitle = cms.string('Strip Number'),
        ActiveDetIds_On = cms.bool(True),
        Profile_yTitle = cms.string('Low Threshold from CondDB(ADC)')
    ),
    SiStripApvGainsDQM_PSet = cms.PSet(
        Profile_xTitle = cms.string('Apv Number'),
        Summary_LowY = cms.double(0.5),
        FillSummaryAtLayerLevel = cms.bool(False),
        Summary_xTitle = cms.string('detId'),
        minValue = cms.double(0.0),
        Cumul_HighX = cms.double(1.5),
        TkMapName = cms.string('GainTkMap.svg'),
        Cumul_yTitle = cms.string(' '),
        SummaryOfProfile_yTitle = cms.string('ApvGain from CondDB'),
        SummaryOfProfile_NchY = cms.int32(50),
        FillSummaryProfileAtLayerLevel = cms.bool(True),
        TkMap_On = cms.bool(True),
        maxValue = cms.double(1.5),
        Summary_description = cms.string('Summary_ApvGainFromCondDB'),
        SummaryOfProfile_LowY = cms.double(0.5),
        Summary_yTitle = cms.string('ApvGain from CondDB'),
        saturatedFraction = cms.double(0.01),
        SummaryOfProfile_HighY = cms.double(1.5),
        Cumul_NchX = cms.int32(50),
        CondObj_name = cms.string('apvgain'),
        CondObj_fillId = cms.string('ProfileAndCumul'),
        Cumul_xTitle = cms.string('ApvGain from CondDB'),
        Summary_HighY = cms.double(1.5),
        SummaryOfProfile_description = cms.string('ProfileSummary_ApvGainFromCondDB'),
        Summary_NchY = cms.int32(50),
        Cumul_description = cms.string('ApvGainFromCondDB'),
        Profile_description = cms.string('Profile_ApvGainFromCondDB'),
        SummaryOfProfile_xTitle = cms.string('Apv Number'),
        Cumul_LowX = cms.double(0.5),
        ActiveDetIds_On = cms.bool(True),
        Profile_yTitle = cms.string('ApvGain from CondDB')
    ),
    MonitorSiStripPedestal = cms.bool(True),
    MonitorSiStripLowThreshold = cms.bool(True),
    SiStripQualityDQM_PSet = cms.PSet(
        Profile_xTitle = cms.string('Strip Number'),
        Summary_LowY = cms.double(0.5),
        Summary_BadFibers_histo_yTitle = cms.string('Number of bad Fibers from CondDB'),
        FillSummaryAtLayerLevel = cms.bool(False),
        Summary_xTitle = cms.string('detId'),
        SummaryOfCumul_yTitle = cms.string(' '),
        minValue = cms.double(0.0),
        SummaryOfCumul_LowX = cms.double(0.0),
        Summary_BadApvs_histo_name = cms.string('Summary_BadApvs_FromCondDB'),
        SummaryOfCumul_description = cms.string('CumulativeSummary_SiStripQualityFromCondDB'),
        Summary_BadModules_histo_name = cms.string('Summary_BadModules_FromCondDB'),
        Summary_BadStrips_histo_name = cms.string('Summary_BadStrips_FromCondDB'),
        SummaryOfCumul_NchX = cms.int32(100),
        SummaryOfCumul_xTitle = cms.string('SiStripQualityfrom CondDB'),
        Summary_BadFibers_histo_name = cms.string('Summary_BadFibers_FromCondDB'),
        TkMap_On = cms.bool(True),
        Summary_BadObjects_histo_xTitle = cms.string('Sub Det And Layer'),
        maxValue = cms.double(0.0),
        Summary_description = cms.string('Summary_FractionOfBadStripsFromCondDB'),
        Summary_BadModules_histo_yTitle = cms.string('Number of bad Modules from CondDB'),
        Summary_yTitle = cms.string('Fraction of bad strips from CondDB(%)'),
        Summary_BadStrips_histo_yTitle = cms.string('Number of bad Strips from CondDB'),
        saturatedFraction = cms.double(0.01),
        CondObj_name = cms.string('quality'),
        CondObj_fillId = cms.string('onlyProfile'),
        Summary_HighY = cms.double(100.5),
        SummaryOfCumul_HighX = cms.double(100.0),
        TkMapName = cms.string('QualityTkMap.svg'),
        Summary_BadApvs_histo_yTitle = cms.string('Number of bad Apvs from CondDB'),
        Summary_NchY = cms.int32(100),
        Profile_description = cms.string('Profile_QualityFlagFromCondDB'),
        ActiveDetIds_On = cms.bool(True),
        Profile_yTitle = cms.string('Quality Flag from CondDB')
    ),
    SiStripCablingDQM_PSet = cms.PSet(
        CondObj_name = cms.string('fedcabling'),
        CondObj_fillId = cms.string('ProfileAndCumul'),
        TkMapName = cms.string('CablingTkMap.png'),
        TkMap_On = cms.bool(True),
        maxValue = cms.double(6.0),
        minValue = cms.double(0.0),
        saturatedFraction = cms.double(0.01),
        ActiveDetIds_On = cms.bool(True)
    ),
    OutputFileName = cms.string('SiStripMonitorCondData_MYTEST.root'),
    SiStripLorentzAngleDQM_PSet = cms.PSet(
        FillSummaryAtLayerLevel = cms.bool(False),
        SummaryOfCumul_yTitle = cms.string(' '),
        minValue = cms.double(0.01),
        FillCumulativeSummaryAtLayerLevel = cms.bool(True),
        SummaryOfCumul_LowX = cms.double(0.01),
        SummaryOfProfile_yTitle = cms.string('LorentzAngle from CondDB'),
        SummaryOfCumul_description = cms.string('ProfileSummary_LorentzAngleFromCondDB'),
        SummaryOfProfile_NchY = cms.int32(50),
        SummaryOfCumul_NchX = cms.int32(50),
        SummaryOfCumul_xTitle = cms.string('LorentzAngle from CondDB'),
        FillSummaryProfileAtLayerLevel = cms.bool(True),
        TkMap_On = cms.bool(True),
        maxValue = cms.double(0.03),
        SummaryOfProfile_LowY = cms.double(0.01),
        saturatedFraction = cms.double(0.01),
        SummaryOfProfile_HighY = cms.double(0.06),
        CondObj_name = cms.string('lorentzangle'),
        CondObj_fillId = cms.string('ProfileAndCumul'),
        SummaryOfCumul_HighX = cms.double(0.06),
        TkMapName = cms.string('LorentzAngleTkMap.png'),
        SummaryOfProfile_description = cms.string('Summary_LorentzAngleFromCondDB'),
        SummaryOfProfile_xTitle = cms.string('detId'),
        ActiveDetIds_On = cms.bool(False)
    ),
    SiStripHighThresholdDQM_PSet = cms.PSet(
        Profile_xTitle = cms.string('Strip Number'),
        Summary_LowY = cms.double(0),
        FillSummaryAtLayerLevel = cms.bool(False),
        Summary_xTitle = cms.string('detId'),
        minValue = cms.double(0.0),
        FillCumulativeSummaryAtLayerLevel = cms.bool(True),
        TkMapName = cms.string('HighThresholdTkMap.png'),
        WhichThreshold = cms.string('High'),
        SummaryOfProfile_yTitle = cms.string('High Threshold from CondDB(ADC)'),
        SummaryOfProfile_NchY = cms.int32(100),
        FillSummaryProfileAtLayerLevel = cms.bool(True),
        TkMap_On = cms.bool(True),
        maxValue = cms.double(10.0),
        Summary_description = cms.string('Summary_HighThresholdFromCondDB'),
        SummaryOfProfile_LowY = cms.double(0),
        Summary_yTitle = cms.string('High Threshold from CondDB(ADC)'),
        saturatedFraction = cms.double(0.01),
        SummaryOfProfile_HighY = cms.double(10),
        CondObj_name = cms.string('highthreshold'),
        CondObj_fillId = cms.string('onlyProfile'),
        Summary_HighY = cms.double(10),
        SummaryOfProfile_description = cms.string('ProfileSummary_HighThresholdFromCondDB'),
        Summary_NchY = cms.int32(100),
        Profile_description = cms.string('Profile_HighThresholdFromCondDB'),
        SummaryOfProfile_xTitle = cms.string('Strip Number'),
        ActiveDetIds_On = cms.bool(True),
        Profile_yTitle = cms.string('High Threshold from CondDB(ADC)')
    ),
    MonitorSiStripLorentzAngle = cms.bool(True),
    MonitorSiStripApvGain = cms.bool(True),
    MonitorSiStripCabling = cms.bool(True),
    MonitorSiStripNoise = cms.bool(True),
    MonitorSiStripQuality = cms.bool(True),
    SiStripNoisesDQM_PSet = cms.PSet(
        Profile_xTitle = cms.string('Strip Number'),
        Summary_LowY = cms.double(0.0),
        FillSummaryAtLayerLevel = cms.bool(False),
        Summary_xTitle = cms.string('detId'),
        SummaryOfCumul_yTitle = cms.string(' '),
        minValue = cms.double(3.0),
        Cumul_HighX = cms.double(5.0),
        FillCumulativeSummaryAtLayerLevel = cms.bool(True),
        SummaryOfCumul_LowX = cms.double(0.0),
        Cumul_yTitle = cms.string(' '),
        SummaryOfProfile_yTitle = cms.string('Noise from CondDB(ADC)'),
        SummaryOfCumul_description = cms.string('CumulativeSummary_NoiseFromCondDB'),
        SummaryOfProfile_NchY = cms.int32(50),
        SummaryOfCumul_NchX = cms.int32(50),
        SummaryOfCumul_xTitle = cms.string('Noise from CondDB'),
        FillSummaryProfileAtLayerLevel = cms.bool(True),
        TkMap_On = cms.bool(True),
        maxValue = cms.double(9.0),
        GainRenormalisation = cms.bool(False),
        Summary_description = cms.string('Summary_NoiseFromCondDB'),
        SummaryOfProfile_LowY = cms.double(0.0),
        Summary_yTitle = cms.string('Noise from CondDB(ADC)'),
        saturatedFraction = cms.double(0.01),
        SummaryOfProfile_HighY = cms.double(10.0),
        Cumul_NchX = cms.int32(50),
        CondObj_name = cms.string('noise'),
        CondObj_fillId = cms.string('onlyCumul'),
        Cumul_xTitle = cms.string('Noise from CondDB(ADC)'),
        Summary_HighY = cms.double(10.0),
        SummaryOfCumul_HighX = cms.double(10.0),
        TkMapName = cms.string('NoiseTkMap.png'),
        SummaryOfProfile_description = cms.string('ProfileSummary_NoiseFromCondDB'),
        Summary_NchY = cms.int32(50),
        Cumul_description = cms.string('NoiseFromCondDB'),
        Profile_description = cms.string('Profile_NoiseFromCondDB'),
        SummaryOfProfile_xTitle = cms.string('Strip Number'),
        Cumul_LowX = cms.double(0.0),
        ActiveDetIds_On = cms.bool(True),
        Profile_yTitle = cms.string('Noise from CondDB(ADC)')
    ),
    MonitorSiStripHighThreshold = cms.bool(True),
    SiStripPedestalsDQM_PSet = cms.PSet(
        Profile_xTitle = cms.string('Strip Number'),
        Summary_LowY = cms.double(0.0),
        FillSummaryAtLayerLevel = cms.bool(False),
        Summary_xTitle = cms.string('detId'),
        minValue = cms.double(0.0),
        TkMapName = cms.string('PedestalTkMap.png'),
        SummaryOfProfile_yTitle = cms.string('Pedestal from CondDB(ADC)'),
        SummaryOfProfile_NchY = cms.int32(100),
        FillSummaryProfileAtLayerLevel = cms.bool(True),
        TkMap_On = cms.bool(True),
        maxValue = cms.double(400.0),
        Summary_description = cms.string('Summary_PedestalFromCondDB'),
        SummaryOfProfile_LowY = cms.double(0.0),
        Summary_yTitle = cms.string('Pedestal from CondDB(ADC)'),
        saturatedFraction = cms.double(0.01),
        SummaryOfProfile_HighY = cms.double(1000.0),
        CondObj_name = cms.string('pedestal'),
        CondObj_fillId = cms.string('onlyProfile'),
        Summary_HighY = cms.double(1000.0),
        SummaryOfProfile_description = cms.string('ProfileSummary_PedestalFromCondDB'),
        Summary_NchY = cms.int32(100),
        Profile_description = cms.string('Profile_PedestalFromCondDB'),
        SummaryOfProfile_xTitle = cms.string('Strip Number'),
        ActiveDetIds_On = cms.bool(True),
        Profile_yTitle = cms.string('Pedestal from CondDB(ADC)')
    ),
    FillConditions_PSet = cms.PSet(
        OutputSummaryProfileAtLayerLevelAsImage = cms.bool(True),
        Mod_On = cms.bool(False),
        SubDetectorsToBeExcluded = cms.vstring('none'),
        ModulesToBeFilled = cms.string('all'),
        StripQualityLabel = cms.string(''),
        restrictModules = cms.bool(False),
        ModulesToBeExcluded = cms.vuint32(),
        ModulesToBeIncluded = cms.vuint32(),
        SummaryOnStringLevel_On = cms.bool(False),
        OutputCumulativeSummaryAtLayerLevelAsImage = cms.bool(True),
        FolderName_For_QualityAndCabling_SummaryHistos = cms.string('SiStrip/SiStripMonitorSummary'),
        SummaryOnLayerLevel_On = cms.bool(True),
        TkMap_On = cms.bool(False),
        GrandSummary_On = cms.bool(True),
        HistoMaps_On = cms.bool(False),
        ActiveDetIds_On = cms.bool(False),
        OutputSummaryAtLayerLevelAsImage = cms.bool(True)
    )
)


process.corMetGlobalMuonsAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    InputMETLabel = cms.InputTag("corMetGlobalMuons"),
    METType = cms.untracked.string('MuonCorrectedCaloMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.cscDigiValidation = cms.EDAnalyzer("CSCDigiValidation",
    clctDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis"),
    outputFile = cms.string(''),
    stripDigiTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigi"),
    comparatorDigiTag = cms.InputTag("simMuonCSCDigis","MuonCSCComparatorDigi"),
    simHitsTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    wireDigiTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigi"),
    doSim = cms.bool(False),
    alctDigiTag = cms.InputTag("simCscTriggerPrimitiveDigis")
)


process.cscMonitor = cms.EDAnalyzer("CSCOfflineMonitor",
    clctDigiTag = cms.InputTag("muonCSCDigis","MuonCSCCLCTDigi"),
    FEDRawDataCollectionTag = cms.InputTag("rawDataCollector"),
    stripDigiTag = cms.InputTag("muonCSCDigis","MuonCSCStripDigi"),
    outputFileName = cms.string('test.root'),
    cscRecHitTag = cms.InputTag("csc2DRecHits"),
    saveHistos = cms.bool(False),
    wireDigiTag = cms.InputTag("muonCSCDigis","MuonCSCWireDigi"),
    cscSegTag = cms.InputTag("cscSegments"),
    alctDigiTag = cms.InputTag("muonCSCDigis","MuonCSCALCTDigi")
)


process.dqmCSCClient = cms.EDAnalyzer("CSCMonitorModule",
    BOOKING_XML_FILE = cms.FileInPath('DQM/CSCMonitorModule/data/emuDQMBooking.xml'),
    EventProcessor = cms.untracked.PSet(
        EFF_ERR_SIGFAIL = cms.untracked.double(5.0),
        FRAEFF_AUTO_UPDATE = cms.untracked.bool(False),
        EFF_NODATA_THRESHOLD = cms.untracked.double(0.99),
        FRAEFF_AUTO_UPDATE_START = cms.untracked.uint32(5),
        BINCHECK_MASK = cms.untracked.uint32(384563190),
        BINCHECKER_CRC_CLCT = cms.untracked.bool(True),
        EFF_COLD_SIGFAIL = cms.untracked.double(2.0),
        PROCESS_DDU = cms.untracked.bool(True),
        EFF_NODATA_SIGFAIL = cms.untracked.double(5.0),
        BINCHECKER_MODE_DDU = cms.untracked.bool(False),
        BINCHECKER_CRC_ALCT = cms.untracked.bool(True),
        EFF_HOT_THRESHOLD = cms.untracked.double(2.0),
        FOLDER_DDU = cms.untracked.string('CSC/DDU/'),
        BINCHECKER_CRC_CFEB = cms.untracked.bool(True),
        EVENTS_ECHO = cms.untracked.uint32(1000),
        DDU_CHECK_MASK = cms.untracked.uint32(4294959103),
        FRAEFF_SEPARATE_THREAD = cms.untracked.bool(False),
        PROCESS_EFF_PARAMETERS = cms.untracked.bool(False),
        EFF_HOT_SIGFAIL = cms.untracked.double(5.0),
        FOLDER_PAR = cms.untracked.string('CSC/EventInfo/reportSummaryContents/'),
        FRAEFF_AUTO_UPDATE_FREQ = cms.untracked.uint32(200),
        EFF_COLD_THRESHOLD = cms.untracked.double(0.1),
        FOLDER_EMU = cms.untracked.string('CSC/Summary/'),
        DDU_BINCHECK_MASK = cms.untracked.uint32(384563190),
        PROCESS_CSC = cms.untracked.bool(True),
        PROCESS_EFF_HISTOS = cms.untracked.bool(False),
        MO_FILTER = cms.untracked.vstring('+/^.*$/', 
            '-/DDU_[0-9]+/', 
            '-/CSC_[0-9]+_[0-9]+/'),
        FOLDER_CSC = cms.untracked.string('CSC/CSC/'),
        EFF_ERR_THRESHOLD = cms.untracked.double(0.1),
        BINCHECKER_OUTPUT = cms.untracked.bool(False)
    ),
    PREBOOK_EFF_PARAMS = cms.untracked.bool(False),
    InputObjects = cms.untracked.InputTag("rawDataCollector")
)


process.dqmDcsInfo = cms.EDAnalyzer("DQMDcsInfo",
    subSystemFolder = cms.untracked.string('Info'),
    dcsInfoFolder = cms.untracked.string('DcsInfo')
)


process.dqmElectronAnalysis = cms.EDAnalyzer("ElectronAnalyzer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    NbinXyz2D = cms.int32(25),
    LhitsMax = cms.double(10.0),
    NbinHoe = cms.int32(100),
    MinDphiEndcaps = cms.double(0.0),
    MaxEcalIso03Endcaps = cms.double(10000.0),
    MaxSigIetaIetaBarrel = cms.double(10000.0),
    MinDetaEndcaps = cms.double(0.0),
    NbinPtEff = cms.int32(19),
    NbinEta2D = cms.int32(50),
    NbinPopTrue = cms.int32(75),
    EopMax = cms.double(5.0),
    SelectEcalDriven = cms.bool(False),
    DeltaR = cms.double(0.3),
    MaxEcalIso03Barrel = cms.double(10000.0),
    MaxHoeBarrel = cms.double(10000.0),
    MaxDetaEndcaps = cms.double(10000.0),
    MatchingObjectCollection = cms.InputTag("mergedSuperClusters"),
    NbinP2D = cms.int32(50),
    NbinPt2D = cms.int32(50),
    NbinP = cms.int32(50),
    OutputFile = cms.string(''),
    NbinDeta = cms.int32(100),
    MaxEopBarrel = cms.double(10000.0),
    NbinDetaMatch2D = cms.int32(50),
    MaxDetaBarrel = cms.double(10000.0),
    NbinPhi2D = cms.int32(32),
    HoeMin = cms.double(0.0),
    ReadAOD = cms.bool(False),
    NbinPt = cms.int32(50),
    MaxAbsEtaMatchingObject = cms.double(2.5),
    NbinDetaMatch = cms.int32(100),
    DphiMax = cms.double(0.01),
    GsfTrackCollection = cms.InputTag("electronGsfTracks"),
    DetaMin = cms.double(-0.005),
    MaxTipEndcaps = cms.double(10000.0),
    SelectEe = cms.bool(False),
    HoeMax = cms.double(0.5),
    SelectEb = cms.bool(False),
    DphiMin = cms.double(-0.01),
    PMax = cms.double(300.0),
    InputFile = cms.string(''),
    MatchingCondition = cms.string('Cone'),
    MeeMax = cms.double(150.0),
    Selection = cms.int32(1),
    NbinDphiMatch = cms.int32(100),
    MeeMin = cms.double(0.0),
    MinSigIetaIetaBarrel = cms.double(0.0),
    MaxDphiEndcaps = cms.double(10000.0),
    NbinEta = cms.int32(50),
    NbinMee = cms.int32(100),
    PopTrueMin = cms.double(0.0),
    MinEopEndcaps = cms.double(0.0),
    MinDetaBarrel = cms.double(0.0),
    NbinEop = cms.int32(50),
    EopMaxSht = cms.double(3.0),
    NbinXyz = cms.int32(50),
    MinDphiBarrel = cms.double(0.0),
    PopTrueMax = cms.double(1.5),
    EtaMin = cms.double(-2.5),
    DetaMatchMax = cms.double(0.05),
    DetaMatchMin = cms.double(-0.05),
    EtaMax = cms.double(2.5),
    Verbosity = cms.untracked.int32(0),
    NbinLhits = cms.int32(5),
    NbinDphiMatch2D = cms.int32(50),
    MaxAbsEta = cms.double(2.5),
    NbinFhits = cms.int32(30),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    PtMax = cms.double(100.0),
    MinPt = cms.double(0.0),
    NbinEop2D = cms.int32(30),
    DetaMax = cms.double(0.005),
    MinMva = cms.double(-10000.0),
    NbinPhi = cms.int32(64),
    SelectNotEbEeGap = cms.bool(False),
    MaxTipBarrel = cms.double(10000.0),
    MaxDphiBarrel = cms.double(10000.0),
    SelectTrackerDriven = cms.bool(False),
    MaxPtMatchingObject = cms.double(100.0),
    NbinDphi = cms.int32(100),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    MaxSigIetaIetaEndcaps = cms.double(10000.0),
    MinSigIetaIetaEndcaps = cms.double(0.0),
    TrackCollection = cms.InputTag("generalTracks"),
    DphiMatchMax = cms.double(0.2),
    MaxHoeEndcaps = cms.double(10000.0),
    DphiMatchMin = cms.double(-0.2),
    InputFolderName = cms.string('Egamma/Electrons'),
    PhiMax = cms.double(3.2),
    PhiMin = cms.double(-3.2),
    OutputFolderName = cms.string('Egamma/Electrons'),
    MinEopBarrel = cms.double(0.0),
    MaxTkIso03 = cms.double(1.0),
    MaxHcalIso03Depth1Barrel = cms.double(10000.0),
    MaxHcalIso03Depth1Endcaps = cms.double(10000.0),
    FinalStep = cms.string('AtRunEnd'),
    MinEt = cms.double(10.0),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    MaxEopEndcaps = cms.double(10000.0),
    FhitsMax = cms.double(30.0),
    MaxHcalIso03Depth2Endcaps = cms.double(10000.0)
)


process.dqmElectronAnalysisAllElectrons = cms.EDAnalyzer("ElectronAnalyzer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    NbinXyz2D = cms.int32(25),
    NbinHoe = cms.int32(100),
    MinDphiEndcaps = cms.double(0.0),
    MaxEcalIso03Endcaps = cms.double(10000.0),
    MaxSigIetaIetaBarrel = cms.double(10000.0),
    MinDetaEndcaps = cms.double(0.0),
    NbinPtEff = cms.int32(19),
    NbinEta2D = cms.int32(50),
    NbinPopTrue = cms.int32(75),
    EopMax = cms.double(5.0),
    SelectEcalDriven = cms.bool(False),
    DeltaR = cms.double(0.3),
    MaxEcalIso03Barrel = cms.double(10000.0),
    MaxHoeBarrel = cms.double(10000.0),
    MaxDetaEndcaps = cms.double(10000.0),
    MatchingObjectCollection = cms.InputTag("mergedSuperClusters"),
    NbinP2D = cms.int32(50),
    NbinPt2D = cms.int32(50),
    NbinP = cms.int32(50),
    OutputFile = cms.string(''),
    NbinDeta = cms.int32(100),
    MaxEopBarrel = cms.double(10000.0),
    NbinDetaMatch2D = cms.int32(50),
    MaxDetaBarrel = cms.double(10000.0),
    PopTrueMin = cms.double(0.0),
    HoeMin = cms.double(0.0),
    ReadAOD = cms.bool(False),
    NbinPt = cms.int32(50),
    MaxAbsEtaMatchingObject = cms.double(2.5),
    NbinDetaMatch = cms.int32(100),
    DphiMax = cms.double(0.01),
    GsfTrackCollection = cms.InputTag("electronGsfTracks"),
    DetaMin = cms.double(-0.005),
    MaxTipEndcaps = cms.double(10000.0),
    SelectEe = cms.bool(False),
    HoeMax = cms.double(0.5),
    SelectEb = cms.bool(False),
    DphiMin = cms.double(-0.01),
    PMax = cms.double(300.0),
    InputFile = cms.string(''),
    MatchingCondition = cms.string('Cone'),
    DphiMatchMin = cms.double(-0.2),
    MinEopEndcaps = cms.double(0.0),
    Selection = cms.int32(0),
    MinPt = cms.double(0.0),
    MeeMin = cms.double(0.0),
    MinSigIetaIetaBarrel = cms.double(0.0),
    MaxDphiEndcaps = cms.double(10000.0),
    NbinEta = cms.int32(50),
    NbinMee = cms.int32(100),
    NbinPhi2D = cms.int32(32),
    MeeMax = cms.double(150.0),
    MinDetaBarrel = cms.double(0.0),
    NbinEop = cms.int32(50),
    EopMaxSht = cms.double(3.0),
    NbinXyz = cms.int32(50),
    MinDphiBarrel = cms.double(0.0),
    PopTrueMax = cms.double(1.5),
    EtaMin = cms.double(-2.5),
    DetaMatchMax = cms.double(0.05),
    DetaMatchMin = cms.double(-0.05),
    EtaMax = cms.double(2.5),
    Verbosity = cms.untracked.int32(0),
    NbinLhits = cms.int32(5),
    NbinDphiMatch2D = cms.int32(50),
    MaxAbsEta = cms.double(2.5),
    MaxDphiBarrel = cms.double(10000.0),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    PtMax = cms.double(100.0),
    NbinEop2D = cms.int32(30),
    DetaMax = cms.double(0.005),
    MinMva = cms.double(-10000.0),
    NbinPhi = cms.int32(64),
    NbinDphiMatch = cms.int32(100),
    SelectNotEbEeGap = cms.bool(False),
    MaxTipBarrel = cms.double(10000.0),
    NbinFhits = cms.int32(30),
    SelectTrackerDriven = cms.bool(False),
    MaxPtMatchingObject = cms.double(100.0),
    NbinDphi = cms.int32(100),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    MaxSigIetaIetaEndcaps = cms.double(10000.0),
    MinSigIetaIetaEndcaps = cms.double(0.0),
    TrackCollection = cms.InputTag("generalTracks"),
    DphiMatchMax = cms.double(0.2),
    MaxHoeEndcaps = cms.double(10000.0),
    LhitsMax = cms.double(10.0),
    InputFolderName = cms.string('Egamma/Electrons'),
    PhiMax = cms.double(3.2),
    PhiMin = cms.double(-3.2),
    OutputFolderName = cms.string('Egamma/Electrons/Ele2_All'),
    MinEopBarrel = cms.double(0.0),
    MaxTkIso03 = cms.double(1.0),
    MaxHcalIso03Depth1Barrel = cms.double(10000.0),
    MaxHcalIso03Depth1Endcaps = cms.double(10000.0),
    FinalStep = cms.string('AtRunEnd'),
    MinEt = cms.double(10.0),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    MaxEopEndcaps = cms.double(10000.0),
    FhitsMax = cms.double(30.0),
    MaxHcalIso03Depth2Endcaps = cms.double(10000.0)
)


process.dqmElectronAnalysisSelectionEt = cms.EDAnalyzer("ElectronAnalyzer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    NbinXyz2D = cms.int32(25),
    NbinHoe = cms.int32(100),
    MinDphiEndcaps = cms.double(0.0),
    MaxEcalIso03Endcaps = cms.double(10000.0),
    MaxSigIetaIetaBarrel = cms.double(10000.0),
    MinDetaEndcaps = cms.double(0.0),
    NbinPtEff = cms.int32(19),
    NbinEta2D = cms.int32(50),
    NbinPopTrue = cms.int32(75),
    EopMax = cms.double(5.0),
    SelectEcalDriven = cms.bool(False),
    DeltaR = cms.double(0.3),
    MaxEcalIso03Barrel = cms.double(10000.0),
    MaxHoeBarrel = cms.double(10000.0),
    MaxDetaEndcaps = cms.double(10000.0),
    MatchingObjectCollection = cms.InputTag("mergedSuperClusters"),
    NbinP2D = cms.int32(50),
    NbinPt2D = cms.int32(50),
    NbinP = cms.int32(50),
    OutputFile = cms.string(''),
    NbinDeta = cms.int32(100),
    MaxEopBarrel = cms.double(10000.0),
    NbinDetaMatch2D = cms.int32(50),
    MaxDetaBarrel = cms.double(10000.0),
    PopTrueMin = cms.double(0.0),
    HoeMin = cms.double(0.0),
    ReadAOD = cms.bool(False),
    NbinPt = cms.int32(50),
    MaxAbsEtaMatchingObject = cms.double(2.5),
    NbinDetaMatch = cms.int32(100),
    DphiMax = cms.double(0.01),
    GsfTrackCollection = cms.InputTag("electronGsfTracks"),
    DetaMin = cms.double(-0.005),
    MaxTipEndcaps = cms.double(10000.0),
    SelectEe = cms.bool(False),
    HoeMax = cms.double(0.5),
    SelectEb = cms.bool(False),
    DphiMin = cms.double(-0.01),
    PMax = cms.double(300.0),
    InputFile = cms.string(''),
    MatchingCondition = cms.string('Cone'),
    DphiMatchMin = cms.double(-0.2),
    MinEopEndcaps = cms.double(0.0),
    Selection = cms.int32(1),
    MinPt = cms.double(0.0),
    MeeMin = cms.double(0.0),
    MinSigIetaIetaBarrel = cms.double(0.0),
    MaxDphiEndcaps = cms.double(10000.0),
    NbinEta = cms.int32(50),
    NbinMee = cms.int32(100),
    NbinPhi2D = cms.int32(32),
    MeeMax = cms.double(150.0),
    MinDetaBarrel = cms.double(0.0),
    NbinEop = cms.int32(50),
    EopMaxSht = cms.double(3.0),
    NbinXyz = cms.int32(50),
    MinDphiBarrel = cms.double(0.0),
    PopTrueMax = cms.double(1.5),
    EtaMin = cms.double(-2.5),
    DetaMatchMax = cms.double(0.05),
    DetaMatchMin = cms.double(-0.05),
    EtaMax = cms.double(2.5),
    Verbosity = cms.untracked.int32(0),
    NbinLhits = cms.int32(5),
    NbinDphiMatch2D = cms.int32(50),
    MaxAbsEta = cms.double(2.5),
    MaxDphiBarrel = cms.double(10000.0),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    PtMax = cms.double(100.0),
    NbinEop2D = cms.int32(30),
    DetaMax = cms.double(0.005),
    MinMva = cms.double(-10000.0),
    NbinPhi = cms.int32(64),
    NbinDphiMatch = cms.int32(100),
    SelectNotEbEeGap = cms.bool(False),
    MaxTipBarrel = cms.double(10000.0),
    NbinFhits = cms.int32(30),
    SelectTrackerDriven = cms.bool(False),
    MaxPtMatchingObject = cms.double(100.0),
    NbinDphi = cms.int32(100),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    MaxSigIetaIetaEndcaps = cms.double(10000.0),
    MinSigIetaIetaEndcaps = cms.double(0.0),
    TrackCollection = cms.InputTag("generalTracks"),
    DphiMatchMax = cms.double(0.2),
    MaxHoeEndcaps = cms.double(10000.0),
    LhitsMax = cms.double(10.0),
    InputFolderName = cms.string('Egamma/Electrons'),
    PhiMax = cms.double(3.2),
    PhiMin = cms.double(-3.2),
    OutputFolderName = cms.string('Egamma/Electrons/Ele3_Et10'),
    MinEopBarrel = cms.double(0.0),
    MaxTkIso03 = cms.double(1.0),
    MaxHcalIso03Depth1Barrel = cms.double(10000.0),
    MaxHcalIso03Depth1Endcaps = cms.double(10000.0),
    FinalStep = cms.string('AtRunEnd'),
    MinEt = cms.double(10.0),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    MaxEopEndcaps = cms.double(10000.0),
    FhitsMax = cms.double(30.0),
    MaxHcalIso03Depth2Endcaps = cms.double(10000.0)
)


process.dqmElectronAnalysisSelectionEtIso = cms.EDAnalyzer("ElectronAnalyzer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    NbinXyz2D = cms.int32(25),
    NbinHoe = cms.int32(100),
    MinDphiEndcaps = cms.double(0.0),
    MaxEcalIso03Endcaps = cms.double(10000.0),
    MaxSigIetaIetaBarrel = cms.double(10000.0),
    MinDetaEndcaps = cms.double(0.0),
    NbinPtEff = cms.int32(19),
    NbinEta2D = cms.int32(50),
    NbinPopTrue = cms.int32(75),
    EopMax = cms.double(5.0),
    SelectEcalDriven = cms.bool(False),
    DeltaR = cms.double(0.3),
    MaxEcalIso03Barrel = cms.double(10000.0),
    MaxHoeBarrel = cms.double(10000.0),
    MaxDetaEndcaps = cms.double(10000.0),
    MatchingObjectCollection = cms.InputTag("mergedSuperClusters"),
    NbinP2D = cms.int32(50),
    NbinPt2D = cms.int32(50),
    NbinP = cms.int32(50),
    OutputFile = cms.string(''),
    NbinDeta = cms.int32(100),
    MaxEopBarrel = cms.double(10000.0),
    NbinDetaMatch2D = cms.int32(50),
    MaxDetaBarrel = cms.double(10000.0),
    PopTrueMin = cms.double(0.0),
    HoeMin = cms.double(0.0),
    ReadAOD = cms.bool(False),
    NbinPt = cms.int32(50),
    MaxAbsEtaMatchingObject = cms.double(2.5),
    NbinDetaMatch = cms.int32(100),
    DphiMax = cms.double(0.01),
    GsfTrackCollection = cms.InputTag("electronGsfTracks"),
    DetaMin = cms.double(-0.005),
    MaxTipEndcaps = cms.double(10000.0),
    SelectEe = cms.bool(False),
    HoeMax = cms.double(0.5),
    SelectEb = cms.bool(False),
    DphiMin = cms.double(-0.01),
    PMax = cms.double(300.0),
    InputFile = cms.string(''),
    MatchingCondition = cms.string('Cone'),
    DphiMatchMin = cms.double(-0.2),
    MinEopEndcaps = cms.double(0.0),
    Selection = cms.int32(2),
    MinPt = cms.double(0.0),
    MeeMin = cms.double(0.0),
    MinSigIetaIetaBarrel = cms.double(0.0),
    MaxDphiEndcaps = cms.double(10000.0),
    NbinEta = cms.int32(50),
    NbinMee = cms.int32(100),
    NbinPhi2D = cms.int32(32),
    MeeMax = cms.double(150.0),
    MinDetaBarrel = cms.double(0.0),
    NbinEop = cms.int32(50),
    EopMaxSht = cms.double(3.0),
    NbinXyz = cms.int32(50),
    MinDphiBarrel = cms.double(0.0),
    PopTrueMax = cms.double(1.5),
    EtaMin = cms.double(-2.5),
    DetaMatchMax = cms.double(0.05),
    DetaMatchMin = cms.double(-0.05),
    EtaMax = cms.double(2.5),
    Verbosity = cms.untracked.int32(0),
    NbinLhits = cms.int32(5),
    NbinDphiMatch2D = cms.int32(50),
    MaxAbsEta = cms.double(2.5),
    MaxDphiBarrel = cms.double(10000.0),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    PtMax = cms.double(100.0),
    NbinEop2D = cms.int32(30),
    DetaMax = cms.double(0.005),
    MinMva = cms.double(-10000.0),
    NbinPhi = cms.int32(64),
    NbinDphiMatch = cms.int32(100),
    SelectNotEbEeGap = cms.bool(False),
    MaxTipBarrel = cms.double(10000.0),
    NbinFhits = cms.int32(30),
    SelectTrackerDriven = cms.bool(False),
    MaxPtMatchingObject = cms.double(100.0),
    NbinDphi = cms.int32(100),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    MaxSigIetaIetaEndcaps = cms.double(10000.0),
    MinSigIetaIetaEndcaps = cms.double(0.0),
    TrackCollection = cms.InputTag("generalTracks"),
    DphiMatchMax = cms.double(0.2),
    MaxHoeEndcaps = cms.double(10000.0),
    LhitsMax = cms.double(10.0),
    InputFolderName = cms.string('Egamma/Electrons'),
    PhiMax = cms.double(3.2),
    PhiMin = cms.double(-3.2),
    OutputFolderName = cms.string('Egamma/Electrons/Ele4_Et10TkIso1'),
    MinEopBarrel = cms.double(0.0),
    MaxTkIso03 = cms.double(1.0),
    MaxHcalIso03Depth1Barrel = cms.double(10000.0),
    MaxHcalIso03Depth1Endcaps = cms.double(10000.0),
    FinalStep = cms.string('AtRunEnd'),
    MinEt = cms.double(10.0),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    MaxEopEndcaps = cms.double(10000.0),
    FhitsMax = cms.double(30.0),
    MaxHcalIso03Depth2Endcaps = cms.double(10000.0)
)


process.dqmElectronGeneralAnalysis = cms.EDAnalyzer("ElectronGeneralAnalyzer",
    ElectronCollection = cms.InputTag("gsfElectrons"),
    OutputFile = cms.string(''),
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    FinalStep = cms.string('AtRunEnd'),
    Verbosity = cms.untracked.int32(0),
    OutputFolderName = cms.string('Egamma/Electrons/Ele1_General'),
    MatchingObjectCollection = cms.InputTag("mergedSuperClusters"),
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    GsfTrackCollection = cms.InputTag("electronGsfTracks"),
    InputFile = cms.string(''),
    InputFolderName = cms.string('Egamma/Electrons/General'),
    TrackCollection = cms.InputTag("generalTracks")
)


process.dqmElectronTagProbeAnalysis = cms.EDAnalyzer("ElectronTagProbeAnalyzer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    NbinXyz2D = cms.int32(25),
    LhitsMax = cms.double(10.0),
    NbinHoe = cms.int32(100),
    MinDphiEndcaps = cms.double(0.0),
    MaxEcalIso03Endcaps = cms.double(10000.0),
    MaxSigIetaIetaBarrel = cms.double(10000.0),
    MinDetaEndcaps = cms.double(0.0),
    NbinPtEff = cms.int32(19),
    NbinEta2D = cms.int32(50),
    NbinPopTrue = cms.int32(75),
    EopMax = cms.double(5.0),
    SelectEcalDriven = cms.bool(False),
    MaxEcalIso03Barrel = cms.double(10000.0),
    MaxHoeBarrel = cms.double(10000.0),
    MaxDetaEndcaps = cms.double(10000.0),
    MassHigh = cms.double(120),
    MatchingObjectCollection = cms.InputTag("mergedSuperClusters"),
    NbinP2D = cms.int32(50),
    NbinPt2D = cms.int32(50),
    NbinP = cms.int32(50),
    OutputFile = cms.string(''),
    NbinDeta = cms.int32(100),
    MaxEopBarrel = cms.double(10000.0),
    NbinDetaMatch2D = cms.int32(50),
    MaxDetaBarrel = cms.double(10000.0),
    NbinPhi2D = cms.int32(32),
    HoeMin = cms.double(0.0),
    ReadAOD = cms.bool(False),
    NbinPt = cms.int32(50),
    NbinDetaMatch = cms.int32(100),
    DphiMax = cms.double(0.01),
    GsfTrackCollection = cms.InputTag("electronGsfTracks"),
    DetaMin = cms.double(-0.005),
    MaxTipEndcaps = cms.double(10000.0),
    SelectEe = cms.bool(False),
    HoeMax = cms.double(0.5),
    SelectEb = cms.bool(False),
    DphiMin = cms.double(-0.01),
    PMax = cms.double(300.0),
    InputFile = cms.string(''),
    MeeMax = cms.double(150.0),
    Selection = cms.int32(3),
    NbinDphiMatch = cms.int32(100),
    MeeMin = cms.double(0.0),
    MinSigIetaIetaBarrel = cms.double(0.0),
    MaxDphiEndcaps = cms.double(10000.0),
    NbinEta = cms.int32(50),
    NbinMee = cms.int32(100),
    PopTrueMin = cms.double(0.0),
    MinEopEndcaps = cms.double(0.0),
    MinDetaBarrel = cms.double(0.0),
    NbinEop = cms.int32(50),
    EopMaxSht = cms.double(3.0),
    NbinXyz = cms.int32(50),
    MinDphiBarrel = cms.double(0.0),
    PopTrueMax = cms.double(1.5),
    EtaMin = cms.double(-2.5),
    DetaMatchMax = cms.double(0.05),
    ProbeEtCut = cms.bool(False),
    EtaMax = cms.double(2.5),
    Verbosity = cms.untracked.int32(0),
    NbinLhits = cms.int32(5),
    VertexCollection = cms.InputTag(""),
    MaxAbsEta = cms.double(2.5),
    NbinFhits = cms.int32(30),
    DetaMatchMin = cms.double(-0.05),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    PtMax = cms.double(100.0),
    MinPt = cms.double(0.0),
    NbinEop2D = cms.int32(30),
    DetaMax = cms.double(0.005),
    MinMva = cms.double(-10000.0),
    NbinPhi = cms.int32(64),
    SelectNotEbEeGap = cms.bool(False),
    ProbeCheckClass = cms.bool(False),
    TpCheckSign = cms.bool(True),
    MaxTipBarrel = cms.double(10000.0),
    MaxDphiBarrel = cms.double(10000.0),
    SelectTrackerDriven = cms.bool(False),
    NbinDphi = cms.int32(100),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    MassLow = cms.double(60),
    MaxSigIetaIetaEndcaps = cms.double(10000.0),
    MinSigIetaIetaEndcaps = cms.double(0.0),
    TrackCollection = cms.InputTag("generalTracks"),
    DphiMatchMax = cms.double(0.2),
    MaxHoeEndcaps = cms.double(10000.0),
    DphiMatchMin = cms.double(-0.2),
    InputFolderName = cms.string('Egamma/Electrons/TagAndProbe'),
    PhiMax = cms.double(3.2),
    PhiMin = cms.double(-3.2),
    OutputFolderName = cms.string('Egamma/Electrons/Ele5_TagAndProbe'),
    MinEopBarrel = cms.double(0.0),
    MaxTkIso03 = cms.double(1.0),
    MaxHcalIso03Depth1Barrel = cms.double(10000.0),
    MaxHcalIso03Depth1Endcaps = cms.double(10000.0),
    NbinDphiMatch2D = cms.int32(50),
    FinalStep = cms.string('AtRunEnd'),
    MinEt = cms.double(10.0),
    TagCheckClass = cms.bool(False),
    MaxEopEndcaps = cms.double(10000.0),
    FhitsMax = cms.double(30.0),
    MaxHcalIso03Depth2Endcaps = cms.double(10000.0)
)


process.dqmEnvHLT = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('HLT'),
    eventRateWindow = cms.untracked.double(0.5),
    eventInfoFolder = cms.untracked.string('EventInfo')
)


process.dqmEnvHLTOnline = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('HLT'),
    eventRateWindow = cms.untracked.double(0.5),
    eventInfoFolder = cms.untracked.string('EventInfo')
)


process.dqmEnvL1T = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('L1T'),
    eventRateWindow = cms.untracked.double(0.5),
    eventInfoFolder = cms.untracked.string('EventInfo')
)


process.dqmEnvL1TEmu = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('L1T'),
    eventRateWindow = cms.untracked.double(0.5),
    eventInfoFolder = cms.untracked.string('EventInfo')
)


process.dqmInfo = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('Pixel')
)


process.dqmInfoDT = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('DT')
)


process.dqmInfoEB = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('EcalBarrel')
)


process.dqmInfoEE = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('EcalEndcap')
)


process.dqmInfoHcal = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('Hcal')
)


process.dqmInfoMuons = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('Muons')
)


process.dqmInfoSiStrip = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('SiStrip')
)


process.drellYanEleValidation = cms.EDAnalyzer("DrellYanValidation",
    hepmcCollection = cms.InputTag("generator"),
    name = cms.string('Electrons'),
    decaysTo = cms.int32(11)
)


process.drellYanMuoValidation = cms.EDAnalyzer("DrellYanValidation",
    hepmcCollection = cms.InputTag("generator"),
    name = cms.string('Muons'),
    decaysTo = cms.int32(13)
)


process.drellYanValidation = cms.EDAnalyzer("DrellYanValidation",
    hepmcCollection = cms.InputTag("generator"),
    name = cms.string('Electrons'),
    decaysTo = cms.int32(11)
)


process.dtDCSByLumiMonitor = cms.EDAnalyzer("DTDCSByLumiTask")


process.dtEfficiencyMonitor = cms.EDAnalyzer("DTChamberEfficiency",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    cscSegments = cms.InputTag("dummy"),
    theMinNrec = cms.double(20.0),
    RPCLayers = cms.bool(False),
    NavigationType = cms.string('Standard'),
    theMaxChi2 = cms.double(100.0),
    TrackCollection = cms.InputTag("standAloneMuons"),
    theRPCRecHits = cms.InputTag("dummy"),
    debug = cms.untracked.bool(True),
    dt4DSegments = cms.InputTag("dt4DSegments"),
    theNSigma = cms.double(3.0)
)


process.dtResolutionAnalysisMonitor = cms.EDAnalyzer("DTResolutionAnalysisTask",
    recHits4DLabel = cms.string('dt4DSegments'),
    topHistoFolder = cms.untracked.string('DT/02-Segments'),
    ResetCycle = cms.untracked.int32(10000)
)


process.dtSegmentAnalysisMonitor = cms.EDAnalyzer("DTSegmentAnalysisTask",
    checkNoisyChannels = cms.untracked.bool(True),
    slideTimeBins = cms.untracked.bool(False),
    hltDQMMode = cms.untracked.bool(False),
    nLSTimeBin = cms.untracked.int32(5),
    recHits4DLabel = cms.string('dt4DSegments'),
    nTimeBins = cms.untracked.int32(100),
    debug = cms.untracked.bool(False),
    topHistoFolder = cms.untracked.string('DT/02-Segments'),
    detailedAnalysis = cms.untracked.bool(True)
)


process.dtSegmentsMonitor = cms.EDAnalyzer("DTSegmentsTask",
    OutputMEsInRootFile = cms.bool(False),
    checkNoisyChannels = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    recHits4DLabel = cms.string('dt4DSegments'),
    OutputFileName = cms.string('SegmentsMonitoring.root')
)


process.dtTriggerEfficiencyMonitor = cms.EDAnalyzer("DTTriggerEfficiencyTask",
    processDCC = cms.untracked.bool(True),
    processDDU = cms.untracked.bool(True),
    inputTagSEG = cms.untracked.InputTag("dt4DSegments"),
    inputTagDDU = cms.untracked.InputTag("muonDTDigis"),
    minBXDDU = cms.untracked.int32(7),
    maxBXDDU = cms.untracked.int32(15),
    inputTagDCC = cms.untracked.InputTag("dttfDigis"),
    inputTagGMT = cms.untracked.InputTag("gtDigis"),
    detailedAnalysis = cms.untracked.bool(False)
)


process.duplicationChecker = cms.EDAnalyzer("DuplicationChecker",
    generatedCollection = cms.InputTag("generator"),
    searchForLHE = cms.bool(False)
)


process.ecalBarrelBeamCaloTask = cms.EDAnalyzer("EBBeamCaloTask",
    mergeRuns = cms.untracked.bool(False),
    EBDigiCollection = cms.InputTag("ecalEBunpacker","ebDigis"),
    EcalTBEventHeader = cms.InputTag("ecalEBunpacker"),
    enableCleanup = cms.untracked.bool(False),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEB"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    prefixME = cms.untracked.string('EcalBarrel')
)


process.ecalBarrelBeamHodoTask = cms.EDAnalyzer("EBBeamHodoTask",
    prefixME = cms.untracked.string('EcalBarrel'),
    mergeRuns = cms.untracked.bool(False),
    EcalTBEventHeader = cms.InputTag("ecalEBunpacker"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    EcalTBHodoscopeRawInfo = cms.InputTag("ecalEBunpacker"),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEB"),
    enableCleanup = cms.untracked.bool(False),
    EcalTBTDCRawInfo = cms.InputTag("ecalEBunpacker"),
    EcalTBHodoscopeRecInfo = cms.InputTag("ecal2006TBHodoscopeReconstructor","EcalTBHodoscopeRecInfo"),
    EcalTBTDCRecInfo = cms.InputTag("ecal2006TBTDCReconstructor","EcalTBTDCRecInfo")
)


process.ecalBarrelClusterTask = cms.EDAnalyzer("EBClusterTask",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    mergeRuns = cms.untracked.bool(False),
    BasicClusterCollection = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    prefixME = cms.untracked.string('EcalBarrel'),
    SuperClusterCollection = cms.InputTag("correctedHybridSuperClusters")
)


process.ecalBarrelClusterTaskExtras = cms.EDAnalyzer("EBClusterTaskExtras",
    l1GlobalMuonReadoutRecord = cms.InputTag("gtDigis"),
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    mergeRuns = cms.untracked.bool(False),
    l1GlobalReadoutRecord = cms.InputTag("gtDigis"),
    BasicClusterCollection = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    enableCleanup = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    SuperClusterCollection = cms.InputTag("correctedHybridSuperClusters")
)


process.ecalBarrelCosmicTask = cms.EDAnalyzer("EBCosmicTask",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEB"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    prefixME = cms.untracked.string('EcalBarrel')
)


process.ecalBarrelDaqInfoTask = cms.EDAnalyzer("EBDaqInfoTask",
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalBarrelDataCertificationTask = cms.EDAnalyzer("EBDataCertificationTask",
    cloneME = cms.untracked.bool(False),
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalBarrelDcsInfoTask = cms.EDAnalyzer("EBDcsInfoTask",
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalBarrelDigisValidation = cms.EDAnalyzer("EcalBarrelDigisValidation",
    EBdigiCollection = cms.InputTag("simEcalDigis","ebDigis"),
    verbose = cms.untracked.bool(False)
)


process.ecalBarrelHltTask = cms.EDAnalyzer("EBHltTask",
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.InputTag("rawDataCollector"),
    EBDetIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    EBDetIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    EBDetIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    EBDetIdCollection0 = cms.InputTag("ecalDigis","EcalIntegrityDCCSizeErrors"),
    enableCleanup = cms.untracked.bool(False),
    folderName = cms.untracked.string('FEDIntegrity'),
    prefixME = cms.untracked.string('EcalBarrel'),
    EcalElectronicsIdCollection5 = cms.InputTag("ecalDigis","EcalIntegrityMemChIdErrors"),
    EcalElectronicsIdCollection4 = cms.InputTag("ecalDigis","EcalIntegrityMemBlockSizeErrors"),
    EcalElectronicsIdCollection6 = cms.InputTag("ecalDigis","EcalIntegrityMemGainErrors"),
    EcalElectronicsIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityTTIdErrors"),
    EcalElectronicsIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityMemTtIdErrors"),
    EcalElectronicsIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityBlockSizeErrors")
)


process.ecalBarrelIntegrityTask = cms.EDAnalyzer("EBIntegrityTask",
    mergeRuns = cms.untracked.bool(False),
    EBDetIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    EBDetIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    EBDetIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    EBDetIdCollection0 = cms.InputTag("ecalDigis","EcalIntegrityDCCSizeErrors"),
    enableCleanup = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    EcalElectronicsIdCollection5 = cms.InputTag("ecalDigis","EcalIntegrityMemChIdErrors"),
    EcalElectronicsIdCollection4 = cms.InputTag("ecalDigis","EcalIntegrityMemBlockSizeErrors"),
    EcalElectronicsIdCollection6 = cms.InputTag("ecalDigis","EcalIntegrityMemGainErrors"),
    EcalElectronicsIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityTTIdErrors"),
    EcalElectronicsIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityMemTtIdErrors"),
    EcalElectronicsIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityBlockSizeErrors")
)


process.ecalBarrelLaserTask = cms.EDAnalyzer("EBLaserTask",
    prefixME = cms.untracked.string('EcalBarrel'),
    mergeRuns = cms.untracked.bool(False),
    laserWavelengths = cms.untracked.vint32(1, 2, 3, 4),
    EBDigiCollection = cms.InputTag("ecalEBunpacker","ebDigis"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEB"),
    enableCleanup = cms.untracked.bool(False),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker")
)


process.ecalBarrelMonitorModule = cms.EDAnalyzer("EcalBarrelMonitorModule",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    mergeRuns = cms.untracked.bool(False),
    verbose = cms.untracked.bool(False),
    EBDigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    runNumber = cms.untracked.int32(0),
    enableEventDisplay = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    runType = cms.untracked.int32(-1),
    EcalTrigPrimDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    debug = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel')
)


process.ecalBarrelOccupancyTask = cms.EDAnalyzer("EBOccupancyTask",
    prefixME = cms.untracked.string('EcalBarrel'),
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    mergeRuns = cms.untracked.bool(False),
    EBDigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    EcalTrigPrimDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalDigis")
)


process.ecalBarrelPedestalOnlineTask = cms.EDAnalyzer("EBPedestalOnlineTask",
    EBDigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalBarrelPedestalTask = cms.EDAnalyzer("EBPedestalTask",
    prefixME = cms.untracked.string('EcalBarrel'),
    mergeRuns = cms.untracked.bool(False),
    MGPAGains = cms.untracked.vint32(1, 6, 12),
    EBDigiCollection = cms.InputTag("ecalEBunpacker","ebDigis"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    MGPAGainsPN = cms.untracked.vint32(1, 16),
    enableCleanup = cms.untracked.bool(False),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker")
)


process.ecalBarrelRawDataTask = cms.EDAnalyzer("EBRawDataTask",
    enableCleanup = cms.untracked.bool(False),
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    FEDRawDataCollection = cms.InputTag("rawDataCollector")
)


process.ecalBarrelRecHitsValidation = cms.EDAnalyzer("EcalBarrelRecHitsValidation",
    EBdigiCollection = cms.InputTag("simEcalDigis","ebDigis"),
    verbose = cms.untracked.bool(False),
    EBuncalibrechitCollection = cms.InputTag("ecalGlobalUncalibRecHit","EcalUncalibRecHitsEB")
)


process.ecalBarrelSelectiveReadoutTask = cms.EDAnalyzer("EBSelectiveReadoutTask",
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.InputTag("rawDataCollector"),
    EBDigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    dccWeights = cms.vdouble(-0.374, -0.374, -0.3629, 0.2721, 0.4681, 
        0.3707),
    enableCleanup = cms.untracked.bool(False),
    EBUsuppressedDigiCollection = cms.InputTag("ecalUnsuppressedDigis"),
    prefixME = cms.untracked.string('EcalBarrel'),
    ecalDccZs1stSample = cms.int32(2),
    EBSRFlagCollection = cms.InputTag("ecalDigis"),
    EcalTrigPrimDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives")
)


process.ecalBarrelSimHitsValidation = cms.EDAnalyzer("EcalBarrelSimHitsValidation",
    moduleLabelG4 = cms.string('g4SimHits'),
    verbose = cms.untracked.bool(False),
    ValidationCollection = cms.string('EcalValidInfo'),
    EBHitsCollection = cms.string('EcalHitsEB')
)


process.ecalBarrelStatusFlagsTask = cms.EDAnalyzer("EBStatusFlagsTask",
    prefixME = cms.untracked.string('EcalBarrel'),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis")
)


process.ecalBarrelTestPulseTask = cms.EDAnalyzer("EBTestPulseTask",
    prefixME = cms.untracked.string('EcalBarrel'),
    mergeRuns = cms.untracked.bool(False),
    MGPAGains = cms.untracked.vint32(1, 6, 12),
    EBDigiCollection = cms.InputTag("ecalEBunpacker","ebDigis"),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEB"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    MGPAGainsPN = cms.untracked.vint32(1, 16),
    enableCleanup = cms.untracked.bool(False),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker")
)


process.ecalBarrelTimingTask = cms.EDAnalyzer("EBTimingTask",
    prefixME = cms.untracked.string('EcalBarrel'),
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis")
)


process.ecalBarrelTriggerTowerTask = cms.EDAnalyzer("EBTriggerTowerTask",
    mergeRuns = cms.untracked.bool(False),
    EcalTrigPrimDigiCollectionReal = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    HLTCaloHLTBit = cms.untracked.string('HLT_EgammaSuperClusterOnly_L1R'),
    EBDigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    OutputRootFile = cms.untracked.string(''),
    enableCleanup = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalBarrel'),
    EcalTrigPrimDigiCollectionEmul = cms.InputTag("valEcalTriggerPrimitiveDigis"),
    HLTMuonHLTBit = cms.untracked.string('HLT_L1MuOpen'),
    HLTResultsCollection = cms.InputTag("TriggerResults")
)


process.ecalDigisValidation = cms.EDAnalyzer("EcalDigisValidation",
    EEdigiCollection = cms.InputTag("simEcalDigis","eeDigis"),
    verbose = cms.untracked.bool(False),
    EBdigiCollection = cms.InputTag("simEcalDigis","ebDigis"),
    ESdigiCollection = cms.InputTag("simEcalPreshowerDigis"),
    moduleLabelMC = cms.string('generator'),
    outputFile = cms.untracked.string(''),
    moduleLabelG4 = cms.string('g4SimHits')
)


process.ecalEndcapBeamCaloTask = cms.EDAnalyzer("EEBeamCaloTask",
    mergeRuns = cms.untracked.bool(False),
    EBDigiCollection = cms.InputTag("ecalEBunpacker","ebDigis"),
    EcalTBEventHeader = cms.InputTag("ecalEBunpacker"),
    enableCleanup = cms.untracked.bool(False),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEB"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    prefixME = cms.untracked.string('EcalEndcap')
)


process.ecalEndcapBeamHodoTask = cms.EDAnalyzer("EEBeamHodoTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    mergeRuns = cms.untracked.bool(False),
    EcalTBEventHeader = cms.InputTag("ecalEBunpacker"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    EcalTBHodoscopeRawInfo = cms.InputTag("ecalEBunpacker"),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEB"),
    enableCleanup = cms.untracked.bool(False),
    EcalTBTDCRawInfo = cms.InputTag("ecalEBunpacker"),
    EcalTBHodoscopeRecInfo = cms.InputTag("ecal2006TBHodoscopeReconstructor","EcalTBHodoscopeRecInfo"),
    EcalTBTDCRecInfo = cms.InputTag("ecal2006TBTDCReconstructor","EcalTBTDCRecInfo")
)


process.ecalEndcapClusterTask = cms.EDAnalyzer("EEClusterTask",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    BasicClusterCollection = cms.InputTag("multi5x5BasicClusters","multi5x5EndcapBasicClusters"),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    prefixME = cms.untracked.string('EcalEndcap'),
    SuperClusterCollection = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapSuperClusters")
)


process.ecalEndcapClusterTaskExtras = cms.EDAnalyzer("EEClusterTaskExtras",
    l1GlobalMuonReadoutRecord = cms.InputTag("gtDigis"),
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    l1GlobalReadoutRecord = cms.InputTag("gtDigis"),
    BasicClusterCollection = cms.InputTag("multi5x5BasicClusters","multi5x5EndcapBasicClusters"),
    enableCleanup = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap'),
    SuperClusterCollection = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapSuperClusters")
)


process.ecalEndcapCosmicTask = cms.EDAnalyzer("EECosmicTask",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEE"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    prefixME = cms.untracked.string('EcalEndcap')
)


process.ecalEndcapDaqInfoTask = cms.EDAnalyzer("EEDaqInfoTask",
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalEndcapDataCertificationTask = cms.EDAnalyzer("EEDataCertificationTask",
    cloneME = cms.untracked.bool(False),
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalEndcapDcsInfoTask = cms.EDAnalyzer("EEDcsInfoTask",
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalEndcapDigisValidation = cms.EDAnalyzer("EcalEndcapDigisValidation",
    EEdigiCollection = cms.InputTag("simEcalDigis","eeDigis"),
    verbose = cms.untracked.bool(False)
)


process.ecalEndcapHltTask = cms.EDAnalyzer("EEHltTask",
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.InputTag("rawDataCollector"),
    enableCleanup = cms.untracked.bool(False),
    folderName = cms.untracked.string('FEDIntegrity'),
    EEDetIdCollection0 = cms.InputTag("ecalDigis","EcalIntegrityDCCSizeErrors"),
    EEDetIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    EEDetIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    EEDetIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    prefixME = cms.untracked.string('EcalEndcap'),
    EcalElectronicsIdCollection5 = cms.InputTag("ecalDigis","EcalIntegrityMemChIdErrors"),
    EcalElectronicsIdCollection4 = cms.InputTag("ecalDigis","EcalIntegrityMemBlockSizeErrors"),
    EcalElectronicsIdCollection6 = cms.InputTag("ecalDigis","EcalIntegrityMemGainErrors"),
    EcalElectronicsIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityTTIdErrors"),
    EcalElectronicsIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityMemTtIdErrors"),
    EcalElectronicsIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityBlockSizeErrors")
)


process.ecalEndcapIntegrityTask = cms.EDAnalyzer("EEIntegrityTask",
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EEDetIdCollection0 = cms.InputTag("ecalDigis","EcalIntegrityDCCSizeErrors"),
    EEDetIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    EEDetIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    EEDetIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    prefixME = cms.untracked.string('EcalEndcap'),
    EcalElectronicsIdCollection5 = cms.InputTag("ecalDigis","EcalIntegrityMemChIdErrors"),
    EcalElectronicsIdCollection4 = cms.InputTag("ecalDigis","EcalIntegrityMemBlockSizeErrors"),
    EcalElectronicsIdCollection6 = cms.InputTag("ecalDigis","EcalIntegrityMemGainErrors"),
    EcalElectronicsIdCollection1 = cms.InputTag("ecalDigis","EcalIntegrityTTIdErrors"),
    EcalElectronicsIdCollection3 = cms.InputTag("ecalDigis","EcalIntegrityMemTtIdErrors"),
    EcalElectronicsIdCollection2 = cms.InputTag("ecalDigis","EcalIntegrityBlockSizeErrors")
)


process.ecalEndcapLaserTask = cms.EDAnalyzer("EELaserTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EEDigiCollection = cms.InputTag("ecalEBunpacker","eeDigis"),
    laserWavelengths = cms.untracked.vint32(1, 2, 3, 4),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker")
)


process.ecalEndcapLedTask = cms.EDAnalyzer("EELedTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EEDigiCollection = cms.InputTag("ecalEBunpacker","eeDigis"),
    enableCleanup = cms.untracked.bool(False),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker"),
    ledWavelengths = cms.untracked.vint32(1, 2)
)


process.ecalEndcapMonitorModule = cms.EDAnalyzer("EcalEndcapMonitorModule",
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    verbose = cms.untracked.bool(False),
    runNumber = cms.untracked.int32(0),
    EcalTrigPrimDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    enableEventDisplay = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    runType = cms.untracked.int32(-1),
    EEDigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    debug = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap')
)


process.ecalEndcapOccupancyTask = cms.EDAnalyzer("EEOccupancyTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    EEDigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    mergeRuns = cms.untracked.bool(False),
    EcalTrigPrimDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalDigis")
)


process.ecalEndcapPedestalOnlineTask = cms.EDAnalyzer("EEPedestalOnlineTask",
    mergeRuns = cms.untracked.bool(False),
    EEDigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    prefixME = cms.untracked.string('EcalEndcap'),
    enableCleanup = cms.untracked.bool(False)
)


process.ecalEndcapPedestalTask = cms.EDAnalyzer("EEPedestalTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EEDigiCollection = cms.InputTag("ecalEBunpacker","eeDigis"),
    MGPAGains = cms.untracked.vint32(1, 6, 12),
    enableCleanup = cms.untracked.bool(False),
    MGPAGainsPN = cms.untracked.vint32(1, 16),
    mergeRuns = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker")
)


process.ecalEndcapRawDataTask = cms.EDAnalyzer("EERawDataTask",
    enableCleanup = cms.untracked.bool(False),
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap'),
    EcalRawDataCollection = cms.InputTag("ecalDigis"),
    FEDRawDataCollection = cms.InputTag("rawDataCollector")
)


process.ecalEndcapRecHitsValidation = cms.EDAnalyzer("EcalEndcapRecHitsValidation",
    EEdigiCollection = cms.InputTag("simEcalDigis","eeDigis"),
    EEuncalibrechitCollection = cms.InputTag("ecalGlobalUncalibRecHit","EcalUncalibRecHitsEE"),
    verbose = cms.untracked.bool(False)
)


process.ecalEndcapSelectiveReadoutTask = cms.EDAnalyzer("EESelectiveReadoutTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EEDigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    FEDRawDataCollection = cms.InputTag("rawDataCollector"),
    dccWeights = cms.vdouble(-0.374, -0.374, -0.3629, 0.2721, 0.4681, 
        0.3707),
    enableCleanup = cms.untracked.bool(False),
    mergeRuns = cms.untracked.bool(False),
    EESRFlagCollection = cms.InputTag("ecalDigis"),
    ecalDccZs1stSample = cms.int32(2),
    EcalTrigPrimDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    EEUsuppressedDigiCollection = cms.InputTag("ecalUnsuppressedDigis")
)


process.ecalEndcapSimHitsValidation = cms.EDAnalyzer("EcalEndcapSimHitsValidation",
    EEHitsCollection = cms.string('EcalHitsEE'),
    moduleLabelG4 = cms.string('g4SimHits'),
    verbose = cms.untracked.bool(False),
    ValidationCollection = cms.string('EcalValidInfo')
)


process.ecalEndcapStatusFlagsTask = cms.EDAnalyzer("EEStatusFlagsTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis")
)


process.ecalEndcapTestPulseTask = cms.EDAnalyzer("EETestPulseTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EEDigiCollection = cms.InputTag("ecalEBunpacker","eeDigis"),
    MGPAGains = cms.untracked.vint32(1, 6, 12),
    EcalUncalibratedRecHitCollection = cms.InputTag("ecalUncalibHit","EcalUncalibRecHitsEE"),
    EcalRawDataCollection = cms.InputTag("ecalEBunpacker"),
    MGPAGainsPN = cms.untracked.vint32(1, 16),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalPnDiodeDigiCollection = cms.InputTag("ecalEBunpacker")
)


process.ecalEndcapTimingTask = cms.EDAnalyzer("EETimingTask",
    prefixME = cms.untracked.string('EcalEndcap'),
    EcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    mergeRuns = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    EcalRawDataCollection = cms.InputTag("ecalDigis")
)


process.ecalEndcapTriggerTowerTask = cms.EDAnalyzer("EETriggerTowerTask",
    EEDigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    EcalTrigPrimDigiCollectionReal = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    HLTCaloHLTBit = cms.untracked.string('HLT_EgammaSuperClusterOnly_L1R'),
    OutputRootFile = cms.untracked.string(''),
    enableCleanup = cms.untracked.bool(False),
    mergeRuns = cms.untracked.bool(False),
    prefixME = cms.untracked.string('EcalEndcap'),
    EcalTrigPrimDigiCollectionEmul = cms.InputTag("valEcalTriggerPrimitiveDigis"),
    HLTMuonHLTBit = cms.untracked.string('HLT_L1MuOpen'),
    HLTResultsCollection = cms.InputTag("TriggerResults")
)


process.ecalPreshowerDigisValidation = cms.EDAnalyzer("EcalPreshowerDigisValidation",
    verbose = cms.untracked.bool(False),
    ESdigiCollection = cms.InputTag("simEcalPreshowerDigis")
)


process.ecalPreshowerFEDIntegrityTask = cms.EDAnalyzer("ESFEDIntegrityTask",
    OutputFile = cms.untracked.string(''),
    FEDRawDataCollection = cms.InputTag("rawDataCollector"),
    ESDCCCollections = cms.InputTag("ecalPreshowerDigis"),
    ESKChipCollections = cms.InputTag("ecalPreshowerDigis"),
    FEDDirName = cms.untracked.string('FEDIntegrity'),
    prefixME = cms.untracked.string('EcalPreshower')
)


process.ecalPreshowerIntegrityTask = cms.EDAnalyzer("ESIntegrityTask",
    OutputFile = cms.untracked.string(''),
    DoLumiAnalysis = cms.bool(True),
    ESDCCCollections = cms.InputTag("ecalPreshowerDigis"),
    ESKChipCollections = cms.InputTag("ecalPreshowerDigis"),
    prefixME = cms.untracked.string('EcalPreshower'),
    LookupTable = cms.untracked.FileInPath('EventFilter/ESDigiToRaw/data/ES_lookup_table.dat')
)


process.ecalPreshowerOccupancyTask = cms.EDAnalyzer("ESOccupancyTask",
    DigiLabel = cms.InputTag("ecalPreshowerDigis"),
    RecHitLabel = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    prefixME = cms.untracked.string('EcalPreshower')
)


process.ecalPreshowerRawDataTask = cms.EDAnalyzer("ESRawDataTask",
    OutputFile = cms.untracked.string(''),
    ESDCCCollections = cms.InputTag("ecalPreshowerDigis"),
    prefixME = cms.untracked.string('EcalPreshower'),
    FEDRawDataCollection = cms.InputTag("rawDataCollector")
)


process.ecalPreshowerRecHitsValidation = cms.EDAnalyzer("EcalPreshowerRecHitsValidation",
    EErechitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    ESrechitCollection = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    EEuncalibrechitCollection = cms.InputTag("ecalGlobalUncalibRecHit","EcalUncalibRecHitsEE"),
    verbose = cms.untracked.bool(False)
)


process.ecalPreshowerSimHitsValidation = cms.EDAnalyzer("EcalPreshowerSimHitsValidation",
    EEHitsCollection = cms.string('EcalHitsEE'),
    ESHitsCollection = cms.string('EcalHitsES'),
    moduleLabelMC = cms.string('generator'),
    moduleLabelG4 = cms.string('g4SimHits'),
    verbose = cms.untracked.bool(False)
)


process.ecalPreshowerTrendTask = cms.EDAnalyzer("ESTrendTask",
    RecHitLabel = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    ESDCCCollections = cms.InputTag("ecalPreshowerDigis"),
    prefixME = cms.untracked.string('EcalPreshower')
)


process.ecalRecHitsValidation = cms.EDAnalyzer("EcalRecHitsValidation",
    hitsProducer = cms.string('g4SimHits'),
    outputFile = cms.untracked.string(''),
    EEuncalibrechitCollection = cms.InputTag("ecalGlobalUncalibRecHit","EcalUncalibRecHitsEE"),
    verbose = cms.untracked.bool(False),
    EErechitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    ESrechitCollection = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    EBuncalibrechitCollection = cms.InputTag("ecalGlobalUncalibRecHit","EcalUncalibRecHitsEB"),
    EBrechitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    moduleLabelMC = cms.string('generator')
)


process.ecalSelectiveReadoutValidation = cms.EDAnalyzer("EcalSelectiveReadoutValidation",
    verbose = cms.untracked.bool(False),
    EventHeaderCollection = cms.InputTag("ecalEBunpacker"),
    EbDigiCollection = cms.InputTag("simEcalDigis","ebDigis"),
    dccWeights = cms.vdouble(-0.374, -0.374, -0.3629, 0.2721, 0.4681, 
        0.3707),
    EeUnsuppressedDigiCollection = cms.InputTag("simEcalUnsuppressedDigis"),
    EeDigiCollection = cms.InputTag("simEcalDigis","eeDigis"),
    histDir = cms.string('EcalDigisV/EcalDigiTask'),
    LocalReco = cms.bool(True),
    TrigPrimCollection = cms.InputTag("simEcalTriggerPrimitiveDigis"),
    EeSrFlagFromTTCollection = cms.InputTag("simEcalDigis","eeSrFlagsFromTT"),
    FEDRawCollection = cms.InputTag("source"),
    histograms = cms.untracked.vstring('all'),
    srApplicationErrorLogFile = cms.untracked.string(''),
    eeZsThrADCCount = cms.double(3.75),
    useEventRate = cms.bool(True),
    tpInGeV = cms.bool(True),
    outputFile = cms.untracked.string(''),
    EbSimHitCollection = cms.InputTag("g4SimHits","EcalHitsEB"),
    EbSrFlagFromTTCollection = cms.InputTag("simEcalDigis","ebSrFlagsFromTT"),
    EeSrFlagCollection = cms.InputTag("simEcalDigis","eeSrFlags"),
    ecalDccZs1stSample = cms.int32(2),
    EbSrFlagCollection = cms.InputTag("simEcalDigis","ebSrFlags"),
    srpAlgoErrorLogFile = cms.untracked.string(''),
    EeRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    ebZsThrADCCount = cms.double(2.25),
    EbRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    EbUnsuppressedDigiCollection = cms.InputTag("simEcalUnsuppressedDigis"),
    weights = cms.vdouble(-0.295252, -0.295252, -0.295252, -0.286034, 0.240376, 
        0.402839, 0.322126, 0.172504, 0.0339461, 0.0),
    excludedFeds = cms.vint32(),
    EeSimHitCollection = cms.InputTag("g4SimHits","EcalHitsEE")
)


process.ecalSimHitsValidation = cms.EDAnalyzer("EcalSimHitsValidation",
    ESHitsCollection = cms.string('EcalHitsES'),
    outputFile = cms.untracked.string(''),
    verbose = cms.untracked.bool(False),
    moduleLabelMC = cms.string('generator'),
    EBHitsCollection = cms.string('EcalHitsEB'),
    EEHitsCollection = cms.string('EcalHitsEE'),
    moduleLabelG4 = cms.string('g4SimHits')
)


process.egHLTOffDQMSource = cms.EDAnalyzer("EgHLTOfflineSource",
    eleTightLooseTrigNames = cms.vstring('hltL1NonIsoHLTNonIsoSingleElectronLWEt10PixelMatchFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdDphiFilter:hltL1NonIsoHLTNonIsoSingleElectronLWEt10PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronLWEt15PixelMatchFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronLWEt15PixelMatchFilter:hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter:hltPreL1SingleEG8', 
        'hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt20HcalIsolFilter:hltPreL1SingleEG8', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt10PixelMatchFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdDphiFilter:hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15LTITrackIsolFilter:hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdTrackIsolFilterESet25LTI:hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdDphiFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt20PixelMatchFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt20PixelMatchFilter:hltL1NonIsoHLTNonIsoSingleElectronSiStripEt20PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter:hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTLEITISinglePhotonEt20TrackIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt30HcalIsolFilter:hltPreL1SingleEG5'),
    phoTightLooseTrigNames = cms.vstring('hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter:hltPreL1SingleEG8', 
        'hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt20HcalIsolFilter:hltPreL1SingleEG8', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTLEITISinglePhotonEt20TrackIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt30HcalIsolFilter:hltPreL1SingleEG5'),
    diEleTightLooseTrigNames = cms.vstring('hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter:hltL1NonIsoDoublePhotonEt5eeResPMMassFilter', 
        'hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter:hltL1NonIsoDoublePhotonEt5JpsiPMMassFilter', 
        'hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter:hltL1NonIsoDoublePhotonEt5UpsPMMassFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter:hltPreL1DoubleEG5hltL1NonIsoDoublePhotonEt5eeResPMMassFilter:hltPreL1DoubleEG5', 
        'hltL1NonIsoDoublePhotonEt5JpsiPMMassFilter:hltPreL1DoubleEG5', 
        'hltL1NonIsoDoublePhotonEt5UpsPMMassFilter:hltPreL1DoubleEG5', 
        'hltL1NonIsoHLTNonIsoDoubleElectronEt10PixelMatchFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTVLEIDoublePhotonEt15HcalIsolFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter'),
    phoHLTFilterNames = cms.vstring('hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter', 
        'hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt20HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoDoublePhotonEt5eeResPMMassFilter', 
        'hltL1NonIsoDoublePhotonEt5JpsiPMMassFilter', 
        'hltL1NonIsoDoublePhotonEt5UpsPMMassFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTLEITISinglePhotonEt10TrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTLEITISinglePhotonEt20TrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter', 
        'hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt30HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTVLEIDoublePhotonEt15HcalIsolFilter', 
        'hltPreL1SingleEG5', 
        'hltPreL1SingleEG8'),
    eleHLTFilterNames = cms.vstring('hltL1NonIsoHLTNonIsoSingleElectronLWEt10PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdDphiFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronLWEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter', 
        'hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt20HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoDoublePhotonEt5eeResPMMassFilter', 
        'hltL1NonIsoDoublePhotonEt5JpsiPMMassFilter', 
        'hltL1NonIsoDoublePhotonEt5UpsPMMassFilter', 
        'hltPreL1SingleEG5', 
        'hltPreL1SingleEG8', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt10PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdDphiFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15LTITrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt20PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdTrackIsolFilterESet25LTI', 
        'hltL1NonIsoDoubleElectronEt5JpsiPMMassFilter', 
        'hltL1NonIsoDoubleElectronEt5UpsPMMassFilter', 
        'hltL1NonIsoHLTNonIsoDoubleElectronEt10PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronSiStripEt20PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTLEITISinglePhotonEt10TrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTLEITISinglePhotonEt20TrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter', 
        'hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt30HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTVLEIDoublePhotonEt15HcalIsolFilter'),
    diPhoTightLooseTrigNames = cms.vstring('hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter:hltPreL1DoubleEG5hltL1NonIsoDoublePhotonEt5eeResPMMassFilter:hltPreL1DoubleEG5', 
        'hltL1NonIsoDoublePhotonEt5JpsiPMMassFilter:hltPreL1DoubleEG5', 
        'hltL1NonIsoDoublePhotonEt5UpsPMMassFilter:hltPreL1DoubleEG5', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTVLEIDoublePhotonEt15HcalIsolFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter'),
    hltEleTrkIsolRSpan = cms.double(999999.0),
    cutMasks = cms.PSet(
        stdPho = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:r9:isolEm:isolHad:isolPtTrks'),
        stdEle = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:isolEm:isolHad:isolPtTrks'),
        fakeEle = cms.string('et:detEta:hadem'),
        probeEle = cms.string('et:detEta'),
        tagEle = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:isolEm:isolHad:isolPtTrks'),
        trigTPEle = cms.string('detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta')
    ),
    hltHadIsolOuterCone = cms.double(0.3),
    CaloTowers = cms.InputTag("towerMaker"),
    eleCuts = cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.015),
            maxCTFTrkInnerRadius = cms.double(99999),
            minR9 = cms.double(0.9),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.09),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(15),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(7.5),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.015),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        ),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.03),
            maxCTFTrkInnerRadius = cms.double(9999.0),
            minR9 = cms.double(0.9),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.09),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(15),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(15),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.03),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        )
    ),
    hltHadIsolDepth = cms.int32(-1),
    hltHadIsolInnerCone = cms.double(0.0),
    binData = cms.PSet(
        e1x5 = cms.PSet(
            max = cms.double(1.1),
            nr = cms.int32(24),
            min = cms.double(-0.1)
        ),
        et = cms.PSet(
            max = cms.double(105.0),
            nr = cms.int32(11),
            min = cms.double(-5.0)
        ),
        dEtaIn = cms.PSet(
            max = cms.double(0.02),
            nr = cms.int32(10),
            min = cms.double(-0.02)
        ),
        isolEm = cms.PSet(
            max = cms.double(10),
            nr = cms.int32(22),
            min = cms.double(-1)
        ),
        massHigh = cms.PSet(
            max = cms.double(5000),
            nr = cms.int32(20),
            min = cms.double(0.0)
        ),
        etHigh = cms.PSet(
            max = cms.double(2025),
            nr = cms.int32(10),
            min = cms.double(25)
        ),
        sigEtaEta = cms.PSet(
            max = cms.double(0.05),
            nr = cms.int32(30),
            min = cms.double(-0.01)
        ),
        isolPtTrks = cms.PSet(
            max = cms.double(10),
            nr = cms.int32(22),
            min = cms.double(-1)
        ),
        charge = cms.PSet(
            max = cms.double(1.5),
            nr = cms.int32(2),
            min = cms.double(-1.5)
        ),
        invEInvP = cms.PSet(
            max = cms.double(0.2),
            nr = cms.int32(10),
            min = cms.double(-0.2)
        ),
        phi = cms.PSet(
            max = cms.double(3.14),
            nr = cms.int32(16),
            min = cms.double(-3.14)
        ),
        eOverP = cms.PSet(
            max = cms.double(5),
            nr = cms.int32(12),
            min = cms.double(-1.0)
        ),
        isolNrTrks = cms.PSet(
            max = cms.double(10),
            nr = cms.int32(22),
            min = cms.double(-1)
        ),
        dPhiIn = cms.PSet(
            max = cms.double(0.15),
            nr = cms.int32(10),
            min = cms.double(-0.15)
        ),
        err = cms.PSet(
            max = cms.double(100.5),
            nr = cms.int32(101),
            min = cms.double(-0.5)
        ),
        isolHad = cms.PSet(
            max = cms.double(10),
            nr = cms.int32(22),
            min = cms.double(-1)
        ),
        r9 = cms.PSet(
            max = cms.double(1.1),
            nr = cms.int32(24),
            min = cms.double(-0.1)
        ),
        etaVsPhi = cms.PSet(
            yMax = cms.double(3.14),
            nrY = cms.int32(8),
            nrX = cms.int32(15),
            xMax = cms.double(3.0),
            xMin = cms.double(-3.0),
            yMin = cms.double(-3.14)
        ),
        hOverE = cms.PSet(
            max = cms.double(0.1),
            nr = cms.int32(30),
            min = cms.double(0.0)
        ),
        eta = cms.PSet(
            max = cms.double(3.0),
            nr = cms.int32(30),
            min = cms.double(-3.0)
        ),
        mass = cms.PSet(
            max = cms.double(120),
            nr = cms.int32(26),
            min = cms.double(-10.0)
        ),
        e2x5 = cms.PSet(
            max = cms.double(1.1),
            nr = cms.int32(24),
            min = cms.double(-0.1)
        )
    ),
    EndcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    calHLTEleTrkIsol = cms.bool(True),
    BeamSpotProducer = cms.InputTag("offlineBeamSpot"),
    IsolTrackCollection = cms.InputTag("generalTracks"),
    ElectronCollection = cms.InputTag("gsfElectrons"),
    hltEMIsolOuterCone = cms.double(0.4),
    hltEMIsolEtMinEB = cms.double(-9999.0),
    DQMDirName = cms.string('HLT/EgOffline'),
    hltPhoTrkIsolRSpan = cms.double(999999.0),
    hltEMIsolInnerConeEE = cms.double(0.07),
    hltTag = cms.string('HLT'),
    BarrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    hltPhoTrkIsolPtMin = cms.double(1.5),
    hltEleTrkIsolOuterCone = cms.double(0.2),
    hltEMIsolInnerConeEB = cms.double(0.045),
    HBHERecHitCollection = cms.InputTag("hbhereco"),
    calHLTPhoTrkIsol = cms.bool(True),
    hltHadIsolEtMin = cms.double(0.0),
    triggerSummaryLabel = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    phoCuts = cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.015),
            maxCTFTrkInnerRadius = cms.double(9.0),
            minR9 = cms.double(0.8),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.1),
            isolHadGradTerm = cms.double(0.0),
            isolHadConstTerm = cms.double(5),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:r9:isolEm:isolHad:isolPtTrks'),
            isolNrTrksConstTerm = cms.int32(4),
            maxDEtaIn = cms.double(-1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(0.1),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(-1),
            maxInvEInvP = cms.double(-1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(20),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(5),
            isolEmConstTerm = cms.double(5),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(0),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(9.0),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.015),
            isolEmGradTerm = cms.double(0.0),
            minCTFTrkOuterRadius = cms.double(40.0)
        ),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.0275),
            maxCTFTrkInnerRadius = cms.double(9.0),
            minR9 = cms.double(0.8),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.1),
            isolHadGradTerm = cms.double(0.0),
            isolHadConstTerm = cms.double(5),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:r9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksPho'),
            isolNrTrksConstTerm = cms.int32(4),
            maxDEtaIn = cms.double(-1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(0.1),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(-1),
            maxInvEInvP = cms.double(-1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(20),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(5),
            isolEmConstTerm = cms.double(5),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(0),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(9),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.0275),
            isolEmGradTerm = cms.double(0.0),
            minCTFTrkOuterRadius = cms.double(40.0)
        )
    ),
    hltEleTrkIsolZSpan = cms.double(0.1),
    calHLTEmIsol = cms.bool(True),
    calHLTHcalIsol = cms.bool(False),
    eleLooseCuts = cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.015),
            maxCTFTrkInnerRadius = cms.double(99999),
            minR9 = cms.double(0.9),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.09),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(15),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(7.5),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.015),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        ),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.03),
            maxCTFTrkInnerRadius = cms.double(9999.0),
            minR9 = cms.double(0.9),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.09),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(15),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(15),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.03),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        )
    ),
    PhotonCollection = cms.InputTag("photons"),
    phoLooseCuts = cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.015),
            maxCTFTrkInnerRadius = cms.double(9.0),
            minR9 = cms.double(0.8),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.1),
            isolHadGradTerm = cms.double(0.0),
            isolHadConstTerm = cms.double(5),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:r9:isolEm:isolHad:isolPtTrks'),
            isolNrTrksConstTerm = cms.int32(4),
            maxDEtaIn = cms.double(-1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(0.1),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(-1),
            maxInvEInvP = cms.double(-1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(20),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(5),
            isolEmConstTerm = cms.double(5),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(0),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(9.0),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.015),
            isolEmGradTerm = cms.double(0.0),
            minCTFTrkOuterRadius = cms.double(40.0)
        ),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.0275),
            maxCTFTrkInnerRadius = cms.double(9.0),
            minR9 = cms.double(0.8),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.1),
            isolHadGradTerm = cms.double(0.0),
            isolHadConstTerm = cms.double(5),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:r9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksPho'),
            isolNrTrksConstTerm = cms.int32(4),
            maxDEtaIn = cms.double(-1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(0.1),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(-1),
            maxInvEInvP = cms.double(-1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(20),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(5),
            isolEmConstTerm = cms.double(5),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(0),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(9),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.0275),
            isolEmGradTerm = cms.double(0.0),
            minCTFTrkOuterRadius = cms.double(40.0)
        )
    ),
    triggerCuts = cms.VPSet(cms.PSet(
        barrel = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.015),
            maxCTFTrkInnerRadius = cms.double(99999),
            minR9 = cms.double(0.9),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(1.442),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et'),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.09),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(0.0),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(10.0),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(7.5),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.015),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        ),
        trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronLWEt10PixelMatchFilter'),
        endcap = cms.PSet(
            isolPtTrksGradStart = cms.double(0.0),
            maxSigmaEtaEta = cms.double(0.03),
            maxCTFTrkInnerRadius = cms.double(9999.0),
            minR9 = cms.double(0.9),
            requirePixelHitsIfOuterInOuter = cms.bool(True),
            maxEta = cms.double(2.5),
            maxHLTDEtaIn = cms.double(0.008),
            isolHadGradTerm = cms.double(0.03),
            isolHadConstTerm = cms.double(3),
            maxHLTIsolTrksEleOverPt = cms.double(0),
            maxHLTIsolEmOverEt = cms.double(0),
            cuts = cms.string('et'),
            isolNrTrksConstTerm = cms.int32(0),
            maxDEtaIn = cms.double(0.1),
            isolHadGradStart = cms.double(0.0),
            maxHadem = cms.double(0.05),
            maxHLTInvEInvP = cms.double(9999),
            maxHLTIsolEmOverEt2 = cms.double(0),
            maxHLTIsolHadOverEt2 = cms.double(0),
            maxHLTIsolTrksPhoOverPt = cms.double(0),
            maxCTFTrkChi2NDof = cms.double(99999),
            maxHLTDPhiIn = cms.double(0.1),
            maxDPhiIn = cms.double(0.09),
            maxInvEInvP = cms.double(0.1),
            minEta = cms.double(1.56),
            maxHLTIsolTrksPhoOverPt2 = cms.double(0),
            minEt = cms.double(10.0),
            maxHadEnergy = cms.double(0),
            maxHLTIsolHadOverEt = cms.double(0),
            minNrCTFTrkHits = cms.int32(7),
            isolEmConstTerm = cms.double(3),
            maxHLTIsolTrksPho = cms.double(0),
            maxHLTIsolTrksEleOverPt2 = cms.double(0),
            maxHLTIsolEm = cms.double(0),
            maxNrCTFTrkHitsLost = cms.int32(999),
            maxHLTIsolTrksEle = cms.double(0),
            isolPtTrksConstTerm = cms.double(15),
            isolPtTrksGradTerm = cms.double(0.0),
            maxHLTIsolHad = cms.double(0),
            isolEmGradStart = cms.double(0.0),
            maxSigmaIEtaIEta = cms.double(0.03),
            isolEmGradTerm = cms.double(0.03),
            minCTFTrkOuterRadius = cms.double(0.0)
        )
    ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(99999),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(7.5),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronLWEt15PixelMatchFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.03),
                maxCTFTrkInnerRadius = cms.double(9999.0),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(15),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.03),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(99999),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.008),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.1),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(7.5),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdDphiFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.04),
                maxCTFTrkInnerRadius = cms.double(9999.0),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.008),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.1),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(15),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.03),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(99999),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(5.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(7.5),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.03),
                maxCTFTrkInnerRadius = cms.double(9999.0),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(5.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(15),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.03),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(99999),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(10.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(7.5),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt10PixelMatchFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.03),
                maxCTFTrkInnerRadius = cms.double(9999.0),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(10.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(15),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.03),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(99999),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(7.5),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.03),
                maxCTFTrkInnerRadius = cms.double(9999.0),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(15),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.03),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(99999),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(20.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(7.5),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt20PixelMatchFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.03),
                maxCTFTrkInnerRadius = cms.double(9999.0),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(20.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(15),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.03),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(99999),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(7.5),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdDphiFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.04),
                maxCTFTrkInnerRadius = cms.double(9999.0),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(15),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.03),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(99999),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0.5),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et:dEtaIn:dPhiIn:sigmaIEtaIEta:hltIsolTrksEle:ctfTrack'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(25.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(8),
                isolPtTrksConstTerm = cms.double(7.5),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdTrackIsolFilterESet25LTI'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.04),
                maxCTFTrkInnerRadius = cms.double(9999.0),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0.5),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et:dEtaIn:dPhiIn:sigmaIEtaIEta:hltIsolTrksEle:ctfTrack'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(25.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(8),
                isolPtTrksConstTerm = cms.double(15),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.03),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(99999),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0.5),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et:hltIsolTrksEle:ctfTrack'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(8),
                isolPtTrksConstTerm = cms.double(7.5),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15LTITrackIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.03),
                maxCTFTrkInnerRadius = cms.double(9999.0),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0.5),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et:hltIsolTrksEle:ctfTrack'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(8),
                isolPtTrksConstTerm = cms.double(15),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.03),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(99999),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(10.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(7.5),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoDoubleElectronEt10PixelMatchFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.03),
                maxCTFTrkInnerRadius = cms.double(9999.0),
                minR9 = cms.double(0.9),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.008),
                isolHadGradTerm = cms.double(0.03),
                isolHadConstTerm = cms.double(3),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(0),
                maxDEtaIn = cms.double(0.1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(9999),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(0.09),
                maxInvEInvP = cms.double(0.1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(10.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(7),
                isolEmConstTerm = cms.double(3),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(999),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(15),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.03),
                isolEmGradTerm = cms.double(0.03),
                minCTFTrkOuterRadius = cms.double(0.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(10.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(10.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0.1),
                cuts = cms.string('et:hltIsolEm'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(-1.0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(3.0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0.1),
                cuts = cms.string('et:hltIsolEm'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(-1.0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(3.0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et:hltIsolTrksPho'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0.05),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
                minEt = cms.double(15.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(4.0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et:hltIsolTrksPho'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0.05),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
                minEt = cms.double(15.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(4.0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(20),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt20HcalIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(20),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(25.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(25.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(30.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt30HcalIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(30.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0.1),
                cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(-1.0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0.05),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
                minEt = cms.double(15.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(4.0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(3.0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTLEITISinglePhotonEt10TrackIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0.1),
                cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(-1.0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0.05),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
                minEt = cms.double(15.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(4.0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(3.0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0.1),
                cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(-1.0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0.05),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
                minEt = cms.double(20.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(4.0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(3.0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTLEITISinglePhotonEt20TrackIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0.1),
                cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(-1.0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0.05),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
                minEt = cms.double(20.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(4.0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(3.0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0.1),
                cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(-1.0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0.05),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
                minEt = cms.double(25.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(4.0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(3.0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0.1),
                cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(-1.0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0.05),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
                minEt = cms.double(25.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(4.0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(3.0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(10.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(10.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0),
                cuts = cms.string('et'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        ), 
        cms.PSet(
            barrel = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.015),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(1.442),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0.2),
                cuts = cms.string('et:hltIsolEm'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(-1.0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(0.0),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(5.0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9.0),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.015),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            ),
            trigName = cms.string('hltL1NonIsoHLTVLEIDoublePhotonEt15HcalIsolFilter'),
            endcap = cms.PSet(
                isolPtTrksGradStart = cms.double(0.0),
                maxSigmaEtaEta = cms.double(0.0275),
                maxCTFTrkInnerRadius = cms.double(9.0),
                minR9 = cms.double(0.8),
                requirePixelHitsIfOuterInOuter = cms.bool(True),
                maxEta = cms.double(2.5),
                maxHLTDEtaIn = cms.double(0.1),
                isolHadGradTerm = cms.double(0.0),
                isolHadConstTerm = cms.double(5),
                maxHLTIsolTrksEleOverPt = cms.double(0),
                maxHLTIsolEmOverEt = cms.double(0.2),
                cuts = cms.string('et:hltIsolEm'),
                isolNrTrksConstTerm = cms.int32(4),
                maxDEtaIn = cms.double(-1),
                isolHadGradStart = cms.double(0.0),
                maxHadem = cms.double(0.05),
                maxHLTInvEInvP = cms.double(0.1),
                maxHLTIsolEmOverEt2 = cms.double(-1.0),
                maxHLTIsolHadOverEt2 = cms.double(0),
                maxHLTIsolTrksPhoOverPt = cms.double(0),
                maxCTFTrkChi2NDof = cms.double(99999),
                maxHLTDPhiIn = cms.double(0.1),
                maxDPhiIn = cms.double(-1),
                maxInvEInvP = cms.double(-1),
                minEta = cms.double(1.56),
                maxHLTIsolTrksPhoOverPt2 = cms.double(0),
                minEt = cms.double(15.0),
                maxHadEnergy = cms.double(0),
                maxHLTIsolHadOverEt = cms.double(0),
                minNrCTFTrkHits = cms.int32(5),
                isolEmConstTerm = cms.double(5),
                maxHLTIsolTrksPho = cms.double(0),
                maxHLTIsolTrksEleOverPt2 = cms.double(0),
                maxHLTIsolEm = cms.double(5.0),
                maxNrCTFTrkHitsLost = cms.int32(0),
                maxHLTIsolTrksEle = cms.double(0),
                isolPtTrksConstTerm = cms.double(9),
                isolPtTrksGradTerm = cms.double(0.0),
                maxHLTIsolHad = cms.double(0),
                isolEmGradStart = cms.double(0.0),
                maxSigmaIEtaIEta = cms.double(0.0275),
                isolEmGradTerm = cms.double(0.0),
                minCTFTrkOuterRadius = cms.double(40.0)
            )
        )),
    hltPhoTrkIsolZSpan = cms.double(999999.0),
    HFRecHitCollection = cms.InputTag("hfreco"),
    hltEMIsolEMinEB = cms.double(0.08),
    hltEMIsolEtaSliceEB = cms.double(0.02),
    hltEMIsolEtaSliceEE = cms.double(0.02),
    hltEMIsolEMinEE = cms.double(0.3),
    hltPhoTrkIsolInnerCone = cms.double(0.06),
    TrigResults = cms.InputTag("TriggerResults","","HLT"),
    filterInactiveTriggers = cms.bool(True),
    hltEleTrkIsolInnerCone = cms.double(0.02),
    hltPhoTrkIsolOuterCone = cms.double(0.3),
    CaloJetCollection = cms.InputTag("sisCone5CaloJets"),
    hltEMIsolEtMinEE = cms.double(-9999.0),
    hltEleTrkIsolPtMin = cms.double(1.5),
    hltPhoTrkIsolCountTrks = cms.bool(False)
)


process.egammaBasicClusterAnalyzer = cms.EDAnalyzer("EgammaBasicClusters",
    MCTruthCollection = cms.InputTag("generator"),
    verboseDBE = cms.untracked.bool(False),
    hist_max_Size = cms.double(20.0),
    hist_min_Size = cms.double(0.0),
    hist_min_NumRecHits = cms.double(0.0),
    hist_min_R = cms.double(0.0),
    hist_min_ET = cms.double(0.0),
    hist_bins_R = cms.int32(55),
    hist_bins_Size = cms.int32(20),
    hist_max_NumRecHits = cms.double(50.0),
    hist_bins_Phi = cms.int32(181),
    hist_bins_NumRecHits = cms.int32(50),
    endcapBasicClusterCollection = cms.InputTag("multi5x5BasicClusters","multi5x5EndcapBasicClusters"),
    hist_max_ET = cms.double(200.0),
    hist_min_Phi = cms.double(-3.14159),
    hist_min_Eta = cms.double(-2.5),
    barrelBasicClusterCollection = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    hist_max_Eta = cms.double(2.5),
    hist_max_Phi = cms.double(3.14159),
    hist_bins_Eta = cms.int32(91),
    hist_max_R = cms.double(175.0),
    hist_bins_ET = cms.int32(200)
)


process.egammaSuperClusterAnalyzer = cms.EDAnalyzer("EgammaSuperClusters",
    MCTruthCollection = cms.InputTag("generator"),
    verboseDBE = cms.untracked.bool(False),
    hist_bins_deltaR = cms.int32(50),
    hist_max_Size = cms.double(5.0),
    hist_max_preshowerE = cms.double(100.0),
    hist_max_etaWidth = cms.double(0.1),
    endcapCorSuperClusterCollection = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    hist_max_deltaR = cms.double(0.5),
    barrelRecHitCollection = cms.InputTag("reducedEcalRecHitsEB"),
    endcapPreSuperClusterCollection = cms.InputTag("multi5x5SuperClustersWithPreshower"),
    hist_min_Eta = cms.double(-3.0),
    hist_min_phiWidth = cms.double(0.0),
    hist_bins_S25toE = cms.int32(50),
    hist_bins_EoverTruth = cms.int32(100),
    barrelRawSuperClusterCollection = cms.InputTag("hybridSuperClusters"),
    hist_min_Phi = cms.double(-3.14159),
    hist_max_S25toE = cms.double(1.0),
    hist_bins_preshowerE = cms.int32(100),
    hist_bins_Phi = cms.int32(181),
    hist_bins_R = cms.int32(55),
    endcapRawSuperClusterCollection = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapSuperClusters"),
    hist_max_phiWidth = cms.double(0.1),
    hist_bins_etaWidth = cms.int32(100),
    hist_bins_S1toS9 = cms.int32(50),
    hist_min_ET = cms.double(0.0),
    hist_min_deltaR = cms.double(0.0),
    hist_max_S1toS9 = cms.double(1.0),
    hist_max_ET = cms.double(50.0),
    hist_min_etaWidth = cms.double(0.0),
    hist_max_Eta = cms.double(3.0),
    hist_max_Phi = cms.double(3.14159),
    hist_max_R = cms.double(175.0),
    hist_max_EoverTruth = cms.double(1.5),
    hist_min_Size = cms.double(0.0),
    hist_min_S1toS9 = cms.double(0.0),
    hist_min_preshowerE = cms.double(0.0),
    hist_bins_phiWidth = cms.int32(100),
    hist_min_R = cms.double(0.0),
    hist_min_EoverTruth = cms.double(0.5),
    hist_min_NumBC = cms.double(0.0),
    hist_bins_Size = cms.int32(5),
    barrelCorSuperClusterCollection = cms.InputTag("correctedHybridSuperClusters"),
    hist_min_S25toE = cms.double(0.0),
    endcapRecHitCollection = cms.InputTag("reducedEcalRecHitsEE"),
    hist_bins_Eta = cms.int32(100),
    hist_max_NumBC = cms.double(10.0),
    hist_bins_ET = cms.int32(100),
    hist_bins_NumBC = cms.int32(10)
)


process.electronMcFakeValidator = cms.EDAnalyzer("ElectronMcFakeValidator",
    electronCollection = cms.InputTag("gsfElectrons"),
    DeltaR = cms.double(0.3),
    readAOD = cms.bool(False),
    electronTrackCollection = cms.InputTag("electronGsfTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    electronSeedCollection = cms.InputTag("electronMergedSeeds"),
    electronCoreCollection = cms.InputTag("gsfElectronCores"),
    MaxAbsEta = cms.double(2.5),
    matchingObjectCollection = cms.InputTag("iterativeCone5GenJets"),
    MaxPt = cms.double(100.0),
    histosCfg = cms.PSet(
        Nbinpopmatching = cms.int32(75),
        Nbinxyz = cms.int32(50),
        Nbineop2D = cms.int32(30),
        Nbindphimatch2D = cms.int32(50),
        Nbineta2D = cms.int32(50),
        Popmatchingmin = cms.double(0.0),
        Dphimin = cms.double(-0.01),
        Pmax = cms.double(300.0),
        Phimax = cms.double(3.2),
        Phimin = cms.double(-3.2),
        Hoemin = cms.double(0.0),
        Detamin = cms.double(-0.005),
        Eopmax = cms.double(5.0),
        Nbinlhits = cms.int32(5),
        Nbinpteff = cms.int32(19),
        Nbinphi2D = cms.int32(32),
        Meemax = cms.double(150.0),
        Eopmaxsht = cms.double(3.0),
        Nbinp = cms.int32(50),
        Dphimatchmax = cms.double(0.2),
        Meemin = cms.double(0.0),
        Nbindeta = cms.int32(100),
        Hoemax = cms.double(0.5),
        Detamax = cms.double(0.005),
        Fhitsmax = cms.double(30.0),
        Etamax = cms.double(2.5),
        Nbindetamatch2D = cms.int32(50),
        Lhitsmax = cms.double(10.0),
        Nbinphi = cms.int32(64),
        Nbineta = cms.int32(50),
        Nbinmee = cms.int32(100),
        Nbindphimatch = cms.int32(100),
        Nbindetamatch = cms.int32(100),
        Nbineop = cms.int32(50),
        Nbinpt = cms.int32(50),
        Etamin = cms.double(-2.5),
        Nbinfhits = cms.int32(30),
        Dphimax = cms.double(0.01),
        Nbinhoe = cms.int32(100),
        Nbinp2D = cms.int32(50),
        Detamatchmax = cms.double(0.05),
        Nbindphi = cms.int32(100),
        Detamatchmin = cms.double(-0.05),
        Ptmax = cms.double(100.0),
        Popmatchingmax = cms.double(1.5),
        Dphimatchmin = cms.double(-0.2),
        Nbinpt2D = cms.int32(50)
    ),
    outputFile = cms.string('')
)


process.electronMcSignalValidator = cms.EDAnalyzer("ElectronMcSignalValidator",
    electronCollection = cms.InputTag("gsfElectrons"),
    DeltaR = cms.double(0.05),
    MatchingMotherID = cms.vint32(23, 24, -24, 32),
    electronTrackCollection = cms.InputTag("electronGsfTracks"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    mcTruthCollection = cms.InputTag("genParticles"),
    readAOD = cms.bool(False),
    MatchingID = cms.vint32(11, -11),
    electronSeedCollection = cms.InputTag("electronMergedSeeds"),
    electronCoreCollection = cms.InputTag("gsfElectronCores"),
    MaxAbsEta = cms.double(2.5),
    MaxPt = cms.double(100.0),
    histosCfg = cms.PSet(
        Nbinxyz = cms.int32(50),
        Nbineop2D = cms.int32(30),
        Nbinpoptrue = cms.int32(75),
        Nbinpt = cms.int32(50),
        Nbineta2D = cms.int32(50),
        Nbindphimatch2D = cms.int32(50),
        Eopmax = cms.double(5.0),
        Pmax = cms.double(300.0),
        Phimax = cms.double(3.2),
        Phimin = cms.double(-3.2),
        Hoemin = cms.double(0.0),
        Detamin = cms.double(-0.005),
        Dphimin = cms.double(-0.01),
        Nbinlhits = cms.int32(5),
        Nbinpteff = cms.int32(19),
        Nbinphi2D = cms.int32(32),
        Meemax = cms.double(150.0),
        Eopmaxsht = cms.double(3.0),
        Nbinp = cms.int32(50),
        Dphimatchmax = cms.double(0.2),
        Meemin = cms.double(0.0),
        Nbindeta = cms.int32(100),
        Hoemax = cms.double(0.5),
        Nbindetamatch = cms.int32(100),
        Fhitsmax = cms.double(30.0),
        Etamax = cms.double(2.5),
        Poptruemin = cms.double(0.0),
        Nbindetamatch2D = cms.int32(50),
        Lhitsmax = cms.double(10.0),
        Nbinphi = cms.int32(64),
        Nbineta = cms.int32(50),
        Nbinmee = cms.int32(100),
        Nbindphimatch = cms.int32(100),
        Detamax = cms.double(0.005),
        Poptruemax = cms.double(1.5),
        Etamin = cms.double(-2.5),
        Nbinfhits = cms.int32(30),
        Dphimax = cms.double(0.01),
        Nbinhoe = cms.int32(100),
        Nbinp2D = cms.int32(50),
        Detamatchmax = cms.double(0.05),
        Nbindphi = cms.int32(100),
        Detamatchmin = cms.double(-0.05),
        Ptmax = cms.double(100.0),
        Nbineop = cms.int32(50),
        Dphimatchmin = cms.double(-0.2),
        Nbinpt2D = cms.int32(50)
    ),
    outputFile = cms.string('')
)


process.ewkDQM = cms.EDAnalyzer("EwkDQM",
    electronCollection = cms.InputTag("gsfElectrons"),
    caloMETCollection = cms.InputTag("corMetGlobalMuons"),
    muonTriggerPathToPass = cms.string('HLT_Mu9'),
    triggerResultsCollection = cms.InputTag("TriggerResults","","HLT"),
    caloJetCollection = cms.InputTag("ak5CaloJets"),
    muonCollection = cms.InputTag("muons"),
    genParticleCollection = cms.InputTag("genParticles"),
    elecTriggerPathToPass = cms.string('HLT_Ele10_LW_L1R')
)


process.ewkElecDQM = cms.EDAnalyzer("EwkElecDQM",
    ElecTrig = cms.untracked.vstring('HLT_Ele10_LW_L1R', 
        'HLT_Ele10_SW_L1R', 
        'HLT_Photon15_L1R', 
        'HLT_L1SingleEG5', 
        'HLT_L1SingleEG8'),
    MtMax = cms.untracked.double(999999.0),
    SieieBarrel = cms.untracked.double(0.01),
    TrigTag = cms.untracked.InputTag("TriggerResults","","HLT"),
    METTag = cms.untracked.InputTag("met"),
    EcalIsoCutBarrel = cms.untracked.double(5.7),
    EcalIsoCutEndcap = cms.untracked.double(5.0),
    SieieEndcap = cms.untracked.double(0.028),
    TrkIsoCutEndcap = cms.untracked.double(5.1),
    JetTag = cms.untracked.InputTag("ak5CaloJets"),
    MtMin = cms.untracked.double(-999999),
    NJetMax = cms.untracked.int32(999999),
    MetMin = cms.untracked.double(-999999.0),
    ElecTag = cms.untracked.InputTag("gsfElectrons"),
    METIncludesMuons = cms.untracked.bool(False),
    DetainBarrel = cms.untracked.double(0.0071),
    EJetMin = cms.untracked.double(30.0),
    HcalIsoCutEndcap = cms.untracked.double(3.4),
    TrkIsoCutBarrel = cms.untracked.double(7.2),
    MetMax = cms.untracked.double(999999.0),
    EtaCut = cms.untracked.double(2.4),
    PtCut = cms.untracked.double(10.0),
    DetainEndcap = cms.untracked.double(0.0066),
    HcalIsoCutBarrel = cms.untracked.double(8.1)
)


process.ewkMuDQM = cms.EDAnalyzer("EwkMuDQM",
    MetMin = cms.untracked.double(-999999.0),
    PixelHitsCut = cms.untracked.int32(1),
    MtMax = cms.untracked.double(9999999),
    IsAlsoTrackerMuon = cms.untracked.bool(True),
    TrigTag = cms.untracked.InputTag("TriggerResults","","HLT"),
    METTag = cms.untracked.InputTag("pfMet"),
    MetMax = cms.untracked.double(999999.0),
    PtThrForZ2 = cms.untracked.double(10.0),
    PtThrForZ1 = cms.untracked.double(20.0),
    IsoCut03 = cms.untracked.double(0.1),
    TrackerHitsCut = cms.untracked.int32(11),
    JetTag = cms.untracked.InputTag("ak5PFJets"),
    MtMin = cms.untracked.double(50.0),
    NormalizedChi2Cut = cms.untracked.double(10.0),
    IsRelativeIso = cms.untracked.bool(True),
    NJetMax = cms.untracked.int32(999999),
    IsCombinedIso = cms.untracked.bool(True),
    MuonTag = cms.untracked.InputTag("muons"),
    NMatchesCut = cms.untracked.int32(2),
    EJetMin = cms.untracked.double(40.0),
    DxyCut = cms.untracked.double(0.2),
    AcopCut = cms.untracked.double(999.0),
    MuonHitsCut = cms.untracked.int32(1),
    VertexTag = cms.untracked.InputTag("offlinePrimaryVertices"),
    EtaCut = cms.untracked.double(2.1),
    PtCut = cms.untracked.double(25.0)
)


process.ewkMuLumiMonitorDQM = cms.EDAnalyzer("EwkMuLumiMonitorDQM",
    IsCombinedIso = cms.untracked.bool(False),
    IsoCut03 = cms.untracked.double(3.0),
    IsRelativeIso = cms.untracked.bool(False),
    ptThreshold = cms.untracked.double(0.0),
    DxyCut = cms.untracked.double(0.2),
    maxDPtRel = cms.untracked.double(1.0),
    calotower = cms.untracked.InputTag("towerMaker"),
    METIncludesMuons = cms.untracked.bool(True),
    acopCut = cms.untracked.double(999.0),
    mtMax = cms.untracked.double(999.0),
    tracks = cms.untracked.InputTag("generalTracks"),
    triggerEvent = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
    TrigTag = cms.untracked.InputTag("TriggerResults","","HLT"),
    etaMuCut = cms.untracked.double(2.1),
    maxDeltaR = cms.untracked.double(0.2),
    mtMin = cms.untracked.double(50.0),
    muons = cms.untracked.InputTag("muons"),
    metTag = cms.untracked.InputTag("pfMet"),
    ptMuCut = cms.untracked.double(20.0)
)


process.ewkTauDQM = cms.EDAnalyzer("EwkTauDQM",
    channels = cms.PSet(
        muTauChannel = cms.PSet(
            tauDiscrAgainstMuons = cms.InputTag("shrinkingConePFTauDiscriminationAgainstMuon"),
            beamSpotSource = cms.InputTag("offlineBeamSpot"),
            muonCombIsoCut = cms.double(0.2),
            tauDiscrByLeadTrackPtCut = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackPtCut"),
            vertexSource = cms.InputTag("offlinePrimaryVertices"),
            pfMEtSource = cms.InputTag("pfMet"),
            muonEcalIsoCut = cms.double(3.0),
            visMassCut = cms.double(10.0),
            muonPtCut = cms.double(15.0),
            muonEtaCut = cms.double(2.5),
            tauDiscrByTrackIso = cms.InputTag("shrinkingConePFTauDiscriminationByTrackIsolation"),
            tauDiscrByEcalIso = cms.InputTag("shrinkingConePFTauDiscriminationByECALIsolation"),
            tauDiscrByLeadTrackFinding = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding"),
            caloMEtSource = cms.InputTag("met"),
            deltaRCut = cms.double(0.2),
            hltPaths = cms.vstring(),
            muonTrackIsoCut = cms.double(2.0),
            triggerResultsSource = cms.InputTag("TriggerResults","","HLT"),
            dqmSubDirectory = cms.string('MuTauChannel'),
            tauJetEtaCut = cms.double(2.5),
            tauJetSource = cms.InputTag("shrinkingConePFTauProducer"),
            muonIsoMode = cms.string('relativeIso'),
            tauJetPtCut = cms.double(15.0),
            muonSource = cms.InputTag("muons")
        ),
        elecTauChannel = cms.PSet(
            tauDiscrAgainstMuons = cms.InputTag("shrinkingConePFTauDiscriminationAgainstMuon"),
            beamSpotSource = cms.InputTag("offlineBeamSpot"),
            caloMEtSource = cms.InputTag("met"),
            electronSource = cms.InputTag("gsfElectrons"),
            tauDiscrByLeadTrackPtCut = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackPtCut"),
            vertexSource = cms.InputTag("offlinePrimaryVertices"),
            pfMEtSource = cms.InputTag("pfMet"),
            visMassCut = cms.double(10.0),
            electronTrackIsoCut = cms.double(0.2),
            electronEtaCut = cms.double(2.5),
            electronEcalIsoCut = cms.double(0.2),
            tauDiscrByTrackIso = cms.InputTag("shrinkingConePFTauDiscriminationByTrackIsolation"),
            tauDiscrByEcalIso = cms.InputTag("shrinkingConePFTauDiscriminationByECALIsolation"),
            dqmSubDirectory = cms.string('ElecTauChannel'),
            tauDiscrAgainstElectrons = cms.InputTag("shrinkingConePFTauDiscriminationAgainstElectron"),
            tauJetSource = cms.InputTag("shrinkingConePFTauProducer"),
            triggerResultsSource = cms.InputTag("TriggerResults","","HLT"),
            tauDiscrByLeadTrackFinding = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding"),
            tauJetEtaCut = cms.double(2.5),
            hltPaths = cms.vstring(),
            tauJetPtCut = cms.double(15.0),
            electronPtCut = cms.double(15.0),
            electronIsoMode = cms.string('relativeIso')
        )
    ),
    dqmDirectory = cms.string('Physics/EwkTau'),
    maxNumWarnings = cms.int32(0)
)


process.genMetCaloAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    InputMETLabel = cms.InputTag("genMetCalo"),
    METType = cms.untracked.string('GenMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.genMetCaloAndNonPromptAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    InputMETLabel = cms.InputTag("genMetCaloAndNonPrompt"),
    METType = cms.untracked.string('GenMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.genMetTrueAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    InputMETLabel = cms.InputTag("genMetTrue"),
    METType = cms.untracked.string('GenMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.genMptCaloAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(True),
    InputMETLabel = cms.InputTag("genMptCalo"),
    METType = cms.untracked.string('GenMET'),
    FolderName = cms.untracked.string('RecoMETV/MET_Global/')
)


process.genMptTrueAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(True),
    InputMETLabel = cms.InputTag("genMptTrue"),
    METType = cms.untracked.string('GenMET'),
    FolderName = cms.untracked.string('RecoMETV/MET_Global/')
)


process.glbCosmicMuonTrackVMuonAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToGlbCosmicMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("globalCosmicMuons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.glbCosmicMuonTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToGlbCosmicTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("globalCosmicMuons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.glbMuonTrackVMuonAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToGlbMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("extractedGlobalMuons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.glbMuonTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToGlbTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("globalMuons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.glbSETMuonTrackVMuonAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToGlbSETMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("globalSETMuons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.glbSETMuonTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToGlbSETTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("globalSETMuons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.globaldigisanalyze = cms.EDAnalyzer("GlobalDigisAnalyzer",
    hitsProducer = cms.string('g4SimHits'),
    MuCSCStripSrc = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigi"),
    MuDTSrc = cms.InputTag("simMuonDTDigis"),
    HCalDigi = cms.InputTag("simHcalDigis"),
    SiPxlSrc = cms.InputTag("simSiPixelDigis"),
    Verbosity = cms.untracked.int32(0),
    MuCSCWireSrc = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigi"),
    ECalEESrc = cms.InputTag("simEcalDigis","eeDigis"),
    SiStripSrc = cms.InputTag("simSiStripDigis","ZeroSuppressed"),
    ProvenanceLookup = cms.PSet(
        PrintProvenanceInfo = cms.untracked.bool(False),
        GetAllProvenances = cms.untracked.bool(False)
    ),
    HCalSrc = cms.InputTag("g4SimHits","HcalHits"),
    Frequency = cms.untracked.int32(50),
    VtxUnit = cms.untracked.int32(1),
    ECalEBSrc = cms.InputTag("simEcalDigis","ebDigis"),
    ECalESSrc = cms.InputTag("simEcalPreshowerDigis"),
    MuRPCSrc = cms.InputTag("simMuonRPCDigis"),
    Name = cms.untracked.string('GlobalDigisAnalyzer')
)


process.globalhitsanalyze = cms.EDAnalyzer("GlobalHitsAnalyzer",
    validSiTIBLow = cms.untracked.bool(True),
    validSiTIDLow = cms.untracked.bool(True),
    MuonRpcSrc = cms.InputTag("g4SimHits","MuonRPCHits"),
    validSiTIDHigh = cms.untracked.bool(True),
    VtxUnit = cms.untracked.int32(1),
    SiTIDLowSrc = cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"),
    validG4trkContainer = cms.untracked.bool(True),
    validHepMCevt = cms.untracked.bool(True),
    PxlFwdHighSrc = cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof"),
    validMuonDt = cms.untracked.bool(True),
    HCalSrc = cms.InputTag("g4SimHits","HcalHits"),
    validSiTECHigh = cms.untracked.bool(True),
    validEB = cms.untracked.bool(True),
    SiTIBHighSrc = cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"),
    SiTECLowSrc = cms.InputTag("g4SimHits","TrackerHitsTECLowTof"),
    validEE = cms.untracked.bool(True),
    ECalESSrc = cms.InputTag("g4SimHits","EcalHitsES"),
    validSiTOBHigh = cms.untracked.bool(True),
    validPxlFwdHigh = cms.untracked.bool(True),
    validMuonCSC = cms.untracked.bool(True),
    Name = cms.untracked.string('GlobalHitsAnalyzer'),
    validHcal = cms.untracked.bool(True),
    Verbosity = cms.untracked.int32(0),
    PxlFwdLowSrc = cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"),
    PxlBrlLowSrc = cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"),
    validPresh = cms.untracked.bool(False),
    SiTOBHighSrc = cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"),
    validPxlBrlHigh = cms.untracked.bool(True),
    SiTECHighSrc = cms.InputTag("g4SimHits","TrackerHitsTECHighTof"),
    PxlBrlHighSrc = cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"),
    validSiTOBLow = cms.untracked.bool(True),
    MuonCscSrc = cms.InputTag("g4SimHits","MuonCSCHits"),
    validG4VtxContainer = cms.untracked.bool(True),
    validSiTIBHigh = cms.untracked.bool(True),
    SiTOBLowSrc = cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
    validMuonRPC = cms.untracked.bool(True),
    MuonDtSrc = cms.InputTag("g4SimHits","MuonDTHits"),
    validSiTECLow = cms.untracked.bool(True),
    validPxlFwdLow = cms.untracked.bool(True),
    SiTIBLowSrc = cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"),
    ProvenanceLookup = cms.PSet(
        PrintProvenanceInfo = cms.untracked.bool(False),
        GetAllProvenances = cms.untracked.bool(False)
    ),
    validPxlBrlLow = cms.untracked.bool(True),
    Frequency = cms.untracked.int32(50),
    ECalEBSrc = cms.InputTag("g4SimHits","EcalHitsEB"),
    SiTIDHighSrc = cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"),
    ECalEESrc = cms.InputTag("g4SimHits","EcalHitsEE")
)


process.globalrechitsanalyze = cms.EDAnalyzer("GlobalRecHitsAnalyzer",
    MuDTSrc = cms.InputTag("dt1DRecHits"),
    SiPxlSrc = cms.InputTag("siPixelRecHits"),
    VtxUnit = cms.untracked.int32(1),
    associateRecoTracks = cms.bool(False),
    MuDTSimSrc = cms.InputTag("g4SimHits","MuonDTHits"),
    associatePixel = cms.bool(True),
    Name = cms.untracked.string('GlobalRecHitsAnalyzer'),
    ECalEESrc = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    MuRPCSimSrc = cms.InputTag("g4SimHits","MuonRPCHits"),
    SiStripSrc = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    HCalSrc = cms.InputTag("g4SimHits","HcalHits"),
    ECalESSrc = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    hitsProducer = cms.string('g4SimHits'),
    ECalUncalEESrc = cms.InputTag("ecalWeightUncalibRecHit","EcalUncalibRecHitsEE"),
    ROUList = cms.vstring('g4SimHitsTrackerHitsTIBLowTof', 
        'g4SimHitsTrackerHitsTIBHighTof', 
        'g4SimHitsTrackerHitsTIDLowTof', 
        'g4SimHitsTrackerHitsTIDHighTof', 
        'g4SimHitsTrackerHitsTOBLowTof', 
        'g4SimHitsTrackerHitsTOBHighTof', 
        'g4SimHitsTrackerHitsTECLowTof', 
        'g4SimHitsTrackerHitsTECHighTof', 
        'g4SimHitsTrackerHitsPixelBarrelLowTof', 
        'g4SimHitsTrackerHitsPixelBarrelHighTof', 
        'g4SimHitsTrackerHitsPixelEndcapLowTof', 
        'g4SimHitsTrackerHitsPixelEndcapHighTof'),
    Verbosity = cms.untracked.int32(0),
    associateStrip = cms.bool(True),
    MuRPCSrc = cms.InputTag("rpcRecHits"),
    ECalUncalEBSrc = cms.InputTag("ecalWeightUncalibRecHit","EcalUncalibRecHitsEB"),
    MuCSCSrc = cms.InputTag("csc2DRecHits"),
    ProvenanceLookup = cms.PSet(
        PrintProvenanceInfo = cms.untracked.bool(False),
        GetAllProvenances = cms.untracked.bool(False)
    ),
    Frequency = cms.untracked.int32(50),
    ECalEBSrc = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.hcalBeamMonitor = cms.EDAnalyzer("HcalBeamMonitor",
    hfRechitLabel = cms.untracked.InputTag("hfreco"),
    mergeRuns = cms.untracked.bool(False),
    lumiqualitydir = cms.untracked.string(''),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    hoRechitLabel = cms.untracked.InputTag("horeco"),
    occupancyThresh = cms.untracked.double(0.0625),
    hbheRechitLabel = cms.untracked.InputTag("hbhereco"),
    hotrate = cms.untracked.double(0.25),
    minEvents = cms.untracked.int32(500),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    NLumiBlocks = cms.untracked.int32(4000),
    minBadCells = cms.untracked.int32(10),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    Overwrite = cms.untracked.bool(False),
    TaskFolder = cms.untracked.string('BeamMonitor_Hcal/')
)


process.hcalCoarsePedestalMonitor = cms.EDAnalyzer("HcalCoarsePedestalMonitor",
    excludeHORing2 = cms.untracked.bool(True),
    mergeRuns = cms.untracked.bool(False),
    ADCDiffThresh = cms.untracked.double(1.0),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('CoarsePedestalMonitor_Hcal/'),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    makeDiagnostics = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(1),
    minEvents = cms.untracked.int32(25)
)


process.hcalDataIntegrityMonitor = cms.EDAnalyzer("HcalDataIntegrityTask",
    mergeRuns = cms.untracked.bool(False),
    UnpackerReportLabel = cms.untracked.InputTag("hcalDigis"),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('FEDIntegrity/'),
    online = cms.untracked.bool(False),
    RawDataLabel = cms.untracked.InputTag("source"),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7)
)


process.hcalDeadCellMonitor = cms.EDAnalyzer("HcalDeadCellMonitor",
    hfRechitLabel = cms.untracked.InputTag("hfreco"),
    excludeHORing2 = cms.untracked.bool(True),
    mergeRuns = cms.untracked.bool(False),
    test_rechits = cms.untracked.bool(True),
    BadChannelStatusMask = cms.untracked.int32(34),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    MissingRechitEnergyThreshold = cms.untracked.double(-99.0),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    hoRechitLabel = cms.untracked.InputTag("horeco"),
    hbheRechitLabel = cms.untracked.InputTag("hbhereco"),
    NLumiBlocks = cms.untracked.int32(4000),
    enableCleanup = cms.untracked.bool(False),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    makeDiagnostics = cms.untracked.bool(True),
    test_digis = cms.untracked.bool(True),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    minDeadEventCount = cms.untracked.int32(1000),
    TaskFolder = cms.untracked.string('DeadCellMonitor_Hcal/')
)


process.hcalDetDiagLEDMonitor = cms.EDAnalyzer("HcalDetDiagLEDMonitor",
    triggerLabel = cms.untracked.InputTag("l1GtUnpack"),
    mergeRuns = cms.untracked.bool(False),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(True),
    ReferenceData = cms.untracked.string(''),
    enableCleanup = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(1, 2, 3, 4, 5),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    debug = cms.untracked.int32(0),
    UseDB = cms.untracked.bool(False),
    LEDRmsThreshold = cms.untracked.double(0.1),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('DetDiagLEDMonitor_Hcal/'),
    online = cms.untracked.bool(False),
    calibDigiLabel = cms.untracked.InputTag("hcalDigis"),
    makeDiagnostics = cms.untracked.bool(False),
    OutputFilePath = cms.untracked.string(''),
    LEDMeanThreshold = cms.untracked.double(0.1)
)


process.hcalDetDiagLaserMonitor = cms.EDAnalyzer("HcalDetDiagLaserMonitor",
    LaserReferenceData = cms.untracked.string(''),
    XmlFilePath = cms.untracked.string(''),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(True),
    enableCleanup = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(1, 2, 3, 4, 5),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    debug = cms.untracked.int32(0),
    mergeRuns = cms.untracked.bool(False),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('DetDiagLaserMonitor_Hcal/'),
    online = cms.untracked.bool(False),
    RawDataLabel = cms.untracked.InputTag("source"),
    makeDiagnostics = cms.untracked.bool(False),
    LaserEnergyThreshold = cms.untracked.double(0.1),
    LaserTimingThreshold = cms.untracked.double(0.2),
    OutputFilePath = cms.untracked.string(''),
    Overwrite = cms.untracked.bool(True)
)


process.hcalDetDiagNoiseMonitor = cms.EDAnalyzer("HcalDetDiagNoiseMonitor",
    UseMonitoringTrigger = cms.untracked.bool(False),
    PhysDeclaredRequirement = cms.untracked.string('HLT_PhysicsDeclared'),
    subSystemFolder = cms.untracked.string('Hcal/'),
    gtLabel = cms.untracked.InputTag("l1GtUnpack"),
    UseDB = cms.untracked.bool(False),
    MonitoringTriggerRequirement = cms.untracked.string('HLT_MET100'),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5),
    MaxJetHadronicEnergyFraction = cms.untracked.double(0.98),
    HLTriggerResults = cms.untracked.InputTag("TriggerResults","","HLT"),
    ConstituentsToJetMatchingDeltaR = cms.untracked.double(0.5),
    MetSource = cms.untracked.InputTag("met"),
    XmlFilePath = cms.untracked.string(''),
    TrackMaxIp = cms.untracked.double(0.1),
    skipOutOfOrderLS = cms.untracked.bool(True),
    rbxCollName = cms.untracked.string('hcalnoise'),
    enableCleanup = cms.untracked.bool(False),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    SpikeThreshold = cms.untracked.double(0.5),
    online = cms.untracked.bool(False),
    makeDiagnostics = cms.untracked.bool(False),
    UseVertexCuts = cms.untracked.bool(True),
    MinJetChargeFraction = cms.untracked.double(0.05),
    TrackSource = cms.untracked.InputTag("generalTracks"),
    debug = cms.untracked.int32(0),
    mergeRuns = cms.untracked.bool(False),
    NLumiBlocks = cms.untracked.int32(4000),
    RawDataLabel = cms.untracked.InputTag("rawDataCollector"),
    OutputFilePath = cms.untracked.string(''),
    TrackMinThreshold = cms.untracked.double(1.0),
    JetMaxEta = cms.untracked.double(2.0),
    HPDthresholdLo = cms.untracked.double(10.0),
    JetSource = cms.untracked.InputTag("iterativeCone5CaloJets"),
    HPDthresholdHi = cms.untracked.double(49.0),
    VertexSource = cms.untracked.InputTag("offlinePrimaryVertices"),
    caloTowerCollName = cms.InputTag("towerMaker"),
    TaskFolder = cms.untracked.string('DetDiagNoiseMonitor_Hcal/'),
    JetMinEt = cms.untracked.double(10.0),
    Overwrite = cms.untracked.bool(True)
)


process.hcalDetDiagPedestalMonitor = cms.EDAnalyzer("HcalDetDiagPedestalMonitor",
    HEMeanTreshold = cms.untracked.double(0.2),
    subSystemFolder = cms.untracked.string('Hcal/'),
    HERmsTreshold = cms.untracked.double(0.3),
    HFMeanTreshold = cms.untracked.double(0.2),
    HFRmsTreshold = cms.untracked.double(0.3),
    HORmsTreshold = cms.untracked.double(0.3),
    XmlFilePath = cms.untracked.string(''),
    skipOutOfOrderLS = cms.untracked.bool(True),
    enableCleanup = cms.untracked.bool(False),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    online = cms.untracked.bool(False),
    makeDiagnostics = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(1),
    debug = cms.untracked.int32(0),
    mergeRuns = cms.untracked.bool(False),
    NLumiBlocks = cms.untracked.int32(4000),
    OutputFilePath = cms.untracked.string(''),
    HOMeanTreshold = cms.untracked.double(0.2),
    PedestalReferenceData = cms.untracked.string(''),
    HBMeanTreshold = cms.untracked.double(0.2),
    TaskFolder = cms.untracked.string('DetDiagPedestalMonitor_Hcal/'),
    rawDataLabel = cms.untracked.InputTag("source"),
    HBRmsTreshold = cms.untracked.double(0.3),
    Overwrite = cms.untracked.bool(True)
)


process.hcalDetDiagTimingMonitor = cms.EDAnalyzer("HcalDetDiagTimingMonitor",
    GCTTriggerBit3 = cms.untracked.int32(17),
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.untracked.InputTag("source"),
    CosmicsCorr = cms.untracked.bool(False),
    online = cms.untracked.bool(False),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(True),
    gtLabel = cms.untracked.InputTag("l1GtUnpack"),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    GCTTriggerBit2 = cms.untracked.int32(16),
    GCTTriggerBit1 = cms.untracked.int32(15),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('DetDiagTimingMonitor_Hcal/'),
    GCTTriggerBit5 = cms.untracked.int32(19),
    GCTTriggerBit4 = cms.untracked.int32(18),
    debug = cms.untracked.int32(0),
    makeDiagnostics = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(0),
    enableCleanup = cms.untracked.bool(False)
)


process.hcalDigiMonitor = cms.EDAnalyzer("HcalDigiMonitor",
    subSystemFolder = cms.untracked.string('Hcal/'),
    MinBiasHLTBits = cms.untracked.vstring('HLT_MinBiasPixel_SingleTrack', 
        'HLT_L1Tech_BSC_minBias', 
        'HLT_L1Tech_BSC_minBias_OR', 
        'HLT_L1Tech_BSC_minBias_threshold1_v2', 
        'HLT_ZeroBias_v1'),
    shapeThresh = cms.untracked.int32(20),
    minDigiSize = cms.untracked.int32(10),
    excludeHORing2 = cms.untracked.bool(True),
    mergeRuns = cms.untracked.bool(False),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    maxDigiSize = cms.untracked.int32(10),
    makeDiagnostics = cms.untracked.bool(True),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    checkForMissingDigis = cms.untracked.bool(False),
    ExpectedOrbitMessageTime = cms.untracked.int32(3559),
    checkCapID = cms.untracked.bool(True),
    online = cms.untracked.bool(False),
    checkADCsum = cms.untracked.bool(True),
    NLumiBlocks = cms.untracked.int32(4000),
    checkDVerr = cms.untracked.bool(True),
    hfRechitLabel = cms.untracked.InputTag("hfreco"),
    shapeThreshHB = cms.untracked.int32(20),
    shutOffOrbitTest = cms.untracked.bool(False),
    shapeThreshHE = cms.untracked.int32(20),
    shapeThreshHF = cms.untracked.int32(20),
    shapeThreshHO = cms.untracked.int32(20),
    checkDigiSize = cms.untracked.bool(True),
    TaskFolder = cms.untracked.string('DigiMonitor_Hcal/'),
    debug = cms.untracked.int32(0),
    HLTResultsLabel = cms.untracked.InputTag("TriggerResults","","HLT")
)


process.hcalHotCellMonitor = cms.EDAnalyzer("HcalHotCellMonitor",
    test_persistent = cms.untracked.bool(True),
    subSystemFolder = cms.untracked.string('Hcal/'),
    ETThreshold = cms.untracked.double(5.0),
    minErrorFlag = cms.untracked.double(0.1),
    excludeHORing2 = cms.untracked.bool(True),
    mergeRuns = cms.untracked.bool(False),
    energyThreshold_HF = cms.untracked.double(20.0),
    persistentThreshold_HF = cms.untracked.double(10.0),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    ETThreshold_HF = cms.untracked.double(5.0),
    minEvents = cms.untracked.int32(200),
    online = cms.untracked.bool(False),
    makeDiagnostics = cms.untracked.bool(True),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    persistentETThreshold = cms.untracked.double(3.0),
    energyThreshold = cms.untracked.double(10.0),
    NLumiBlocks = cms.untracked.int32(4000),
    hfRechitLabel = cms.untracked.InputTag("hfreco"),
    test_et = cms.untracked.bool(True),
    test_neighbor = cms.untracked.bool(False),
    test_energy = cms.untracked.bool(False),
    hoRechitLabel = cms.untracked.InputTag("horeco"),
    hbheRechitLabel = cms.untracked.InputTag("hbhereco"),
    TaskFolder = cms.untracked.string('HotCellMonitor_Hcal/'),
    persistentETThreshold_HF = cms.untracked.double(3.0),
    debug = cms.untracked.int32(0),
    persistentThreshold = cms.untracked.double(6.0)
)


process.hcalLSbyLSMonitor = cms.EDAnalyzer("HcalLSbyLSMonitor",
    mergeRuns = cms.untracked.bool(False),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('LSbyLS_Hcal/'),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    makeDiagnostics = cms.untracked.bool(False),
    TaskDirectories = cms.untracked.vstring('DeadCellMonitor_Hcal/', 
        'DigiMonitor_Hcal/', 
        'HotCellMonitor_Hcal/', 
        'BeamMonitor_Hcal/'),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    minEvents = cms.untracked.int32(1000)
)


process.hcalMonitor = cms.EDAnalyzer("HcalMonitorModule",
    mergeRuns = cms.untracked.bool(False),
    FEDRawDataCollection = cms.untracked.InputTag("rawDataCollector"),
    subSystemFolder = cms.untracked.string('Hcal/'),
    enableCleanup = cms.untracked.bool(False),
    UnpackerReport = cms.untracked.InputTag("hcalDigis"),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0)
)


process.hcalNZSMonitor = cms.EDAnalyzer("HcalNZSMonitor",
    NZSeventPeriod = cms.untracked.int32(4096),
    mergeRuns = cms.untracked.bool(False),
    nzsHLTnames = cms.untracked.vstring('HLT_HcalPhiSym', 
        'HLT_HcalNZS_8E29'),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('NZSMonitor_Hcal/'),
    online = cms.untracked.bool(False),
    RawDataLabel = cms.untracked.InputTag("source"),
    HLTResultsLabel = cms.untracked.InputTag("TriggerResults","","HLT"),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7)
)


process.hcalNoiseMonitor = cms.EDAnalyzer("HcalNoiseMonitor",
    MaxE2E10 = cms.untracked.double(0.96),
    TotalZeroMinEnergy = cms.untracked.double(10),
    MinE2E10 = cms.untracked.double(0.7),
    E2E10MinEnergy = cms.untracked.double(50),
    NZSeventPeriod = cms.untracked.int32(4096),
    MaxADCZeros = cms.untracked.int32(10),
    mergeRuns = cms.untracked.bool(False),
    hbheDigiLabel = cms.untracked.InputTag("hcalDigis"),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    noiseLabel = cms.untracked.InputTag("hcalnoise"),
    online = cms.untracked.bool(False),
    AllowedCalibTypes = cms.untracked.vint32(0),
    MaxHPDNoOtherHitCount = cms.untracked.int32(10),
    NLumiBlocks = cms.untracked.int32(4000),
    RawDataLabel = cms.untracked.InputTag("source"),
    nzsHLTnames = cms.untracked.vstring('HLT_HcalPhiSym', 
        'HLT_HcalNZS_8E29'),
    hbheRechitLabel = cms.untracked.InputTag("hbhereco"),
    MaxHPDHitCount = cms.untracked.int32(17),
    TaskFolder = cms.untracked.string('NoiseMonitor_Hcal/'),
    debug = cms.untracked.int32(0),
    HLTResultsLabel = cms.untracked.InputTag("TriggerResults","","HLT")
)


process.hcalNoiseRates = cms.EDAnalyzer("NoiseRates",
    minRBXEnergy = cms.untracked.double(20.0),
    outputFile = cms.untracked.string('NoiseRatesRelVal.root'),
    rbxCollName = cms.untracked.InputTag("hcalnoise"),
    minHitEnergy = cms.untracked.double(1.5)
)


process.hcalRawDataMonitor = cms.EDAnalyzer("HcalRawDataMonitor",
    excludeHORing2 = cms.untracked.bool(True),
    mergeRuns = cms.bool(False),
    FEDRawDataCollection = cms.untracked.InputTag("rawDataCollector"),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    digiLabel = cms.untracked.InputTag("hcalDigis"),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('RawDataMonitor_Hcal/'),
    online = cms.bool(False),
    debug = cms.untracked.int32(0),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7)
)


process.hcalRecHitMonitor = cms.EDAnalyzer("HcalRecHitMonitor",
    collisiontimediffThresh = cms.untracked.double(10.0),
    subSystemFolder = cms.untracked.string('Hcal/'),
    MinBiasHLTBits = cms.untracked.vstring('HLT_MinBiasBSC', 
        'HLT_L1Tech_BSC_minBias', 
        'HLT_MinBiasPixel_SingleTrack', 
        'HLT_L1Tech_BSC_minBias', 
        'HLT_L1Tech_BSC_minBias_OR', 
        'HLT_L1Tech_BSC_minBias_threshold1_v2', 
        'HLT_ZeroBias_v1'),
    ETThreshold = cms.untracked.double(0.0),
    mergeRuns = cms.untracked.bool(False),
    HO_energyThreshold = cms.untracked.double(5.0),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    online = cms.untracked.bool(False),
    makeDiagnostics = cms.untracked.bool(True),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    HF_ETThreshold = cms.untracked.double(0.0),
    L1GTLabel = cms.untracked.InputTag("l1GtUnpack"),
    energyThreshold = cms.untracked.double(2.0),
    NLumiBlocks = cms.untracked.int32(4000),
    hfRechitLabel = cms.untracked.InputTag("hfreco"),
    HF_energyThreshold = cms.untracked.double(3.0),
    HcalHLTBits = cms.untracked.vstring('HLT_L1Tech_HCAL_HF_coincidence_PM', 
        'HLT_L1Tech_HCAL_HF', 
        'HLT_ActivityHF_Coincidence3', 
        'HLT_L1Tech_HCAL_HF', 
        'HLT_L1Tech_BSC_minBias_treshold1_v2'),
    hoRechitLabel = cms.untracked.InputTag("horeco"),
    hbheRechitLabel = cms.untracked.InputTag("hbhereco"),
    TaskFolder = cms.untracked.string('RecHitMonitor_Hcal/'),
    debug = cms.untracked.int32(0),
    HLTResultsLabel = cms.untracked.InputTag("TriggerResults","","HLT")
)


process.hcalRecoAnalyzer = cms.EDAnalyzer("HcalRecHitsValidation",
    outputFile = cms.untracked.string('HcalRecHitValidationRelVal.root'),
    eventype = cms.untracked.string('multi'),
    mc = cms.untracked.string('no'),
    HORecHitCollectionLabel = cms.untracked.InputTag("horeco"),
    hcalselector = cms.untracked.string('all'),
    HFRecHitCollectionLabel = cms.untracked.InputTag("hfreco"),
    ecalselector = cms.untracked.string('yes'),
    HBHERecHitCollectionLabel = cms.untracked.InputTag("hbhereco")
)


process.hcalSimHitStudy = cms.EDAnalyzer("HcalSimHitStudy",
    ModuleLabel = cms.untracked.string('g4SimHits'),
    outputFile = cms.untracked.string(''),
    Verbose = cms.untracked.bool(False),
    HitCollection = cms.untracked.string('HcalHits')
)


process.hcalTrigPrimMonitor = cms.EDAnalyzer("HcalTrigPrimMonitor",
    mergeRuns = cms.untracked.bool(False),
    ZSAlarmThreshold = cms.vint32(0, 10, 10, 10, 10, 
        10, 10, 10, 10, 10, 
        10, 10, 10, 10, 10, 
        40, 40, 10, 20, 20, 
        20, 13, 13, 13, 13, 
        13, 13, 10, 10, 3, 
        3, 2, 2),
    subSystemFolder = cms.untracked.string('Hcal/'),
    skipOutOfOrderLS = cms.untracked.bool(False),
    enableCleanup = cms.untracked.bool(False),
    NLumiBlocks = cms.untracked.int32(4000),
    TaskFolder = cms.untracked.string('TrigPrimMonitor_Hcal/'),
    online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    emulLabel = cms.InputTag("valHcalTriggerPrimitiveDigis"),
    dataLabel = cms.InputTag("hcalDigis"),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7)
)


process.heavyFlavorValidation = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(1.0, 3.0, 5.0, 9.0, 15.0, 
        32.0, 64.0, 128.0, 256.0, 512.0, 
        1024.0, 2048.0),
    TriggerPathName = cms.untracked.string('HLT_Mu5'),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerProcessName = cms.untracked.string('HLT'),
    MuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD')
)


process.hfv1 = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(0.5, 1.0, 2.0, 3.0, 4.0, 
        5.0, 7.0, 9.0, 20.0, 50.0),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    TriggerProcessName = cms.untracked.string('HLT'),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    MuonEtaBins = cms.untracked.vdouble(24, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD'),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerPathName = cms.untracked.string('HLT_Mu3')
)


process.hfv2 = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(0.5, 1.0, 2.0, 3.0, 4.0, 
        5.0, 7.0, 9.0, 20.0, 50.0),
    TriggerPathName = cms.untracked.string('HLT_IsoMu3'),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerProcessName = cms.untracked.string('HLT'),
    MuonEtaBins = cms.untracked.vdouble(24, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD')
)


process.hfv3 = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(0.5, 1.0, 2.0, 3.0, 4.0, 
        5.0, 7.0, 9.0, 20.0, 50.0),
    TriggerPathName = cms.untracked.string('HLT_Mu5'),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerProcessName = cms.untracked.string('HLT'),
    MuonEtaBins = cms.untracked.vdouble(24, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD')
)


process.hfv4 = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(0.5, 1.0, 2.0, 3.0, 4.0, 
        5.0, 7.0, 9.0, 20.0, 50.0),
    TriggerPathName = cms.untracked.string('HLT_Mu9'),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerProcessName = cms.untracked.string('HLT'),
    MuonEtaBins = cms.untracked.vdouble(24, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD')
)


process.hfv5 = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(0.5, 1.0, 2.0, 3.0, 4.0, 
        5.0, 7.0, 9.0, 20.0, 50.0),
    TriggerPathName = cms.untracked.string('HLT_DoubleMu0'),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerProcessName = cms.untracked.string('HLT'),
    MuonEtaBins = cms.untracked.vdouble(24, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD')
)


process.hfv6 = cms.EDAnalyzer("HeavyFlavorValidation",
    MuonPtBins = cms.untracked.vdouble(0.5, 1.0, 2.0, 3.0, 4.0, 
        5.0, 7.0, 9.0, 20.0, 50.0),
    TriggerPathName = cms.untracked.string('HLT_DoubleMu3'),
    GlobL2DeltaRMatchingCut = cms.untracked.double(0.3),
    MuonPhiBins = cms.untracked.vdouble(12, -3.15, 3.15),
    DimuonDRBins = cms.untracked.vdouble(10, 0.0, 1.0),
    DimuonEtaBins = cms.untracked.vdouble(16, -2.4, 2.4),
    TriggerProcessName = cms.untracked.string('HLT'),
    MuonEtaBins = cms.untracked.vdouble(24, -2.4, 2.4),
    TriggerSummaryRAW = cms.untracked.string('hltTriggerSummaryRAW'),
    DeltaEtaBins = cms.untracked.vdouble(100, -0.5, 0.5),
    RecoMuons = cms.InputTag("muons"),
    GlobL3DeltaRMatchingCut = cms.untracked.double(0.1),
    DimuonPtBins = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 15.0, 25.0, 50.0, 100.0),
    DQMFolder = cms.untracked.string('HLT/HeavyFlavor'),
    TriggerResults = cms.untracked.string('TriggerResults'),
    MotherIDs = cms.untracked.vint32(23, 443, 553, 0),
    GlobL1DeltaRMatchingCut = cms.untracked.double(0.3),
    GenParticles = cms.InputTag("genParticles"),
    GenGlobDeltaRMatchingCut = cms.untracked.double(0.1),
    DeltaPhiBins = cms.untracked.vdouble(100, -0.5, 0.5),
    TriggerSummaryAOD = cms.untracked.string('hltTriggerSummaryAOD')
)


process.hltHITval = cms.EDAnalyzer("ValHcalIsoTrackHLT",
    SaveToRootFile = cms.bool(False),
    outputRootFileName = cms.string('hltHITval.root'),
    DebugL2 = cms.bool(True),
    recoTracksLabel = cms.InputTag("generalTracks"),
    outputTxtFileName = cms.string('rates_minBias.txt'),
    L2producerLabel = cms.InputTag("hltIsolPixelTrackProd"),
    hltTriggerEventLabel = cms.InputTag("hltTriggerSummaryAOD"),
    useReco = cms.bool(False),
    produceRatePdep = cms.bool(True),
    gtDigiLabel = cms.InputTag("hltGtDigis"),
    folderName = cms.string('HLT/HcalIsoTrack'),
    produceRates = cms.bool(False),
    CheckL1TurnOn = cms.bool(True),
    doL1Prescaling = cms.bool(False),
    sampleCrossSection = cms.double(75300000000.0),
    luminosity = cms.double(8e+29),
    genJetsLabel = cms.InputTag("iterativeCone5GenJets"),
    l1seedNames = cms.vstring('L1_SingleJet30', 
        'L1_SingleJet50', 
        'L1_SingleJet70', 
        'L1_SingleJet100', 
        'L1_SingleTauJet30', 
        'L1_SingleTauJet40', 
        'L1_SingleTauJet60', 
        'L1_SingleTauJet80'),
    hltL3FilterLabel = cms.InputTag("hltIsolPixelTrackFilter","","HLT"),
    hltL1extraJetLabel = cms.VInputTag("hltL1extraParticles:Tau", "hltL1extraParticles:Central", "hltL1extraParticles:Forward")
)


process.hltHITvalFastSim = cms.EDAnalyzer("ValHcalIsoTrackHLT",
    SaveToRootFile = cms.bool(False),
    outputRootFileName = cms.string('hltHITval.root'),
    DebugL2 = cms.bool(True),
    recoTracksLabel = cms.InputTag("generalTracks"),
    outputTxtFileName = cms.string('rates_minBias.txt'),
    L2producerLabel = cms.InputTag("hltIsolPixelTrackProd"),
    hltTriggerEventLabel = cms.InputTag("hltTriggerSummaryAOD"),
    useReco = cms.bool(False),
    produceRates = cms.bool(False),
    produceRatePdep = cms.bool(True),
    folderName = cms.string('HLT/HcalIsoTrack'),
    gtDigiLabel = cms.InputTag("gtDigis"),
    CheckL1TurnOn = cms.bool(True),
    sampleCrossSection = cms.double(75300000000.0),
    luminosity = cms.double(8e+29),
    genJetsLabel = cms.InputTag("iterativeCone5GenJets"),
    l1seedNames = cms.vstring('L1_SingleJet30', 
        'L1_SingleJet50', 
        'L1_SingleJet70', 
        'L1_SingleJet100', 
        'L1_SingleTauJet30', 
        'L1_SingleTauJet40', 
        'L1_SingleTauJet60', 
        'L1_SingleTauJet80'),
    hltL3FilterLabel = cms.InputTag("hltIsolPixelTrackFilter","","HLT"),
    doL1Prescaling = cms.bool(False),
    hltL1extraJetLabel = cms.VInputTag("hltL1extraParticles:Tau", "hltL1extraParticles:Central", "hltL1extraParticles:Forward")
)


process.hltMonEleBits = cms.EDAnalyzer("HLTMonBitSummary",
    HLTPaths = cms.vstring('HLT_L1SingleEG', 
        'HLT_Ele', 
        'HLT_L1DoubleEG', 
        'HLT_DoubleEle'),
    histLabel = cms.untracked.string('Electron'),
    filterTypes = cms.untracked.vstring('HLTLevel1GTSeed', 
        'HLTPrescaler', 
        'HLTEgammaL1MatchFilterRegional', 
        'HLTEgammaEtFilter', 
        'HLTEgammaGenericFilter', 
        'HLTElectronPixelMatchFilter', 
        'HLTElectronOneOEMinusOneOPFilterRegional'),
    denominator = cms.untracked.string('HLT_L1SingleEG5'),
    denominatorWild = cms.untracked.string('HLT_L1SingleEG'),
    directory = cms.untracked.string('HLT/HLTMonElectron/Summary'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.hltMonMuBits = cms.EDAnalyzer("HLTMonBitSummary",
    HLTPaths = cms.vstring('HLT_L1Mu[^_]*$', 
        'HLT_L2Mu[^_]*$', 
        'HLT_Mu[^_]*$', 
        'HLT_IsoMu[^_]*$', 
        'HLT_DoubleMu[^_]*$'),
    histLabel = cms.untracked.string('Muon'),
    filterTypes = cms.untracked.vstring('HLTLevel1GTSeed', 
        'HLTPrescaler', 
        'HLTMuonL1Filter', 
        'HLTMuonL2PreFilter', 
        'HLTMuonDimuonL2Filter', 
        'HLTMuonL3PreFilter', 
        'HLTMuonDimuonL3Filter', 
        'HLTMuonIsoFilter'),
    denominator = cms.untracked.string('HLT_L1MuOpen'),
    denominatorWild = cms.untracked.string('HLT_L1Mu[^_]*$'),
    directory = cms.untracked.string('HLT/HLTMonMuon/Summary/'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.hltMonMuDQM = cms.EDAnalyzer("HLTMuonDQMSource",
    outputFile = cms.untracked.string('./L1TDQM.root'),
    verbose = cms.untracked.bool(False),
    MonitorDaemon = cms.untracked.bool(True),
    reqNum = cms.uint32(1),
    TrigResultInput = cms.InputTag("TriggerResults","","HLT"),
    DaqMonitorBEInterface = cms.untracked.bool(True),
    filters = cms.VPSet(cms.PSet(
        directoryName = cms.string('L1PassThrough'),
        triggerBits = cms.vstring('HLT_L1SingleMu10_v1', 
            'HLT_L1SingleMu20_v1', 
            'HLT_L1SingleMuOpen_DT_v1', 
            'HLT_L1SingleMuOpen_v1')
    ), 
        cms.PSet(
            directoryName = cms.string('L2PassThrough'),
            triggerBits = cms.vstring('HLT_L2Mu10_v1', 
                'HLT_L2Mu20_v1')
        ), 
        cms.PSet(
            directoryName = cms.string('L3Triggers'),
            triggerBits = cms.vstring('HLT_Mu12_v1', 
                'HLT_Mu15_v2', 
                'HLT_Mu20_v1', 
                'HLT_Mu24_v1', 
                'HLT_Mu30_v1', 
                'HLT_Mu3_v3')
        ), 
        cms.PSet(
            directoryName = cms.string('DoubleMu'),
            triggerBits = cms.vstring('HLT_L1DoubleMu0_v1', 
                'HLT_L2DoubleMu0_v2', 
                'HLT_DoubleMu3_v3', 
                'HLT_DoubleMu6_v1', 
                'HLT_DoubleMu7_v1')
        ), 
        cms.PSet(
            directoryName = cms.string('Cosmics'),
            triggerBits = cms.vstring('HLT_L2DoubleMu35_NoVertex_v1')
        )),
    disableROOToutput = cms.untracked.bool(True)
)


process.hltMonjmDQM = cms.EDAnalyzer("HLTJetMETDQMSource",
    paths = cms.VPSet(cms.PSet(
        denompathname = cms.string('HLT_L1Jet6U'),
        prescaleused = cms.int32(10),
        pathname = cms.string('HLT_Jet15U')
    ), 
        cms.PSet(
            denompathname = cms.string('HLT_Jet15U'),
            prescaleused = cms.int32(10),
            pathname = cms.string('HLT_Jet30U')
        ), 
        cms.PSet(
            denompathname = cms.string('HLT_Jet30U'),
            prescaleused = cms.int32(10),
            pathname = cms.string('HLT_Jet50U')
        ), 
        cms.PSet(
            denompathname = cms.string('HLT_DiJetAve15U_8E29'),
            prescaleused = cms.int32(10),
            pathname = cms.string('HLT_DiJetAve30U_8E29')
        ), 
        cms.PSet(
            denompathname = cms.string('HLT_L1MET20'),
            prescaleused = cms.int32(10),
            pathname = cms.string('HLT_MET45')
        ), 
        cms.PSet(
            denompathname = cms.string('HLT_MET45'),
            prescaleused = cms.int32(10),
            pathname = cms.string('HLT_MET100')
        ), 
        cms.PSet(
            denompathname = cms.string('HLT_L1MuOpen'),
            prescaleused = cms.int32(10),
            pathname = cms.string('HLT_L1Jet6U')
        )),
    dirname = cms.untracked.string('HLT/JetMET'),
    triggerSummaryLabel = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    DQMStore = cms.untracked.bool(True),
    processname = cms.string('HLT'),
    triggerResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    ptMin = cms.untracked.double(0.0),
    plotAll = cms.untracked.bool(True),
    ptMax = cms.untracked.double(100.0),
    pathnameMuon = cms.untracked.string('HLT_L1MuOpen')
)


process.hltMuonValidator = cms.EDAnalyzer("HLTMuonValidator",
    l3CandLabel = cms.string('hltL3MuonCandidates'),
    cutsDr = cms.vdouble(0.4, 0.4, 0.015),
    l1CandLabel = cms.string('hltL1extraParticles'),
    genParticleLabel = cms.string('genParticles'),
    parametersEta = cms.vdouble(48, -2.4, 2.4),
    hltPathsToCheck = cms.vstring('HLT_(L[12])?(Double)?(Iso)?Mu[0-9]*(Open)?(_NoVertex)?(_v[0-9]*)?$', 
        'NoFilters'),
    recMuonLabel = cms.string('muons'),
    hltProcessName = cms.string('HLT'),
    maxDeltaPhi = cms.double(0.4),
    useSimpleGeometry = cms.bool(True),
    l2CandLabel = cms.string('hltL2MuonCandidates'),
    parametersTurnOn = cms.vdouble(0, 1, 2, 3, 4, 
        5, 6, 7, 8, 9, 
        10, 11, 12, 13, 14, 
        15, 16, 17, 18, 19, 
        20, 22, 24, 26, 28, 
        30, 32, 34, 36, 38, 
        40, 45, 50, 55, 60, 
        65, 70, 80, 100, 200, 
        500),
    maxDeltaR = cms.double(0.4),
    useState = cms.string('atVertex'),
    useTrack = cms.string('none'),
    parametersPhi = cms.vdouble(50, -3.142, 3.142),
    genMuonCut = cms.string('abs(pdgId) == 13 && status == 1'),
    recMuonCut = cms.string('isGlobalMuon')
)


process.hltResults = cms.EDAnalyzer("FourVectorHLTOffline",
    Nbins = cms.untracked.uint32(50),
    photonEtMin = cms.untracked.double(5.0),
    processname = cms.string('HLT'),
    photonDRMatch = cms.untracked.double(0.5),
    plotAll = cms.untracked.bool(False),
    triggerResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    LuminositySegmentSize = cms.untracked.double(23),
    referenceBX = cms.untracked.uint32(1),
    paths = cms.VPSet(cms.PSet(
        pathname = cms.string('EG'),
        denompathname = cms.string('HLT_Mu')
    ), 
        cms.PSet(
            pathname = cms.string('Jet'),
            denompathname = cms.string('HLT_Mu')
        ), 
        cms.PSet(
            pathname = cms.string('Ele'),
            denompathname = cms.string('HLT_Mu')
        ), 
        cms.PSet(
            pathname = cms.string('Pho'),
            denompathname = cms.string('HLT_Mu')
        ), 
        cms.PSet(
            pathname = cms.string('Tau'),
            denompathname = cms.string('HLT_Mu')
        ), 
        cms.PSet(
            pathname = cms.string('MET'),
            denompathname = cms.string('HLT_Mu')
        ), 
        cms.PSet(
            pathname = cms.string('Mu'),
            denompathname = cms.string('HLT_Jet')
        )),
    dirname = cms.untracked.string('HLT/FourVector/paths'),
    NLuminositySegments = cms.untracked.uint32(2000),
    jetDRMatch = cms.untracked.double(0.3),
    NbinsOneOverEt = cms.untracked.uint32(1000),
    electronEtMin = cms.untracked.double(5.0),
    Nbins2D = cms.untracked.uint32(40),
    ptMax = cms.untracked.double(100.0),
    muonDRMatch = cms.untracked.double(0.3),
    ptMin = cms.untracked.double(0.0),
    electronDRMatch = cms.untracked.double(0.5),
    muonEtaMax = cms.untracked.double(2.1),
    triggerSummaryLabel = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    muonRecoCollectionName = cms.untracked.string('muons'),
    NbinsDR = cms.untracked.uint32(130),
    photonL1DRMatch = cms.untracked.double(0.5),
    jetEtMin = cms.untracked.double(5.0),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    jetEtaMax = cms.untracked.double(3.0),
    electronL1DRMatch = cms.untracked.double(0.5),
    dRMax = cms.untracked.double(13.0),
    SpecialPaths = cms.vstring('HLT_MET45', 
        'HLT_L1Tech_HCAL_HF_coincidence_PM', 
        'HLT_L1_BscMinBiasOR_BptxPlusORMinus', 
        'HLT_MinBiasBSC', 
        'HLT_MinBiasBSC_OR', 
        'HLT_MinBiasEcal', 
        'HLT_MinBiasHcal', 
        'HLT_MinBiasPixel_SingleTrack', 
        'HLT_ZeroiasPixel_SingleTrack', 
        'HLT_L1_BPTX', 
        'HLT_ZeroBias'),
    jetL1DRMatch = cms.untracked.double(0.5)
)


process.hltTauElectronMonitor = cms.EDAnalyzer("HLTTauDQMSource",
    ConfigType = cms.vstring('Path', 
        'Path', 
        'Path', 
        'LitePath', 
        'L1', 
        'Summary'),
    TriggerEvent = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    matchObjectID = cms.untracked.vint32(11),
    MonitorSetup = cms.VPSet(cms.PSet(
        triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
        LeptonType = cms.untracked.vint32(0, 0, 0, 0, 0),
        NTriggeredTaus = cms.untracked.vuint32(2, 2, 2, 2, 2, 
            2),
        Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sDoubleIsoTau20Trk5","","HLT"), cms.InputTag("hltFilterL2EtCutDoublePFIsoTau20Trk5","","HLT"), cms.InputTag("hltDoublePFTauTightIso20Track","","HLT"), cms.InputTag("hltDoublePFTauTightIso20Track5","","HLT"), cms.InputTag("hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched","","HLT")),
        DQMFolder = cms.untracked.string('HLT/TauOnline/Electrons/DoubleTau'),
        TauType = cms.untracked.vint32(-86, 84, 84, 84, 84),
        NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0, 0, 
            0),
        MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2)
    ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0, 0, 0, 0, 
                0),
            NTriggeredTaus = cms.untracked.vuint32(1, 1, 1, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sSingleIsoTau35Trk20MET45","","HLT"), cms.InputTag("hltFilterL2EtCutSingleIsoPFTau35Trk20MET45","","HLT"), cms.InputTag("hltPFTauTightIso35","","HLT"), cms.InputTag("hltPFTauTightIso35Track","","HLT"), cms.InputTag("hltFilterSingleIsoPFTau35Trk20LeadTrackPt20","","HLT"), 
                cms.InputTag("hltFilterSingleIsoPFTau35Trk20MET45LeadTrack20MET45IsolationL1HLTMatched","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOnline/Electrons/SingleTau'),
            TauType = cms.untracked.vint32(-86, 84, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0, 0, 
                0, 0),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0, 0),
            NTriggeredTaus = cms.untracked.vuint32(1, 1, 1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltPFTau15","","HLT"), cms.InputTag("hltPFTau15Track","","HLT"), cms.InputTag("hltPFTau15TrackLooseIso","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOnline/Electrons/LoosePFTau'),
            TauType = cms.untracked.vint32(84, 84, 84),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0),
            MatchDeltaR = cms.untracked.vdouble(0.2, 0.2, 0.2)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0),
            NTriggeredTaus = cms.untracked.vuint32(2, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched","","HLT"), cms.InputTag("hltFilterSingleIsoPFTau35Trk20MET45LeadTrack20MET45IsolationL1HLTMatched","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOnline/Electrons/Summary'),
            PathName = cms.untracked.vstring('DoubleIsoTau', 
                'SingleTau'),
            TauType = cms.untracked.vint32(15, 15),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0)
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            DQMFolder = cms.string('HLT/TauOnline/Electrons/L1'),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central"),
            L1Electrons = cms.InputTag("hltL1extraParticles","Isolated")
        ), 
        cms.PSet(
            L1Dirs = cms.vstring('HLT/TauOnline/Electrons/L1'),
            trackDirs = cms.vstring(''),
            caloDirs = cms.vstring(''),
            pathSummaryDirs = cms.vstring('HLT/TauOnline/Electrons/Summary'),
            pathDirs = cms.vstring('HLT/TauOnline/Electrons/DoubleTau', 
                'HLT/TauOnline/Electrons/SingleTau', 
                'HLT/TauOnline/Electrons/LoosePFTau')
        )),
    doMatching = cms.bool(True),
    matchObjectMinPt = cms.untracked.vdouble(10),
    matchFilter = cms.untracked.VInputTag(cms.InputTag("hltEle17CaloIdVTCaloIsoVTTrkIdTTrkIsoVTSC8TrackIsolFilter","","HLT"))
)


process.hltTauMonitor = cms.EDAnalyzer("HLTTauDQMSource",
    ConfigType = cms.vstring('Path', 
        'Path', 
        'Path', 
        'LitePath', 
        'Path', 
        'L1'),
    TriggerEvent = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    matchObjectID = cms.untracked.vint32(0),
    MonitorSetup = cms.VPSet(cms.PSet(
        triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
        LeptonType = cms.untracked.vint32(0, 0, 0, 0, 0),
        NTriggeredTaus = cms.untracked.vuint32(2, 2, 2, 2, 2, 
            2),
        Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sDoubleIsoTau20Trk5","","HLT"), cms.InputTag("hltFilterL2EtCutDoublePFIsoTau20Trk5","","HLT"), cms.InputTag("hltDoublePFTauTightIso20Track","","HLT"), cms.InputTag("hltDoublePFTauTightIso20Track5","","HLT"), cms.InputTag("hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched","","HLT")),
        DQMFolder = cms.untracked.string('HLT/TauOnline/Inclusive/DoubleTau'),
        TauType = cms.untracked.vint32(-86, 84, 84, 84, 84),
        NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0, 0, 
            0),
        MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2)
    ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-83, 82, 0, 0, 0, 
                82),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleEG12","","HLT"), cms.InputTag("hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTTrackIsolFilter","","HLT"), cms.InputTag("hltPFTau15","","HLT"), cms.InputTag("hltPFTau15Track","","HLT"), cms.InputTag("hltPFTau15TrackLooseIso","","HLT"), 
                cms.InputTag("hltOverlapFilterIsoEle15IsoPFTau15","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOnline/Inclusive/EleTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                0, 1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-81, 83, 0, 0, 83),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleMu10","","HLT"), cms.InputTag("hltL3Muon15","","HLT"), cms.InputTag("hltPFTau20Track","","HLT"), cms.InputTag("hltPFTau20TrackLooseIso","","HLT"), cms.InputTag("hltOverlapFilterMu15IsoPFTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOnline/Inclusive/MuTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
            LeptonType = cms.untracked.vint32(0, 11, 13, 0),
            NTriggeredTaus = cms.untracked.vuint32(2, 1, 1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched","","HLT"), cms.InputTag("hltOverlapFilterIsoEle15IsoPFTau15","","HLT"), cms.InputTag("hltOverlapFilterMu15IsoPFTau20","","HLT"), cms.InputTag("hltFilterSingleIsoPFTau35Trk20LeadTrackPt20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOnline/Inclusive/Summary'),
            PathName = cms.untracked.vstring('DoubleIsoTau', 
                'EleTau', 
                'MuTau', 
                'SingleIsoTau'),
            TauType = cms.untracked.vint32(15, 15, 15, 15),
            NTriggeredLeptons = cms.untracked.vuint32(0, 1, 1, 0)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0, 0, 0, 0, 
                0),
            NTriggeredTaus = cms.untracked.vuint32(1, 1, 1, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sSingleIsoTau35Trk20MET45","","HLT"), cms.InputTag("hltFilterL2EtCutSingleIsoPFTau35Trk20MET45","","HLT"), cms.InputTag("hltPFTauTightIso35","","HLT"), cms.InputTag("hltPFTauTightIso35Track","","HLT"), cms.InputTag("hltFilterSingleIsoPFTau35Trk20LeadTrackPt20","","HLT"), 
                cms.InputTag("hltFilterSingleIsoPFTau35Trk20MET45LeadTrack20MET45IsolationL1HLTMatched","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOnline/Inclusive/SingleTau'),
            TauType = cms.untracked.vint32(-86, 84, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0, 0, 
                0, 0),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            DQMFolder = cms.string('HLT/TauOnline/Inclusive/L1'),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central"),
            L1Electrons = cms.InputTag("hltL1extraParticles","Isolated")
        )),
    doMatching = cms.bool(False),
    matchObjectMinPt = cms.untracked.vdouble(15),
    matchFilter = cms.untracked.VInputTag(cms.InputTag("","","HLT"))
)


process.hltTauOfflineCertification = cms.EDAnalyzer("HLTTauCertifier",
    targetME = cms.string('HLT_Tau'),
    setBadRunOnErrors = cms.bool(True),
    setBadRunOnWarnings = cms.bool(False),
    inputMEs = cms.vstring('HLT/TauOffline/Inclusive/DoubleLooseIsoTauTau/TriggerBits', 
        'HLT/TauOffline/Inclusive/DoubleLooseIsoTauTau/TriggerBits'),
    targetDir = cms.string('HLT/EventInfo/reportSummaryContents')
)


process.hltTauOfflineMonitor_HPD = cms.EDAnalyzer("HLTTauDQMOfflineSource",
    doMatching = cms.bool(True),
    ConfigType = cms.vstring('Path', 
        'LitePath', 
        'Path', 
        'L1', 
        'Calo'),
    refObjects = cms.untracked.VInputTag(cms.InputTag("TauRefProducer","Towers")),
    MonitorSetup = cms.VPSet(cms.PSet(
        triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
        LeptonType = cms.untracked.vint32(0, 0, 0),
        NTriggeredTaus = cms.untracked.vuint32(2, 2, 2, 2),
        Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sDoubleLooseIsoTau15","","HLT"), cms.InputTag("hltFilterL2EtCutDoubleLooseIsoTau15","","HLT"), cms.InputTag("hltFilterL2EcalIsolationDoubleLooseIsoTau15","","HLT")),
        DQMFolder = cms.untracked.string('HLT/TauOffline/HPD/DoubleLooseIsoTau'),
        TauType = cms.untracked.vint32(-86, 84, 84),
        NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0),
        MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2)
    ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0),
            NTriggeredTaus = cms.untracked.vuint32(2, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltFilterL2EcalIsolationDoubleLooseIsoTau15","","HLT"), cms.InputTag("hltFilterL2EcalIsolationSingleLooseIsoTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/HPD/Summary'),
            PathName = cms.untracked.vstring('DoubleLooseIsoTau', 
                'SingleLooseIsoTau'),
            TauType = cms.untracked.vint32(0, 0),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0, 0, 0),
            NTriggeredTaus = cms.untracked.vuint32(1, 1, 1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sSingleLooseIsoTau20","","HLT"), cms.InputTag("hltFilterL2EtCutSingleLooseIsoTau20","","HLT"), cms.InputTag("hltFilterL2EcalIsolationSingleLooseIsoTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/HPD/SingleTau'),
            TauType = cms.untracked.vint32(-86, 84, 84, 84),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2)
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            DQMFolder = cms.string('HLT/TauOffline/HPD/L1'),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central"),
            L1Electrons = cms.InputTag("hltL1extraParticles","Isolated")
        ), 
        cms.PSet(
            L2InfoAssociationInput = cms.InputTag("hltL2TauNarrowConeIsolationProducer"),
            DQMFolder = cms.string('HLT/TauOffline/HPD/L2'),
            L2IsolatedJets = cms.InputTag("hltL2TauRelaxingIsolationSelector","Isolated"),
            L2RegionalJets = cms.VInputTag(cms.InputTag("hltIconeTau1Regional"), cms.InputTag("hltIconeTau2Regional"), cms.InputTag("hltIconeTau3Regional"), cms.InputTag("hltIconeTau4Regional"), cms.InputTag("hltIconeCentral1Regional"), 
                cms.InputTag("hltIconeCentral2Regional"), cms.InputTag("hltIconeCentral3Regional"), cms.InputTag("hltIconeCentral4Regional"))
        ))
)


process.hltTauOfflineMonitor_Inclusive = cms.EDAnalyzer("HLTTauDQMOfflineSource",
    doMatching = cms.bool(False),
    ConfigType = cms.vstring('Path', 
        'LitePath', 
        'Path', 
        'L1', 
        'Calo'),
    refObjects = cms.untracked.VInputTag(cms.InputTag("TauRefProducer","PFTaus")),
    MonitorSetup = cms.VPSet(cms.PSet(
        triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
        LeptonType = cms.untracked.vint32(0, 0, 0),
        NTriggeredTaus = cms.untracked.vuint32(2, 2, 2, 2),
        Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sDoubleLooseIsoTau15","","HLT"), cms.InputTag("hltFilterL2EtCutDoubleLooseIsoTau15","","HLT"), cms.InputTag("hltFilterL2EcalIsolationDoubleLooseIsoTau15","","HLT")),
        DQMFolder = cms.untracked.string('HLT/TauOffline/Inclusive/DoubleLooseIsoTau'),
        TauType = cms.untracked.vint32(-86, 84, 84),
        NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0),
        MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2)
    ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0),
            NTriggeredTaus = cms.untracked.vuint32(2, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltFilterL2EcalIsolationDoubleLooseIsoTau15","","HLT"), cms.InputTag("hltFilterL2EcalIsolationSingleLooseIsoTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/Inclusive/Summary'),
            PathName = cms.untracked.vstring('DoubleLooseIsoTau', 
                'SingleLooseIsoTau'),
            TauType = cms.untracked.vint32(0, 0),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0, 0, 0),
            NTriggeredTaus = cms.untracked.vuint32(1, 1, 1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sSingleLooseIsoTau20","","HLT"), cms.InputTag("hltFilterL2EtCutSingleLooseIsoTau20","","HLT"), cms.InputTag("hltFilterL2EcalIsolationSingleLooseIsoTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/Inclusive/SingleLooseIsoTau'),
            TauType = cms.untracked.vint32(-86, 84, 84, 84),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2)
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            DQMFolder = cms.string('HLT/TauOffline/Inclusive/L1'),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central"),
            L1Electrons = cms.InputTag("hltL1extraParticles","Isolated")
        ), 
        cms.PSet(
            L2InfoAssociationInput = cms.InputTag("hltL2TauNarrowConeIsolationProducer"),
            DQMFolder = cms.string('HLT/TauOffline/Inclusive/L2'),
            L2IsolatedJets = cms.InputTag("hltL2TauRelaxingIsolationSelector","Isolated"),
            L2RegionalJets = cms.VInputTag(cms.InputTag("hltIconeTau1Regional"), cms.InputTag("hltIconeTau2Regional"), cms.InputTag("hltIconeTau3Regional"), cms.InputTag("hltIconeTau4Regional"), cms.InputTag("hltIconeCentral1Regional"), 
                cms.InputTag("hltIconeCentral2Regional"), cms.InputTag("hltIconeCentral3Regional"), cms.InputTag("hltIconeCentral4Regional"))
        ))
)


process.hltTauOfflineMonitor_PFTaus = cms.EDAnalyzer("HLTTauDQMOfflineSource",
    doMatching = cms.bool(True),
    ConfigType = cms.vstring('Path', 
        'LitePath', 
        'Path', 
        'L1', 
        'Calo'),
    refObjects = cms.untracked.VInputTag(cms.InputTag("TauRefProducer","PFTaus")),
    MonitorSetup = cms.VPSet(cms.PSet(
        triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
        LeptonType = cms.untracked.vint32(0, 0, 0),
        NTriggeredTaus = cms.untracked.vuint32(2, 2, 2, 2),
        Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sDoubleLooseIsoTau15","","HLT"), cms.InputTag("hltFilterL2EtCutDoubleLooseIsoTau15","","HLT"), cms.InputTag("hltFilterL2EcalIsolationDoubleLooseIsoTau15","","HLT")),
        DQMFolder = cms.untracked.string('HLT/TauOffline/PFTaus/DoubleLooseIsoTau'),
        TauType = cms.untracked.vint32(-86, 84, 84),
        NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0),
        MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2)
    ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0),
            NTriggeredTaus = cms.untracked.vuint32(2, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltFilterL2EcalIsolationDoubleLooseIsoTau15","","HLT"), cms.InputTag("hltFilterL2EcalIsolationSingleLooseIsoTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/PFTaus/Summary'),
            PathName = cms.untracked.vstring('DoubleLooseIsoTau', 
                'SingleLooseIsoTau'),
            TauType = cms.untracked.vint32(0, 0),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0, 0, 0),
            NTriggeredTaus = cms.untracked.vuint32(1, 1, 1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sSingleLooseIsoTau20","","HLT"), cms.InputTag("hltFilterL2EtCutSingleLooseIsoTau20","","HLT"), cms.InputTag("hltFilterL2EcalIsolationSingleLooseIsoTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/PFTaus/SingleLooseIsoTau'),
            TauType = cms.untracked.vint32(-86, 84, 84, 84),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2)
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            DQMFolder = cms.string('HLT/TauOffline/PFTaus/L1'),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central"),
            L1Electrons = cms.InputTag("hltL1extraParticles","Isolated")
        ), 
        cms.PSet(
            L2InfoAssociationInput = cms.InputTag("hltL2TauNarrowConeIsolationProducer"),
            DQMFolder = cms.string('HLT/TauOffline/PFTaus/L2'),
            L2IsolatedJets = cms.InputTag("hltL2TauRelaxingIsolationSelector","Isolated"),
            L2RegionalJets = cms.VInputTag(cms.InputTag("hltIconeTau1Regional"), cms.InputTag("hltIconeTau2Regional"), cms.InputTag("hltIconeTau3Regional"), cms.InputTag("hltIconeTau4Regional"), cms.InputTag("hltIconeCentral1Regional"), 
                cms.InputTag("hltIconeCentral2Regional"), cms.InputTag("hltIconeCentral3Regional"), cms.InputTag("hltIconeCentral4Regional"))
        ))
)


process.hltTauOfflineMonitor_Photons = cms.EDAnalyzer("HLTTauDQMOfflineSource",
    doMatching = cms.bool(True),
    ConfigType = cms.vstring('Path', 
        'LitePath', 
        'Path', 
        'L1', 
        'Calo'),
    refObjects = cms.untracked.VInputTag(cms.InputTag("TauRefProducer","Photons")),
    MonitorSetup = cms.VPSet(cms.PSet(
        triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
        LeptonType = cms.untracked.vint32(0, 0, 0),
        NTriggeredTaus = cms.untracked.vuint32(2, 2, 2, 2),
        Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sDoubleLooseIsoTau15","","HLT"), cms.InputTag("hltFilterL2EtCutDoubleLooseIsoTau15","","HLT"), cms.InputTag("hltFilterL2EcalIsolationDoubleLooseIsoTau15","","HLT")),
        DQMFolder = cms.untracked.string('HLT/TauOffline/Photons/DoubleLooseIsoTau'),
        TauType = cms.untracked.vint32(-86, 84, 84),
        NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0),
        MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2)
    ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0),
            NTriggeredTaus = cms.untracked.vuint32(2, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltFilterL2EcalIsolationDoubleLooseIsoTau15","","HLT"), cms.InputTag("hltFilterL2EcalIsolationSingleLooseIsoTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/Photons/Summary'),
            PathName = cms.untracked.vstring('DoubleLooseIsoTau', 
                'SingleLooseIsoTau'),
            TauType = cms.untracked.vint32(0, 0),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0, 0, 0),
            NTriggeredTaus = cms.untracked.vuint32(1, 1, 1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sSingleLooseIsoTau20","","HLT"), cms.InputTag("hltFilterL2EtCutSingleLooseIsoTau20","","HLT"), cms.InputTag("hltFilterL2EcalIsolationSingleLooseIsoTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauOffline/Photons/SingleTau'),
            TauType = cms.untracked.vint32(-86, 84, 84, 84),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2)
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            DQMFolder = cms.string('HLT/TauOffline/Photons/L1'),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central"),
            L1Electrons = cms.InputTag("hltL1extraParticles","Isolated")
        ), 
        cms.PSet(
            L2InfoAssociationInput = cms.InputTag("hltL2TauNarrowConeIsolationProducer"),
            DQMFolder = cms.string('HLT/TauOffline/Photons/L2'),
            L2IsolatedJets = cms.InputTag("hltL2TauRelaxingIsolationSelector","Isolated"),
            L2RegionalJets = cms.VInputTag(cms.InputTag("hltIconeTau1Regional"), cms.InputTag("hltIconeTau2Regional"), cms.InputTag("hltIconeTau3Regional"), cms.InputTag("hltIconeTau4Regional"), cms.InputTag("hltIconeCentral1Regional"), 
                cms.InputTag("hltIconeCentral2Regional"), cms.InputTag("hltIconeCentral3Regional"), cms.InputTag("hltIconeCentral4Regional"))
        ))
)


process.hltTauOfflineQualityTests = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtestOnEndRun = cms.untracked.bool(True),
    reportThreshold = cms.untracked.string('black'),
    qtestOnEndLumi = cms.untracked.bool(False),
    qtList = cms.untracked.FileInPath('DQMOffline/Trigger/data/HLT_Tau_QualityTests.xml'),
    qtestOnEndJob = cms.untracked.bool(False),
    testInEventloop = cms.untracked.bool(False),
    verboseQT = cms.untracked.bool(False),
    getQualityTestsFromFile = cms.untracked.bool(True)
)


process.hltTauValIdealMonitorMC5E32 = cms.EDAnalyzer("HLTTauDQMOfflineSource",
    doMatching = cms.bool(True),
    ConfigType = cms.vstring('Path', 
        'Path', 
        'Path', 
        'LitePath', 
        'Path', 
        'L1'),
    refObjects = cms.untracked.VInputTag(cms.InputTag("TauMCProducer","HadronicTauOneAndThreeProng"), cms.InputTag("TauMCProducer","LeptonicTauElectrons"), cms.InputTag("TauMCProducer","LeptonicTauMuons")),
    MonitorSetup = cms.VPSet(cms.PSet(
        triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
        LeptonType = cms.untracked.vint32(0, 0, 0, 0, 0),
        NTriggeredTaus = cms.untracked.vuint32(2, 2, 2, 2, 2, 
            2),
        Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sDoubleIsoTau20Trk5","","HLT"), cms.InputTag("hltFilterL2EtCutDoublePFIsoTau20Trk5","","HLT"), cms.InputTag("hltDoublePFTauTightIso20Track","","HLT"), cms.InputTag("hltDoublePFTauTightIso20Track5","","HLT"), cms.InputTag("hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched","","HLT")),
        DQMFolder = cms.untracked.string('HLT/TauRelVal/MC_5E32/DoubleTau'),
        TauType = cms.untracked.vint32(-86, 84, 84, 84, 84),
        NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0, 0, 
            0),
        MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2)
    ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-83, 82, 0, 0, 0, 
                82),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleEG12","","HLT"), cms.InputTag("hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTTrackIsolFilter","","HLT"), cms.InputTag("hltPFTau15","","HLT"), cms.InputTag("hltPFTau15Track","","HLT"), cms.InputTag("hltPFTau15TrackLooseIso","","HLT"), 
                cms.InputTag("hltOverlapFilterIsoEle15IsoPFTau15","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauRelVal/MC_5E32/EleTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                0, 1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-81, 83, 0, 0, 83),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleMu10","","HLT"), cms.InputTag("hltL3Muon15","","HLT"), cms.InputTag("hltPFTau20Track","","HLT"), cms.InputTag("hltPFTau20TrackLooseIso","","HLT"), cms.InputTag("hltOverlapFilterMu15IsoPFTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauRelVal/MC_5E32/MuTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
            LeptonType = cms.untracked.vint32(0, 11, 13, 0),
            NTriggeredTaus = cms.untracked.vuint32(2, 1, 1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched","","HLT"), cms.InputTag("hltOverlapFilterIsoEle15IsoPFTau15","","HLT"), cms.InputTag("hltOverlapFilterMu15IsoPFTau20","","HLT"), cms.InputTag("hltFilterSingleIsoPFTau35Trk20LeadTrackPt20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauRelVal/MC_5E32/Summary'),
            PathName = cms.untracked.vstring('DoubleIsoTau', 
                'EleTau', 
                'MuTau', 
                'SingleIsoTau'),
            TauType = cms.untracked.vint32(15, 15, 15, 15),
            NTriggeredLeptons = cms.untracked.vuint32(0, 1, 1, 0)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0, 0, 0, 0, 
                0),
            NTriggeredTaus = cms.untracked.vuint32(1, 1, 1, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sSingleIsoTau35Trk20MET45","","HLT"), cms.InputTag("hltFilterL2EtCutSingleIsoPFTau35Trk20MET45","","HLT"), cms.InputTag("hltPFTauTightIso35","","HLT"), cms.InputTag("hltPFTauTightIso35Track","","HLT"), cms.InputTag("hltFilterSingleIsoPFTau35Trk20LeadTrackPt20","","HLT"), 
                cms.InputTag("hltFilterSingleIsoPFTau35Trk20MET45LeadTrack20MET45IsolationL1HLTMatched","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauRelVal/MC_5E32/SingleTau'),
            TauType = cms.untracked.vint32(-86, 84, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0, 0, 
                0, 0),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            DQMFolder = cms.string('HLT/TauRelVal/MC_5E32/L1'),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central"),
            L1Electrons = cms.InputTag("hltL1extraParticles","NonIsolated")
        ))
)


process.hltTauValIdealMonitorPF5E32 = cms.EDAnalyzer("HLTTauDQMOfflineSource",
    doMatching = cms.bool(True),
    ConfigType = cms.vstring('Path', 
        'Path', 
        'Path', 
        'LitePath', 
        'Path', 
        'L1'),
    refObjects = cms.untracked.VInputTag(cms.InputTag("TauRefCombiner"), cms.InputTag("TauMCProducer","LeptonicTauElectrons"), cms.InputTag("TauMCProducer","LeptonicTauMuons")),
    MonitorSetup = cms.VPSet(cms.PSet(
        triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
        LeptonType = cms.untracked.vint32(0, 0, 0, 0, 0),
        NTriggeredTaus = cms.untracked.vuint32(2, 2, 2, 2, 2, 
            2),
        Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sDoubleIsoTau20Trk5","","HLT"), cms.InputTag("hltFilterL2EtCutDoublePFIsoTau20Trk5","","HLT"), cms.InputTag("hltDoublePFTauTightIso20Track","","HLT"), cms.InputTag("hltDoublePFTauTightIso20Track5","","HLT"), cms.InputTag("hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched","","HLT")),
        DQMFolder = cms.untracked.string('HLT/TauRelVal/PF_5E32/DoubleTau'),
        TauType = cms.untracked.vint32(-86, 84, 84, 84, 84),
        NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0, 0, 
            0),
        MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2)
    ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-83, 82, 0, 0, 0, 
                82),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleEG12","","HLT"), cms.InputTag("hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTTrackIsolFilter","","HLT"), cms.InputTag("hltPFTau15","","HLT"), cms.InputTag("hltPFTau15Track","","HLT"), cms.InputTag("hltPFTau15TrackLooseIso","","HLT"), 
                cms.InputTag("hltOverlapFilterIsoEle15IsoPFTau15","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauRelVal/PF_5E32/EleTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                0, 1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(-81, 83, 0, 0, 83),
            NTriggeredTaus = cms.untracked.vuint32(1, 0, 0, 1, 1, 
                1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sL1SingleMu10","","HLT"), cms.InputTag("hltL3Muon15","","HLT"), cms.InputTag("hltPFTau20Track","","HLT"), cms.InputTag("hltPFTau20TrackLooseIso","","HLT"), cms.InputTag("hltOverlapFilterMu15IsoPFTau20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauRelVal/PF_5E32/MuTau'),
            TauType = cms.untracked.vint32(0, 0, 84, 84, 84),
            NTriggeredLeptons = cms.untracked.vuint32(1, 1, 1, 0, 0, 
                1),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryAOD","","HLT"),
            LeptonType = cms.untracked.vint32(0, 11, 13, 0),
            NTriggeredTaus = cms.untracked.vuint32(2, 1, 1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched","","HLT"), cms.InputTag("hltOverlapFilterIsoEle15IsoPFTau15","","HLT"), cms.InputTag("hltOverlapFilterMu15IsoPFTau20","","HLT"), cms.InputTag("hltFilterSingleIsoPFTau35Trk20LeadTrackPt20","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauRelVal/PF_5E32/Summary'),
            PathName = cms.untracked.vstring('DoubleIsoTau', 
                'EleTau', 
                'MuTau', 
                'SingleIsoTau'),
            TauType = cms.untracked.vint32(15, 15, 15, 15),
            NTriggeredLeptons = cms.untracked.vuint32(0, 1, 1, 0)
        ), 
        cms.PSet(
            triggerEventObject = cms.untracked.InputTag("hltTriggerSummaryRAW","","HLT"),
            LeptonType = cms.untracked.vint32(0, 0, 0, 0, 0, 
                0),
            NTriggeredTaus = cms.untracked.vuint32(1, 1, 1, 1, 1, 
                1, 1),
            Filter = cms.untracked.VInputTag(cms.InputTag("hltL1sSingleIsoTau35Trk20MET45","","HLT"), cms.InputTag("hltFilterL2EtCutSingleIsoPFTau35Trk20MET45","","HLT"), cms.InputTag("hltPFTauTightIso35","","HLT"), cms.InputTag("hltPFTauTightIso35Track","","HLT"), cms.InputTag("hltFilterSingleIsoPFTau35Trk20LeadTrackPt20","","HLT"), 
                cms.InputTag("hltFilterSingleIsoPFTau35Trk20MET45LeadTrack20MET45IsolationL1HLTMatched","","HLT")),
            DQMFolder = cms.untracked.string('HLT/TauRelVal/PF_5E32/SingleTau'),
            TauType = cms.untracked.vint32(-86, 84, 84, 84, 84, 
                84),
            NTriggeredLeptons = cms.untracked.vuint32(0, 0, 0, 0, 0, 
                0, 0),
            MatchDeltaR = cms.untracked.vdouble(0.5, 0.2, 0.2, 0.2, 0.2, 
                0.2)
        ), 
        cms.PSet(
            L1Muons = cms.InputTag("hltL1extraParticles"),
            DQMFolder = cms.string('HLT/TauRelVal/PF_5E32/L1'),
            L1Taus = cms.InputTag("hltL1extraParticles","Tau"),
            L1Jets = cms.InputTag("hltL1extraParticles","Central"),
            L1Electrons = cms.InputTag("hltL1extraParticles","NonIsolated")
        ))
)


process.hltriggerResults = cms.EDAnalyzer("FourVectorHLTriggerOffline",
    photonEtMin = cms.untracked.double(3.0),
    bjetEtMin = cms.untracked.double(10.0),
    processname = cms.string('HLT'),
    photonDRMatch = cms.untracked.double(0.5),
    tauEtaMax = cms.untracked.double(5.0),
    trackEtaMax = cms.untracked.double(2.5),
    plotAll = cms.untracked.bool(False),
    electronEtaMax = cms.untracked.double(2.5),
    triggerResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    jetDRMatch = cms.untracked.double(0.3),
    htMin = cms.untracked.double(10.0),
    electronEtMin = cms.untracked.double(3.0),
    metMin = cms.untracked.double(10.0),
    paths = cms.VPSet(),
    trackDRMatch = cms.untracked.double(0.3),
    dirname = cms.untracked.string('HLT/FourVector_Val/source'),
    bjetDRMatch = cms.untracked.double(0.3),
    trackEtMin = cms.untracked.double(3.0),
    tauDRMatch = cms.untracked.double(0.5),
    sumEtMin = cms.untracked.double(10.0),
    tauEtMin = cms.untracked.double(3.0),
    ptMin = cms.untracked.double(0.0),
    muonEtMin = cms.untracked.double(3.0),
    ptMax = cms.untracked.double(100.0),
    muonDRMatch = cms.untracked.double(0.3),
    bjetEtaMax = cms.untracked.double(2.5),
    electronDRMatch = cms.untracked.double(0.5),
    muonEtaMax = cms.untracked.double(2.1),
    triggerSummaryLabel = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    photonEtaMax = cms.untracked.double(2.5),
    jetEtMin = cms.untracked.double(10.0),
    jetEtaMax = cms.untracked.double(5.0)
)


process.jetMETAnalyzer = cms.EDAnalyzer("JetMETAnalyzer",
    CleanedJPTJetAnalysis = cms.PSet(
        OutCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nOutCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        Pt1HistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        nTracksVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PtFractionInConeVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        PrintDebugMessages = cms.untracked.bool(False),
        InCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        deltaEtaHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-0.5)
        ),
        TrackSiStripHitStoNHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(500),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        EtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        HistogramPath = cms.string('JetMET/Jet/JPT'),
        PyHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        DQMStoreFileName = cms.untracked.string('DQMStore.root'),
        PhiVsEtaHistogramConfig = cms.PSet(
            NBins = cms.uint32(64),
            MaxY = cms.double(2.5),
            Min = cms.double(-3.2),
            Max = cms.double(3.2),
            Enabled = cms.bool(True),
            MinY = cms.double(-2.5),
            NBinsY = cms.uint32(50)
        ),
        OutCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            rpcRecHits = cms.InputTag("rpcRecHits"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        JPTCorrFactorVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        InCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        n90HitsMin = cms.int32(2),
        nAllPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        correctedPtThreshold = cms.double(3.0),
        MassHistogramConfig = cms.PSet(
            Max = cms.double(25),
            NBins = cms.uint32(25),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PzHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        AllPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        OutCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        fRBXHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0.0)
        ),
        AllPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        InCaloOutVertexPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        deltaPhiHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-0.5)
        ),
        CorrFactorVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        EHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        OutCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        OutCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        AllElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        nAllMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        Pt2HistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        AllPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        WriteDQMStore = cms.untracked.bool(False),
        InCaloOutVertexElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        JPTCorrFactorHistogramConfig = cms.PSet(
            Max = cms.double(3.0),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(1.0)
        ),
        nInCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nTracksVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        nTracksHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nInCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        resEMFMin = cms.double(0.01),
        AllElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        nInCaloOutVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        CorrFactorHistogramConfig = cms.PSet(
            Max = cms.double(3.0),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(1.0)
        ),
        InCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        ZSPCorrFactorVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        AllMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        InCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        AllElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nOutCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        OutCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        nOutCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        PHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        InCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        JPTCorrFactorVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        ResEMFHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0.0)
        ),
        InCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PtFractionInConeVsJetRawEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nInCaloOutVertexPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        Pt3HistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        N90HitsHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        InCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        AllPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PtFractionInConeHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PxHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        AllMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        OutCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        fHPDHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0.0)
        ),
        InCaloOutVertexMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        ZSPCorrFactorHistogramConfig = cms.PSet(
            Max = cms.double(3.0),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(1.0)
        ),
        InCaloOutVertexMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        nAllElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nInCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        ZSPCorrFactorVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        fHPDMax = cms.double(0.98),
        CorrFactorVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        EtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        nInCaloOutVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        )
    ),
    DoJetCleaning = cms.untracked.bool(True),
    highPtJetTrigger = cms.PSet(
        andOrHlt = cms.bool(False),
        hltPaths = cms.vstring('HLT_Jet100U'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_highptjet'),
        errorReplyHlt = cms.bool(False)
    ),
    caloMETNoHFAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseSummary = cms.InputTag("hcalnoise"),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('CaloMETNoHF'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_OR'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            errorReplyHlt = cms.bool(False)
        ),
        lowMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1MET20'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowmet'),
            errorReplyHlt = cms.bool(False)
        ),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Jet6U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(False),
        LowMETThreshold = cms.double(30.0),
        CleaningParameters = cms.PSet(
            tightHcalFiltering = cms.bool(False),
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(15.0),
            vtxndof_min = cms.int32(5),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_MET100'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Mu11'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_muon'),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag(""),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag(""),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag(""),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag(""),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Jet100U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("metNoHF"),
        eleTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Ele40_LW_L1R'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_ele'),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag(""),
        InputMuonLabel = cms.InputTag(""),
        HighMETThreshold = cms.double(110.0)
    ),
    processname = cms.string('HLT'),
    OutputMEsInRootFile = cms.bool(False),
    DoJPTJetCleaning = cms.untracked.bool(True),
    DoCaloMETAnalysis = cms.untracked.bool(True),
    DoJPTJetAnalysis = cms.untracked.bool(False),
    CleanedPtAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(1),
        ptBin = cms.int32(100),
        resEMFMinTight = cms.double(0.01),
        phiBin = cms.int32(70),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.01),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        n90HitsMinTight = cms.int32(4),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(0.0),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        eBin = cms.int32(100),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(0),
        TightNHFMax = cms.double(1.0),
        TightCHFMin = cms.double(0.0),
        ThisCEFMax = cms.double(1.0),
        fillJIDPassFrac = cms.int32(0),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        TightNEFMax = cms.double(1.0),
        ptMax = cms.double(50.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(10.0),
        n90HitsMin = cms.int32(2),
        fHPDMax = cms.double(0.98),
        ThisNHFMax = cms.double(0.9),
        ThisNEFMax = cms.double(0.9),
        ThisCHFMin = cms.double(0.0),
        LooseNEFMax = cms.double(0.9)
    ),
    lowPtJetTrigger = cms.PSet(
        andOrHlt = cms.bool(False),
        hltPaths = cms.vstring('HLT_L1Jet6U'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_lowptjet'),
        errorReplyHlt = cms.bool(False)
    ),
    jetAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(0),
        ptBin = cms.int32(100),
        resEMFMinTight = cms.double(0.01),
        ThisCEFMax = cms.double(999.0),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.0),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(0.0),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        TightNEFMax = cms.double(1.0),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(0),
        TightNHFMax = cms.double(1.0),
        n90HitsMinTight = cms.int32(4),
        phiBin = cms.int32(70),
        ThisNEFMax = cms.double(999.0),
        fillJIDPassFrac = cms.int32(1),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        eBin = cms.int32(100),
        ptMax = cms.double(50.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(3.0),
        n90HitsMin = cms.int32(-1),
        fHPDMax = cms.double(1.0),
        ThisNHFMax = cms.double(999.0),
        TightCHFMin = cms.double(0.0),
        ThisCHFMin = cms.double(-999.0),
        LooseNEFMax = cms.double(0.9)
    ),
    caloMETHOAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseSummary = cms.InputTag("hcalnoise"),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('CaloMETHO'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_OR'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            errorReplyHlt = cms.bool(False)
        ),
        lowMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1MET20'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowmet'),
            errorReplyHlt = cms.bool(False)
        ),
        DetectorTypes = cms.untracked.string('ecal:hbhe:hf:ho'),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Jet6U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(False),
        LowMETThreshold = cms.double(30.0),
        CleaningParameters = cms.PSet(
            tightHcalFiltering = cms.bool(False),
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(15.0),
            vtxndof_min = cms.int32(5),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_MET100'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Mu11'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_muon'),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag(""),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag(""),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        Filter = cms.untracked.bool(True),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag(""),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag(""),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Jet100U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("metHO"),
        eleTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Ele40_LW_L1R'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_ele'),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag(""),
        InputMuonLabel = cms.InputTag(""),
        HighMETThreshold = cms.double(110.0)
    ),
    LSBegin = cms.int32(0),
    OutputFileName = cms.string('jetMETMonitoring.root'),
    PtAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(0),
        ptBin = cms.int32(100),
        resEMFMinTight = cms.double(0.01),
        ThisCEFMax = cms.double(999.0),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.0),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(0.0),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        TightNEFMax = cms.double(1.0),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(0),
        TightNHFMax = cms.double(1.0),
        n90HitsMinTight = cms.int32(4),
        phiBin = cms.int32(70),
        ThisNEFMax = cms.double(999.0),
        fillJIDPassFrac = cms.int32(1),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        eBin = cms.int32(100),
        ptMax = cms.double(50.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(3.0),
        n90HitsMin = cms.int32(-1),
        fHPDMax = cms.double(1.0),
        ThisNHFMax = cms.double(999.0),
        TightCHFMin = cms.double(0.0),
        ThisCHFMin = cms.double(-999.0),
        LooseNEFMax = cms.double(0.9)
    ),
    DoDiJetSelection = cms.untracked.bool(True),
    CleaningParameters = cms.PSet(
        tightHcalFiltering = cms.bool(False),
        tightJetIDFiltering = cms.int32(-1),
        techTrigsOR = cms.vuint32(),
        vtxchi2_max = cms.double(9999),
        tightBHFiltering = cms.bool(False),
        doPrimaryVertexCheck = cms.bool(True),
        vtxz_max = cms.double(15.0),
        vtxndof_min = cms.int32(5),
        gtLabel = cms.InputTag("gtDigis"),
        doHLTPhysicsOn = cms.bool(False),
        nvtxtrks_min = cms.int32(0),
        nvtx_min = cms.int32(1),
        vertexLabel = cms.InputTag("offlinePrimaryVertices"),
        trigSelection = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring(''),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_hltsel'),
            errorReplyHlt = cms.bool(False)
        ),
        HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
        techTrigsNOT = cms.vuint32(),
        techTrigsAND = cms.vuint32()
    ),
    DijetAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(1),
        ptBin = cms.int32(100),
        resEMFMinTight = cms.double(0.01),
        phiBin = cms.int32(70),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.01),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        n90HitsMinTight = cms.int32(4),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(0.0),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        eBin = cms.int32(100),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(1),
        TightNHFMax = cms.double(1.0),
        TightCHFMin = cms.double(0.0),
        ThisCEFMax = cms.double(1.0),
        fillJIDPassFrac = cms.int32(1),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        TightNEFMax = cms.double(1.0),
        ptMax = cms.double(50.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(8.0),
        n90HitsMin = cms.int32(2),
        fHPDMax = cms.double(0.98),
        ThisNHFMax = cms.double(0.9),
        ThisNEFMax = cms.double(0.9),
        ThisCHFMin = cms.double(0.0),
        LooseNEFMax = cms.double(0.9)
    ),
    DoIterativeCone = cms.untracked.bool(False),
    DoJetAnalysis = cms.untracked.bool(True),
    SCJetsCollectionLabel = cms.InputTag("sisCone5CaloJets"),
    LSEnd = cms.int32(-1),
    DoJetPtCleaning = cms.untracked.bool(False),
    HTMHTAnalysis = cms.PSet(
        verbose = cms.int32(0),
        printOut = cms.int32(0),
        JetCollectionForHTMHTLabel = cms.InputTag("iterativeCone5CaloJets"),
        ptThreshold = cms.double(20.0),
        FolderName = cms.untracked.string('JetMET/MET/'),
        Source = cms.string('HTMHT'),
        HLTPathsJetMB = cms.vstring()
    ),
    DoTcMETAnalysis = cms.untracked.bool(True),
    mucorrMETAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseSummary = cms.InputTag("hcalnoise"),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('MuCorrMET'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_OR'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            errorReplyHlt = cms.bool(False)
        ),
        lowMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1MET20'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowmet'),
            errorReplyHlt = cms.bool(False)
        ),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Jet6U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(False),
        LowMETThreshold = cms.double(30.0),
        CleaningParameters = cms.PSet(
            tightHcalFiltering = cms.bool(False),
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(15.0),
            vtxndof_min = cms.int32(5),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_MET100'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Mu11'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_muon'),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag(""),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf:pixel:sistrip:muon')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag(""),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag(""),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag(""),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Jet100U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("corMetGlobalMuons"),
        eleTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Ele40_LW_L1R'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_ele'),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        InputMuonLabel = cms.InputTag(""),
        HighMETThreshold = cms.double(110.0)
    ),
    DCSFilterCalo = cms.PSet(
        Filter = cms.untracked.bool(True),
        DetectorTypes = cms.untracked.string('ecal:hbhe:hf')
    ),
    DCSFilterJPT = cms.PSet(
        Filter = cms.untracked.bool(True),
        DetectorTypes = cms.untracked.string('ecal:hbhe:hf:pixel:sistrip:es:muon')
    ),
    CleanedpfJetAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(1),
        ptBin = cms.int32(100),
        resEMFMinTight = cms.double(0.01),
        phiBin = cms.int32(70),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.01),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        n90HitsMinTight = cms.int32(4),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(0.0),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        eBin = cms.int32(100),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(0),
        TightNHFMax = cms.double(1.0),
        TightCHFMin = cms.double(0.0),
        ThisCEFMax = cms.double(1.0),
        fillJIDPassFrac = cms.int32(0),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        TightNEFMax = cms.double(1.0),
        ptMax = cms.double(50.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(3.0),
        n90HitsMin = cms.int32(2),
        fHPDMax = cms.double(0.98),
        ThisNHFMax = cms.double(0.9),
        ThisNEFMax = cms.double(0.9),
        ThisCHFMin = cms.double(0.0),
        LooseNEFMax = cms.double(0.9)
    ),
    CleanedjetAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(1),
        ptBin = cms.int32(100),
        resEMFMinTight = cms.double(0.01),
        phiBin = cms.int32(70),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.01),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        n90HitsMinTight = cms.int32(4),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(0.0),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        eBin = cms.int32(100),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(0),
        TightNHFMax = cms.double(1.0),
        TightCHFMin = cms.double(0.0),
        ThisCEFMax = cms.double(1.0),
        fillJIDPassFrac = cms.int32(0),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        TightNEFMax = cms.double(1.0),
        ptMax = cms.double(50.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(10.0),
        n90HitsMin = cms.int32(2),
        fHPDMax = cms.double(0.98),
        ThisNHFMax = cms.double(0.9),
        ThisNEFMax = cms.double(0.9),
        ThisCHFMin = cms.double(0.0),
        LooseNEFMax = cms.double(0.9)
    ),
    AKJetsCollectionLabel = cms.InputTag("ak5CaloJets"),
    DoPFJetAnalysis = cms.untracked.bool(False),
    PFJetsCollectionLabel = cms.InputTag("ak5PFJets"),
    DoSisCone = cms.untracked.bool(False),
    DoJetPtAnalysis = cms.untracked.bool(False),
    caloMETAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseSummary = cms.InputTag("hcalnoise"),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('CaloMET'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_OR'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            errorReplyHlt = cms.bool(False)
        ),
        lowMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1MET20'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowmet'),
            errorReplyHlt = cms.bool(False)
        ),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Jet6U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(True),
        LowMETThreshold = cms.double(30.0),
        CleaningParameters = cms.PSet(
            tightHcalFiltering = cms.bool(False),
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(15.0),
            vtxndof_min = cms.int32(5),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_MET100'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Mu11'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_muon'),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag(""),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag(""),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag(""),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag(""),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Jet100U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("met"),
        eleTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Ele40_LW_L1R'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_ele'),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag(""),
        InputMuonLabel = cms.InputTag(""),
        HighMETThreshold = cms.double(110.0)
    ),
    DCSFilterPF = cms.PSet(
        Filter = cms.untracked.bool(True),
        DetectorTypes = cms.untracked.string('ecal:hbhe:hf:pixel:sistrip:es:muon')
    ),
    tcMETAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseSummary = cms.InputTag("hcalnoise"),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('TcMET'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_OR'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            errorReplyHlt = cms.bool(False)
        ),
        lowMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1MET20'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowmet'),
            errorReplyHlt = cms.bool(False)
        ),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Jet6U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(False),
        LowMETThreshold = cms.double(30.0),
        CleaningParameters = cms.PSet(
            tightHcalFiltering = cms.bool(False),
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(15.0),
            vtxndof_min = cms.int32(5),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_MET100'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Mu11'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_muon'),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag(""),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf:pixel:sistrip:es:muon')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag(""),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag("gsfElectrons"),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag("generalTracks"),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Jet100U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("tcMet"),
        eleTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Ele40_LW_L1R'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_ele'),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        InputMuonLabel = cms.InputTag("muons"),
        HighMETThreshold = cms.double(110.0)
    ),
    JPTJetsCollectionLabel = cms.InputTag("JetPlusTrackZSPCorJetAntiKt5"),
    JPTJetAnalysis = cms.PSet(
        OutCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nOutCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        Pt1HistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        nTracksVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PtFractionInConeVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PrintDebugMessages = cms.untracked.bool(False),
        InCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        deltaEtaHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-0.5)
        ),
        TrackSiStripHitStoNHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(500),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        EtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        HistogramPath = cms.string('JetMET/Jet/uncJPT'),
        InCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        DQMStoreFileName = cms.untracked.string('DQMStore.root'),
        PhiVsEtaHistogramConfig = cms.PSet(
            NBins = cms.uint32(64),
            MaxY = cms.double(2.5),
            Min = cms.double(-3.2),
            Max = cms.double(3.2),
            Enabled = cms.bool(True),
            MinY = cms.double(-2.5),
            NBinsY = cms.uint32(50)
        ),
        OutCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            rpcRecHits = cms.InputTag("rpcRecHits"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        JPTCorrFactorVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        n90HitsMin = cms.int32(0),
        nAllPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        correctedPtThreshold = cms.double(3.0),
        MassHistogramConfig = cms.PSet(
            Max = cms.double(25),
            NBins = cms.uint32(25),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PzHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        AllPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        OutCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        AllElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        deltaPhiHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-0.5)
        ),
        CorrFactorVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        EHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexElectronsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        OutCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        OutCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        AllElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        nAllMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        InCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        Pt2HistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        AllPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        WriteDQMStore = cms.untracked.bool(False),
        InCaloOutVertexElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        JPTCorrFactorHistogramConfig = cms.PSet(
            Max = cms.double(3.0),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(1.0)
        ),
        nTracksVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        nInCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        JPTCorrFactorVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        resEMFMin = cms.double(0.0),
        AllElectronsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        nInCaloOutVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        CorrFactorHistogramConfig = cms.PSet(
            Max = cms.double(3.0),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(1.0)
        ),
        InCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        ZSPCorrFactorVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        AllMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloOutVertexPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        OutCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        InCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nTracksHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        AllElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nOutCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        OutCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        OutCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
            Max = cms.double(0.5),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PyHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nOutCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        AllPionsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        InCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        ResEMFHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0.0)
        ),
        InCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        PtFractionInConeVsJetRawEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        InCaloOutVertexPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        InCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        nInCaloOutVertexPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        Pt3HistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        N90HitsHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        InCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackPhiHistogramConfig = cms.PSet(
            Max = cms.double(3.2),
            NBins = cms.uint32(64),
            Enabled = cms.bool(True),
            Min = cms.double(-3.2)
        ),
        fRBXHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0.0)
        ),
        CorrFactorVsJetEtHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        AllPionsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PtFractionInConeHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        PxHistogramConfig = cms.PSet(
            Max = cms.double(200),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        OutCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        InCaloOutVertexMuonsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        ZSPCorrFactorHistogramConfig = cms.PSet(
            Max = cms.double(3.0),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(1.0)
        ),
        InCaloOutVertexMuonsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
            Max = cms.double(10),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(-10.0)
        ),
        nAllElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
            Max = cms.double(40),
            NBins = cms.uint32(40),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nInCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        InCaloOutVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        fHPDHistogramConfig = cms.PSet(
            Max = cms.double(1.0),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(0.0)
        ),
        ZSPCorrFactorVsJetEtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        fHPDMax = cms.double(1.0),
        InCaloOutVertexPionsTrackPtHistogramConfig = cms.PSet(
            Max = cms.double(50),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        AllPionsTrackDzHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(200),
            Enabled = cms.bool(True),
            Min = cms.double(-20.0)
        ),
        EtaHistogramConfig = cms.PSet(
            Max = cms.double(2.5),
            NBins = cms.uint32(50),
            Enabled = cms.bool(True),
            Min = cms.double(-2.5)
        ),
        nInCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        nInCaloOutVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
            Max = cms.double(100),
            NBins = cms.uint32(100),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        ),
        OutCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
            Max = cms.double(20),
            NBins = cms.uint32(20),
            Enabled = cms.bool(True),
            Min = cms.double(0)
        )
    ),
    caloMETNoHFHOAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseSummary = cms.InputTag("hcalnoise"),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('CaloMETNoHFHO'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_OR'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            errorReplyHlt = cms.bool(False)
        ),
        lowMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1MET20'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowmet'),
            errorReplyHlt = cms.bool(False)
        ),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Jet6U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(False),
        LowMETThreshold = cms.double(30.0),
        CleaningParameters = cms.PSet(
            tightHcalFiltering = cms.bool(False),
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(15.0),
            vtxndof_min = cms.int32(5),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_MET100'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Mu11'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_muon'),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag(""),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf:ho')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag(""),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag(""),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag(""),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Jet100U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("metNoHFHO"),
        eleTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Ele40_LW_L1R'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_ele'),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag(""),
        InputMuonLabel = cms.InputTag(""),
        HighMETThreshold = cms.double(110.0)
    ),
    DoMuCorrMETAnalysis = cms.untracked.bool(True),
    pfJetAnalysis = cms.PSet(
        fillpfJIDPassFrac = cms.int32(0),
        ptBin = cms.int32(100),
        resEMFMinTight = cms.double(0.01),
        ThisCEFMax = cms.double(999.0),
        fHPDMaxLoose = cms.double(0.98),
        eMin = cms.double(0.0),
        LooseCEFMax = cms.double(1.0),
        LooseCHFMin = cms.double(0.0),
        resEMFMin = cms.double(0.0),
        pMin = cms.double(0.0),
        etaMin = cms.double(-5.0),
        sigmaEtaMinTight = cms.double(0.01),
        etaMax = cms.double(5.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2),
        phiMin = cms.double(-3.2),
        eMax = cms.double(500.0),
        sigmaPhiMinTight = cms.double(0.01),
        TightCEFMax = cms.double(1.0),
        ptMin = cms.double(0.0),
        pBin = cms.int32(100),
        LooseNHFMax = cms.double(0.9),
        etaBin = cms.int32(100),
        TightNEFMax = cms.double(1.0),
        resEMFMinLoose = cms.double(0.01),
        makedijetselection = cms.int32(0),
        TightNHFMax = cms.double(1.0),
        n90HitsMinTight = cms.int32(4),
        phiBin = cms.int32(70),
        ThisNEFMax = cms.double(999.0),
        fillJIDPassFrac = cms.int32(1),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        eBin = cms.int32(100),
        ptMax = cms.double(50.0),
        fHPDMaxTight = cms.double(0.98),
        n90HitsMinLoose = cms.int32(1),
        ptThreshold = cms.double(10.0),
        n90HitsMin = cms.int32(-1),
        fHPDMax = cms.double(1.0),
        ThisNHFMax = cms.double(999.0),
        TightCHFMin = cms.double(0.0),
        ThisCHFMin = cms.double(-999.0),
        LooseNEFMax = cms.double(0.9)
    ),
    DoPFJetCleaning = cms.untracked.bool(True),
    DoPfMETAnalysis = cms.untracked.bool(True),
    DoHTMHTAnalysis = cms.untracked.bool(True),
    TriggerResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    pfMETAnalysis = cms.PSet(
        allSelection = cms.bool(False),
        verbose = cms.int32(0),
        HcalNoiseSummary = cms.InputTag("hcalnoise"),
        HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
        JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
        Source = cms.string('PfMET'),
        minBiasTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_OR'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_minbias'),
            errorReplyHlt = cms.bool(False)
        ),
        lowMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1MET20'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowmet'),
            errorReplyHlt = cms.bool(False)
        ),
        lowPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_L1Jet6U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_lowptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        JetIDParams = cms.PSet(
            eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            hbheRecHitsColl = cms.InputTag("hbhereco"),
            hoRecHitsColl = cms.InputTag("horeco"),
            ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            hfRecHitsColl = cms.InputTag("hfreco"),
            useRecHits = cms.bool(True)
        ),
        LowPtJetThreshold = cms.double(15.0),
        printOut = cms.int32(0),
        allHist = cms.bool(False),
        LowMETThreshold = cms.double(30.0),
        CleaningParameters = cms.PSet(
            tightHcalFiltering = cms.bool(False),
            tightJetIDFiltering = cms.int32(-1),
            techTrigsOR = cms.vuint32(),
            vtxchi2_max = cms.double(9999),
            tightBHFiltering = cms.bool(False),
            doPrimaryVertexCheck = cms.bool(True),
            vtxz_max = cms.double(15.0),
            vtxndof_min = cms.int32(5),
            gtLabel = cms.InputTag("gtDigis"),
            doHLTPhysicsOn = cms.bool(False),
            nvtxtrks_min = cms.int32(0),
            nvtx_min = cms.int32(1),
            vertexLabel = cms.InputTag("offlinePrimaryVertices"),
            trigSelection = cms.PSet(
                andOrHlt = cms.bool(False),
                hltPaths = cms.vstring(''),
                andOr = cms.bool(False),
                hltInputTag = cms.InputTag("TriggerResults","","HLT"),
                hltDBKey = cms.string('jetmet_hltsel'),
                errorReplyHlt = cms.bool(False)
            ),
            HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
            techTrigsNOT = cms.vuint32(),
            techTrigsAND = cms.vuint32()
        ),
        highMETTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_MET100'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highmet'),
            errorReplyHlt = cms.bool(False)
        ),
        HLTPathsJetMB = cms.vstring(),
        muonTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Mu11'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_muon'),
            errorReplyHlt = cms.bool(False)
        ),
        PfJetCollectionLabel = cms.InputTag("iterativeCone5PFJets"),
        DCSFilter = cms.PSet(
            Filter = cms.untracked.bool(True),
            DetectorTypes = cms.untracked.string('ecal:hbhe:hf:pixel:sistrip:es:muon')
        ),
        cleanupSelection = cms.bool(True),
        PFCandidates = cms.InputTag("particleFlow"),
        CaloTowersLabel = cms.InputTag("towerMaker"),
        etThreshold = cms.double(2.0),
        InputElectronLabel = cms.InputTag(""),
        FolderName = cms.untracked.string('JetMET/MET/'),
        HighPtJetThreshold = cms.double(60.0),
        InputTrackLabel = cms.InputTag(""),
        BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
        highPtJetTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Jet100U'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_highptjet'),
            errorReplyHlt = cms.bool(False)
        ),
        METCollectionLabel = cms.InputTag("pfMet"),
        eleTrigger = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring('HLT_Ele40_LW_L1R'),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_ele'),
            errorReplyHlt = cms.bool(False)
        ),
        InputBeamSpotLabel = cms.InputTag(""),
        InputMuonLabel = cms.InputTag(""),
        HighMETThreshold = cms.double(110.0)
    ),
    ICJetsCollectionLabel = cms.InputTag("iterativeCone5CaloJets")
)


process.jetMETHLTOfflineSource = cms.EDAnalyzer("JetMETHLTOfflineSource",
    verbose = cms.untracked.bool(False),
    DQMStore = cms.untracked.bool(True),
    processname = cms.string('HLT'),
    triggerResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    n90Hits = cms.untracked.double(1),
    plotAll = cms.untracked.bool(True),
    dirname = cms.untracked.string('HLT/JetMET'),
    paths = cms.untracked.vstring('HLT_L1MuOpen_v2', 
        'HLT_MinBiasBSC', 
        'HLT_L1Jet6U', 
        'HLT_L1Jet10U', 
        'HLT_Jet15U', 
        'HLT_Jet30U', 
        'HLT_Jet50U', 
        'HLT_DiJetAve15U_8E29', 
        'HLT_DiJetAve30U_8E29', 
        'HLT_L1MET20', 
        'HLT_MET45', 
        'HLT_MET100', 
        'HLT_HT100U'),
    pathnameMB = cms.untracked.vstring('HLT_MinBiasBSC'),
    plotAllwrtMu = cms.untracked.bool(False),
    nameForEff = cms.untracked.bool(True),
    feta = cms.untracked.double(2.6),
    pathnameMuon = cms.untracked.vstring('HLT_L1MuOpen_v2'),
    triggerSummaryLabel = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    CaloMETCollectionLabel = cms.InputTag("met"),
    nameForMon = cms.untracked.bool(False),
    CaloJetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
    plotEff = cms.untracked.bool(True),
    fHPD = cms.untracked.double(0.98),
    fEMF = cms.untracked.double(0.01),
    pathPairs = cms.VPSet(cms.PSet(
        pathname = cms.string('HLT_L1Jet6U'),
        denompathname = cms.string('HLT_L1MuOpen_v2')
    ), 
        cms.PSet(
            pathname = cms.string('HLT_L1Jet10U'),
            denompathname = cms.string('HLT_L1Jet6U')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_Jet15U'),
            denompathname = cms.string('HLT_L1Jet6U')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_Jet30U'),
            denompathname = cms.string('HLT_Jet15U')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_Jet50U'),
            denompathname = cms.string('HLT_Jet30U')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_DiJetAve15U_8E29'),
            denompathname = cms.string('HLT_L1MuOpen_v2')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_DiJetAve30U_8E29'),
            denompathname = cms.string('HLT_DiJetAve15U_8E29')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_L1MET20'),
            denompathname = cms.string('HLT_L1MuOpen_v2')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_MET45'),
            denompathname = cms.string('HLT_L1MET20')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_MET100'),
            denompathname = cms.string('HLT_MET45')
        ), 
        cms.PSet(
            pathname = cms.string('HLT_HT100U'),
            denompathname = cms.string('HLT_L1MuOpen_v2')
        ))
)


process.l1ExtraDQM = cms.EDAnalyzer("L1ExtraDQM",
    L1ExtraInputTags = cms.PSet(
        TagL1ExtraMuon = cms.InputTag("l1extraParticles"),
        TagL1ExtraEtMissMET = cms.InputTag("l1extraParticles","MET"),
        TagL1ExtraNoIsoEG = cms.InputTag("l1extraParticles","NonIsolated"),
        TagL1ExtraTauJet = cms.InputTag("l1extraParticles","Tau"),
        TagL1ExtraForJet = cms.InputTag("l1extraParticles","Forward"),
        TagL1ExtraEtMissHTM = cms.InputTag("l1extraParticles","MHT"),
        TagL1ExtraHFRings = cms.InputTag("l1extraParticles"),
        TagL1ExtraCenJet = cms.InputTag("l1extraParticles","Central"),
        TagL1ExtraIsoEG = cms.InputTag("l1extraParticles","Isolated")
    ),
    verbose = cms.untracked.bool(False),
    DQMStore = cms.untracked.bool(True),
    NrBxInEventGct = cms.int32(5),
    disableROOToutput = cms.untracked.bool(True),
    DirName = cms.untracked.string('L1T/L1Extra/'),
    NrBxInEventGmt = cms.int32(5)
)


process.l1demon = cms.EDAnalyzer("L1TDEMON",
    HistFolder = cms.untracked.string('L1TEMU/'),
    VerboseFlag = cms.untracked.int32(0),
    HistFile = cms.untracked.string('l1demon.root'),
    RunInFilterFarm = cms.untracked.bool(False),
    DataEmulCompareSource = cms.InputTag("l1compare"),
    DQMStore = cms.untracked.bool(True),
    disableROOToutput = cms.untracked.bool(True)
)


process.l1tcsctf = cms.EDAnalyzer("L1TCSCTF",
    gmtProducer = cms.InputTag("l1GtUnpack","","DQM"),
    statusProducer = cms.InputTag("csctfDigis"),
    outputFile = cms.untracked.string(''),
    lctProducer = cms.InputTag("csctfDigis"),
    verbose = cms.untracked.bool(False),
    trackProducer = cms.InputTag("csctfDigis"),
    DQMStore = cms.untracked.bool(True),
    mbProducer = cms.InputTag("csctfunpacker","DT"),
    disableROOToutput = cms.untracked.bool(True)
)


process.l1tdttf = cms.EDAnalyzer("L1TDTTF",
    verbose = cms.untracked.bool(False),
    DQMStore = cms.untracked.bool(True),
    gmtSource = cms.InputTag("gtDigis"),
    l1tSystemFolder = cms.untracked.string('L1T/L1TDTTF'),
    online = cms.untracked.bool(False),
    disableROOToutput = cms.untracked.bool(True),
    MuonCollection = cms.InputTag("muons"),
    l1tInfoFolder = cms.untracked.string('L1T/EventInfo'),
    dttpgSource = cms.InputTag("dttfDigis")
)


process.l1tfed = cms.EDAnalyzer("L1TFED",
    verbose = cms.untracked.bool(False),
    DQMStore = cms.untracked.bool(True),
    rawTag = cms.InputTag("rawDataCollector"),
    stableROConfig = cms.untracked.bool(False),
    FEDDirName = cms.untracked.string('L1T/FEDIntegrity'),
    disableROOToutput = cms.untracked.bool(True),
    L1FEDS = cms.vint32(745, 760, 780, 812, 813)
)


process.l1tgct = cms.EDAnalyzer("L1TGCT",
    verbose = cms.untracked.bool(False),
    gctCentralJetsSource = cms.InputTag("gctDigis","cenJets"),
    gctNonIsoEmSource = cms.InputTag("gctDigis","nonIsoEm"),
    gctEnergySumsSource = cms.InputTag("gctDigis"),
    DQMStore = cms.untracked.bool(True),
    gctForwardJetsSource = cms.InputTag("gctDigis","forJets"),
    gctIsoEmSource = cms.InputTag("gctDigis","isoEm"),
    disableROOToutput = cms.untracked.bool(True),
    gctTauJetsSource = cms.InputTag("gctDigis","tauJets")
)


process.l1tgmt = cms.EDAnalyzer("L1TGMT",
    gmtSource = cms.InputTag("gtDigis"),
    verbose = cms.untracked.bool(False),
    disableROOToutput = cms.untracked.bool(True),
    DQMStore = cms.untracked.bool(True)
)


process.l1tgt = cms.EDAnalyzer("L1TGT",
    DQMStore = cms.untracked.bool(True),
    gtEvmSource = cms.InputTag("l1GtEvmUnpack","","DQM"),
    gtSource = cms.InputTag("gtDigis"),
    disableROOToutput = cms.untracked.bool(True),
    verbose = cms.untracked.bool(False)
)


process.l1trct = cms.EDAnalyzer("L1TRCT",
    disableROOToutput = cms.untracked.bool(True),
    rctSource = cms.InputTag("gctDigis"),
    DQMStore = cms.untracked.bool(True),
    verbose = cms.untracked.bool(False)
)


process.l1trpctf = cms.EDAnalyzer("L1TRPCTF",
    rpctfRPCDigiSource = cms.InputTag("rpcunpacker","DQM"),
    rateNoOfBins = cms.int32(3000),
    verbose = cms.untracked.bool(False),
    rpctfSource = cms.InputTag("gtDigis"),
    rateUpdateTime = cms.int32(20),
    DQMStore = cms.untracked.bool(True),
    output_dir = cms.untracked.string('L1T/L1TRPCTF'),
    rateBinSize = cms.int32(60),
    disableROOToutput = cms.untracked.bool(True)
)


process.l2MuonMuTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2MuonAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL2Muons"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(False),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l2MuonMuTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2MuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL2Muons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l2MuonTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2TrackAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL2Muons"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(False),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l2MuonTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2TrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL2Muons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l2UpdMuonMuTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2UpdMuonAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL2Muons:UpdatedAtVtx"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(False),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l2UpdMuonMuTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2UpdMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL2Muons:UpdatedAtVtx"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l2UpdMuonTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2UpdTrackAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL2Muons:UpdatedAtVtx"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruthMuon","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(False),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l2UpdMuonTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL2UpdTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL2Muons:UpdatedAtVtx"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l3MuonMuTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3MuonAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL3Muons:"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(True),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l3MuonMuTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3MuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL3Muons:"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l3MuonTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3TrackAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL3Muons"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(True),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l3MuonTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3TrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL3Muons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l3TkMuonMuTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3TkMuonAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL3TkTracksFromL2:"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(False),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(True),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l3TkMuonMuTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3TkMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL3TkTracksFromL2:"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(False),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.l3TkMuonTrackFSV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    cotThetaRes_rangeMax = cms.double(0.01),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3TkTrackTrackAssociationFS"),
    minRapidityTP = cms.double(-2.4),
    minZpos = cms.double(-10),
    minHit = cms.double(-0.5),
    ptMinTP = cms.double(0.9),
    maxZpos = cms.double(10),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    dxyRes_rangeMax = cms.double(0.02),
    label = cms.VInputTag("hltL3TkTracksFromL2"),
    nint = cms.int32(50),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    tipTP = cms.double(3.5),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    useGsf = cms.bool(False),
    usemuon = cms.bool(False),
    associators = cms.vstring('OnlineTrackAssociatorByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    etaRes_rangeMax = cms.double(0.05),
    cotThetaRes_rangeMin = cms.double(-0.01),
    etaRes_rangeMin = cms.double(-0.05),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    phiRes_rangeMin = cms.double(-0.05),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    minPhi = cms.double(-3.1416),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    maxVertpos = cms.double(5),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    usetracker = cms.bool(True),
    minHitTP = cms.int32(0),
    nintPhi = cms.int32(36),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minDxy = cms.double(-3)
)


process.l3TkMuonTrackV = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToL3TkTrackTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("hltL3TkTracksFromL2"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('HLT/Muon/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(False),
    associators = cms.vstring('OnlineTrackAssociatorByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(True),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.mbueAndqcdValidation = cms.EDAnalyzer("MBUEandQCDValidation",
    hepmcCollection = cms.InputTag("generator"),
    verbosity = cms.untracked.uint32(0),
    genjetsCollection = cms.InputTag("ak5GenJets"),
    genChjetsCollection = cms.InputTag("chargedak5GenJets")
)


process.metAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    OutputFile = cms.untracked.string('METTester_met.root'),
    InputMETLabel = cms.InputTag("met"),
    METType = cms.untracked.string('CaloMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.metHOAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    OutputFile = cms.untracked.string('METTester_metHO.root'),
    InputMETLabel = cms.InputTag("metHO"),
    METType = cms.untracked.string('CaloMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.metNoHFAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    OutputFile = cms.untracked.string('METTester_metNoHF.root'),
    InputMETLabel = cms.InputTag("metNoHF"),
    METType = cms.untracked.string('CaloMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.metNoHFHOAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    OutputFile = cms.untracked.string('METTester_metNoHFHO.root'),
    InputMETLabel = cms.InputTag("metNoHFHO"),
    METType = cms.untracked.string('CaloMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.metOptAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    OutputFile = cms.untracked.string('METTester_metOpt.root'),
    InputMETLabel = cms.InputTag("metOpt"),
    METType = cms.untracked.string('CaloMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.metOptHOAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    OutputFile = cms.untracked.string('METTester_metOptHO.root'),
    InputMETLabel = cms.InputTag("metOptHO"),
    METType = cms.untracked.string('CaloMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.metOptNoHFAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    OutputFile = cms.untracked.string('METTester_metOptNoHF.root'),
    InputMETLabel = cms.InputTag("metOptNoHF"),
    METType = cms.untracked.string('CaloMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.metOptNoHFHOAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    OutputFile = cms.untracked.string('METTester_metOptNoHFHO.root'),
    InputMETLabel = cms.InputTag("metOptNoHFHO"),
    METType = cms.untracked.string('CaloMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.mixCollectionValidation = cms.EDAnalyzer("MixCollectionValidation",
    maxBunch = cms.int32(3),
    outputFile = cms.string(''),
    mixObjects = cms.PSet(
        mixCH = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits","CaloHitsTk"), cms.InputTag("g4SimHits","CastorBU"), cms.InputTag("g4SimHits","CastorFI"), cms.InputTag("g4SimHits","CastorPL"), cms.InputTag("g4SimHits","CastorTU"), 
                cms.InputTag("g4SimHits","EcalHitsEB"), cms.InputTag("g4SimHits","EcalHitsEE"), cms.InputTag("g4SimHits","EcalHitsES"), cms.InputTag("g4SimHits","EcalTBH4BeamHits"), cms.InputTag("g4SimHits","HcalHits"), 
                cms.InputTag("g4SimHits","HcalTB06BeamHits"), cms.InputTag("g4SimHits","ZDCHITS")),
            type = cms.string('PCaloHit'),
            subdets = cms.vstring('CaloHitsTk', 
                'CastorBU', 
                'CastorFI', 
                'CastorPL', 
                'CastorTU', 
                'EcalHitsEB', 
                'EcalHitsEE', 
                'EcalHitsES', 
                'EcalTBH4BeamHits', 
                'HcalHits', 
                'HcalTB06BeamHits', 
                'ZDCHITS')
        ),
        mixHepMC = cms.PSet(
            input = cms.VInputTag(cms.InputTag("generator")),
            type = cms.string('HepMCProduct')
        ),
        mixVertices = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits")),
            type = cms.string('SimVertex')
        ),
        mixSH = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits","BSCHits"), cms.InputTag("g4SimHits","FP420SI"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonRPCHits"), 
                cms.InputTag("g4SimHits","TotemHitsRP"), cms.InputTag("g4SimHits","TotemHitsT1"), cms.InputTag("g4SimHits","TotemHitsT2Gem"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), 
                cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), 
                cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof")),
            type = cms.string('PSimHit'),
            subdets = cms.vstring('BSCHits', 
                'FP420SI', 
                'MuonCSCHits', 
                'MuonDTHits', 
                'MuonRPCHits', 
                'TotemHitsRP', 
                'TotemHitsT1', 
                'TotemHitsT2Gem', 
                'TrackerHitsPixelBarrelHighTof', 
                'TrackerHitsPixelBarrelLowTof', 
                'TrackerHitsPixelEndcapHighTof', 
                'TrackerHitsPixelEndcapLowTof', 
                'TrackerHitsTECHighTof', 
                'TrackerHitsTECLowTof', 
                'TrackerHitsTIBHighTof', 
                'TrackerHitsTIBLowTof', 
                'TrackerHitsTIDHighTof', 
                'TrackerHitsTIDLowTof', 
                'TrackerHitsTOBHighTof', 
                'TrackerHitsTOBLowTof')
        ),
        mixTracks = cms.PSet(
            input = cms.VInputTag(cms.InputTag("g4SimHits")),
            type = cms.string('SimTrack')
        )
    ),
    verbose = cms.untracked.bool(False),
    minBunch = cms.int32(-5)
)


process.muRecoTest = cms.EDAnalyzer("MuonRecoTest",
    phiMin = cms.double(-3.2),
    diagnosticPrescale = cms.untracked.int32(1),
    etaMin = cms.double(-3.0),
    efficiencyTestName = cms.untracked.string('EfficiencyInRange'),
    etaBin = cms.int32(100),
    phiBin = cms.int32(100),
    etaMax = cms.double(3.0),
    phiMax = cms.double(3.2)
)


process.muTrackResidualsTest = cms.EDAnalyzer("MuonTrackResidualsTest",
    sigmaTestName = cms.untracked.string('ResidualsSigmaInRange'),
    meanTestName = cms.untracked.string('ResidualsMeanInRange'),
    diagnosticPrescale = cms.untracked.int32(1),
    resDistributionTestName = cms.untracked.string('ResidualsDistributionGaussianTest')
)


process.muonAnalyzer = cms.EDAnalyzer("MuonAnalyzer",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    OutputMEsInRootFile = cms.bool(False),
    trackSegmentsAnalysis = cms.PSet(
        phiMin = cms.double(-3.2),
        ptBin = cms.int32(200),
        SegmentsTrackAssociatorParameters = cms.PSet(
            segmentsDt = cms.untracked.InputTag("dt4DSegments"),
            SelectedSegments = cms.untracked.InputTag("SelectedSegments"),
            segmentsCSC = cms.untracked.InputTag("cscSegments")
        ),
        ptMin = cms.double(0.0),
        etaMin = cms.double(-3.0),
        etaBin = cms.int32(100),
        phiBin = cms.int32(100),
        ptMax = cms.double(200.0),
        etaMax = cms.double(3.0),
        phiMax = cms.double(3.2)
    ),
    GlobalMuTrackCollection = cms.InputTag("globalMuons"),
    SeedCollection = cms.InputTag("ancientMuonSeed"),
    muonRecoAnalysis = cms.PSet(
        ptBin = cms.int32(500),
        thetaBin = cms.int32(100),
        pResMin = cms.double(-0.01),
        rhMin = cms.double(0.0),
        pMin = cms.double(0.0),
        etaMin = cms.double(-3.0),
        etaMax = cms.double(3.0),
        pMax = cms.double(500.0),
        chi2Min = cms.double(0),
        thetaMin = cms.double(0.0),
        phiMin = cms.double(-3.2),
        rhBin = cms.int32(25),
        pResMax = cms.double(0.01),
        thetaMax = cms.double(3.2),
        rhMax = cms.double(1.001),
        etaBin = cms.int32(100),
        pBin = cms.int32(500),
        ptMax = cms.double(500.0),
        ptMin = cms.double(0.0),
        phiMax = cms.double(3.2),
        pResBin = cms.int32(50),
        phiBin = cms.int32(100),
        chi2Max = cms.double(50),
        chi2Bin = cms.int32(100)
    ),
    DoMuonKinVsEtaAnalysis = cms.untracked.bool(True),
    DoMuonSeedAnalysis = cms.untracked.bool(True),
    DoTrackSegmentsAnalysis = cms.untracked.bool(True),
    seedsAnalysis = cms.PSet(
        phiErrMax = cms.double(3.2),
        pxyzErrMin = cms.double(-100.0),
        seedPxyzMin = cms.double(-50.0),
        pxyzErrMax = cms.double(100.0),
        RecHitBin = cms.int32(25),
        etaErrMin = cms.double(0.0),
        seedPtMin = cms.double(0.0),
        seedPxyzBin = cms.int32(100),
        ThetaBin = cms.int32(100),
        RecHitMin = cms.double(0.0),
        EtaMin = cms.double(-3.0),
        pErrBin = cms.int32(200),
        phiErrBin = cms.int32(160),
        EtaMax = cms.double(3.0),
        etaErrBin = cms.int32(200),
        seedPxyzMax = cms.double(50.0),
        ThetaMin = cms.double(0.0),
        PhiMin = cms.double(-3.2),
        pxyzErrBin = cms.int32(100),
        RecHitMax = cms.double(25.0),
        ThetaMax = cms.double(3.2),
        etaErrMax = cms.double(0.5),
        EtaBin = cms.int32(100),
        pErrMax = cms.double(200.0),
        seedPtMax = cms.double(200.0),
        seedPtBin = cms.int32(1000),
        phiErrMin = cms.double(0.0),
        PhiBin = cms.int32(100),
        debug = cms.bool(False),
        pErrMin = cms.double(0.0),
        PhiMax = cms.double(3.2)
    ),
    muonKinVsEtaAnalysis = cms.PSet(
        etaECMin = cms.double(0.9),
        etaBMin = cms.double(0.0),
        ptBin = cms.int32(500),
        phiMin = cms.double(-3.2),
        pBin = cms.int32(500),
        etaECMax = cms.double(2.4),
        etaBMax = cms.double(1.1),
        pMin = cms.double(0.0),
        etaBin = cms.int32(100),
        etaMin = cms.double(-3.0),
        ptMin = cms.double(0.0),
        phiBin = cms.int32(100),
        etaOvlpMin = cms.double(0.9),
        etaOvlpMax = cms.double(1.1),
        ptMax = cms.double(500.0),
        etaMax = cms.double(3.0),
        pMax = cms.double(500.0),
        phiMax = cms.double(3.2)
    ),
    DoMuonEnergyAnalysis = cms.untracked.bool(True),
    STAMuTrackCollection = cms.InputTag("standAloneMuons"),
    DoMuonRecoAnalysis = cms.untracked.bool(True),
    OutputFileName = cms.string('MuonMonitoring.root'),
    MuonCollection = cms.InputTag("muons"),
    muonEnergyAnalysis = cms.PSet(
        hadS9SizeMin = cms.double(0.0),
        hoS9SizeMax = cms.double(4.0),
        emSizeMin = cms.double(0.0),
        emS9SizeBin = cms.int32(100),
        emS9SizeMin = cms.double(0.0),
        hoSizeMax = cms.double(4.0),
        hoS9SizeBin = cms.int32(100),
        hoSizeMin = cms.double(0.0),
        emSizeMax = cms.double(4.0),
        hadS9SizeMax = cms.double(10.0),
        hoS9SizeMin = cms.double(0.0),
        hadSizeMin = cms.double(0.0),
        hadSizeBin = cms.int32(200),
        hadS9SizeBin = cms.int32(200),
        debug = cms.bool(False),
        AlgoName = cms.string('muons'),
        emS9SizeMax = cms.double(4.0),
        hadSizeMax = cms.double(10.0),
        hoSizeBin = cms.int32(100),
        emSizeBin = cms.int32(100)
    )
)


process.muonClientsQualityTests = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtList = cms.untracked.FileInPath('DQMOffline/Muon/data/QualityTests2.xml')
)


process.muonComp2RefKolmoQualityTests = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtList = cms.untracked.FileInPath('DQMOffline/Muon/data/Mu_Comp2RefKolmogorov.xml')
)


process.muonComp2RefQualityTests = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtList = cms.untracked.FileInPath('DQMOffline/Muon/data/Mu_Comp2RefChi2.xml')
)


process.muonCosmicTestSummary = cms.EDAnalyzer("MuonTestSummary",
    expPeakHadS9_max = cms.double(3.0),
    resSegmTrack_rms_max = cms.double(1.1),
    resChargeLimit_tkSta = cms.double(0.18),
    expPeakHadS9_min = cms.double(1.0),
    expMultiplicityTk_max = cms.double(0.045),
    expMultiplicityTk_min = cms.double(0.0),
    chi2Spread = cms.double(0.2),
    matchesFractionDt_min = cms.double(0.75),
    resOneOvPSpread_glbSta = cms.double(0.05),
    matchesFractionDt_max = cms.double(1.0),
    resSegmTrack_mean_min = cms.double(-0.2),
    resSegmTrack_rms_min = cms.double(0.9),
    resSegmTrack_mean_max = cms.double(0.2),
    pullPhiSpread = cms.double(2.0),
    pullEtaSpread = cms.double(1.3),
    numMatchedExpected_min = cms.double(3.0),
    expMultiplicityGlb_min = cms.double(0.0),
    expMultiplicityGlb_max = cms.double(0.1),
    resEtaSpread_tkGlb = cms.double(0.001),
    expPeakEcalS9_max = cms.double(0.3),
    matchesFractionCsc_min = cms.double(0.75),
    expPeakEcalS9_min = cms.double(0.1),
    pullOneOvPSpread = cms.double(2.0),
    resOneOvPSpread_tkGlb = cms.double(0.001),
    matchesFractionCsc_max = cms.double(1.0),
    etaExpected = cms.double(0.5),
    resEtaSpread_glbSta = cms.double(0.05),
    phiExpected = cms.double(0.01),
    resChargeLimit_glbSta = cms.double(0.14),
    expMultiplicitySta_max = cms.double(0.95),
    resChargeLimit_tkGlb = cms.double(0.1),
    chi2Fraction = cms.double(0.4),
    resPhiSpread_tkGlb = cms.double(0.001),
    resPhiSpread_glbSta = cms.double(0.05),
    expMultiplicitySta_min = cms.double(0.75),
    numMatchedExpected_max = cms.double(5.0)
)


process.muonIdDQM = cms.EDAnalyzer("MuonIdDQM",
    baseFolder = cms.untracked.string('Muons/MuonIdDQM'),
    useGlobalMuonsNotTrackerMuons = cms.untracked.bool(False),
    useGlobalMuons = cms.untracked.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    useTrackerMuons = cms.untracked.bool(True),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    inputMuonCollection = cms.InputTag("muons"),
    useTrackerMuonsNotGlobalMuons = cms.untracked.bool(True)
)


process.muonIdDQMInVal = cms.EDAnalyzer("MuonIdDQM",
    baseFolder = cms.untracked.string('Muons/MuonIdentificationV'),
    useGlobalMuonsNotTrackerMuons = cms.untracked.bool(True),
    useGlobalMuons = cms.untracked.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    useTrackerMuonsNotGlobalMuons = cms.untracked.bool(True),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    inputMuonCollection = cms.InputTag("muons"),
    useTrackerMuons = cms.untracked.bool(True)
)


process.muonIdVal = cms.EDAnalyzer("MuonIdVal",
    makeAllChamberPlots = cms.untracked.bool(False),
    make2DPlots = cms.untracked.bool(False),
    baseFolder = cms.untracked.string('Muons/MuonIdentificationV'),
    useGlobalMuonsNotTrackerMuons = cms.untracked.bool(True),
    makeCosmicCompatibilityPlots = cms.untracked.bool(True),
    makeTimePlots = cms.untracked.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    inputMuonTimeExtraValueMap = cms.InputTag("muons"),
    useTrackerMuons = cms.untracked.bool(True),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    makeEnergyPlots = cms.untracked.bool(True),
    inputMuonCollection = cms.InputTag("muons"),
    useGlobalMuons = cms.untracked.bool(True),
    useTrackerMuonsNotGlobalMuons = cms.untracked.bool(True),
    inputMuonCosmicCompatibilityValueMap = cms.InputTag("cosmicsVeto")
)


process.muonSourcesQualityTests = cms.EDAnalyzer("QualityTester",
    prescaleFactor = cms.untracked.int32(1),
    qtList = cms.untracked.FileInPath('DQMOffline/Muon/data/QualityTests1.xml')
)


process.muonTestSummary = cms.EDAnalyzer("MuonTestSummary",
    resEtaSpread_glbSta = cms.double(0.05),
    resSegmTrack_rms_max = cms.double(1.1),
    resChargeLimit_tkSta = cms.double(0.18),
    expPeakHadS9_min = cms.double(1.0),
    expMultiplicityTk_max = cms.double(0.16),
    numMatchedExpected_min = cms.double(3.0),
    expMultiplicityTk_min = cms.double(0.08),
    matchesFractionDt_min = cms.double(0.75),
    resOneOvPSpread_glbSta = cms.double(0.05),
    matchesFractionDt_max = cms.double(1.0),
    resSegmTrack_mean_min = cms.double(-0.2),
    resSegmTrack_rms_min = cms.double(0.9),
    resSegmTrack_mean_max = cms.double(0.2),
    pullPhiSpread = cms.double(2.0),
    pullEtaSpread = cms.double(1.3),
    expMultiplicityGlb_min = cms.double(0.75),
    expMultiplicityGlb_max = cms.double(0.95),
    resEtaSpread_tkGlb = cms.double(0.001),
    expPeakEcalS9_max = cms.double(0.3),
    matchesFractionCsc_min = cms.double(0.75),
    chi2Spread = cms.double(0.2),
    expPeakEcalS9_min = cms.double(0.1),
    pullOneOvPSpread = cms.double(2.0),
    resOneOvPSpread_tkGlb = cms.double(0.001),
    matchesFractionCsc_max = cms.double(1.0),
    etaExpected = cms.double(1.0),
    expPeakHadS9_max = cms.double(3.0),
    phiExpected = cms.double(1.0),
    resChargeLimit_glbSta = cms.double(0.14),
    expMultiplicitySta_max = cms.double(0.02),
    resChargeLimit_tkGlb = cms.double(0.1),
    chi2Fraction = cms.double(0.4),
    resPhiSpread_tkGlb = cms.double(0.001),
    resPhiSpread_glbSta = cms.double(0.05),
    expMultiplicitySta_min = cms.double(0.01),
    numMatchedExpected_max = cms.double(5.0)
)


process.muondtdigianalyzer = cms.EDAnalyzer("MuonDTDigis",
    DigiLabel = cms.untracked.string('simMuonDTDigis'),
    SimHitLabel = cms.untracked.string('g4SimHits'),
    outputFile = cms.untracked.string(''),
    verbose = cms.untracked.bool(False)
)


process.offlineDQMMuonTrig = cms.EDAnalyzer("OfflineDQMMuonTrigAnalyzer",
    BeamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    RecoMuonInputTag = cms.InputTag("muons"),
    DQMStore = cms.untracked.bool(True),
    PhiParameters = cms.untracked.vdouble(20, -3.15, 3.15),
    ResParameters = cms.untracked.vdouble(20, -0.15, 0.15),
    PtParameters = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 20.0, 30.0, 40.0, 100.0, 
        200.0, 400.0),
    TriggerResultLabel = cms.InputTag("TriggerResults","","HLT"),
    HltAodInputTag = cms.InputTag("hltTriggerSummaryAOD"),
    L1DrCut = cms.untracked.double(0.4),
    histoFileName = cms.untracked.string('MuonTrigHistos_RECO.root'),
    matchType = cms.untracked.string('dr'),
    TriggerRegExpStrings = cms.vstring('HLT_L[12]Mu[^_]*$', 
        'HLT_[iI]soMu[^_]*$', 
        'HLT_Mu[^_]*$', 
        'HLT_L[12]DoubleMu[^_]*$', 
        'HLT_DoubleMu[^_]*$'),
    Z0Parameters = cms.untracked.vdouble(10, -15, 15),
    HltProcessName = cms.string('HLT'),
    HltRawInputTag = cms.InputTag("hltTriggerSummaryRAW"),
    customCollection = cms.VPSet(cms.untracked.PSet(
        d0cut = cms.untracked.double(2.0),
        collectionName = cms.untracked.string('allStandAloneMuons'),
        hltCuts = cms.untracked.string('abs(eta) < 2.0'),
        z0cut = cms.untracked.double(25.0),
        trackCollection = cms.untracked.string('outerTrack'),
        recoCuts = cms.untracked.string('abs(eta) < 2.0'),
        requiredTriggers = cms.untracked.vstring('')
    ), 
        cms.untracked.PSet(
            d0cut = cms.untracked.double(2.0),
            collectionName = cms.untracked.string('allTrackerMuons'),
            hltCuts = cms.untracked.string('abs(eta) < 2.0'),
            z0cut = cms.untracked.double(25.0),
            trackCollection = cms.untracked.string('innerTrack'),
            recoCuts = cms.untracked.string('abs(eta) < 2.0'),
            requiredTriggers = cms.untracked.vstring('')
        ), 
        cms.untracked.PSet(
            d0cut = cms.untracked.double(2.0),
            collectionName = cms.untracked.string('allMuons'),
            hltCuts = cms.untracked.string('abs(eta) < 2.0'),
            z0cut = cms.untracked.double(25.0),
            trackCollection = cms.untracked.string('globalTrack'),
            recoCuts = cms.untracked.string('abs(eta) < 2.0'),
            requiredTriggers = cms.untracked.vstring('')
        )),
    DrParameters = cms.untracked.vdouble(20, 0.0, 0.1),
    RequireRecoToMatchL1Seed = cms.untracked.bool(True),
    createStandAloneHistos = cms.untracked.bool(False),
    L2DrCut = cms.untracked.double(0.3),
    EtaParameters = cms.untracked.vdouble(20, -2.1, 2.1),
    D0Parameters = cms.untracked.vdouble(10, -0.5, 0.5),
    L3DrCut = cms.untracked.double(0.05)
)


process.pfJetDQMAnalyzer = cms.EDAnalyzer("PFJetDQMAnalyzer",
    BenchmarkLabel = cms.string('ParticleFlow/PFVsCalo'),
    DeltaEtaHistoParameter = cms.PSet(
        xMin = cms.double(-0.5),
        nBin = cms.int32(50),
        xMax = cms.double(0.5),
        switchOn = cms.bool(True)
    ),
    DeltaPtOvPtHistoParameter = cms.PSet(
        xMin = cms.double(-1.0),
        nBin = cms.int32(200),
        xMax = cms.double(1.0),
        switchOn = cms.bool(True)
    ),
    etaMin = cms.double(-10),
    etaMax = cms.double(10),
    phiMax = cms.double(3.14),
    phiMin = cms.double(-3.14),
    SkimParameter = cms.PSet(
        upperCutOffOnResolution = cms.double(1.5),
        lowerCutOffOnResolution = cms.double(-1.5),
        switchOn = cms.bool(True)
    ),
    ptMin = cms.double(0.0),
    deltaRMax = cms.double(0.1),
    ptMax = cms.double(999999),
    CreatePFractionHistos = cms.bool(False),
    matchCharge = cms.bool(False),
    MatchCollection = cms.InputTag("ak5CaloJets"),
    PhiHistoParameter = cms.PSet(
        xMin = cms.double(-3.1416),
        nBin = cms.int32(100),
        xMax = cms.double(3.1416),
        switchOn = cms.bool(True)
    ),
    EtaHistoParameter = cms.PSet(
        xMin = cms.double(-5.0),
        nBin = cms.int32(100),
        xMax = cms.double(5.0),
        switchOn = cms.bool(True)
    ),
    VariablePtBins = cms.vdouble(0.0, 1.0, 2.0, 5.0, 10.0, 
        20.0, 50.0, 100.0, 200.0, 400.0, 
        1000.0),
    DeltaPtHistoParameter = cms.PSet(
        xMin = cms.double(-50.0),
        nBin = cms.int32(100),
        xMax = cms.double(50.0),
        switchOn = cms.bool(True)
    ),
    ChargeHistoParameter = cms.PSet(
        xMin = cms.double(-1.5),
        nBin = cms.int32(3),
        xMax = cms.double(1.5),
        switchOn = cms.bool(False)
    ),
    DeltaPhiHistoParameter = cms.PSet(
        xMin = cms.double(-0.5),
        nBin = cms.int32(50),
        xMax = cms.double(0.5),
        switchOn = cms.bool(True)
    ),
    mode = cms.int32(1),
    InputCollection = cms.InputTag("ak5PFJets"),
    PtHistoParameter = cms.PSet(
        xMin = cms.double(0.0),
        nBin = cms.int32(50),
        xMax = cms.double(100.0),
        switchOn = cms.bool(True)
    )
)


process.pfJetValidation1 = cms.EDAnalyzer("PFJetDQMAnalyzer",
    BenchmarkLabel = cms.string('PFJetValidation/CompWithGenJet'),
    DeltaEtaHistoParameter = cms.PSet(
        xMin = cms.double(-0.5),
        nBin = cms.int32(50),
        xMax = cms.double(0.5),
        switchOn = cms.bool(True)
    ),
    DeltaPtOvPtHistoParameter = cms.PSet(
        xMin = cms.double(-1.0),
        nBin = cms.int32(200),
        xMax = cms.double(1.0),
        switchOn = cms.bool(True)
    ),
    etaMin = cms.double(-10),
    etaMax = cms.double(10),
    phiMax = cms.double(3.14),
    phiMin = cms.double(-3.14),
    SkimParameter = cms.PSet(
        upperCutOffOnResolution = cms.double(1.5),
        lowerCutOffOnResolution = cms.double(-1.5),
        switchOn = cms.bool(True)
    ),
    ptMin = cms.double(0.0),
    deltaRMax = cms.double(0.1),
    ptMax = cms.double(999999),
    CreatePFractionHistos = cms.bool(False),
    matchCharge = cms.bool(False),
    MatchCollection = cms.InputTag("ak5GenJets"),
    PhiHistoParameter = cms.PSet(
        xMin = cms.double(-3.1416),
        nBin = cms.int32(100),
        xMax = cms.double(3.1416),
        switchOn = cms.bool(True)
    ),
    EtaHistoParameter = cms.PSet(
        xMin = cms.double(-5.0),
        nBin = cms.int32(100),
        xMax = cms.double(5.0),
        switchOn = cms.bool(True)
    ),
    VariablePtBins = cms.vdouble(0.0, 1.0, 2.0, 5.0, 10.0, 
        20.0, 50.0, 100.0, 200.0, 400.0, 
        1000.0),
    DeltaPtHistoParameter = cms.PSet(
        xMin = cms.double(-50.0),
        nBin = cms.int32(100),
        xMax = cms.double(50.0),
        switchOn = cms.bool(True)
    ),
    ChargeHistoParameter = cms.PSet(
        xMin = cms.double(-1.5),
        nBin = cms.int32(3),
        xMax = cms.double(1.5),
        switchOn = cms.bool(False)
    ),
    DeltaPhiHistoParameter = cms.PSet(
        xMin = cms.double(-0.5),
        nBin = cms.int32(50),
        xMax = cms.double(0.5),
        switchOn = cms.bool(True)
    ),
    mode = cms.int32(1),
    InputCollection = cms.InputTag("ak5PFJets"),
    PtHistoParameter = cms.PSet(
        xMin = cms.double(0.0),
        nBin = cms.int32(50),
        xMax = cms.double(100.0),
        switchOn = cms.bool(True)
    )
)


process.pfJetValidation2 = cms.EDAnalyzer("PFJetDQMAnalyzer",
    BenchmarkLabel = cms.string('PFJetValidation/CompWithCaloJet'),
    DeltaEtaHistoParameter = cms.PSet(
        xMin = cms.double(-0.5),
        nBin = cms.int32(50),
        xMax = cms.double(0.5),
        switchOn = cms.bool(True)
    ),
    DeltaPtOvPtHistoParameter = cms.PSet(
        xMin = cms.double(-1.0),
        nBin = cms.int32(200),
        xMax = cms.double(1.0),
        switchOn = cms.bool(True)
    ),
    etaMin = cms.double(-10),
    etaMax = cms.double(10),
    phiMax = cms.double(3.14),
    phiMin = cms.double(-3.14),
    SkimParameter = cms.PSet(
        upperCutOffOnResolution = cms.double(1.5),
        lowerCutOffOnResolution = cms.double(-1.5),
        switchOn = cms.bool(False)
    ),
    ptMin = cms.double(0.0),
    deltaRMax = cms.double(0.1),
    ptMax = cms.double(999999),
    CreatePFractionHistos = cms.bool(False),
    matchCharge = cms.bool(False),
    MatchCollection = cms.InputTag("ak5CaloJets"),
    PhiHistoParameter = cms.PSet(
        xMin = cms.double(-3.1416),
        nBin = cms.int32(100),
        xMax = cms.double(3.1416),
        switchOn = cms.bool(True)
    ),
    EtaHistoParameter = cms.PSet(
        xMin = cms.double(-5.0),
        nBin = cms.int32(100),
        xMax = cms.double(5.0),
        switchOn = cms.bool(True)
    ),
    VariablePtBins = cms.vdouble(0.0, 1.0, 2.0, 5.0, 10.0, 
        20.0, 50.0, 100.0, 200.0, 400.0, 
        1000.0),
    DeltaPtHistoParameter = cms.PSet(
        xMin = cms.double(-50.0),
        nBin = cms.int32(100),
        xMax = cms.double(50.0),
        switchOn = cms.bool(True)
    ),
    ChargeHistoParameter = cms.PSet(
        xMin = cms.double(-1.5),
        nBin = cms.int32(3),
        xMax = cms.double(1.5),
        switchOn = cms.bool(False)
    ),
    DeltaPhiHistoParameter = cms.PSet(
        xMin = cms.double(-0.5),
        nBin = cms.int32(50),
        xMax = cms.double(0.5),
        switchOn = cms.bool(True)
    ),
    mode = cms.int32(1),
    InputCollection = cms.InputTag("ak5PFJets"),
    PtHistoParameter = cms.PSet(
        xMin = cms.double(0.0),
        nBin = cms.int32(50),
        xMax = cms.double(100.0),
        switchOn = cms.bool(True)
    )
)


process.pfMETDQMAnalyzer = cms.EDAnalyzer("PFMETDQMAnalyzer",
    BenchmarkLabel = cms.string('PFMET/CompWithCaloMET'),
    DeltaEtaHistoParameter = cms.PSet(
        xMin = cms.double(-0.5),
        nBin = cms.int32(50),
        xMax = cms.double(0.5),
        switchOn = cms.bool(False)
    ),
    DeltaPtOvPtHistoParameter = cms.PSet(
        xMin = cms.double(-1.0),
        nBin = cms.int32(100),
        xMax = cms.double(1.0),
        switchOn = cms.bool(True)
    ),
    SumEtHistoParameter = cms.PSet(
        xMin = cms.double(0.0),
        nBin = cms.int32(100),
        xMax = cms.double(1000.0),
        switchOn = cms.bool(True)
    ),
    PxHistoParameter = cms.PSet(
        xMin = cms.double(0.0),
        nBin = cms.int32(50),
        xMax = cms.double(200.0),
        switchOn = cms.bool(True)
    ),
    etaMin = cms.double(-10),
    etaMax = cms.double(10),
    phiMax = cms.double(3.14),
    phiMin = cms.double(-3.14),
    CreateMETSpecificHistos = cms.bool(True),
    SkimParameter = cms.PSet(
        upperCutOffOnResolution = cms.double(1.5),
        lowerCutOffOnResolution = cms.double(-1.5),
        switchOn = cms.bool(True)
    ),
    ptMin = cms.double(0.0),
    ptMax = cms.double(999999),
    DeltaSumEtOvSumEtHistoParameter = cms.PSet(
        xMin = cms.double(-1.0),
        nBin = cms.int32(100),
        xMax = cms.double(1.0),
        switchOn = cms.bool(True)
    ),
    DeltaPxHistoParameter = cms.PSet(
        xMin = cms.double(-500.0),
        nBin = cms.int32(50),
        xMax = cms.double(500.0),
        switchOn = cms.bool(True)
    ),
    MatchCollection = cms.InputTag("met"),
    PhiHistoParameter = cms.PSet(
        xMin = cms.double(-3.1416),
        nBin = cms.int32(50),
        xMax = cms.double(3.1416),
        switchOn = cms.bool(True)
    ),
    EtaHistoParameter = cms.PSet(
        xMin = cms.double(-5.0),
        nBin = cms.int32(100),
        xMax = cms.double(5.0),
        switchOn = cms.bool(False)
    ),
    VariablePtBins = cms.vdouble(0.0, 1.0, 2.0, 5.0, 10.0, 
        15.0, 20.0, 30.0, 50.0, 100.0, 
        250.0),
    DeltaSumEtHistoParameter = cms.PSet(
        xMin = cms.double(-150.0),
        nBin = cms.int32(100),
        xMax = cms.double(150.0),
        switchOn = cms.bool(True)
    ),
    DeltaPtHistoParameter = cms.PSet(
        xMin = cms.double(-500.0),
        nBin = cms.int32(50),
        xMax = cms.double(500.0),
        switchOn = cms.bool(True)
    ),
    ChargeHistoParameter = cms.PSet(
        xMin = cms.double(-1.5),
        nBin = cms.int32(3),
        xMax = cms.double(1.5),
        switchOn = cms.bool(False)
    ),
    DeltaPhiHistoParameter = cms.PSet(
        xMin = cms.double(-3.2),
        nBin = cms.int32(50),
        xMax = cms.double(3.2),
        switchOn = cms.bool(True)
    ),
    mode = cms.int32(1),
    InputCollection = cms.InputTag("pfMet"),
    PtHistoParameter = cms.PSet(
        xMin = cms.double(0.0),
        nBin = cms.int32(100),
        xMax = cms.double(200.0),
        switchOn = cms.bool(True)
    )
)


process.pfMETValidation1 = cms.EDAnalyzer("PFMETDQMAnalyzer",
    BenchmarkLabel = cms.string('PFMETValidation/CompWithGenMET'),
    DeltaEtaHistoParameter = cms.PSet(
        xMin = cms.double(-0.5),
        nBin = cms.int32(50),
        xMax = cms.double(0.5),
        switchOn = cms.bool(False)
    ),
    DeltaPtOvPtHistoParameter = cms.PSet(
        xMin = cms.double(-1.0),
        nBin = cms.int32(100),
        xMax = cms.double(1.0),
        switchOn = cms.bool(True)
    ),
    SumEtHistoParameter = cms.PSet(
        xMin = cms.double(0.0),
        nBin = cms.int32(100),
        xMax = cms.double(1000.0),
        switchOn = cms.bool(True)
    ),
    PxHistoParameter = cms.PSet(
        xMin = cms.double(0.0),
        nBin = cms.int32(50),
        xMax = cms.double(200.0),
        switchOn = cms.bool(True)
    ),
    etaMin = cms.double(-10),
    etaMax = cms.double(10),
    phiMax = cms.double(3.14),
    phiMin = cms.double(-3.14),
    CreateMETSpecificHistos = cms.bool(True),
    SkimParameter = cms.PSet(
        upperCutOffOnResolution = cms.double(1.5),
        lowerCutOffOnResolution = cms.double(-1.5),
        switchOn = cms.bool(True)
    ),
    ptMin = cms.double(0.0),
    ptMax = cms.double(999999),
    DeltaSumEtOvSumEtHistoParameter = cms.PSet(
        xMin = cms.double(-1.0),
        nBin = cms.int32(100),
        xMax = cms.double(1.0),
        switchOn = cms.bool(True)
    ),
    DeltaPxHistoParameter = cms.PSet(
        xMin = cms.double(-500.0),
        nBin = cms.int32(50),
        xMax = cms.double(500.0),
        switchOn = cms.bool(True)
    ),
    MatchCollection = cms.InputTag("genMetTrue"),
    PhiHistoParameter = cms.PSet(
        xMin = cms.double(-3.1416),
        nBin = cms.int32(50),
        xMax = cms.double(3.1416),
        switchOn = cms.bool(True)
    ),
    EtaHistoParameter = cms.PSet(
        xMin = cms.double(-5.0),
        nBin = cms.int32(100),
        xMax = cms.double(5.0),
        switchOn = cms.bool(False)
    ),
    VariablePtBins = cms.vdouble(0.0, 1.0, 2.0, 5.0, 10.0, 
        15.0, 20.0, 30.0, 50.0, 100.0, 
        250.0),
    DeltaSumEtHistoParameter = cms.PSet(
        xMin = cms.double(-150.0),
        nBin = cms.int32(100),
        xMax = cms.double(150.0),
        switchOn = cms.bool(True)
    ),
    DeltaPtHistoParameter = cms.PSet(
        xMin = cms.double(-500.0),
        nBin = cms.int32(50),
        xMax = cms.double(500.0),
        switchOn = cms.bool(True)
    ),
    ChargeHistoParameter = cms.PSet(
        xMin = cms.double(-1.5),
        nBin = cms.int32(3),
        xMax = cms.double(1.5),
        switchOn = cms.bool(False)
    ),
    DeltaPhiHistoParameter = cms.PSet(
        xMin = cms.double(-3.2),
        nBin = cms.int32(50),
        xMax = cms.double(3.2),
        switchOn = cms.bool(True)
    ),
    mode = cms.int32(1),
    InputCollection = cms.InputTag("pfMet"),
    PtHistoParameter = cms.PSet(
        xMin = cms.double(0.0),
        nBin = cms.int32(100),
        xMax = cms.double(200.0),
        switchOn = cms.bool(True)
    )
)


process.pfMETValidation2 = cms.EDAnalyzer("PFMETDQMAnalyzer",
    BenchmarkLabel = cms.string('PFMETValidation/CompWithCaloMET'),
    DeltaEtaHistoParameter = cms.PSet(
        xMin = cms.double(-0.5),
        nBin = cms.int32(50),
        xMax = cms.double(0.5),
        switchOn = cms.bool(False)
    ),
    DeltaPtOvPtHistoParameter = cms.PSet(
        xMin = cms.double(-1.0),
        nBin = cms.int32(100),
        xMax = cms.double(1.0),
        switchOn = cms.bool(True)
    ),
    SumEtHistoParameter = cms.PSet(
        xMin = cms.double(0.0),
        nBin = cms.int32(100),
        xMax = cms.double(1000.0),
        switchOn = cms.bool(True)
    ),
    PxHistoParameter = cms.PSet(
        xMin = cms.double(0.0),
        nBin = cms.int32(50),
        xMax = cms.double(200.0),
        switchOn = cms.bool(True)
    ),
    etaMin = cms.double(-10),
    etaMax = cms.double(10),
    phiMax = cms.double(3.14),
    phiMin = cms.double(-3.14),
    CreateMETSpecificHistos = cms.bool(True),
    SkimParameter = cms.PSet(
        upperCutOffOnResolution = cms.double(1.5),
        lowerCutOffOnResolution = cms.double(-1.5),
        switchOn = cms.bool(False)
    ),
    ptMin = cms.double(0.0),
    ptMax = cms.double(999999),
    DeltaSumEtOvSumEtHistoParameter = cms.PSet(
        xMin = cms.double(-1.0),
        nBin = cms.int32(100),
        xMax = cms.double(1.0),
        switchOn = cms.bool(True)
    ),
    DeltaPxHistoParameter = cms.PSet(
        xMin = cms.double(-500.0),
        nBin = cms.int32(50),
        xMax = cms.double(500.0),
        switchOn = cms.bool(True)
    ),
    MatchCollection = cms.InputTag("met"),
    PhiHistoParameter = cms.PSet(
        xMin = cms.double(-3.1416),
        nBin = cms.int32(50),
        xMax = cms.double(3.1416),
        switchOn = cms.bool(True)
    ),
    EtaHistoParameter = cms.PSet(
        xMin = cms.double(-5.0),
        nBin = cms.int32(100),
        xMax = cms.double(5.0),
        switchOn = cms.bool(False)
    ),
    VariablePtBins = cms.vdouble(0.0, 1.0, 2.0, 5.0, 10.0, 
        15.0, 20.0, 30.0, 50.0, 100.0, 
        250.0),
    DeltaSumEtHistoParameter = cms.PSet(
        xMin = cms.double(-150.0),
        nBin = cms.int32(100),
        xMax = cms.double(150.0),
        switchOn = cms.bool(True)
    ),
    DeltaPtHistoParameter = cms.PSet(
        xMin = cms.double(-500.0),
        nBin = cms.int32(50),
        xMax = cms.double(500.0),
        switchOn = cms.bool(True)
    ),
    ChargeHistoParameter = cms.PSet(
        xMin = cms.double(-1.5),
        nBin = cms.int32(3),
        xMax = cms.double(1.5),
        switchOn = cms.bool(False)
    ),
    DeltaPhiHistoParameter = cms.PSet(
        xMin = cms.double(-3.2),
        nBin = cms.int32(50),
        xMax = cms.double(3.2),
        switchOn = cms.bool(True)
    ),
    mode = cms.int32(1),
    InputCollection = cms.InputTag("pfMet"),
    PtHistoParameter = cms.PSet(
        xMin = cms.double(0.0),
        nBin = cms.int32(100),
        xMax = cms.double(200.0),
        switchOn = cms.bool(True)
    )
)


process.pfMetAnalyzer = cms.EDAnalyzer("METTester",
    FineBinning = cms.untracked.bool(False),
    OutputFile = cms.untracked.string('output.root'),
    InputMETLabel = cms.InputTag("pfMet"),
    METType = cms.untracked.string('PFMET'),
    FolderName = cms.untracked.string('JetMET/METv/')
)


process.photonAnalysis = cms.EDAnalyzer("PhotonAnalyzer",
    dEtaTracksMin = cms.double(-0.2),
    rMin = cms.double(0),
    prescaleFactor = cms.untracked.int32(1),
    eMin = cms.double(0.0),
    sumMin = cms.double(-3.0),
    eOverPBin = cms.int32(100),
    dEtaTracksMax = cms.double(0.2),
    sigmaIetaMax = cms.double(0.05),
    cutStep = cms.double(20.0),
    etaMin = cms.double(-2.5),
    sigmaIetaMin = cms.double(0.0),
    xMax = cms.double(60),
    etBin = cms.int32(500),
    etaMax = cms.double(2.5),
    numberMax = cms.double(10),
    chi2Min = cms.double(0.0),
    phiMin = cms.double(-3.14),
    isHeavyIon = cms.untracked.bool(False),
    zMax = cms.double(200),
    endcapRecHitCollection = cms.string(''),
    numberBin = cms.int32(10),
    useBinning = cms.bool(False),
    dPhiTracksBin = cms.int32(100),
    eOverPMin = cms.double(0.0),
    rMax = cms.double(80),
    OutputFileName = cms.string('DQMOfflinePhotonsAfterFirstStep.root'),
    photonCollection = cms.string(''),
    hOverEBin = cms.int32(200),
    etaBin = cms.int32(200),
    dEtaTracksBin = cms.int32(100),
    sumMax = cms.double(20.0),
    xMin = cms.double(-60),
    hOverEMax = cms.double(0.5),
    phiMax = cms.double(3.14),
    eBin = cms.int32(500),
    zMin = cms.double(-200),
    eOverPMax = cms.double(5.0),
    yMax = cms.double(60),
    standAlone = cms.bool(False),
    numberOfSteps = cms.int32(1),
    Verbosity = cms.untracked.int32(0),
    etMin = cms.double(0.0),
    endcapRecHitProducer = cms.string('reducedEcalRecHitsEE'),
    dPhiTracksMin = cms.double(-0.5),
    r9Min = cms.double(0.0),
    hOverEMin = cms.double(0),
    rBin = cms.int32(400),
    phiBin = cms.int32(200),
    sigmaIetaBin = cms.int32(200),
    barrelRecHitCollection = cms.string(''),
    yBin = cms.int32(600),
    isolationStrength = cms.int32(0),
    r9Max = cms.double(1.2),
    numberMin = cms.double(0),
    etMax = cms.double(500.0),
    yMin = cms.double(-60),
    dPhiTracksMax = cms.double(0.5),
    phoProducer = cms.string('photons'),
    barrelRecHitProducer = cms.string('reducedEcalRecHitsEB'),
    r9Bin = cms.int32(120),
    zBin = cms.int32(400),
    xBin = cms.int32(600),
    useTriggerFiltering = cms.bool(False),
    chi2Max = cms.double(20.0),
    minPhoEtCut = cms.double(20.0),
    invMassEtCut = cms.double(20.0),
    eMax = cms.double(500.0),
    chi2Bin = cms.int32(100),
    Name = cms.untracked.string('photonAnalysis'),
    sumBin = cms.int32(230),
    triggerEvent = cms.InputTag("hltTriggerSummaryAOD"),
    OutputMEsInRootFile = cms.bool(False)
)


process.photonValidation = cms.EDAnalyzer("PhotonValidator",
    conversionIOTrackProducer = cms.string('ckfInOutTracksFromConversions'),
    minTrackPtCut = cms.double(1.5),
    minBcEtCut = cms.double(0.0),
    phiMax = cms.double(3.14),
    phiMin = cms.double(-3.14),
    zMax = cms.double(220),
    zMin = cms.double(-220.0),
    isRunCentrally = cms.bool(True),
    dEtaMax = cms.double(0.2),
    inOutTrackCollection = cms.string(''),
    label_tp = cms.InputTag("tpSelection"),
    trackProducer = cms.InputTag("generalTracks"),
    dPhiMax = cms.double(0.05),
    dCotCutOn = cms.bool(False),
    phiBin = cms.int32(100),
    dCotTracksBin = cms.int32(100),
    zMaxForXray = cms.double(280.0),
    dEtaMin = cms.double(-0.2),
    fastSim = cms.bool(False),
    hcalEtSumCut = cms.double(6.0),
    phoProducer = cms.string('photons'),
    dCotTracksMax = cms.double(2.0),
    ggMassMax = cms.double(160.0),
    ggMassMin = cms.double(60.0),
    minPhoEtCut = cms.double(10.0),
    povereBin = cms.int32(100),
    dPhiMin = cms.double(-0.05),
    dEtaTracksMin = cms.double(-0.2),
    povereMax = cms.double(5.0),
    convTrackMinPtCut = cms.double(1.0),
    eoverpBin = cms.int32(100),
    dEtaTracksMax = cms.double(0.2),
    chi2Min = cms.double(0.0),
    zBin2ForXray = cms.int32(560),
    lipCut = cms.double(2.0),
    dPhiTracksBin = cms.int32(100),
    rMax = cms.double(120),
    etaBin = cms.int32(100),
    dEtaTracksBin = cms.int32(100),
    outInTrackCollection = cms.string(''),
    resBin = cms.int32(100),
    zBinForXray = cms.int32(100),
    hbheModule = cms.string('hbhereco'),
    r9Min = cms.double(0.0),
    r9Max = cms.double(1.1),
    maxNumOfTracksInCone = cms.int32(3),
    etaBin2 = cms.int32(25),
    etScale = cms.double(0.1),
    scBarrelProducer = cms.string('correctedHybridSuperClusters'),
    zMinForXray = cms.double(0.0),
    hcalIsolExtR = cms.double(0.3),
    rMin = cms.double(0.0),
    hcalIsolInnR = cms.double(0.0),
    scEndcapProducer = cms.string('correctedMulti5x5SuperClustersWithPreshower'),
    ggMassBin = cms.int32(200),
    OutputFileName = cms.string('PhotonValidationHistos.root'),
    dCotTracksMin = cms.double(-2.0),
    photonCollection = cms.string(''),
    conversionOITrackProducer = cms.string('ckfOutInTracksFromConversions'),
    hbheInstance = cms.string(''),
    dCotHardCutValue = cms.double(0.02),
    Verbosity = cms.untracked.int32(0),
    dPhiBin = cms.int32(100),
    rMinForXray = cms.double(0.0),
    trkIsolInnR = cms.double(0.03),
    ecalIsolR = cms.double(0.35),
    etMin = cms.double(0.0),
    eBin = cms.int32(100),
    etMax = cms.double(250.0),
    minHcalHitEtCut = cms.double(0.0),
    povereMin = cms.double(0.0),
    chi2Max = cms.double(20.0),
    trkPtSumCut = cms.double(9999.0),
    ecalEtSumCut = cms.double(5.0),
    eMin = cms.double(0.0),
    dCotCutValue = cms.double(0.05),
    etaMin = cms.double(-2.5),
    rMaxForXray = cms.double(80.0),
    rBinForXray = cms.int32(200),
    etBin = cms.int32(100),
    etaMax = cms.double(2.5),
    likelihoodCut = cms.double(0.0),
    r9Bin = cms.int32(100),
    eMax = cms.double(500.0),
    eoverpMin = cms.double(0.0),
    dEtaBin = cms.int32(100),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    eoverpMax = cms.double(5.0),
    Name = cms.untracked.string('photonValidation'),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    dPhiTracksMin = cms.double(-0.5),
    rBin = cms.int32(48),
    resMax = cms.double(1.2),
    trkIsolExtR = cms.double(0.3),
    dPhiTracksMax = cms.double(0.5),
    zBin = cms.int32(100),
    useTP = cms.bool(True),
    resMin = cms.double(0.7)
)


process.piZeroAnalysis = cms.EDAnalyzer("PiZeroAnalyzer",
    OutputMEsInRootFile = cms.bool(False),
    seleS4S9GammaOne = cms.double(0.85),
    seleMinvMaxPi0 = cms.double(0.5),
    selePi0BeltDR = cms.double(0.2),
    selePtGammaOne = cms.double(0.9),
    ParameterX0 = cms.double(0.89),
    seleXtalMinEnergy = cms.double(0.0),
    selePtPi0 = cms.double(2.5),
    clusSeedThr = cms.double(0.5),
    clusPhiSize = cms.int32(3),
    posCalcParameters = cms.PSet(
        T0_barl = cms.double(5.7),
        LogWeighted = cms.bool(True),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    OutputFileName = cms.string('DQMOfflinePiZero.root'),
    clusEtaSize = cms.int32(3),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    selePi0Iso = cms.double(0.5),
    ParameterW0 = cms.double(4.2),
    Name = cms.untracked.string('piZeroAnalysis'),
    standAlone = cms.bool(False),
    Verbosity = cms.untracked.int32(0),
    selePi0BeltDeta = cms.double(0.05),
    ParameterLogWeighted = cms.bool(True),
    seleS4S9GammaTwo = cms.double(0.85),
    seleMinvMinPi0 = cms.double(0.0),
    selePtGammaTwo = cms.double(0.9),
    ParameterT0_barl = cms.double(5.7)
)


process.pixRecHitsValid = cms.EDAnalyzer("SiPixelRecHitsValid",
    src = cms.InputTag("siPixelRecHits"),
    outputFile = cms.untracked.string(''),
    associatePixel = cms.bool(True),
    verbose = cms.untracked.bool(False),
    associateRecoTracks = cms.bool(False),
    associateStrip = cms.bool(False),
    ROUList = cms.vstring('g4SimHitsTrackerHitsPixelBarrelLowTof', 
        'g4SimHitsTrackerHitsPixelBarrelHighTof', 
        'g4SimHitsTrackerHitsPixelEndcapLowTof', 
        'g4SimHitsTrackerHitsPixelEndcapHighTof')
)


process.pixelDigisValid = cms.EDAnalyzer("SiPixelDigiValid",
    src = cms.InputTag("simSiPixelDigis"),
    outputFile = cms.untracked.string('')
)


process.postProcessorTrack = cms.EDAnalyzer("DQMGenericClient",
    profile = cms.vstring("chi2mean \'mean #chi^{2} vs #eta\' chi2_vs_eta", 
        "chi2mean_vs_phi \'mean #chi^{2} vs #phi\' chi2_vs_phi", 
        "chi2mean_vs_nhits \'mean #chi^{2} vs n. hits\' chi2_vs_nhits", 
        "hits_eta \'mean #hits vs eta\' nhits_vs_eta", 
        "hits_phi \'mean #hits vs #phi\' nhits_vs_phi", 
        "losthits_eta \'mean #lost hits vs #eta\' nlosthits_vs_eta", 
        "PXBhits_eta \'mean # PXB hits vs #eta\' nPXBhits_vs_eta", 
        "PXFhits_eta \'mean # PXF hits vs #eta\' nPXFhits_vs_eta", 
        "TIBhits_eta \'mean # TIB hits vs #eta\' nTIBhits_vs_eta", 
        "TIDhits_eta \'mean # TID hits vs #eta\' nTIDhits_vs_eta", 
        "TOBhits_eta \'mean # TOB hits vs #eta\' nTOBhits_vs_eta", 
        "TEChits_eta \'mean # TEC hits vs #eta\' nTEChits_vs_eta", 
        "LayersWithMeas_eta \'mean # LayersWithMeas vs #eta\' nLayersWithMeas_vs_eta", 
        "PXLlayersWith2dMeas \'mean # PXLlayersWithMeas vs #eta\' nPXLlayersWith2dMeas", 
        "STRIPlayersWithMeas_eta \'mean # STRIPlayersWithMeas vs #eta\' nSTRIPlayersWithMeas_eta", 
        "STRIPlayersWith1dMeas_eta \'mean # STRIPlayersWith1dMeas vs #eta\' nSTRIPlayersWith1dMeas_eta", 
        "STRIPlayersWith2dMeas_eta \'mean # STRIPlayersWith2dMeas vs #eta\' nSTRIPlayersWith2dMeas_eta"),
    efficiency = cms.vstring("effic \'Efficiency vs #eta\' num_assoc(simToReco)_eta num_simul_eta", 
        "efficPt \'Efficiency vs p_{T}\' num_assoc(simToReco)_pT num_simul_pT", 
        "effic_vs_hit \'Efficiency vs hit\' num_assoc(simToReco)_hit num_simul_hit", 
        "effic_vs_phi \'Efficiency vs #phi\' num_assoc(simToReco)_phi num_simul_phi", 
        "effic_vs_dxy \'Efficiency vs Dxy\' num_assoc(simToReco)_dxy num_simul_dxy", 
        "effic_vs_dz \'Efficiency vs Dz\' num_assoc(simToReco)_dz num_simul_dz", 
        "effic_vs_vertpos \'Efficiency vs vertpos\' num_assoc(simToReco)_vertpos num_simul_vertpos", 
        "effic_vs_zpos \'Efficiency vs zpos\' num_assoc(simToReco)_zpos num_simul_zpos", 
        "fakerate \'Fake rate vs #eta\' num_assoc(recoToSim)_eta num_reco_eta fake", 
        "fakeratePt \'Fake rate vs p_{T}\' num_assoc(recoToSim)_pT num_reco_pT fake", 
        "fakerate_vs_hit \'Fake rate vs hit\' num_assoc(recoToSim)_hit num_reco_hit fake", 
        "fakerate_vs_phi \'Fake rate vs phi\' num_assoc(recoToSim)_phi num_reco_phi fake", 
        "fakerate_vs_dxy \'Fake rate vs dxy\' num_assoc(recoToSim)_dxy num_reco_dxy fake", 
        "fakerate_vs_dz \'Fake rate vs dz\' num_assoc(recoToSim)_dz num_reco_dz fake"),
    resolution = cms.vstring("cotThetares_vs_eta \'#sigma(cot(#theta)) vs #eta\' cotThetares_vs_eta", 
        "cotThetares_vs_pt \'#sigma(cot(#theta)) vs p_{T}\' cotThetares_vs_pt", 
        "h_dxypulleta \'d_{xy} Pull vs #eta\' dxypull_vs_eta", 
        "dxyres_vs_eta \'#sigma(d_{xy}) vs #eta\' dxyres_vs_eta", 
        "dxyres_vs_pt \'#sigma(d_{xy}) vs p_{T}\' dxyres_vs_pt", 
        "h_dzpulleta \'d_{z} Pull vs #eta\' dzpull_vs_eta", 
        "dzres_vs_eta \'#sigma(d_{z}) vs #eta\' dzres_vs_eta", 
        "dzres_vs_pt \'#sigma(d_{z}) vs p_{T}\' dzres_vs_pt", 
        "etares_vs_eta \'#sigma(#eta) vs #eta\' etares_vs_eta", 
        "h_phipulleta \'#phi Pull vs #eta\' phipull_vs_eta", 
        "h_phipullphi \'#phi Pull vs #phi\' phipull_vs_phi", 
        "phires_vs_eta \'#sigma(#phi) vs #eta\' phires_vs_eta", 
        "phires_vs_phi \'#sigma(#phi) vs #phi\' phires_vs_phi", 
        "phires_vs_pt \'#sigma(#phi) vs p_{T}\' phires_vs_pt", 
        "h_ptpulleta \'p_{T} Pull vs #eta\' ptpull_vs_eta", 
        "h_ptpullphi \'p_{T} Pull vs #phi\' ptpull_vs_phi", 
        "ptres_vs_eta \'#sigma(p_{T}) vs #eta\' ptres_vs_eta", 
        "ptres_vs_phi \'#sigma(p_{T}) vs #phi\' ptres_vs_phi", 
        "ptres_vs_pt \'#sigma(p_{T}) vs p_{T}\' ptres_vs_pt", 
        "h_thetapulleta \'#theta Pull vs #eta\' thetapull_vs_eta", 
        "h_thetapullphi \'#theta Pull vs #phi\' thetapull_vs_phi"),
    subDirs = cms.untracked.vstring('Tracking/Track/*'),
    outputFileName = cms.untracked.string('')
)


process.pvMonitor = cms.EDAnalyzer("PrimaryVertexMonitor",
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    vertexLabel = cms.InputTag("offlinePrimaryVertices")
)


process.qcdHighPtDQM = cms.EDAnalyzer("QcdHighPtDQM",
    metTag1 = cms.untracked.InputTag("met"),
    jetTag = cms.untracked.InputTag("ak5CaloJets"),
    metTag3 = cms.untracked.InputTag("metNoHF"),
    metTag2 = cms.untracked.InputTag("metHO"),
    metTag4 = cms.untracked.InputTag("metNoHFHO")
)


process.qcdPhotonsDQM = cms.EDAnalyzer("QcdPhotonsDQM",
    plotPhotonMaxEta = cms.double(5.0),
    minCaloJetPt = cms.double(5.0),
    minPhotonEt = cms.double(25.0),
    plotTheseTriggersToo = cms.vstring('HLT_Photon20_Cleaned_L1R', 
        'HLT_Photon30_Cleaned_L1R', 
        'HLT_Photon50_NoHE_Cleaned_L1R', 
        'HLT_DoublePhoton17_L1R'),
    triggerResultsCollection = cms.string('TriggerResults'),
    plotJetMaxEta = cms.double(5.0),
    vertexCollection = cms.InputTag("offlinePrimaryVertices"),
    caloJetCollection = cms.InputTag("ak5CaloJets"),
    hltMenu = cms.string('HLT'),
    photonCollection = cms.InputTag("photons"),
    requirePhotonFound = cms.bool(True),
    triggerPathToPass = cms.string('HLT_Photon20_Cleaned_L1R'),
    plotPhotonMaxEt = cms.double(200.0)
)


process.recoMuonVMuAssoc_glb = cms.EDAnalyzer("RecoMuonValidator",
    nBinEta = cms.untracked.uint32(50),
    tpSelector = cms.PSet(
        src = cms.InputTag("mergedtruth","MergedTrackTruth"),
        chargedOnly = cms.bool(True),
        pdgId = cms.vint32(13, -13),
        tip = cms.double(3.5),
        signalOnly = cms.bool(True),
        minRapidity = cms.double(-2.4),
        lip = cms.double(30.0),
        ptMin = cms.double(0.9),
        maxRapidity = cms.double(2.4),
        minHit = cms.int32(0),
        stableOnly = cms.bool(False)
    ),
    minErrEta = cms.untracked.double(-0.02),
    selection = cms.string('isGlobalMuon'),
    simLabel = cms.InputTag("mergedtruth","MergedTrackTruth"),
    minDz = cms.untracked.double(-25.0),
    maxEta = cms.untracked.double(2.5),
    maxP = cms.untracked.double(200.0),
    minErrDz = cms.untracked.double(-0.1),
    nAssoc = cms.untracked.uint32(10),
    nBinErr = cms.untracked.uint32(25),
    trackType = cms.string('global'),
    nBinDxy = cms.untracked.uint32(300),
    wPull = cms.untracked.double(10.0),
    nBinPull = cms.untracked.uint32(25),
    minErrPhi = cms.untracked.double(-0.1),
    muonLabel = cms.InputTag("muons"),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    nBinPt = cms.untracked.uint32(25),
    minErrP = cms.untracked.double(-0.2),
    doAbsEta = cms.untracked.bool(False),
    maxDz = cms.untracked.double(25.0),
    minP = cms.untracked.double(0.0),
    minErrPt = cms.untracked.double(-0.2),
    minErrDxy = cms.untracked.double(-0.1),
    muAssocLabel = cms.InputTag("muonAssociatorByHits_NoSimHits_global"),
    minPt = cms.untracked.double(0.0),
    maxErrP = cms.untracked.double(0.2),
    minEta = cms.untracked.double(-2.5),
    maxErrQPt = cms.untracked.double(5.0),
    outputFileName = cms.untracked.string(''),
    doAssoc = cms.untracked.bool(True),
    subDir = cms.untracked.string('Muons/RecoMuonV/RecoMuon_MuonAssoc_Glb'),
    maxPt = cms.untracked.double(200.0),
    nTrks = cms.untracked.uint32(50),
    maxDxy = cms.untracked.double(1.5),
    maxErrDxy = cms.untracked.double(0.1),
    maxErrPhi = cms.untracked.double(0.1),
    nBinP = cms.untracked.uint32(25),
    nBinDz = cms.untracked.uint32(200),
    maxErrEta = cms.untracked.double(0.02),
    maxErrDz = cms.untracked.double(0.1),
    minErrQPt = cms.untracked.double(-5.0),
    nBinPhi = cms.untracked.uint32(25),
    maxErrPt = cms.untracked.double(0.2),
    minDxy = cms.untracked.double(-1.5)
)


process.recoMuonVMuAssoc_glbPF = cms.EDAnalyzer("RecoMuonValidator",
    nBinEta = cms.untracked.uint32(50),
    tpSelector = cms.PSet(
        src = cms.InputTag("mergedtruth","MergedTrackTruth"),
        chargedOnly = cms.bool(True),
        pdgId = cms.vint32(13, -13),
        tip = cms.double(3.5),
        signalOnly = cms.bool(True),
        minRapidity = cms.double(-2.4),
        lip = cms.double(30.0),
        ptMin = cms.double(0.9),
        maxRapidity = cms.double(2.4),
        minHit = cms.int32(0),
        stableOnly = cms.bool(False)
    ),
    minErrEta = cms.untracked.double(-0.02),
    selection = cms.string('isGlobalMuon'),
    simLabel = cms.InputTag("mergedtruth","MergedTrackTruth"),
    minDz = cms.untracked.double(-25.0),
    maxEta = cms.untracked.double(2.5),
    maxP = cms.untracked.double(200.0),
    minErrDz = cms.untracked.double(-0.1),
    nAssoc = cms.untracked.uint32(10),
    nBinErr = cms.untracked.uint32(25),
    trackType = cms.string('global'),
    nBinDxy = cms.untracked.uint32(300),
    wPull = cms.untracked.double(10.0),
    nBinPull = cms.untracked.uint32(25),
    minErrPhi = cms.untracked.double(-0.1),
    muonLabel = cms.InputTag("recoMuonFromPFProducer"),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    nBinPt = cms.untracked.uint32(25),
    minErrP = cms.untracked.double(-0.2),
    doAbsEta = cms.untracked.bool(False),
    maxDz = cms.untracked.double(25.0),
    minP = cms.untracked.double(0.0),
    minErrPt = cms.untracked.double(-0.2),
    minErrDxy = cms.untracked.double(-0.1),
    muAssocLabel = cms.InputTag("muonAssociatorByHits_NoSimHits_globalPF"),
    minPt = cms.untracked.double(0.0),
    maxErrP = cms.untracked.double(0.2),
    minEta = cms.untracked.double(-2.5),
    maxErrQPt = cms.untracked.double(5.0),
    outputFileName = cms.untracked.string(''),
    doAssoc = cms.untracked.bool(True),
    subDir = cms.untracked.string('Muons/RecoMuonV/RecoMuon_MuonAssoc_GlbPF'),
    maxPt = cms.untracked.double(200.0),
    nTrks = cms.untracked.uint32(50),
    maxDxy = cms.untracked.double(1.5),
    maxErrDxy = cms.untracked.double(0.1),
    maxErrPhi = cms.untracked.double(0.1),
    nBinP = cms.untracked.uint32(25),
    nBinDz = cms.untracked.uint32(200),
    maxErrEta = cms.untracked.double(0.02),
    maxErrDz = cms.untracked.double(0.1),
    minErrQPt = cms.untracked.double(-5.0),
    nBinPhi = cms.untracked.uint32(25),
    maxErrPt = cms.untracked.double(0.2),
    minDxy = cms.untracked.double(-1.5)
)


process.recoMuonVMuAssoc_sta = cms.EDAnalyzer("RecoMuonValidator",
    nBinEta = cms.untracked.uint32(50),
    tpSelector = cms.PSet(
        src = cms.InputTag("mergedtruth","MergedTrackTruth"),
        chargedOnly = cms.bool(True),
        pdgId = cms.vint32(13, -13),
        tip = cms.double(3.5),
        signalOnly = cms.bool(True),
        minRapidity = cms.double(-2.4),
        lip = cms.double(30.0),
        ptMin = cms.double(0.9),
        maxRapidity = cms.double(2.4),
        minHit = cms.int32(0),
        stableOnly = cms.bool(False)
    ),
    minErrEta = cms.untracked.double(-0.02),
    selection = cms.string('isStandAloneMuon'),
    simLabel = cms.InputTag("mergedtruth","MergedTrackTruth"),
    minDz = cms.untracked.double(-25.0),
    maxEta = cms.untracked.double(2.5),
    maxP = cms.untracked.double(200.0),
    minErrDz = cms.untracked.double(-0.1),
    nAssoc = cms.untracked.uint32(10),
    nBinErr = cms.untracked.uint32(25),
    trackType = cms.string('outer'),
    nBinDxy = cms.untracked.uint32(300),
    wPull = cms.untracked.double(10.0),
    nBinPull = cms.untracked.uint32(25),
    minErrPhi = cms.untracked.double(-0.1),
    muonLabel = cms.InputTag("muons"),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    nBinPt = cms.untracked.uint32(25),
    minErrP = cms.untracked.double(-0.2),
    doAbsEta = cms.untracked.bool(False),
    maxDz = cms.untracked.double(25.0),
    minP = cms.untracked.double(0.0),
    minErrPt = cms.untracked.double(-0.2),
    minErrDxy = cms.untracked.double(-0.1),
    muAssocLabel = cms.InputTag("muonAssociatorByHits_NoSimHits_standalone"),
    minPt = cms.untracked.double(0.0),
    maxErrP = cms.untracked.double(0.2),
    minEta = cms.untracked.double(-2.5),
    maxErrQPt = cms.untracked.double(5.0),
    outputFileName = cms.untracked.string(''),
    doAssoc = cms.untracked.bool(True),
    subDir = cms.untracked.string('Muons/RecoMuonV/RecoMuon_MuonAssoc_Sta'),
    maxPt = cms.untracked.double(200.0),
    nTrks = cms.untracked.uint32(50),
    maxDxy = cms.untracked.double(1.5),
    maxErrDxy = cms.untracked.double(0.1),
    maxErrPhi = cms.untracked.double(0.1),
    nBinP = cms.untracked.uint32(25),
    nBinDz = cms.untracked.uint32(200),
    maxErrEta = cms.untracked.double(0.02),
    maxErrDz = cms.untracked.double(0.1),
    minErrQPt = cms.untracked.double(-5.0),
    nBinPhi = cms.untracked.uint32(25),
    maxErrPt = cms.untracked.double(0.2),
    minDxy = cms.untracked.double(-1.5)
)


process.recoMuonVMuAssoc_staPF = cms.EDAnalyzer("RecoMuonValidator",
    nBinEta = cms.untracked.uint32(50),
    tpSelector = cms.PSet(
        src = cms.InputTag("mergedtruth","MergedTrackTruth"),
        chargedOnly = cms.bool(True),
        pdgId = cms.vint32(13, -13),
        tip = cms.double(3.5),
        signalOnly = cms.bool(True),
        minRapidity = cms.double(-2.4),
        lip = cms.double(30.0),
        ptMin = cms.double(0.9),
        maxRapidity = cms.double(2.4),
        minHit = cms.int32(0),
        stableOnly = cms.bool(False)
    ),
    minErrEta = cms.untracked.double(-0.02),
    selection = cms.string('isStandAloneMuon'),
    simLabel = cms.InputTag("mergedtruth","MergedTrackTruth"),
    minDz = cms.untracked.double(-25.0),
    maxEta = cms.untracked.double(2.5),
    maxP = cms.untracked.double(200.0),
    minErrDz = cms.untracked.double(-0.1),
    nAssoc = cms.untracked.uint32(10),
    nBinErr = cms.untracked.uint32(25),
    trackType = cms.string('outer'),
    nBinDxy = cms.untracked.uint32(300),
    wPull = cms.untracked.double(10.0),
    nBinPull = cms.untracked.uint32(25),
    minErrPhi = cms.untracked.double(-0.1),
    muonLabel = cms.InputTag("recoMuonFromPFProducer"),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    nBinPt = cms.untracked.uint32(25),
    minErrP = cms.untracked.double(-0.2),
    doAbsEta = cms.untracked.bool(False),
    maxDz = cms.untracked.double(25.0),
    minP = cms.untracked.double(0.0),
    minErrPt = cms.untracked.double(-0.2),
    minErrDxy = cms.untracked.double(-0.1),
    muAssocLabel = cms.InputTag("muonAssociatorByHits_NoSimHits_standalonePF"),
    minPt = cms.untracked.double(0.0),
    maxErrP = cms.untracked.double(0.2),
    minEta = cms.untracked.double(-2.5),
    maxErrQPt = cms.untracked.double(5.0),
    outputFileName = cms.untracked.string(''),
    doAssoc = cms.untracked.bool(True),
    subDir = cms.untracked.string('Muons/RecoMuonV/RecoMuon_MuonAssoc_StaPF'),
    maxPt = cms.untracked.double(200.0),
    nTrks = cms.untracked.uint32(50),
    maxDxy = cms.untracked.double(1.5),
    maxErrDxy = cms.untracked.double(0.1),
    maxErrPhi = cms.untracked.double(0.1),
    nBinP = cms.untracked.uint32(25),
    nBinDz = cms.untracked.uint32(200),
    maxErrEta = cms.untracked.double(0.02),
    maxErrDz = cms.untracked.double(0.1),
    minErrQPt = cms.untracked.double(-5.0),
    nBinPhi = cms.untracked.uint32(25),
    maxErrPt = cms.untracked.double(0.2),
    minDxy = cms.untracked.double(-1.5)
)


process.recoMuonVMuAssoc_trk = cms.EDAnalyzer("RecoMuonValidator",
    nBinEta = cms.untracked.uint32(50),
    tpSelector = cms.PSet(
        src = cms.InputTag("mergedtruth","MergedTrackTruth"),
        chargedOnly = cms.bool(True),
        pdgId = cms.vint32(13, -13),
        tip = cms.double(3.5),
        signalOnly = cms.bool(True),
        minRapidity = cms.double(-2.4),
        lip = cms.double(30.0),
        ptMin = cms.double(0.9),
        maxRapidity = cms.double(2.4),
        minHit = cms.int32(0),
        stableOnly = cms.bool(False)
    ),
    minErrEta = cms.untracked.double(-0.02),
    selection = cms.string('isTrackerMuon'),
    simLabel = cms.InputTag("mergedtruth","MergedTrackTruth"),
    minDz = cms.untracked.double(-25.0),
    maxEta = cms.untracked.double(2.5),
    maxP = cms.untracked.double(200.0),
    minErrDz = cms.untracked.double(-0.1),
    nAssoc = cms.untracked.uint32(10),
    nBinErr = cms.untracked.uint32(25),
    trackType = cms.string('inner'),
    nBinDxy = cms.untracked.uint32(300),
    wPull = cms.untracked.double(10.0),
    nBinPull = cms.untracked.uint32(25),
    minErrPhi = cms.untracked.double(-0.1),
    muonLabel = cms.InputTag("muons"),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    nBinPt = cms.untracked.uint32(25),
    minErrP = cms.untracked.double(-0.2),
    doAbsEta = cms.untracked.bool(False),
    maxDz = cms.untracked.double(25.0),
    minP = cms.untracked.double(0.0),
    minErrPt = cms.untracked.double(-0.2),
    minErrDxy = cms.untracked.double(-0.1),
    muAssocLabel = cms.InputTag("muonAssociatorByHits_NoSimHits_tracker"),
    minPt = cms.untracked.double(0.0),
    maxErrP = cms.untracked.double(0.2),
    minEta = cms.untracked.double(-2.5),
    maxErrQPt = cms.untracked.double(5.0),
    outputFileName = cms.untracked.string(''),
    doAssoc = cms.untracked.bool(True),
    subDir = cms.untracked.string('Muons/RecoMuonV/RecoMuon_MuonAssoc_Trk'),
    maxPt = cms.untracked.double(200.0),
    nTrks = cms.untracked.uint32(50),
    maxDxy = cms.untracked.double(1.5),
    maxErrDxy = cms.untracked.double(0.1),
    maxErrPhi = cms.untracked.double(0.1),
    nBinP = cms.untracked.uint32(25),
    nBinDz = cms.untracked.uint32(200),
    maxErrEta = cms.untracked.double(0.02),
    maxErrDz = cms.untracked.double(0.1),
    minErrQPt = cms.untracked.double(-5.0),
    nBinPhi = cms.untracked.uint32(25),
    maxErrPt = cms.untracked.double(0.2),
    minDxy = cms.untracked.double(-1.5)
)


process.recoMuonVMuAssoc_trkPF = cms.EDAnalyzer("RecoMuonValidator",
    nBinEta = cms.untracked.uint32(50),
    tpSelector = cms.PSet(
        src = cms.InputTag("mergedtruth","MergedTrackTruth"),
        chargedOnly = cms.bool(True),
        pdgId = cms.vint32(13, -13),
        tip = cms.double(3.5),
        signalOnly = cms.bool(True),
        minRapidity = cms.double(-2.4),
        lip = cms.double(30.0),
        ptMin = cms.double(0.9),
        maxRapidity = cms.double(2.4),
        minHit = cms.int32(0),
        stableOnly = cms.bool(False)
    ),
    minErrEta = cms.untracked.double(-0.02),
    selection = cms.string('isTrackerMuon'),
    simLabel = cms.InputTag("mergedtruth","MergedTrackTruth"),
    minDz = cms.untracked.double(-25.0),
    maxEta = cms.untracked.double(2.5),
    maxP = cms.untracked.double(200.0),
    minErrDz = cms.untracked.double(-0.1),
    nAssoc = cms.untracked.uint32(10),
    nBinErr = cms.untracked.uint32(25),
    trackType = cms.string('inner'),
    nBinDxy = cms.untracked.uint32(300),
    wPull = cms.untracked.double(10.0),
    nBinPull = cms.untracked.uint32(25),
    minErrPhi = cms.untracked.double(-0.1),
    muonLabel = cms.InputTag("recoMuonFromPFProducer"),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    nBinPt = cms.untracked.uint32(25),
    minErrP = cms.untracked.double(-0.2),
    doAbsEta = cms.untracked.bool(False),
    maxDz = cms.untracked.double(25.0),
    minP = cms.untracked.double(0.0),
    minErrPt = cms.untracked.double(-0.2),
    minErrDxy = cms.untracked.double(-0.1),
    muAssocLabel = cms.InputTag("muonAssociatorByHits_NoSimHits_trackerPF"),
    minPt = cms.untracked.double(0.0),
    maxErrP = cms.untracked.double(0.2),
    minEta = cms.untracked.double(-2.5),
    maxErrQPt = cms.untracked.double(5.0),
    outputFileName = cms.untracked.string(''),
    doAssoc = cms.untracked.bool(True),
    subDir = cms.untracked.string('Muons/RecoMuonV/RecoMuon_MuonAssoc_TrkPF'),
    maxPt = cms.untracked.double(200.0),
    nTrks = cms.untracked.uint32(50),
    maxDxy = cms.untracked.double(1.5),
    maxErrDxy = cms.untracked.double(0.1),
    maxErrPhi = cms.untracked.double(0.1),
    nBinP = cms.untracked.uint32(25),
    nBinDz = cms.untracked.uint32(200),
    maxErrEta = cms.untracked.double(0.02),
    maxErrDz = cms.untracked.double(0.1),
    minErrQPt = cms.untracked.double(-5.0),
    nBinPhi = cms.untracked.uint32(25),
    maxErrPt = cms.untracked.double(0.2),
    minDxy = cms.untracked.double(-1.5)
)


process.recoMuonValidator = cms.EDAnalyzer("RecoMuonValidator",
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    nBinEta = cms.untracked.uint32(50),
    tpSelector = cms.PSet(
        src = cms.InputTag("mergedtruth","MergedTrackTruth"),
        chargedOnly = cms.bool(True),
        pdgId = cms.vint32(13, -13),
        tip = cms.double(3.5),
        signalOnly = cms.bool(True),
        minRapidity = cms.double(-2.4),
        lip = cms.double(30.0),
        ptMin = cms.double(0.9),
        maxRapidity = cms.double(2.4),
        minHit = cms.int32(0),
        stableOnly = cms.bool(False)
    ),
    minErrEta = cms.untracked.double(-0.02),
    selection = cms.string("isTrackerMuon && muonID(\'TMLastStationAngTight\')"),
    simLabel = cms.InputTag("mergedtruth","MergedTrackTruth"),
    minDz = cms.untracked.double(-25.0),
    maxEta = cms.untracked.double(2.5),
    maxP = cms.untracked.double(200.0),
    minErrDz = cms.untracked.double(-0.1),
    nBinErr = cms.untracked.uint32(25),
    trackType = cms.string('global'),
    nBinDxy = cms.untracked.uint32(300),
    wPull = cms.untracked.double(10.0),
    nBinPull = cms.untracked.uint32(25),
    maxPt = cms.untracked.double(200.0),
    muonLabel = cms.InputTag("muons"),
    nBinPt = cms.untracked.uint32(25),
    minErrP = cms.untracked.double(-0.2),
    minPt = cms.untracked.double(0.0),
    doAbsEta = cms.untracked.bool(False),
    maxDz = cms.untracked.double(25.0),
    minP = cms.untracked.double(0.0),
    minErrPt = cms.untracked.double(-0.2),
    minErrDxy = cms.untracked.double(-0.1),
    muAssocLabel = cms.InputTag("MuonAssociatorByHits"),
    nAssoc = cms.untracked.uint32(10),
    maxErrP = cms.untracked.double(0.2),
    minEta = cms.untracked.double(-2.5),
    maxErrQPt = cms.untracked.double(5.0),
    outputFileName = cms.untracked.string(''),
    doAssoc = cms.untracked.bool(True),
    subDir = cms.untracked.string('Muons/RecoMuonV/'),
    minErrPhi = cms.untracked.double(-0.1),
    nTrks = cms.untracked.uint32(50),
    maxDxy = cms.untracked.double(1.5),
    nBinDz = cms.untracked.uint32(200),
    maxErrPhi = cms.untracked.double(0.1),
    nBinP = cms.untracked.uint32(25),
    maxErrDxy = cms.untracked.double(0.1),
    maxErrEta = cms.untracked.double(0.02),
    maxErrDz = cms.untracked.double(0.1),
    minErrQPt = cms.untracked.double(-5.0),
    nBinPhi = cms.untracked.uint32(25),
    minDxy = cms.untracked.double(-1.5),
    maxErrPt = cms.untracked.double(0.2)
)


process.relvalMuonBits = cms.EDAnalyzer("HLTMonBitSummary",
    HLTPaths = cms.vstring('HLT_[^_]*Mu[^l_]*$'),
    histLabel = cms.untracked.string('Muon'),
    filterTypes = cms.untracked.vstring('HLTLevel1GTSeed', 
        'HLTPrescaler', 
        'HLTMuonL1Filter', 
        'HLTMuonL2PreFilter', 
        'HLTMuonDimuonL2Filter', 
        'HLTMuonL3PreFilter', 
        'HLTMuonDimuonL3Filter', 
        'HLTMuonIsoFilter'),
    denominator = cms.untracked.string('HLT_L1MuOpen'),
    denominatorWild = cms.untracked.string('HLT_L1Mu[^_]*$'),
    directory = cms.untracked.string('HLT/Muon'),
    TriggerResultsTag = cms.InputTag("TriggerResults","","HLT")
)


process.rpcDcsInfo = cms.EDAnalyzer("RPCDcsInfo",
    ScalersRawToDigiLabel = cms.untracked.string('scalersRawToDigi'),
    subSystemFolder = cms.untracked.string('RPC'),
    dcsInfoFolder = cms.untracked.string('DCSInfo')
)


process.rpcEfficiency = cms.EDAnalyzer("RPCEfficiency",
    cscSegments = cms.InputTag("cscSegments"),
    rangestripsRB4 = cms.untracked.double(4.0),
    incldtMB4 = cms.untracked.bool(True),
    DuplicationCorrection = cms.untracked.int32(1),
    RecHitLabel = cms.InputTag("rpcRecHits"),
    rangestrips = cms.untracked.double(1.0),
    inves = cms.untracked.bool(True),
    EffRootFileName = cms.untracked.string('/tmp/carrillo/RPCEfficiencyFIRST.root'),
    EffSaveRootFile = cms.untracked.bool(False),
    MaxDrb4 = cms.untracked.double(150.0),
    inclcsc = cms.untracked.bool(True),
    MaxD = cms.untracked.double(80.0),
    MinCosAng = cms.untracked.double(0.99),
    incldt = cms.untracked.bool(True),
    debug = cms.untracked.bool(False),
    EffSaveRootFileEventsInterval = cms.untracked.int32(100),
    dt4DSegments = cms.InputTag("dt4DSegments")
)


process.rpcEventInfo = cms.EDAnalyzer("DQMEventInfo",
    subSystemFolder = cms.untracked.string('RPC')
)


process.rpcFEDIntegrity = cms.EDAnalyzer("RPCFEDIntegrity",
    MaximumFEDID = cms.untracked.int32(792),
    RPCRawCountsInputTag = cms.untracked.InputTag("muonRPCDigis"),
    MinimumFEDID = cms.untracked.int32(790),
    RPCPrefixDir = cms.untracked.string('RPC/FEDIntegrity'),
    NumberOfFED = cms.untracked.int32(3)
)


process.rpcMonitorLinkSynchro = cms.EDAnalyzer("RPCMonitorLinkSynchro",
    dumpDelays = cms.untracked.bool(False),
    useFirstHitOnly = cms.untracked.bool(False)
)


process.rpcMonitorRaw = cms.EDAnalyzer("RPCMonitorRaw",
    watchedErrors = cms.untracked.vint32(8, 9)
)


process.rpcRecHitV = cms.EDAnalyzer("RPCRecHitValid",
    rootFileName = cms.untracked.string(''),
    simHit = cms.InputTag("g4SimHits","MuonRPCHits"),
    recHit = cms.InputTag("rpcRecHits"),
    standAloneMode = cms.untracked.bool(False),
    subDir = cms.string('RPC/RPCRecHitV/SimVsReco')
)


process.rpcdigidqm = cms.EDAnalyzer("RPCMonitorDigi",
    RootFileName = cms.untracked.string('RPCMonitorDigi.root'),
    RPCFolder = cms.untracked.string('RPC'),
    NoiseFolder = cms.untracked.string('Noise'),
    RecHitLabel = cms.InputTag("rpcRecHits"),
    MuonPtCut = cms.untracked.double(3.0),
    GlobalFolder = cms.untracked.string('SummaryHistograms'),
    MuonFolder = cms.untracked.string('Muon'),
    MuonEtaCut = cms.untracked.double(1.6),
    SaveRootFile = cms.untracked.bool(False),
    NumberOfEndcapDisks = cms.untracked.int32(3),
    MuonLabel = cms.InputTag("muons"),
    UseMuon = cms.untracked.bool(True),
    NumberOfInnermostEndcapRings = cms.untracked.int32(2)
)


process.rpcrechitprobability = cms.EDAnalyzer("RPCRecHitProbability",
    RootFileName = cms.untracked.string('RPCRecHitProbabilityDQM.root'),
    MuonLabel = cms.InputTag("muons"),
    MuonPtCut = cms.untracked.double(3.0),
    GlobalFolder = cms.untracked.string('SummaryHistograms/RecHits'),
    MuonFolder = cms.untracked.string('Muon'),
    MuonEtaCut = cms.untracked.double(1.6),
    SaveRootFile = cms.untracked.bool(False),
    RPCFolder = cms.untracked.string('RPC')
)


process.siStripFEDCheck = cms.EDAnalyzer("SiStripFEDCheckPlugin",
    PrintDebugMessages = cms.untracked.bool(False),
    CheckChannelStatus = cms.untracked.bool(True),
    DoPayloadChecks = cms.untracked.bool(True),
    CheckChannelLengths = cms.untracked.bool(True),
    WriteDQMStore = cms.untracked.bool(False),
    CheckFELengths = cms.untracked.bool(True),
    RawDataTag = cms.InputTag("rawDataCollector"),
    HistogramUpdateFrequency = cms.untracked.uint32(0),
    CheckChannelPacketCodes = cms.untracked.bool(True),
    DirName = cms.untracked.string('SiStrip/FEDIntegrity/')
)


process.siStripFEDMonitor = cms.EDAnalyzer("SiStripFEDMonitorPlugin",
    nTotalBadActiveChannelsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    FeMajAddressHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    DataMissingHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    AnyFEProblemsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    OOSBitsDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    MedianAPV0HistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(1024),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(False),
        NBins = cms.untracked.uint32(256)
    ),
    TkHistoMapHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    DQMStoreFileName = cms.untracked.string('DQMStore.root'),
    BadDAQPacketHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    APVErrorBitsDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    InvalidBuffersHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nAPVStatusBitHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nOutOfSyncHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    nAPVAddressErrorvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    ErrorFractionByLumiBlockHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    nAPVAddressErrorHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    BadActiveChannelStatusBitsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    AnyDAQProblemsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    UnlockedBitsDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nFEDCorruptBuffersvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    DataPresentHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    nBadChannelStatusBitsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    PrintDebugMessages = cms.untracked.uint32(0),
    ApveAddressHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    FEOverflowsDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nFEDDAQProblemsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(100.5),
        Min = cms.untracked.double(-0.5),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(101)
    ),
    nFEDCorruptBuffersHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(100.5),
        Min = cms.untracked.double(-0.5),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(101)
    ),
    FillWithEventNumber = cms.untracked.bool(False),
    nUnlockedHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    nFEDsWithMissingFEsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nAPVErrorHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    FETimeDiffTECBHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    BadMajorityAddressesDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    FillAllDetailedHistograms = cms.untracked.bool(False),
    CorruptBuffersHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    nTotalBadChannelsvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nFEDsWithFEProblemsvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nBadActiveChannelStatusBitsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    FEMissingDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    BadAPVStatusBitsDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nUnconnectedChannelsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    BadDAQCRCsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    FEOverflowsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nTotalBadChannelsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(500),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(250)
    ),
    nUnlockedvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nAPVStatusBitvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nFEDErrorsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(100.5),
        Min = cms.untracked.double(-0.5),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(101)
    ),
    nAPVErrorvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    FETimeDiffTECFHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    APVAddressErrorBitsDetailedHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    TimeHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(3600),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(False),
        NBins = cms.untracked.uint32(600)
    ),
    BadMajorityAddressesHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    RawDataTag = cms.untracked.InputTag("rawDataCollector"),
    nFEDsWithFEOverflowsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nFEDErrorsvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    AnyFEDErrorsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    BadChannelStatusBitsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(True)
    ),
    FETimeDiffTIBHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    WriteDQMStore = cms.untracked.bool(False),
    nFEDsWithFEProblemsHistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(100.5),
        Min = cms.untracked.double(-0.5),
        Enabled = cms.untracked.bool(True),
        NBins = cms.untracked.uint32(101)
    ),
    nFEDsWithFEBadMajorityAddressesHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    HistogramFolderName = cms.untracked.string('SiStrip/ReadoutView/FedMonitoringSummary'),
    FEMissingHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    BadFEDCRCsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    FETimeDiffTOBHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    BadIDsHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nTotalBadActiveChannelsvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    nOutOfSyncvsTimeHistogramConfig = cms.untracked.PSet(
        Enabled = cms.untracked.bool(False)
    ),
    MedianAPV1HistogramConfig = cms.untracked.PSet(
        Max = cms.untracked.double(1024),
        Min = cms.untracked.double(0),
        Enabled = cms.untracked.bool(False),
        NBins = cms.untracked.uint32(256)
    )
)


process.staCosmicMuonTrackVMuonAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToStaCosmicMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("cosmicMuons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.staCosmicMuonTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToStaCosmicTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("cosmicMuons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.staMuonTrackVMuonAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToStaMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("standAloneMuons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.staMuonTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToStaTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("standAloneMuons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.staSETMuonTrackVMuonAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToStaSETMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("standAloneSETMuons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.staSETMuonTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToStaSETTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("standAloneSETMuons"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.staSETUpdMuonTrackVMuonAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToStaSETUpdMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("standAloneSETMuons:UpdatedAtVtx"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.staSETUpdMuonTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToStaSETUpdTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("standAloneSETMuons:UpdatedAtVtx"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.staUpdMuonTrackVMuonAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToStaUpdMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("standAloneMuons:UpdatedAtVtx"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.staUpdMuonTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToStaUpdTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("standAloneMuons:UpdatedAtVtx"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(False),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.stripDigisValid = cms.EDAnalyzer("SiStripDigiValid",
    src = cms.InputTag("simSiStripDigis","ZeroSuppressed"),
    outputFile = cms.untracked.string(''),
    verbose = cms.untracked.bool(False)
)


process.stripRecHitsValid = cms.EDAnalyzer("SiStripRecHitsValid",
    outputFile = cms.untracked.string(''),
    associatePixel = cms.bool(False),
    stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHit"),
    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    ROUList = cms.vstring('g4SimHitsTrackerHitsTIBLowTof', 
        'g4SimHitsTrackerHitsTIBHighTof', 
        'g4SimHitsTrackerHitsTIDLowTof', 
        'g4SimHitsTrackerHitsTIDHighTof', 
        'g4SimHitsTrackerHitsTOBLowTof', 
        'g4SimHitsTrackerHitsTOBHighTof', 
        'g4SimHitsTrackerHitsTECLowTof', 
        'g4SimHitsTrackerHitsTECHighTof'),
    associateRecoTracks = cms.bool(False),
    associateStrip = cms.bool(True),
    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    RecHitProducer = cms.string('siStripMatchedRecHits'),
    verbose = cms.untracked.bool(False)
)


process.susyDQM = cms.EDAnalyzer("RecoSusyDQM",
    electronCollection = cms.InputTag("gsfElectrons"),
    RA12_muon_pt_cut = cms.double(10.0),
    metCollection = cms.InputTag("met"),
    RA1_jet_max_emf_cut = cms.double(0.95),
    RA1_jet_min_emf_cut = cms.double(0.05),
    elec_d0_cut = cms.double(0.2),
    RA1_jet2_eta_cut = cms.double(2.5),
    muon_nChi2_cut = cms.double(10),
    muon_eta_cut = cms.double(2.4),
    RA2_ht_cut = cms.double(200.0),
    muonCollection = cms.InputTag("muons"),
    RAL_elec_iso_cut = cms.double(0.5),
    RA2_jet1_pt_cut = cms.double(100.0),
    RA2_jet2_eta_cut = cms.double(2.5),
    RA2_N_jets_cut = cms.int32(3),
    RA12_muon_iso_cut = cms.double(0.1),
    RA2_deltaPhi_cut = cms.double(0.3),
    RA1_deltaPhiJets_cut = cms.double(3.0),
    RAL_jet_sum_pt_cut = cms.double(100.0),
    elec_mva_cut = cms.double(0.1),
    vertexCollection = cms.InputTag("offlinePrimaryVertices"),
    elec_eta_cut = cms.double(2.5),
    jetCollection = cms.InputTag("ak5CaloJets"),
    RA1_jet2_pt_cut = cms.double(30.0),
    RA2_jet_min_emf_cut = cms.double(0.05),
    RA1_jet1_eta_cut = cms.double(2.5),
    RA2_jet_max_emf_cut = cms.double(0.95),
    RA1_ht_cut = cms.double(200.0),
    RA2_mht_cut = cms.double(100.0),
    RAL_muon_iso_cut = cms.double(0.1),
    RA2_jet_eta_cut = cms.double(5.0),
    RAL_jet_max_emf_cut = cms.double(0.95),
    RAL_met_cut = cms.double(50.0),
    RA1_jet1_pt_cut = cms.double(30.0),
    RAL_muon_pt_cut = cms.double(7.0),
    RAL_jet_min_emf_cut = cms.double(0.05),
    RA1_jet_pt_cut = cms.double(30.0),
    RAL_elec_pt_cut = cms.double(7.0),
    RAL_jet_pt_cut = cms.double(30.0),
    RA12_elec_iso_cut = cms.double(0.5),
    moduleName = cms.untracked.string('Physics/Susy'),
    RA1_jet3_pt_cut = cms.double(30.0),
    RAL_jet_eta_cut = cms.double(3.0),
    RA1_mht_cut = cms.double(0.0),
    RA2_jet1_eta_cut = cms.double(1.2),
    RA1_alphat_cut = cms.double(0.5),
    RA2_jet_pt_cut = cms.double(30.0),
    RA2_jet3_pt_cut = cms.double(30.0),
    RA1_deltaPhi_cut = cms.double(0.0),
    muon_d0_cut = cms.double(0.2),
    RA12_elec_pt_cut = cms.double(15.0),
    RA2_jet2_pt_cut = cms.double(50.0),
    RA1_jet_eta_cut = cms.double(5.0),
    RA2_jet3_eta_cut = cms.double(5.0),
    muon_nHits_cut = cms.double(11)
)


process.tauValidation = cms.EDAnalyzer("TauValidation",
    hepmcCollection = cms.InputTag("generator"),
    tauEtCutForRtau = cms.double(50)
)


process.tcMetAnalyzer = cms.EDAnalyzer("METTester",
    maxd0 = cms.double(0.1),
    minhits = cms.int32(6),
    maxeta = cms.double(2.65),
    maxchi2 = cms.double(5),
    FineBinning = cms.untracked.bool(False),
    trkAlgos = cms.vint32(),
    InputMETLabel = cms.InputTag("tcMet"),
    FolderName = cms.untracked.string('JetMET/METv/'),
    trkQuality = cms.vint32(2),
    InputBeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    InputMuonLabel = cms.InputTag("muons"),
    maxPtErr = cms.double(0.2),
    InputCaloMETLabel = cms.InputTag("met"),
    maxpt = cms.double(100.0),
    InputElectronLabel = cms.InputTag("gsfElectrons"),
    InputTrackLabel = cms.InputTag("generalTracks"),
    METType = cms.untracked.string('TCMET')
)


process.tevMuonDytTrackVMuonAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToTevDytMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("tevMuons:dyt"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.tevMuonDytTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToTevDytTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("tevMuons:dyt"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.tevMuonFirstTrackVMuonAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToTevFirstMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("tevMuons:firstHit"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.tevMuonFirstTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToTevFirstTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("tevMuons:firstHit"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.tevMuonPickyTrackVMuonAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToTevPickyMuonAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("tevMuons:picky"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('MuonAssociationByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.tevMuonPickyTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToTevPickyTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("tevMuons:picky"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(True),
    associators = cms.vstring('TrackAssociatorByDeltaR'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.tkConversionValidation = cms.EDAnalyzer("TkConvValidator",
    dEtaTracksMin = cms.double(-0.2),
    rMin = cms.double(0.0),
    zMinForXray = cms.double(0.0),
    phiBin = cms.int32(100),
    etaMin = cms.double(-2.5),
    highPurity = cms.bool(True),
    dEtaTracksMax = cms.double(0.2),
    dCotTracksMax = cms.double(0.12),
    minProb = cms.double(-99.9),
    maxPhoRForEffic = cms.double(100.0),
    rMaxForXray = cms.double(80.0),
    conversionCollection = cms.string(''),
    rBinForXray = cms.int32(200),
    etBin = cms.int32(100),
    etaMax = cms.double(2.5),
    chi2Min = cms.double(0.0),
    phiMin = cms.double(-3.14),
    minPhoPtForPurity = cms.double(0.0),
    zMax = cms.double(220),
    zBin2ForXray = cms.int32(560),
    dPhiTracksBin = cms.int32(100),
    zMin = cms.double(-220.0),
    rMax = cms.double(120),
    isRunCentrally = cms.bool(True),
    OutputFileName = cms.string('ValidationHistos.root'),
    dCotTracksMin = cms.double(-0.12),
    dEtaMax = cms.double(0.2),
    maxPhoEtaForEffic = cms.double(2.5),
    etaBin = cms.int32(100),
    dEtaTracksBin = cms.int32(100),
    minLxy = cms.double(-9999.9),
    dEtaBin = cms.int32(100),
    convProducer = cms.string('allConversions'),
    phiMax = cms.double(3.14),
    maxPhoEtaForPurity = cms.double(2.5),
    resBin = cms.int32(100),
    arbitratedEcalSeeded = cms.bool(False),
    zBinForXray = cms.int32(100),
    Name = cms.untracked.string('tkConversionValidation'),
    trackProducer = cms.InputTag("generalTracks"),
    minPhoPtForEffic = cms.double(0.3),
    Verbosity = cms.untracked.int32(0),
    dPhiBin = cms.int32(100),
    rMinForXray = cms.double(0.0),
    dPhiTracksMin = cms.double(-0.5),
    dPhiMax = cms.double(0.05),
    rBin = cms.int32(60),
    resMax = cms.double(1.1),
    dCotTracksBin = cms.int32(100),
    maxPhoZForEffic = cms.double(200.0),
    etMin = cms.double(0.0),
    arbitratedMerged = cms.bool(False),
    zMaxForXray = cms.double(280.0),
    dEtaMin = cms.double(-0.2),
    dqmpath = cms.string('EgammaV/ConversionValidator/'),
    etMax = cms.double(100.0),
    dPhiTracksMax = cms.double(0.5),
    maxPhoRForPurity = cms.double(100.0),
    maxPhoZForPurity = cms.double(200.0),
    generalTracksOnly = cms.bool(True),
    etaBin2 = cms.int32(25),
    zBin = cms.int32(100),
    useTP = cms.bool(True),
    chi2Max = cms.double(20.0),
    minPhoEtCut = cms.double(0.0),
    ecalalgotracks = cms.bool(False),
    maxHitsBeforeVtx = cms.uint32(999),
    resMin = cms.double(0.0),
    dPhiMin = cms.double(-0.05)
)


process.topDiLeptonOfflineDQM = cms.EDAnalyzer("TopDiLeptonOfflineDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(3.2),
            lowerEdge = cms.double(3.0)
        ),
        elecExtras = cms.PSet(
            isolation = cms.string('(dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.2'),
            electronId = cms.PSet(
                pattern = cms.int32(1),
                src = cms.InputTag("eidRobustLoose")
            ),
            select = cms.string('pt>5 && abs(eta)<2.4 && abs(gsfTrack.d0)<1 && abs(gsfTrack.dz)<20')
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopDiLeptonDQM/'),
        jetExtras = cms.PSet(
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ),
        muonExtras = cms.PSet(
            isolation = cms.string('(isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.2'),
            select = cms.string('pt>1 && abs(eta)<2.4 && abs(globalTrack.d0)<1 && abs(globalTrack.dz)<20')
        ),
        triggerExtras = cms.PSet(
            src = cms.InputTag("TriggerResults","","HLT"),
            pathsELECMU = cms.vstring('HLT_Mu9:HLT_Ele15_SW_L1R', 
                'HLT_Mu15:HLT_Ele15_SW_L1R', 
                'HLT_DoubleMu3:HLT_Ele15_SW_L1R', 
                'HLT_Ele15_SW_L1R:HLT_Mu9', 
                'HLT_Ele15_SW_L1R:HLT_DoubleMu3'),
            pathsDIMUON = cms.vstring('HLT_Mu15:HLT_Mu9', 
                'HLT_DoubleMu3:HLT_Mu9', 
                'HLT_Mu9:HLT_DoubleMu3', 
                'HLT_Mu15:HLT_DoubleMu3')
        )
    ),
    selection = cms.VPSet(cms.PSet(
        label = cms.string('empty:step0')
    )),
    preselection = cms.PSet(
        trigger = cms.PSet(
            src = cms.InputTag("TriggerResults","","HLT"),
            select = cms.vstring('HLT_Mu9', 
                'HLT_Ele15_SW_L1R', 
                'HLT_DoubleMu3')
        ),
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. && abs(y)<1. && abs(z)<20. && tracksSize>3 && !isFake')
        )
    )
)


process.topHLTDiMuonDQM = cms.EDAnalyzer("TopHLTDiMuonDQM",
    vertex_Z_cut = cms.double(24.0),
    TriggerEvent = cms.InputTag("hltTriggerSummaryAOD","","HLT"),
    hltPaths = cms.vstring('HLT_Mu9', 
        'HLT_Mu11', 
        'HLT_Mu13_v1', 
        'HLT_Mu15_v1', 
        'HLT_IsoMu3', 
        'HLT_IsoMu9', 
        'HLT_DoubleMu3_v2', 
        'HLT_DoubleMu5_v1', 
        'HLT_Ele10_LW_L1R', 
        'HLT_Ele15_LW_L1R', 
        'HLT_Ele20_LW_L1R'),
    hltPaths_sig = cms.vstring('HLT_Mu9', 
        'HLT_Mu11', 
        'HLT_Mu15_v1', 
        'HLT_IsoMu9', 
        'HLT_DoubleMu3_v2', 
        'HLT_DoubleMu5_v1'),
    muon_pT_cut = cms.double(5.0),
    vertexCollection = cms.InputTag("offlinePrimaryVertices"),
    monitorName = cms.string('HLT/Top/HLTDiMuon/'),
    TriggerFilter = cms.InputTag("hltSingleMu15L3Filtered15","","HLT"),
    hltPaths_L1 = cms.vstring('HLT_L1MuOpen', 
        'HLT_L1Mu', 
        'HLT_L1Mu20', 
        'HLT_L1DoubleMuOpen'),
    hltPaths_L3 = cms.vstring('HLT_Mu9', 
        'HLT_Mu11', 
        'HLT_Mu13_v1', 
        'HLT_Mu15_v1', 
        'HLT_IsoMu3', 
        'HLT_IsoMu9', 
        'HLT_DoubleMu3_v2', 
        'HLT_DoubleMu5_v1', 
        'HLT_Ele10_LW_L1R', 
        'HLT_Ele15_LW_L1R', 
        'HLT_Ele20_LW_L1R'),
    hltPaths_trig = cms.vstring('HLT_Mu5', 
        'HLT_Mu5', 
        'HLT_Mu9', 
        'HLT_Mu9', 
        'HLT_Mu5', 
        'HLT_Mu5'),
    vertex_X_cut = cms.double(1.2),
    muon_eta_cut = cms.double(2.5),
    vertex_Y_cut = cms.double(1.2),
    TriggerResults = cms.InputTag("TriggerResults","","HLT"),
    MassWindow_up = cms.double(106.0),
    muonCollection = cms.InputTag("muons"),
    MassWindow_down = cms.double(76.0),
    muon_iso_cut = cms.double(0.15)
)


process.topSingleElectronLooseDQM = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        elecExtras = cms.PSet(
            isolation = cms.string('(dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.1'),
            electronId = cms.PSet(
                pattern = cms.int32(1),
                src = cms.InputTag("simpleEleId70cIso")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5')
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleElectronLooseDQM/'),
        jetExtras = cms.PSet(
            jetBTaggers = cms.PSet(
                trackCountingEff = cms.PSet(
                    workingPoint = cms.double(1.25),
                    label = cms.InputTag("trackCountingHighEffBJetTags")
                ),
                trackCountingPur = cms.PSet(
                    workingPoint = cms.double(3.0),
                    label = cms.InputTag("trackCountingHighPurBJetTags")
                ),
                secondaryVertex = cms.PSet(
                    workingPoint = cms.double(2.05),
                    label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
                )
            ),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ),
        triggerExtras = cms.PSet(
            paths = cms.vstring('HLT_Ele15_LW_L1R:HLT_QuadJetU15'),
            src = cms.InputTag("TriggerResults","","HLT")
        )
    ),
    selection = cms.VPSet(cms.PSet(
        src = cms.InputTag("gsfElectrons"),
        electronId = cms.PSet(
            pattern = cms.int32(1),
            src = cms.InputTag("simpleEleId70cIso")
        ),
        label = cms.string('elecs:step0'),
        select = cms.string('pt>15 & abs(eta)<2.5'),
        min = cms.int32(1)
    ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(1),
            label = cms.string('jets/calo:step1'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(2),
            label = cms.string('jets/calo:step2'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(3),
            label = cms.string('jets/calo:step3'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(4),
            label = cms.string('jets/calo:step4'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        )),
    preselection = cms.PSet(
        trigger = cms.PSet(
            src = cms.InputTag("TriggerResults","","HLT"),
            select = cms.vstring('HLT_Ele15_SW_CaloEleId_L1R')
        ),
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.topSingleElectronMediumDQM = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        elecExtras = cms.PSet(
            isolation = cms.string('(dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.1'),
            electronId = cms.PSet(
                pattern = cms.int32(1),
                src = cms.InputTag("simpleEleId70cIso")
            ),
            select = cms.string('pt>25 & abs(eta)<2.5 & (dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.1')
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleElectronMediumDQM/'),
        jetExtras = cms.PSet(
            jetBTaggers = cms.PSet(
                trackCountingEff = cms.PSet(
                    workingPoint = cms.double(1.25),
                    label = cms.InputTag("trackCountingHighEffBJetTags")
                ),
                trackCountingPur = cms.PSet(
                    workingPoint = cms.double(3.0),
                    label = cms.InputTag("trackCountingHighPurBJetTags")
                ),
                secondaryVertex = cms.PSet(
                    workingPoint = cms.double(2.05),
                    label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
                )
            ),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ),
        triggerExtras = cms.PSet(
            paths = cms.vstring('HLT_Ele15_LW_L1R:HLT_QuadJetU15'),
            src = cms.InputTag("TriggerResults","","HLT")
        )
    ),
    selection = cms.VPSet(cms.PSet(
        src = cms.InputTag("gsfElectrons"),
        min = cms.int32(1),
        max = cms.int32(1),
        label = cms.string('elecs:step0'),
        electronId = cms.PSet(
            pattern = cms.int32(1),
            src = cms.InputTag("simpleEleId70cIso")
        ),
        select = cms.string('pt>25 & abs(eta)<2.5 & (dr03TkSumPt+dr03EcalRecHitSumEt+dr03HcalTowerSumEt)/pt<0.1')
    ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(1),
            label = cms.string('jets/calo:step1'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(2),
            label = cms.string('jets/calo:step2'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(3),
            label = cms.string('jets/calo:step3'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(4),
            label = cms.string('jets/calo:step4'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        )),
    preselection = cms.PSet(
        trigger = cms.PSet(
            src = cms.InputTag("TriggerResults","","HLT"),
            select = cms.vstring('HLT_Ele15_SW_CaloEleId_L1R')
        ),
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.topSingleLeptonDQM = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        elecExtras = cms.PSet(
            isolation = cms.string('(dr03TkSumPt+dr04EcalRecHitSumEt+dr04HcalTowerSumEt)/pt<0.1'),
            electronId = cms.PSet(
                pattern = cms.int32(1),
                src = cms.InputTag("eidRobustLoose")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & abs(gsfTrack.d0)<1 & abs(gsfTrack.dz)<20')
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleLeptonDQM/'),
        jetExtras = cms.PSet(
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ),
        muonExtras = cms.PSet(
            isolation = cms.string('(isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1'),
            select = cms.string('pt>10 & abs(eta)<2.1 & isGlobalMuon & abs(globalTrack.d0)<1 & abs(globalTrack.dz)<20')
        ),
        triggerExtras = cms.PSet(
            paths = cms.vstring('HLT_Mu3:HLT_QuadJet15U', 
                'HLT_Mu5:HLT_QuadJet15U', 
                'HLT_Mu7:HLT_QuadJet15U', 
                'HLT_Mu9:HLT_QuadJet15U'),
            src = cms.InputTag("TriggerResults","","HLT")
        )
    ),
    selection = cms.VPSet(cms.PSet(
        src = cms.InputTag("ak5CaloJets"),
        jetID = cms.PSet(
            select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
            label = cms.InputTag("ak5JetID")
        ),
        label = cms.string('jets/calo:step0'),
        select = cms.string('pt>20 & abs(eta)<2.1 & 0.05<1.="" abs(z)<20.="" trackssize="">3 & !isFake')
        )
    )
)


process.topSingleMuonLooseDQM = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleMuonLooseDQM/'),
        jetExtras = cms.PSet(
            jetBTaggers = cms.PSet(
                trackCountingEff = cms.PSet(
                    workingPoint = cms.double(1.25),
                    label = cms.InputTag("trackCountingHighEffBJetTags")
                ),
                trackCountingPur = cms.PSet(
                    workingPoint = cms.double(3.0),
                    label = cms.InputTag("trackCountingHighPurBJetTags")
                ),
                secondaryVertex = cms.PSet(
                    workingPoint = cms.double(2.05),
                    label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
                )
            ),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ),
        muonExtras = cms.PSet(
            isolation = cms.string('(isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1'),
            select = cms.string('pt > 10 & abs(eta)<2.1 & isGlobalMuon & innerTrack.numberOfValidHits>10 & globalTrack.normalizedChi2>-1 & globalTrack.normalizedChi2<10')
        ),
        triggerExtras = cms.PSet(
            paths = cms.vstring('HLT_Mu3:HLT_QuadJet15U', 
                'HLT_Mu5:HLT_QuadJet15U', 
                'HLT_Mu7:HLT_QuadJet15U', 
                'HLT_Mu9:HLT_QuadJet15U', 
                'HLT_Mu11:HLT_QuadJet15U'),
            src = cms.InputTag("TriggerResults","","HLT")
        )
    ),
    selection = cms.VPSet(cms.PSet(
        src = cms.InputTag("muons"),
        label = cms.string('muons:step0'),
        select = cms.string('pt>10 & abs(eta)<2.1 & isGlobalMuon & innerTrack.numberOfValidHits>10 & globalTrack.normalizedChi2>-1 & globalTrack.normalizedChi2<10'),
        min = cms.int32(1)
    ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(1),
            label = cms.string('jets/calo:step1'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(2),
            label = cms.string('jets/calo:step2'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(3),
            label = cms.string('jets/calo:step3'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(4),
            label = cms.string('jets/calo:step4'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        )),
    preselection = cms.PSet(
        trigger = cms.PSet(
            src = cms.InputTag("TriggerResults","","HLT"),
            select = cms.vstring('HLT_Mu11')
        ),
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.topSingleMuonMediumDQM = cms.EDAnalyzer("TopSingleLeptonDQM",
    setup = cms.PSet(
        monitoring = cms.PSet(
            verbosity = cms.string('DEBUG')
        ),
        massExtras = cms.PSet(
            upperEdge = cms.double(110.0),
            lowerEdge = cms.double(70.0)
        ),
        sources = cms.PSet(
            jets = cms.InputTag("ak5CaloJets"),
            mets = cms.VInputTag("met", "tcMet", "pfMet"),
            elecs = cms.InputTag("gsfElectrons"),
            muons = cms.InputTag("muons")
        ),
        directory = cms.string('Physics/Top/TopSingleMuonMediumDQM/'),
        jetExtras = cms.PSet(
            jetBTaggers = cms.PSet(
                trackCountingEff = cms.PSet(
                    workingPoint = cms.double(1.25),
                    label = cms.InputTag("trackCountingHighEffBJetTags")
                ),
                trackCountingPur = cms.PSet(
                    workingPoint = cms.double(3.0),
                    label = cms.InputTag("trackCountingHighPurBJetTags")
                ),
                secondaryVertex = cms.PSet(
                    workingPoint = cms.double(2.05),
                    label = cms.InputTag("simpleSecondaryVertexHighEffBJetTags")
                )
            ),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5& emEnergyFraction>0.01')
        ),
        muonExtras = cms.PSet(
            isolation = cms.string('(isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1'),
            select = cms.string('pt>20 & abs(eta)<2.1 & isGlobalMuon & innerTrack.numberOfValidHits>10 & globalTrack.normalizedChi2>-1 & globalTrack.normalizedChi2<10 & (isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1')
        ),
        triggerExtras = cms.PSet(
            paths = cms.vstring('HLT_Mu3:HLT_QuadJet15U', 
                'HLT_Mu5:HLT_QuadJet15U', 
                'HLT_Mu7:HLT_QuadJet15U', 
                'HLT_Mu9:HLT_QuadJet15U', 
                'HLT_Mu11:HLT_QuadJet15U'),
            src = cms.InputTag("TriggerResults","","HLT")
        )
    ),
    selection = cms.VPSet(cms.PSet(
        max = cms.int32(1),
        src = cms.InputTag("muons"),
        min = cms.int32(1),
        select = cms.string('pt>20 & abs(eta)<2.1 & isGlobalMuon & innerTrack.numberOfValidHits>10 & globalTrack.normalizedChi2>-1 & globalTrack.normalizedChi2<10 & (isolationR03.sumPt+isolationR03.emEt+isolationR03.hadEt)/pt<0.1'),
        label = cms.string('muons:step0')
    ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(1),
            label = cms.string('jets/calo:step1'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(2),
            label = cms.string('jets/calo:step2'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(3),
            label = cms.string('jets/calo:step3'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        ), 
        cms.PSet(
            src = cms.InputTag("ak5CaloJets"),
            min = cms.int32(4),
            label = cms.string('jets/calo:step4'),
            jetCorrector = cms.string('ak5CaloL2L3'),
            jetID = cms.PSet(
                select = cms.string('fHPD < 0.98 & n90Hits>1 & restrictedEMF<1'),
                label = cms.InputTag("ak5JetID")
            ),
            select = cms.string('pt>15 & abs(eta)<2.5 & emEnergyFraction>0.01')
        )),
    preselection = cms.PSet(
        trigger = cms.PSet(
            src = cms.InputTag("TriggerResults","","HLT"),
            select = cms.vstring('HLT_Mu11')
        ),
        vertex = cms.PSet(
            src = cms.InputTag("offlinePrimaryVertices"),
            select = cms.string('abs(x)<1. & abs(y)<1. & abs(z)<20. & tracksSize>3 & !isFake')
        )
    )
)


process.topTrigOfflineDQM = cms.EDAnalyzer("TopTrigAnalyzer",
    BeamSpotInputTag = cms.InputTag("offlineBeamSpot"),
    NJets = cms.untracked.int32(2),
    RecoMuonInputTag = cms.InputTag("muons"),
    DQMStore = cms.untracked.bool(True),
    PhiParameters = cms.untracked.vdouble(20, -3.15, 3.15),
    ResParameters = cms.untracked.vdouble(20, -0.15, 0.15),
    CrossSection = cms.double(0.97),
    PtParameters = cms.untracked.vdouble(0.0, 2.0, 4.0, 6.0, 8.0, 
        10.0, 20.0, 30.0, 40.0, 100.0, 
        200.0, 400.0),
    TriggerResultLabel = cms.InputTag("TriggerResults","","HLT"),
    HltAodInputTag = cms.InputTag("hltTriggerSummaryAOD"),
    JetMParameters = cms.untracked.vdouble(11, -0.5, 10.5),
    L1DrCut = cms.untracked.double(0.4),
    histoFileName = cms.untracked.string('MuonTrigHistos_RECO.root'),
    matchType = cms.untracked.string('dr'),
    Z0Parameters = cms.untracked.vdouble(25, -25, 25),
    TriggerNames = cms.vstring('HLT_L1Mu', 
        'HLT_L1MuOpen', 
        'HLT_Mu3', 
        'HLT_Mu5', 
        'HLT_IsoMu3', 
        'HLT_Mu5', 
        'HLT_Mu9'),
    HltProcessName = cms.string('HLT'),
    CaloJetInputTag = cms.InputTag("iterativeCone5CaloJets"),
    HltRawInputTag = cms.InputTag("hltTriggerSummaryRAW"),
    customCollection = cms.VPSet(cms.untracked.PSet(
        d0cut = cms.untracked.double(2.0),
        collectionName = cms.untracked.string('topMuonPt1_anyTrig'),
        hltCuts = cms.untracked.string('pt > 1 && abs(eta) < 2.1'),
        z0cut = cms.untracked.double(25.0),
        trackCollection = cms.untracked.string('globalTrack'),
        chi2cut = cms.untracked.double(30.0),
        recoCuts = cms.untracked.string('pt > 1 && abs(eta) < 2.1'),
        requiredTriggers = cms.untracked.vstring(''),
        nHits = cms.untracked.int32(20)
    ), 
        cms.untracked.PSet(
            d0cut = cms.untracked.double(0.2),
            collectionName = cms.untracked.string('topMuonPt1_QuadJet15U'),
            hltCuts = cms.untracked.string('pt > 1 && abs(eta) < 2.1'),
            z0cut = cms.untracked.double(25.0),
            trackCollection = cms.untracked.string('globalTrack'),
            chi2cut = cms.untracked.double(30.0),
            recoCuts = cms.untracked.string('pt > 1 && abs(eta) < 2.1'),
            requiredTriggers = cms.untracked.vstring('HLT_QuadJet15U'),
            nHits = cms.untracked.int32(20)
        ), 
        cms.untracked.PSet(
            d0cut = cms.untracked.double(0.2),
            collectionName = cms.untracked.string('topMuonPt1_QuadJet30'),
            hltCuts = cms.untracked.string('pt > 1 && abs(eta) < 2.1'),
            z0cut = cms.untracked.double(25.0),
            trackCollection = cms.untracked.string('globalTrack'),
            chi2cut = cms.untracked.double(30.0),
            recoCuts = cms.untracked.string('pt > 1 && abs(eta) < 2.1'),
            requiredTriggers = cms.untracked.vstring('HLT_QuadJet30'),
            nHits = cms.untracked.int32(20)
        )),
    DrParameters = cms.untracked.vdouble(20, 0.0, 0.05),
    createStandAloneHistos = cms.untracked.bool(False),
    L2DrCut = cms.untracked.double(0.25),
    EtaParameters = cms.untracked.vdouble(20, -2.1, 2.1),
    D0Parameters = cms.untracked.vdouble(25, -1, 1),
    EtaCut = cms.untracked.double(2.4),
    PtCut = cms.untracked.double(8.0),
    L3DrCut = cms.untracked.double(0.025)
)


process.towerOptAnalyzer = cms.EDAnalyzer("CaloTowerAnalyzer",
    HLTBitLabels = cms.VInputTag(cms.InputTag("HLT_MET100"), cms.InputTag("HLT_HT100U")),
    HcalNoiseSummary = cms.InputTag("hcalnoise"),
    FineBinning = cms.untracked.bool(False),
    HLTSelection = cms.untracked.bool(False),
    FolderName = cms.untracked.string('JetMET/CaloTowers/Optimized'),
    AllHist = cms.untracked.bool(True),
    Debug = cms.bool(False),
    HLTResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    CaloTowersLabel = cms.InputTag("calotoweroptmaker")
)


process.towerSchemeBAnalyzer = cms.EDAnalyzer("CaloTowerAnalyzer",
    HLTBitLabels = cms.VInputTag(cms.InputTag("HLT_MET100"), cms.InputTag("HLT_HT100U")),
    HcalNoiseSummary = cms.InputTag("hcalnoise"),
    FineBinning = cms.untracked.bool(False),
    HLTSelection = cms.untracked.bool(False),
    FolderName = cms.untracked.string('JetMET/CaloTowers/SchemeB'),
    AllHist = cms.untracked.bool(False),
    Debug = cms.bool(False),
    HLTResultsLabel = cms.InputTag("TriggerResults","","HLT"),
    CaloTowersLabel = cms.InputTag("towerMaker")
)


process.trackValidator = cms.EDAnalyzer("MultiTrackValidator",
    lipTP = cms.double(30.0),
    pdgIdTP = cms.vint32(),
    dEdx1Tag = cms.InputTag("dedxHarmonic2"),
    associatormap = cms.InputTag("trackingParticleRecoTrackAsssociation"),
    minRapidityTP = cms.double(-2.4),
    dEdx2Tag = cms.InputTag("dedxTruncated40"),
    ptMinTP = cms.double(0.005),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    chargedOnlyTP = cms.bool(True),
    skipHistoFit = cms.untracked.bool(True),
    label = cms.VInputTag(cms.InputTag("generalTracks"), cms.InputTag("cutsRecoTracksHp"), cms.InputTag("cutsRecoTracksZero"), cms.InputTag("cutsRecoTracksZeroHp"), cms.InputTag("cutsRecoTracksFirst"), 
        cms.InputTag("cutsRecoTracksFirstHp"), cms.InputTag("cutsRecoTracksSecond"), cms.InputTag("cutsRecoTracksSecondHp"), cms.InputTag("cutsRecoTracksThird"), cms.InputTag("cutsRecoTracksThirdHp"), 
        cms.InputTag("cutsRecoTracksFourth"), cms.InputTag("cutsRecoTracksFourthHp"), cms.InputTag("cutsRecoTracksFifth"), cms.InputTag("cutsRecoTracksFifthHp")),
    signalOnlyTP = cms.bool(True),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    dirName = cms.string('Tracking/Track/'),
    useGsf = cms.bool(False),
    sim = cms.string('g4SimHits'),
    runStandalone = cms.bool(False),
    associators = cms.vstring('TrackAssociatorByHitsRecoDenom'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    histoProducerAlgoBlock = cms.PSet(
        nintZpos = cms.int32(60),
        generalTpSelector = cms.PSet(
            chargedOnly = cms.bool(True),
            pdgId = cms.vint32(),
            tip = cms.double(3.5),
            signalOnly = cms.bool(True),
            minRapidity = cms.double(-2.4),
            lip = cms.double(30.0),
            ptMin = cms.double(0.9),
            maxRapidity = cms.double(2.4),
            minHit = cms.int32(0),
            stableOnly = cms.bool(False)
        ),
        useFabsEta = cms.bool(False),
        ptRes_rangeMin = cms.double(-0.1),
        minVertpos = cms.double(0),
        ptRes_rangeMax = cms.double(0.1),
        dxyRes_rangeMax = cms.double(0.1),
        cotThetaRes_nbin = cms.int32(300),
        nintHit = cms.int32(35),
        dzRes_rangeMin = cms.double(-0.05),
        minPt = cms.double(0.1),
        phiRes_rangeMax = cms.double(0.01),
        dxyRes_rangeMin = cms.double(-0.1),
        dxyRes_nbin = cms.int32(500),
        maxVertpos = cms.double(80),
        maxPhi = cms.double(3.15),
        nintPt = cms.int32(40),
        cotThetaRes_rangeMax = cms.double(0.02),
        TpSelectorForEfficiencyVsPt = cms.PSet(
            chargedOnly = cms.bool(True),
            pdgId = cms.vint32(),
            tip = cms.double(2.0),
            signalOnly = cms.bool(True),
            minRapidity = cms.double(-2.4),
            lip = cms.double(20.0),
            ptMin = cms.double(0.05),
            maxRapidity = cms.double(2.4),
            minHit = cms.int32(0),
            stableOnly = cms.bool(False)
        ),
        maxDeDx = cms.double(10.0),
        maxDz = cms.double(30),
        maxHit = cms.double(34.5),
        useInvPt = cms.bool(False),
        nintPhi = cms.int32(36),
        TpSelectorForEfficiencyVsVTXR = cms.PSet(
            chargedOnly = cms.bool(True),
            pdgId = cms.vint32(),
            tip = cms.double(60),
            signalOnly = cms.bool(True),
            minRapidity = cms.double(-2.4),
            lip = cms.double(15.0),
            ptMin = cms.double(1.0),
            maxRapidity = cms.double(2.4),
            minHit = cms.int32(0),
            stableOnly = cms.bool(False)
        ),
        useLogPt = cms.untracked.bool(True),
        minDeDx = cms.double(0.0),
        nintDz = cms.int32(60),
        maxEta = cms.double(2.5),
        TpSelectorForEfficiencyVsVTXZ = cms.PSet(
            chargedOnly = cms.bool(True),
            pdgId = cms.vint32(),
            tip = cms.double(5),
            signalOnly = cms.bool(True),
            minRapidity = cms.double(-2.4),
            lip = cms.double(35.0),
            ptMin = cms.double(1.0),
            maxRapidity = cms.double(2.4),
            minHit = cms.int32(0),
            stableOnly = cms.bool(False)
        ),
        cotThetaRes_rangeMin = cms.double(-0.02),
        minDxy = cms.double(-40),
        dzRes_nbin = cms.int32(150),
        nintDxy = cms.int32(80),
        maxPt = cms.double(1000),
        maxDxy = cms.double(40),
        phiRes_rangeMin = cms.double(-0.01),
        maxZpos = cms.double(30),
        TpSelectorForEfficiencyVsPhi = cms.PSet(
            chargedOnly = cms.bool(True),
            pdgId = cms.vint32(),
            tip = cms.double(3.5),
            signalOnly = cms.bool(True),
            minRapidity = cms.double(-2.4),
            lip = cms.double(30.0),
            ptMin = cms.double(0.9),
            maxRapidity = cms.double(2.4),
            minHit = cms.int32(0),
            stableOnly = cms.bool(False)
        ),
        nintVertpos = cms.int32(40),
        ComponentName = cms.string('MTVHistoProducerAlgoForTracker'),
        ptRes_nbin = cms.int32(100),
        nintDeDx = cms.int32(40),
        minHit = cms.double(-0.5),
        minEta = cms.double(-2.5),
        phiRes_nbin = cms.int32(300),
        nintEta = cms.int32(50),
        TpSelectorForEfficiencyVsEta = cms.PSet(
            chargedOnly = cms.bool(True),
            pdgId = cms.vint32(),
            tip = cms.double(2.0),
            signalOnly = cms.bool(True),
            minRapidity = cms.double(-2.4),
            lip = cms.double(30.0),
            ptMin = cms.double(0.9),
            maxRapidity = cms.double(2.4),
            minHit = cms.int32(0),
            stableOnly = cms.bool(False)
        ),
        minPhi = cms.double(-3.15),
        minDz = cms.double(-30),
        dzRes_rangeMax = cms.double(0.05),
        minZpos = cms.double(-30)
    ),
    tipTP = cms.double(60),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    stableOnlyTP = cms.bool(False),
    UseAssociators = cms.bool(True),
    minHitTP = cms.int32(0),
    maxRapidityTP = cms.double(2.4),
    useLogPt = cms.untracked.bool(True)
)


process.trackerHitsValid = cms.EDAnalyzer("TrackerHitAnalyzer",
    SiTIDLowSrc = cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"),
    SiTOBLowSrc = cms.InputTag("g4SimHits","TrackerHitsTOBLowTof"),
    outputFile = cms.untracked.string(''),
    Name = cms.untracked.string('TrackerHitAnalyzer'),
    SiTOBHighSrc = cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"),
    Verbosity = cms.untracked.bool(False),
    PxlFwdLowSrc = cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"),
    Label = cms.string('TrkHits'),
    PxlBrlLowSrc = cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"),
    SiTIBHighSrc = cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"),
    SiTIBLowSrc = cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"),
    SiTIDHighSrc = cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"),
    PxlBrlHighSrc = cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"),
    SiTECHighSrc = cms.InputTag("g4SimHits","TrackerHitsTECHighTof"),
    ProvenanceLookup = cms.PSet(
        PrintProvenanceInfo = cms.untracked.bool(False),
        GetAllProvenances = cms.untracked.bool(False)
    ),
    SiTECLowSrc = cms.InputTag("g4SimHits","TrackerHitsTECLowTof"),
    PxlFwdHighSrc = cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof")
)


process.trackingTruthValid = cms.EDAnalyzer("TrackingTruthValid",
    src = cms.InputTag("mergedtruth","MergedTrackTruth"),
    outputFile = cms.string('')
)


process.trkCosmicMuonTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToTkCosmicTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("ctfWithMaterialTracksP5LHCNavigation"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(False),
    associators = cms.vstring('TrackAssociatorByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.trkMuonTrackVTrackAssoc = cms.EDAnalyzer("MuonTrackValidator",
    nintZpos = cms.int32(100),
    useFabsEta = cms.bool(False),
    minpT = cms.double(0.1),
    dxyRes_nbin = cms.int32(100),
    minVertpos = cms.double(0),
    ptRes_rangeMax = cms.double(0.3),
    dxyRes_rangeMax = cms.double(0.02),
    cotThetaRes_nbin = cms.int32(120),
    nintHit = cms.int32(75),
    nintPhi = cms.int32(36),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    dzRes_rangeMin = cms.double(-0.05),
    associatormap = cms.InputTag("tpToTkmuTrackAssociation"),
    minRapidityTP = cms.double(-2.4),
    maxVertpos = cms.double(5),
    ptMinTP = cms.double(0.9),
    label_tp_fake = cms.InputTag("mergedtruth","MergedTrackTruth"),
    phiRes_rangeMax = cms.double(0.05),
    dxyRes_rangeMin = cms.double(-0.02),
    ptRes_rangeMin = cms.double(-0.3),
    chargedOnlyTP = cms.bool(True),
    maxPhi = cms.double(3.1416),
    nintpT = cms.int32(40),
    cotThetaRes_rangeMax = cms.double(0.01),
    label = cms.VInputTag("generalTracks"),
    maxDz = cms.double(10),
    signalOnlyTP = cms.bool(True),
    maxHit = cms.double(74.5),
    phiRes_rangeMin = cms.double(-0.05),
    label_tp_effic = cms.InputTag("mergedtruth","MergedTrackTruth"),
    useInvPt = cms.bool(False),
    dirName = cms.string('Muons/RecoMuonV/MultiTrack/'),
    minHit = cms.double(-0.5),
    usemuon = cms.bool(False),
    associators = cms.vstring('TrackAssociatorByHits'),
    outputFile = cms.string(''),
    parametersDefiner = cms.string('LhcParametersDefinerForTP'),
    useLogPt = cms.untracked.bool(False),
    nintDz = cms.int32(100),
    lipTP = cms.double(30.0),
    ignoremissingtrackcollection = cms.untracked.bool(False),
    cotThetaRes_rangeMin = cms.double(-0.01),
    stableOnlyTP = cms.bool(False),
    minDxy = cms.double(-3),
    etaRes_rangeMin = cms.double(-0.05),
    usetracker = cms.bool(True),
    dzRes_nbin = cms.int32(150),
    nintDxy = cms.int32(100),
    maxpT = cms.double(1500),
    maxDxy = cms.double(3),
    tipTP = cms.double(3.5),
    nintVertpos = cms.int32(100),
    BiDirectional_RecoToSim_association = cms.bool(True),
    max = cms.double(2.5),
    maxZpos = cms.double(10),
    nint = cms.int32(50),
    ptRes_nbin = cms.int32(100),
    min = cms.double(-2.5),
    useGsf = cms.bool(False),
    UseAssociators = cms.bool(False),
    phiRes_nbin = cms.int32(100),
    pdgIdTP = cms.vint32(13, -13),
    etaRes_rangeMax = cms.double(0.05),
    minHitTP = cms.int32(0),
    minPhi = cms.double(-3.1416),
    minDz = cms.double(-10),
    maxRapidityTP = cms.double(2.4),
    dzRes_rangeMax = cms.double(0.05),
    minZpos = cms.double(-10)
)


process.v0Validator = cms.EDAnalyzer("V0Validator",
    lambdaCollection = cms.InputTag("generalV0Candidates","Lambda"),
    DQMRootFileName = cms.string(''),
    dirName = cms.string('Vertexing/V0V'),
    kShortCollection = cms.InputTag("generalV0Candidates","Kshort")
)


process.validSimHit = cms.EDAnalyzer("MuonSimHitsValidAnalyzer",
    DT_outputFile = cms.untracked.string(''),
    Name = cms.untracked.string('MuonSimHitsValidAnalyzer'),
    RPCHitsSrc = cms.InputTag("g4SimHits","MuonRPCHits"),
    Verbosity = cms.untracked.int32(0),
    ProvenanceLookup = cms.PSet(
        PrintProvenanceInfo = cms.untracked.bool(False),
        GetAllProvenances = cms.untracked.bool(False)
    ),
    DTHitsSrc = cms.InputTag("g4SimHits","MuonDTHits"),
    CSCHitsSrc = cms.InputTag("g4SimHits","MuonCSCHits"),
    Label = cms.string('Hits')
)


process.validationMuonRPCDigis = cms.EDAnalyzer("RPCDigiValid",
    digiLabel = cms.untracked.string('simMuonRPCDigis'),
    outputFile = cms.untracked.string('')
)


process.wMinusEleValidation = cms.EDAnalyzer("WValidation",
    hepmcCollection = cms.InputTag("generator"),
    name = cms.string('Electrons'),
    decaysTo = cms.int32(11)
)


process.wMinusMuoValidation = cms.EDAnalyzer("WValidation",
    hepmcCollection = cms.InputTag("generator"),
    name = cms.string('Muons'),
    decaysTo = cms.int32(13)
)


process.wPlusEleValidation = cms.EDAnalyzer("WValidation",
    hepmcCollection = cms.InputTag("generator"),
    name = cms.string('Positrons'),
    decaysTo = cms.int32(-11)
)


process.wPlusMuoValidation = cms.EDAnalyzer("WValidation",
    hepmcCollection = cms.InputTag("generator"),
    name = cms.string('AntiMuons'),
    decaysTo = cms.int32(-13)
)


process.wValidation = cms.EDAnalyzer("WValidation",
    hepmcCollection = cms.InputTag("generator"),
    name = cms.string('Electrons'),
    decaysTo = cms.int32(11)
)


process.zdcMonitor = cms.EDAnalyzer("ZDCMonitorModule",
    diagnosticPrescaleEvt = cms.untracked.int32(-1),
    ZDCMonitor_checkNevents = cms.untracked.int32(1000),
    BadCells = cms.untracked.vstring(),
    FEDRawDataCollection = cms.untracked.InputTag("source"),
    ZDCMonitor = cms.untracked.bool(True),
    subSystemFolder = cms.untracked.string('Hcal/ZDCMonitor'),
    zdcRecHitLabel = cms.InputTag("zdcreco"),
    ZDCMonitor_deadthresholdrate = cms.untracked.double(0.0),
    gtLabel = cms.InputTag("l1GtUnpack"),
    AllowedCalibTypes = cms.untracked.vint32(0, 1, 2, 3, 4, 
        5, 6, 7),
    digiLabel = cms.InputTag("hcalDigis"),
    checkNevents = cms.untracked.int32(1000),
    showTiming = cms.untracked.bool(False),
    Nlumiblocks = cms.untracked.int32(1000),
    diagnosticPrescaleLS = cms.untracked.int32(-1),
    Online = cms.untracked.bool(False),
    debug = cms.untracked.int32(0),
    checkZDC = cms.untracked.bool(True),
    pedestalsInFC = cms.untracked.bool(True)
)


process.DQMoutput = cms.OutputModule("PoolOutputModule",
    splitLevel = cms.untracked.int32(0),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_MEtoEDMConverter_*_*'),
    fileName = cms.untracked.string('step2_inDQM.root'),
    dataset = cms.untracked.PSet(
        filterName = cms.untracked.string(''),
        dataTier = cms.untracked.string('DQM')
    )
)


process.RECOSIMoutput = cms.OutputModule("PoolOutputModule",
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    fileName = cms.untracked.string('step2.root'),
    outputCommands = (cms.untracked.vstring('drop *', 'drop *', 'keep DetIdedmEDCollection_siStripDigis_*_*', 'keep *_siPixelClusters_*_*', 'keep *_siStripClusters_*_*', 'keep *_dt1DRecHits_*_*', 'keep *_dt4DSegments_*_*', 'keep *_dt1DCosmicRecHits_*_*', 'keep *_dt4DCosmicSegments_*_*', 'keep *_csc2DRecHits_*_*', 'keep *_cscSegments_*_*', 'keep *_rpcRecHits_*_*', 'keep *_hbhereco_*_*', 'keep *_hfreco_*_*', 'keep *_horeco_*_*', 'keep HBHERecHitsSorted_hbherecoMB_*_*', 'keep HORecHitsSorted_horecoMB_*_*', 'keep HFRecHitsSorted_hfrecoMB_*_*', 'keep ZDCDataFramesSorted_*Digis_*_*', 'keep ZDCRecHitsSorted_*_*_*', 'keep *_reducedHcalRecHits_*_*', 'keep *_castorreco_*_*', 'keep *_ecalPreshowerRecHit_*_*', 'keep *_ecalRecHit_*_*', 'keep *_ecalCompactTrigPrim_*_*', 'keep *_ecalTPSkim_*_*', 'keep *_selectDigi_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 'keep *_hybridSuperClusters_*_*', 'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 'keep *_multi5x5BasicClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 'drop recoClusterShapes_*_*_*', 'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 'keep *_CkfElectronCandidates_*_*', 'keep *_GsfGlobalElectronTest_*_*', 'keep *_electronMergedSeeds_*_*', 'keep recoGsfTracks_electronGsfTracks_*_*', 'keep recoGsfTrackExtras_electronGsfTracks_*_*', 'keep recoTrackExtras_electronGsfTracks_*_*', 'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoTrackExtras_generalTracks_*_*', 'keep TrackingRecHitsOwned_generalTracks_*_*', 'keep recoTracks_beamhaloTracks_*_*', 'keep recoTrackExtras_beamhaloTracks_*_*', 'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 'keep recoTracks_regionalCosmicTracks_*_*', 'keep recoTrackExtras_regionalCosmicTracks_*_*', 'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 'keep recoTracks_rsWithMaterialTracks_*_*', 'keep recoTrackExtras_rsWithMaterialTracks_*_*', 'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 'keep *_ctfPixelLess_*_*', 'keep *_dedxTruncated40_*_*', 'keep *_dedxDiscrimASmi_*_*', 'keep *_dedxHarmonic2_*_*', 'keep *_trackExtrapolator_*_*', 'keep *_kt4CaloJets_*_*', 'keep *_kt6CaloJets_*_*', 'keep *_ak5CaloJets_*_*', 'keep *_ak7CaloJets_*_*', 'keep *_iterativeCone5CaloJets_*_*', 'keep *_iterativeCone15CaloJets_*_*', 'keep *_kt4PFJets_*_*', 'keep *_kt6PFJets_*_*', 'keep *_ak5PFJets_*_*', 'keep *_ak7PFJets_*_*', 'keep *_iterativeCone5PFJets_*_*', 'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_ak5TrackJets_*_*', 'keep *_kt4TrackJets_*_*', 'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 'keep *_caloTowers_*_*', 'keep *_towerMaker_*_*', 'keep *_CastorTowerReco_*_*', 'keep *_ic5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 'keep *_iterativeCone5JetExtender_*_*', 'keep *_kt4JetTracksAssociatorAtVertex_*_*', 'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 'keep *_kt4JetExtender_*_*', 'keep *_ak5JetTracksAssociatorAtVertex_*_*', 'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak5JetExtender_*_*', 'keep *_ak7JetTracksAssociatorAtVertex_*_*', 'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak7JetExtender_*_*', 'keep *_ak5JetID_*_*', 'keep *_ak7JetID_*_*', 'keep *_ic5JetID_*_*', 'keep *_kt4JetID_*_*', 'keep *_kt6JetID_*_*', 'keep *_ak7BasicJets_*_*', 'keep *_ak7CastorJetID_*_*', 'keep recoCaloMETs_met_*_*', 'keep recoCaloMETs_metNoHF_*_*', 'keep recoCaloMETs_metHO_*_*', 'keep recoCaloMETs_corMetGlobalMuons_*_*', 'keep recoCaloMETs_metNoHFHO_*_*', 'keep recoCaloMETs_metOptHO_*_*', 'keep recoCaloMETs_metOpt_*_*', 'keep recoCaloMETs_metOptNoHFHO_*_*', 'keep recoCaloMETs_metOptNoHF_*_*', 'keep recoMETs_htMetAK5_*_*', 'keep recoMETs_htMetAK7_*_*', 'keep recoMETs_htMetIC5_*_*', 'keep recoMETs_htMetKT4_*_*', 'keep recoMETs_htMetKT6_*_*', 'keep recoMETs_tcMet_*_*', 'keep recoMETs_tcMetWithPFclusters_*_*', 'keep recoPFMETs_pfMet_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 'keep recoHcalNoiseRBXs_hcalnoise_*_*', 'keep HcalNoiseSummary_hcalnoise_*_*', 'keep *HaloData_*_*_*', 'keep *BeamHaloSummary_BeamHaloSummary_*_*', 'keep *_MuonSeed_*_*', 'keep *_ancientMuonSeed_*_*', 'keep *_mergedStandAloneMuonSeeds_*_*', 'keep TrackingRecHitsOwned_globalMuons_*_*', 'keep TrackingRecHitsOwned_tevMuons_*_*', 'keep recoCaloMuons_calomuons_*_*', 'keep *_CosmicMuonSeed_*_*', 'keep recoTrackExtras_cosmicMuons_*_*', 'keep TrackingRecHitsOwned_cosmicMuons_*_*', 'keep recoTrackExtras_globalCosmicMuons_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 'keep recoTrackExtras_cosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 'keep recoTracks_cosmicsVetoTracks_*_*', 'keep *_SETMuonSeed_*_*', 'keep recoTracks_standAloneSETMuons_*_*', 'keep recoTrackExtras_standAloneSETMuons_*_*', 'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 'keep recoTracks_globalSETMuons_*_*', 'keep recoTrackExtras_globalSETMuons_*_*', 'keep TrackingRecHitsOwned_globalSETMuons_*_*', 'keep recoMuons_muonsWithSET_*_*', 'keep recoTracks_standAloneMuons_*_*', 'keep recoTrackExtras_standAloneMuons_*_*', 'keep TrackingRecHitsOwned_standAloneMuons_*_*', 'keep recoTracks_globalMuons_*_*', 'keep recoTrackExtras_globalMuons_*_*', 'keep recoTracks_tevMuons_*_*', 'keep recoTrackExtras_tevMuons_*_*', 'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoMuons_muons_*_*', 'keep booledmValueMap_muid*_*_*', 'keep recoMuonTimeExtraedmValueMap_muons_*_*', 'keep *_muonShowerInformation_*_*', 'keep recoTracks_cosmicMuons_*_*', 'keep recoTracks_globalCosmicMuons_*_*', 'keep recoMuons_muonsFromCosmics_*_*', 'keep recoTracks_cosmicMuons1Leg_*_*', 'keep recoTracks_globalCosmicMuons1Leg_*_*', 'keep recoMuons_muonsFromCosmics1Leg_*_*', 'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 'keep uintedmValueMap_cosmicsVeto_*_*', 'keep *_muIsoDepositTk_*_*', 'keep *_muIsoDepositCalByAssociatorTowers_*_*', 'keep *_muIsoDepositCalByAssociatorHits_*_*', 'keep *_muIsoDepositJets_*_*', 'keep *_muGlobalIsoDepositCtfTk_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 'keep *_muGlobalIsoDepositJets_*_*', 'keep *_impactParameterTagInfos_*_*', 'keep *_trackCountingHighEffBJetTags_*_*', 'keep *_trackCountingHighPurBJetTags_*_*', 'keep *_jetProbabilityBJetTags_*_*', 'keep *_jetBProbabilityBJetTags_*_*', 'keep *_secondaryVertexTagInfos_*_*', 'keep *_ghostTrackVertexTagInfos_*_*', 'keep *_simpleSecondaryVertexBJetTags_*_*', 'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 'keep *_combinedSecondaryVertexBJetTags_*_*', 'keep *_combinedSecondaryVertexMVABJetTags_*_*', 'keep *_ghostTrackBJetTags_*_*', 'keep *_btagSoftElectrons_*_*', 'keep *_softElectronCands_*_*', 'keep *_softPFElectrons_*_*', 'keep *_softElectronTagInfos_*_*', 'keep *_softElectronBJetTags_*_*', 'keep *_softElectronByIP3dBJetTags_*_*', 'keep *_softElectronByPtBJetTags_*_*', 'keep *_softMuonTagInfos_*_*', 'keep *_softMuonBJetTags_*_*', 'keep *_softMuonByIP3dBJetTags_*_*', 'keep *_softMuonByPtBJetTags_*_*', 'keep *_combinedMVABJetTags_*_*', 'keep *_ak5PFJetsRecoTauPiZeros_*_*', 'keep *_hpsPFTauProducer*_*_*', 'keep *_hpsPFTauDiscrimination*_*_*', 'keep *_shrinkingConePFTauProducer*_*_*', 'keep *_shrinkingConePFTauDiscrimination*_*_*', 'keep *_hpsTancTaus_*_*', 'keep *_hpsTancTausDiscrimination*_*_*', 'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_caloRecoTauTagInfoProducer_*_*', 'keep recoCaloTaus_caloRecoTauProducer*_*_*', 'keep *_caloRecoTauDiscrimination*_*_*', 'keep  *_offlinePrimaryVertices_*_*', 'keep  *_offlinePrimaryVerticesWithBS_*_*', 'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 'keep  *_nuclearInteractionMaker_*_*', 'keep *_generalV0Candidates_*_*', 'keep recoGsfElectronCores_gsfElectronCores_*_*', 'keep recoGsfElectrons_gsfElectrons_*_*', 'keep floatedmValueMap_eidRobustLoose_*_*', 'keep floatedmValueMap_eidRobustTight_*_*', 'keep floatedmValueMap_eidRobustHighEnergy_*_*', 'keep floatedmValueMap_eidLoose_*_*', 'keep floatedmValueMap_eidTight_*_*', 'keep recoPhotons_photons_*_*', 'keep recoPhotonCores_photonCore_*_*', 'keep recoConversions_conversions_*_*', 'drop *_conversions_uncleanedConversions_*', 'keep recoConversions_allConversions_*_*', 'keep recoTracks_ckfOutInTracksFromConversions_*_*', 'keep recoTracks_ckfInOutTracksFromConversions_*_*', 'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 'keep *_PhotonIDProd_*_*', 'keep *_hfRecoEcalCandidate_*_*', 'keep *_hfEMClusters_*_*', 'keep *_pixelTracks_*_*', 'keep *_pixelVertices_*_*', 'drop CaloTowersSorted_towerMakerPF_*_*', 'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 'keep recoPFClusters_particleFlowClusterECAL_*_*', 'keep recoPFClusters_particleFlowClusterHCAL_*_*')+cms.untracked.vstring('keep recoPFClusters_particleFlowClusterPS_*_*', 'keep recoPFBlocks_particleFlowBlock_*_*', 'keep recoPFCandidates_particleFlow_*_*', 'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 'keep *_pfElectronTranslator_*_*', 'keep *_pfPhotonTranslator_*_*', 'keep *_trackerDrivenElectronSeeds_preid_*', 'keep *_offlineBeamSpot_*_*', 'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'keep L1MuGMTReadoutCollection_gtDigis_*_*', 'keep L1GctEmCand*_gctDigis_*_*', 'keep L1GctJetCand*_gctDigis_*_*', 'keep L1GctEtHad*_gctDigis_*_*', 'keep L1GctEtMiss*_gctDigis_*_*', 'keep L1GctEtTotal*_gctDigis_*_*', 'keep L1GctHtMiss*_gctDigis_*_*', 'keep L1GctJetCounts*_gctDigis_*_*', 'keep L1GctHFRingEtSums*_gctDigis_*_*', 'keep L1GctHFBitCounts*_gctDigis_*_*', 'keep LumiDetails_lumiProducer_*_*', 'keep LumiSummary_lumiProducer_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep L1AcceptBunchCrossings_*_*_*', 'keep L1TriggerScalerss_*_*_*', 'keep Level1TriggerScalerss_*_*_*', 'keep LumiScalerss_*_*_*', 'keep BeamSpotOnlines_*_*_*', 'keep DcsStatuss_*_*_*', 'keep *_logErrorHarvester_*_*', 'keep LHERunInfoProduct_source_*_*', 'keep LHEEventProduct_source_*_*', 'keep GenRunInfoProduct_generator_*_*', 'keep GenEventInfoProduct_generator_*_*', 'keep edmHepMCProduct_generator_*_*', 'keep GenFilterInfo_*_*_*', 'keep *_genParticles_*_*', 'keep recoGenMETs_*_*_*', 'keep *_kt4GenJets_*_*', 'keep *_kt6GenJets_*_*', 'keep *_ak5GenJets_*_*', 'keep *_ak7GenJets_*_*', 'keep *_iterativeCone5GenJets_*_*', 'keep *_genParticle_*_*', 'keep edmHepMCProduct_source_*_*', 'keep SimTracks_g4SimHits_*_*', 'keep SimVertexs_g4SimHits_*_*', 'keep *_allTrackMCMatch_*_*', 'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 'keep PileupSummaryInfo_*_*_*', 'keep PileupSummaryInfos_*_*_*')),
    dataset = cms.untracked.PSet(
        filterName = cms.untracked.string(''),
        dataTier = cms.untracked.string('GEN-SIM-RECO')
    )
)


process.ecalBarrelDefaultTasksSequence = cms.Sequence(process.ecalBarrelOccupancyTask+process.ecalBarrelIntegrityTask+process.ecalBarrelStatusFlagsTask+process.ecalBarrelSelectiveReadoutTask+process.ecalBarrelRawDataTask+process.ecalBarrelLaserTask+process.ecalBarrelPedestalOnlineTask+process.ecalBarrelPedestalTask+process.ecalBarrelTestPulseTask+process.ecalBarrelTriggerTowerTask+process.ecalBarrelTimingTask)


process.ee_dqm_source_offline = cms.Sequence(process.ecalEndcapMonitorModule+process.dqmInfoEE+process.ecalEndcapOccupancyTask+process.ecalEndcapIntegrityTask+process.ecalEndcapStatusFlagsTask+process.ecalEndcapRawDataTask+process.ecalEndcapPedestalOnlineTask+process.ecalEndcapTriggerTowerTask+process.ecalEndcapClusterTask+process.ecalEndcapHltTask+process.ecalEndcapClusterTaskExtras)


process.ak7JTA = cms.Sequence(process.ak7JetTracksAssociatorAtVertex+process.ak7JetTracksAssociatorAtCaloFace+process.ak7JetExtender)


process.recopixelvertexing = cms.Sequence(process.pixelTracks+process.pixelVertices)


process.regionalCosmicTracksSeq = cms.Sequence(process.regionalCosmicTrackerSeeds+process.regionalCosmicCkfTrackCandidates+process.regionalCosmicTracks)


process.HLTTauDQMOfflineCertification = cms.Sequence(process.hltTauOfflineCertification)


process.l1temumonitor = cms.Sequence(process.l1demon+process.dqmEnvL1TEmu)


process.drellYanValidation_seq = cms.Sequence(process.drellYanEleValidation+process.drellYanMuoValidation)


process.egammaSelectors = cms.Sequence(process.genpartWenu+process.fiducialWenu+process.genpartZee+process.fiducialZee+process.genpartGammaJet+process.fiducialGammaJet+process.genpartDiGamma+process.fiducialDiGamma)


process.btagging = cms.Sequence(process.impactParameterTagInfos+process.trackCountingHighEffBJetTags+process.trackCountingHighPurBJetTags+process.jetProbabilityBJetTags+process.jetBProbabilityBJetTags+process.secondaryVertexTagInfos+process.simpleSecondaryVertexHighEffBJetTags+process.simpleSecondaryVertexHighPurBJetTags+process.combinedSecondaryVertexBJetTags+process.combinedSecondaryVertexMVABJetTags+process.ghostTrackVertexTagInfos+process.ghostTrackBJetTags+process.softElectronCands+process.softElectronTagInfos+process.softElectronByIP3dBJetTags+process.softElectronByPtBJetTags+process.softMuonTagInfos+process.softMuonBJetTags+process.softMuonByIP3dBJetTags+process.softMuonByPtBJetTags)


process.dtSources = cms.Sequence(process.dtDataIntegrityUnpacker+process.dtDCSByLumiMonitor+process.dtSegmentAnalysisMonitor+process.dtResolutionAnalysisMonitor+process.dtEfficiencyMonitor+process.dtTriggerEfficiencyMonitor+process.dqmInfoDT)


process.pfJetValidationSequence = cms.Sequence(process.pfJetValidation1+process.pfJetValidation2)


process.iterativeCone5JTA = cms.Sequence(process.iterativeCone5JetTracksAssociatorAtVertex+process.iterativeCone5JetTracksAssociatorAtCaloFace+process.iterativeCone5JetExtender)


process.recoTauCommonSequence = cms.Sequence(process.ak5PFJetTracksAssociatorAtVertex+process.recoTauAK5PFJets08Region+process.recoTauPileUpVertices+process.pfRecoTauTagInfoProducer)


process.dtlocalreco = cms.Sequence(process.dt1DRecHits+process.dt4DSegments+process.dt1DCosmicRecHits+process.dt4DCosmicSegments)


process.SingleJetValidation = cms.Sequence(process.SingleJetPathVal15+process.SingleJetPathVal30+process.SingleJetPathVal50+process.SingleJetPathVal70+process.SingleJetPathVal100+process.SingleMETPathVal35+process.SingleMETPathVal45+process.SingleMETPathVal60+process.SingleMETPathVal100+process.HTMHTPath+process.QuadJetPathVal30+process.QuadJetPathVal60)


process.egammaValidators = cms.Sequence(process.HLT_Ele17_SW_TighterEleIdIsol_L1RDQMWenu+process.HLT_Ele10_LW_L1RDQMWenu+process.HLT_Ele15_SW_L1RDQMWenu+process.HLT_Ele10_LW_EleId_L1RDQMWenu+process.HLT_Ele15_SiStrip_L1RDQMWenu+process.HLT_Ele17_SW_TighterEleIdIsol_L1RDQMZee+process.HLT_Ele10_LW_L1RDQMZee+process.HLT_Ele15_SW_L1RDQMZee+process.HLT_Ele10_LW_EleId_L1RDQMZee+process.HLT_Ele15_SiStrip_L1RDQMZee+process.HLT_DoubleEle5_SW_L1RDQMZee+process.HLT_Photon10_L1R_DQMGammaJet+process.HLT_Photon15_TrackIso_L1R_DQMGammaJet+process.HLT_Photon15_LooseEcalIso_L1R_DQMGammaJet+process.HLT_Photon20_Cleaned_L1R_DQMGammaJet+process.HLT_Photon25_LooseEcalIso_TrackIso_L1R_DQMGammaJet+process.HLT_Photon10_L1R_DQMDiGamma+process.HLT_DoublePhoton10_L1R_DQMDiGamma)


process.trackingParticlesNoSimHits = cms.Sequence(process.mergedtruthNoSimHits)


process.recoAllTrackJets = cms.Sequence(process.trackWithVertexRefSelector+process.trackRefsForJets+process.sisCone5TrackJets+process.sisCone7TrackJets+process.kt4TrackJets+process.kt6TrackJets+process.iterativeCone5TrackJets+process.ak5TrackJets+process.ak7TrackJets+process.gk5TrackJets+process.gk7TrackJets+process.ca4TrackJets+process.ca6TrackJets)


process.JetPlusTrackCorrectionsIcone5 = cms.Sequence(process.JPTeidTight+process.JetPlusTrackZSPCorJetIcone5)


process.recoMixMuonAssociatorByHits_seq = cms.Sequence(process.recoMuonFromPFProducer+process.muonMix+process.trackingParticlesNoSimHits)


process.muonQualityTests = cms.Sequence(process.muonSourcesQualityTests+process.muTrackResidualsTest+process.muRecoTest+process.muonClientsQualityTests+process.muonComp2RefQualityTests+process.muonComp2RefKolmoQualityTests+process.muonTestSummary)


process.pixeltrackerlocalreco = cms.Sequence(process.siPixelClusters+process.siPixelRecHits)


process.hcalRecHitsValidationSequence = cms.Sequence(process.NoiseRatesValidation+process.RecHitsValidation)


process.photonSequence = cms.Sequence(process.photonCore+process.photons)


process.RunTanc = cms.Sequence(process.shrinkingConePFTauDiscriminationByTaNCfrOnePercent+process.shrinkingConePFTauDiscriminationByTaNCfrHalfPercent+process.shrinkingConePFTauDiscriminationByTaNCfrQuarterPercent+process.shrinkingConePFTauDiscriminationByTaNCfrTenthPercent)


process.JetPlusTrackCorrectionsAntiKt5 = cms.Sequence(process.JPTeidTight+process.JetPlusTrackZSPCorJetAntiKt5)


process.endOfProcess_withComparison = cms.Sequence(process.MEtoEDMConverter+process.MEtoMEComparitor)


process.beamhaloTracksSeq = cms.Sequence(process.beamhaloTrackerSeeds+process.beamhaloTrackCandidates+process.beamhaloTracks)


process.HLTJetMETRef = cms.Sequence(process.JetMETMCProducer)


process.hpsTancTauInitialSequence = cms.Sequence(process.combinatoricRecoTausDiscriminationByLeadingPionPtCut+process.combinatoricRecoTausHPSSelector+process.hpsTancTaus+process.hpsTancTausDiscriminationByLeadingTrackFinding+process.hpsTancTausDiscriminationByLeadingPionPtCut+process.hpsTancTausDiscriminationByLeadingTrackPtCut+process.hpsTancTausDiscriminationByDecayModeSelection+process.hpsTancTausDiscriminationByFlightPath)


process.muIsoDQM_seq = cms.Sequence(process.MuIsoDQM_trk+process.MuIsoDQM_sta+process.MuIsoDQM_glb)


process.trackCollectionMerging = cms.Sequence(process.merge2nd3rdTracks+process.merge4th5thTracks+process.iterTracks+process.generalTracks)


process.electronSequence = cms.Sequence(process.ecalDrivenGsfElectronCores+process.ecalDrivenGsfElectrons+process.gsfElectronCores+process.gsfElectrons)


process.conversionTrackProducers = cms.Sequence(process.generalConversionTrackProducer+process.inOutConversionTrackProducer+process.outInConversionTrackProducer+process.gsfConversionTrackProducer)


process.particleFlowTrackWithNuclear = cms.Sequence(process.pfTrack+process.pfTrackElec+process.pfNuclear)


process.vertexreco = cms.Sequence(process.offlinePrimaryVertices+process.offlinePrimaryVerticesWithBS+process.generalV0Candidates)


process.dtlocalreco_with_2DSegments = cms.Sequence(process.dt1DRecHits+process.dt2DSegments+process.dt4DSegments+process.dt1DCosmicRecHits+process.dt2DCosmicSegments+process.dt4DCosmicSegments)


process.particleFlowTrackWithV0 = cms.Sequence(process.pfTrack+process.pfTrackElec+process.pfV0)


process.CastorFullReco = cms.Sequence(process.CastorTowerReco+process.ak7BasicJets+process.ak7CastorJetID)


process.ctfTracksCombinedSeeds = cms.Sequence(process.globalSeedsFromPairsWithVertices+process.globalSeedsFromTriplets+process.globalCombinedSeeds+process.ckfTrackCandidatesCombinedSeeds+process.ctfCombinedSeeds)


process.tracksWithQualityZeroStep = cms.Sequence(process.zeroStepWithLooseQuality+process.zeroStepWithTightQuality+process.zeroStepTracksWithQuality)


process.hpsTancTauDiscriminantSequence = cms.Sequence(process.hpsTancTausDiscriminationByTancRaw+process.hpsTancTausDiscriminationByTanc+process.hpsTancTausDiscriminationByTancVLoose+process.hpsTancTausDiscriminationByTancLoose+process.hpsTancTausDiscriminationByTancMedium+process.hpsTancTausDiscriminationByTancTight+process.hpsTancTausDiscriminationByVLooseIsolation+process.hpsTancTausDiscriminationByLooseIsolation+process.hpsTancTausDiscriminationByMediumIsolation+process.hpsTancTausDiscriminationByTightIsolation+process.hpsTancTausDiscriminationByLooseElectronRejection+process.hpsTancTausDiscriminationByMediumElectronRejection+process.hpsTancTausDiscriminationByTightElectronRejection+process.hpsTancTausDiscriminationByLooseMuonRejection+process.hpsTancTausDiscriminationByTightMuonRejection)


process.endOfProcess = cms.Sequence(process.MEtoEDMConverter)


process.duplicationChecker_seq = cms.Sequence(process.duplicationChecker)


process.muonValidationCosmic_seq = cms.Sequence(process.trkCosmicMuonTrackVTrackAssoc+process.staCosmicMuonTrackVMuonAssoc+process.glbCosmicMuonTrackVMuonAssoc)


process.muonSelectionTypeSequence = cms.Sequence(process.muidTrackerMuonArbitrated+process.muidAllArbitrated+process.muidGlobalMuonPromptTight+process.muidTMLastStationLoose+process.muidTMLastStationTight+process.muidTM2DCompatibilityLoose+process.muidTM2DCompatibilityTight+process.muidTMOneStationLoose+process.muidTMOneStationTight+process.muidTMLastStationOptimizedLowPtLoose+process.muidTMLastStationOptimizedLowPtTight+process.muidGMTkChiCompatibility+process.muidGMStaChiCompatibility+process.muidGMTkKinkTight+process.muidTMLastStationAngLoose+process.muidTMLastStationAngTight+process.muidTMOneStationAngLoose+process.muidTMOneStationAngTight)


process.HLTTauDQMOfflineQuality = cms.Sequence(process.hltTauOfflineQualityTests)


process.trackingRecHitsValid = cms.Sequence(process.PixelTrackingRecHitsValid+process.StripTrackingRecHitsValid)


process.pfNoPileUpSequence = cms.Sequence(process.pfPileUp+process.pfNoPileUp)


process.HLTFourVector = cms.Sequence(process.hltriggerResults)


process.ecalClustersValidationSequence = cms.Sequence(process.egammaBasicClusterAnalyzer+process.egammaSuperClusterAnalyzer)


process.trackerRecHitsValidation = cms.Sequence(process.pixRecHitsValid+process.stripRecHitsValid+process.condDataValidation)


process.ee_dqm_source_offline1 = cms.Sequence(process.ecalEndcapMonitorModule+process.dqmInfoEE+process.ecalEndcapOccupancyTask+process.ecalEndcapIntegrityTask+process.ecalEndcapStatusFlagsTask+process.ecalEndcapSelectiveReadoutTask+process.ecalEndcapRawDataTask+process.ecalEndcapPedestalOnlineTask+process.ecalEndcapTriggerTowerTask+process.ecalEndcapClusterTask+process.ecalEndcapHltTask+process.ecalEndcapClusterTaskExtras)


process.analyzeMuonCorrectedCaloMET = cms.Sequence(process.corMetGlobalMuonsAnalyzer)


process.allConversionSequence = cms.Sequence(process.allConversions)


process.hcalMonitorTasksOnlineSequence = cms.Sequence(process.hcalDigiMonitor+process.hcalHotCellMonitor+process.hcalDeadCellMonitor+process.hcalRecHitMonitor+process.hcalBeamMonitor+process.hcalRawDataMonitor+process.hcalTrigPrimMonitor+process.hcalCoarsePedestalMonitor+process.hcalDetDiagNoiseMonitor+process.hcalDetDiagTimingMonitor+process.hcalNZSMonitor)


process.JetValidation = cms.Sequence(process.JetAnalyzerIC5Calo+process.JetAnalyzerIC5PF+process.JetAnalyzerKt4Calo+process.JetAnalyzerKt6Calo+process.JetAnalyzerAk5Calo+process.JetAnalyzerAk7Calo+process.JetAnalyzerAk5PF+process.JetAnalyzerAk5JPT+process.JetAnalyzerIC5JPT)


process.genJetParticles = cms.Sequence(process.genParticlesForJets)


process.seldigis = cms.Sequence(process.selectDigi)


process.trackingParticles = cms.Sequence(process.mergedtruth)


process.muoncosmicreco1legSTA = cms.Sequence(process.CosmicMuonSeed+process.cosmicMuons1Leg)


process.L1Reco = cms.Sequence(process.l1extraParticles+process.l1GtTriggerMenuLite+process.conditionsInEdm)


process.siPixelOfflineDQM_cosmics_source = cms.Sequence(process.SiPixelHLTSource+process.SiPixelRawDataErrorSource+process.SiPixelDigiSource+process.SiPixelRecHitSource+process.SiPixelClusterSource+process.SiPixelTrackResidualSource_Cosmics+process.dqmInfo)


process.topHLTDiMuonAnalyzer = cms.Sequence(process.topHLTDiMuonDQM)


process.gsfElectronSequence = cms.Sequence(process.ecalDrivenGsfElectronCores+process.ecalDrivenGsfElectrons+process.gsfElectronCores+process.gsfElectrons)


process.recoAllJetIds = cms.Sequence(process.ak5JetID+process.ak7JetID+process.sc5JetID+process.sc7JetID+process.ic5JetID+process.kt4JetID+process.kt6JetID+process.ca4JetID+process.ca6JetID+process.gk5JetID+process.gk7JetID)


process.SiStripRawToDigis = cms.Sequence(process.siStripDigis)


process.muonValidationSET_seq = cms.Sequence(process.staSETMuonTrackVMuonAssoc+process.staSETUpdMuonTrackVMuonAssoc+process.glbSETMuonTrackVMuonAssoc)


process.gsfElectronMergingSequence = cms.Sequence(process.gsfElectronCores+process.gsfElectrons)


process.cscSources = cms.Sequence(process.dqmCSCClient)


process.rpcefficiency = cms.Sequence(process.rpcEfficiency)


process.interestingEgammaIsoDetIds = cms.Sequence(process.interestingEleIsoDetIdEB+process.interestingEleIsoDetIdEE+process.interestingGamIsoDetIdEB+process.interestingGamIsoDetIdEE)


process.tracksValidation = cms.Sequence(process.trackValidator)


process.hcalMonitorTasksTestSequence = cms.Sequence(process.hcalDigiMonitor+process.hcalHotCellMonitor+process.hcalDeadCellMonitor+process.hcalRecHitMonitor+process.hcalBeamMonitor+process.hcalRawDataMonitor+process.hcalTrigPrimMonitor+process.hcalNZSMonitor+process.hcalLSbyLSMonitor)


process.ak5JTA = cms.Sequence(process.ak5JetTracksAssociatorAtVertex+process.ak5JetTracksAssociatorAtCaloFace+process.ak5JetExtender)


process.caloTowersRec = cms.Sequence(process.towerMaker+process.towerMakerWithHO)


process.muonValidationHLTFastSim_seq = cms.Sequence(process.l2MuonMuTrackFSV+process.l2UpdMuonMuTrackFSV+process.l3MuonMuTrackFSV+process.l3TkMuonMuTrackFSV)


process.hltTauValIdeal5E32 = cms.Sequence(process.hltTauValIdealMonitorMC5E32+process.hltTauValIdealMonitorPF5E32)


process.pfClusteringPS = cms.Sequence(process.particleFlowRecHitPS+process.particleFlowClusterPS)


process.recoGenJets = cms.Sequence(process.kt4GenJets+process.kt6GenJets+process.iterativeCone5GenJets+process.ak5GenJets+process.ak7GenJets)


process.ecalBarrelCosmicTasksSequence = cms.Sequence(process.ecalBarrelDefaultTasksSequence+process.ecalBarrelCosmicTask)


process.muonAssociationHLT_seq = cms.Sequence(process.tpToL2MuonAssociation+process.tpToL2UpdMuonAssociation+process.tpToL3MuonAssociation+process.tpToL3TkMuonAssociation)


process.electronSeeds = cms.Sequence(process.trackerDrivenElectronSeeds+process.ecalDrivenElectronSeeds+process.electronMergedSeeds)


process.muIsoDeposits_ParamGlobalMuons = cms.Sequence(process.muParamGlobalIsoDepositTk+process.muParamGlobalIsoDepositCalByAssociatorTowers+process.muParamGlobalIsoDepositJets)


process.eIdSequence = cms.Sequence(process.eidRobustLoose+process.eidRobustTight+process.eidRobustHighEnergy+process.eidLoose+process.eidTight)


process.HLTTauValFS = cms.Sequence(process.hltTauValIdeal5E32)


process.muIsoDeposits_ParamGlobalMuonsOld = cms.Sequence(process.muParamGlobalIsoDepositGsTk+process.muParamGlobalIsoDepositCalEcal+process.muParamGlobalIsoDepositCalHcal)


process.gsfEcalDrivenElectronSequence = cms.Sequence(process.ecalDrivenGsfElectronCores+process.ecalDrivenGsfElectrons)


process.muIsolation_ParamGlobalMuonsOld = cms.Sequence(process.muIsoDeposits_ParamGlobalMuonsOld)


process.standAloneMuonSeeds = cms.Sequence(process.ancientMuonSeed)


process.pfElectronIsoDepositsSequence = cms.Sequence(process.isoDepElectronWithCharged+process.isoDepElectronWithNeutral+process.isoDepElectronWithPhotons)


process.HLTTauPostProcess = cms.Sequence(process.HLTTauPostAnalysis)


process.muonTrackAnalyzers = cms.Sequence(process.MonitorTrackSTAMuons+process.MonitorTrackGLBMuons)


process.muonIdValSeq = cms.Sequence(process.muonIdVal)


process.jptRecoTauProducer = cms.Sequence(process.JPTeidTight+process.TCTauJetPlusTrackZSPCorJetAntiKt5+process.JPTAntiKt5JetTracksAssociatorAtVertex+process.caloRecoTauTagInfoProducer+process.JPTCaloRecoTauProducer)


process.egammaValidationSequenceFS = cms.Sequence(process.egammaValidators)


process.produceAndDiscriminateShrinkingConePFTaus = cms.Sequence(process.shrinkingConePFTauProducer+process.shrinkingConePFTauDiscriminationByLeadingTrackFinding+process.shrinkingConePFTauDiscriminationByLeadingTrackPtCut+process.shrinkingConePFTauDiscriminationByLeadingPionPtCut+process.shrinkingConePFTauDiscriminationByIsolation+process.shrinkingConePFTauDiscriminationByTrackIsolation+process.shrinkingConePFTauDiscriminationByECALIsolation+process.shrinkingConePFTauDiscriminationByIsolationUsingLeadingPion+process.shrinkingConePFTauDiscriminationByTrackIsolationUsingLeadingPion+process.shrinkingConePFTauDiscriminationByECALIsolationUsingLeadingPion+process.shrinkingConePFTauDiscriminationAgainstElectron+process.shrinkingConePFTauDiscriminationAgainstMuon)


process.pfMETValidationSequence = cms.Sequence(process.pfMETValidation1+process.pfMETValidation2)


process.recoAllGenJets = cms.Sequence(process.sisCone5GenJets+process.sisCone7GenJets+process.kt4GenJets+process.kt6GenJets+process.iterativeCone5GenJets+process.ak5GenJets+process.ak7GenJets+process.gk5GenJets+process.gk7GenJets+process.ca4GenJets+process.ca6GenJets)


process.dqmPhysicsHI = cms.Sequence(process.bphysicsOniaDQMHI)


process.muoncosmicreco2legsSTA = cms.Sequence(process.CosmicMuonSeed+process.cosmicMuons)


process.L1Reco_L1Extra = cms.Sequence(process.l1extraParticles)


process.trackerHitsValidation = cms.Sequence(process.trackerHitsValid)


process.ckfTracksFromConversions = cms.Sequence(process.conversionTrackCandidates+process.ckfOutInTracksFromConversions+process.ckfInOutTracksFromConversions)


process.bTagPlots = cms.Sequence(process.bTagAnalysis)


process.ecalSimHitsValidationSequence = cms.Sequence(process.ecalSimHitsValidation+process.ecalBarrelSimHitsValidation+process.ecalEndcapSimHitsValidation+process.ecalPreshowerSimHitsValidation)


process.HLTAlCaVal = cms.Sequence(process.RelValEcalPi0Mon+process.RelValEcalPhiSymMon+process.hltHITval)


process.ctfTracksPixelLess = cms.Sequence(process.globalPixelLessSeeds+process.ckfTrackCandidatesPixelLess+process.ctfPixelLess)


process.tracksWithQualityStepOne = cms.Sequence(process.firstStepWithLooseQuality+process.firstStepWithTightQuality+process.preMergingFirstStepTracksWithQuality)


process.eb_dqm_source_offline1 = cms.Sequence(process.ecalBarrelMonitorModule+process.dqmInfoEB+process.ecalBarrelOccupancyTask+process.ecalBarrelIntegrityTask+process.ecalBarrelStatusFlagsTask+process.ecalBarrelSelectiveReadoutTask+process.ecalBarrelRawDataTask+process.ecalBarrelPedestalOnlineTask+process.ecalBarrelTriggerTowerTask+process.ecalBarrelClusterTask+process.ecalBarrelHltTask+process.ecalBarrelClusterTaskExtras)


process.muIsoDeposits_muons = cms.Sequence(process.muIsoDepositTk+process.muIsoDepositCalByAssociatorTowers+process.muIsoDepositJets)


process.trackerDigisValidation = cms.Sequence(process.pixelDigisValid+process.stripDigisValid)


process.analyzecaloTowersDQM = cms.Sequence(process.towerSchemeBAnalyzer)


process.HiggsValidationSequence = cms.Sequence(process.HLTHiggsBits_WWHWW+process.HLTHiggsBits_ggHgg+process.HLTHiggsBits_2tauH2tau+process.HLTHiggsBits_ZZHZZ+process.HLTHiggsBits_taunuHtaunu)


process.recoJets = cms.Sequence(process.kt4CaloJets+process.kt6CaloJets+process.iterativeCone5CaloJets+process.ak5CaloJets+process.ak7CaloJets)


process.hiRecoGenJets = cms.Sequence(process.iterativeCone5HiGenJets+process.iterativeCone7HiGenJets+process.ak5HiGenJets+process.ak7HiGenJets+process.kt4HiGenJets+process.kt6HiGenJets)


process.egammaIsolationSequence = cms.Sequence(process.electronEcalRecHitIsolationLcone+process.electronEcalRecHitIsolationScone+process.electronHcalTowerIsolationLcone+process.electronHcalDepth1TowerIsolationLcone+process.electronHcalDepth2TowerIsolationLcone+process.electronHcalTowerIsolationScone+process.electronHcalDepth1TowerIsolationScone+process.electronHcalDepth2TowerIsolationScone+process.electronTrackIsolationLcone+process.electronTrackIsolationScone)


process.susyAnalyzer = cms.Sequence(process.susyDQM)


process.muonAssociationSET_seq = cms.Sequence(process.tpToStaSETMuonAssociation+process.tpToStaSETUpdMuonAssociation+process.tpToGlbSETMuonAssociation)


process.reducedEcalRecHitsSequence = cms.Sequence(process.interestingEcalDetIdEB+process.interestingEcalDetIdEBU+process.interestingEcalDetIdEE+process.interestingTrackEcalDetIds+process.reducedEcalRecHitsEB+process.reducedEcalRecHitsEE+process.seldigis+process.reducedEcalRecHitsES)


process.muonValidationHLT_seq = cms.Sequence(process.l2MuonMuTrackV+process.l2UpdMuonMuTrackV+process.l3TkMuonMuTrackV+process.l3MuonMuTrackV)


process.HLTTauDQMOffline = cms.Sequence(process.TauRefProducer+process.hltTauOfflineMonitor_PFTaus+process.hltTauOfflineMonitor_Photons+process.hltTauOfflineMonitor_HPD+process.hltTauOfflineMonitor_Inclusive)


process.extractedMuonTracks_seq = cms.Sequence(process.extractedGlobalMuons)


process.produceShrinkingConeDiscriminationByTauNeuralClassifier = cms.Sequence(process.shrinkingConePFTauDiscriminationByTaNC+process.shrinkingConePFTauDiscriminationByTaNCfrOnePercent+process.shrinkingConePFTauDiscriminationByTaNCfrHalfPercent+process.shrinkingConePFTauDiscriminationByTaNCfrQuarterPercent+process.shrinkingConePFTauDiscriminationByTaNCfrTenthPercent)


process.basicGenTest_seq = cms.Sequence(process.basicHepMCValidation+process.basicGenParticleValidation)


process.firstStep = cms.Sequence(process.newSeedFromTriplets+process.newTrackCandidateMaker+process.preFilterZeroStepTracks+process.tracksWithQualityZeroStep+process.zeroStepFilter+process.newClusters+process.newPixelRecHits+process.newStripRecHits+process.newSeedFromPairs+process.stepOneTrackCandidateMaker+process.preFilterStepOneTracks+process.tracksWithQualityStepOne+process.firstStepTracksWithQuality)


process.TCTau = cms.Sequence(process.caloRecoTauProducer+process.caloRecoTauDiscriminationByLeadingTrackFinding+process.caloRecoTauDiscriminationByLeadingTrackPtCut+process.caloRecoTauDiscriminationByTrackIsolation+process.caloRecoTauDiscriminationByECALIsolation+process.caloRecoTauDiscriminationByIsolation+process.caloRecoTauDiscriminationAgainstElectron+process.caloRecoTauDiscriminationAgainstMuon)


process.hltvalidation_prod = cms.Sequence(process.HLTFourVector)


process.recoTrackJets = cms.Sequence(process.trackWithVertexRefSelector+process.trackRefsForJets+process.ak5TrackJets+process.kt4TrackJets)


process.hcalLocalRecoSequence = cms.Sequence(process.hbheprereco+process.hfreco+process.horeco+process.zdcreco)


process.JetPlusTrackCorrectionsSisCone5 = cms.Sequence(process.JPTeidTight+process.JetPlusTrackZSPCorJetSiscone5)


process.ecalRecHitsValidationSequence = cms.Sequence(process.ecalRecHitsValidation+process.ecalBarrelRecHitsValidation+process.ecalEndcapRecHitsValidation+process.ecalPreshowerRecHitsValidation)


process.castorSources = cms.Sequence(process.castorOfflineMonitor)


process.tracksValidationFS = cms.Sequence(process.trackValidator)


process.csclocalreco = cms.Sequence(process.csc2DRecHits+process.cscSegments)


process.hltTauRef = cms.Sequence(process.TauMCProducer+process.TauRelvalRefProducer+process.TauRefCombiner)


process.hcalLocalRecoSequenceNZS = cms.Sequence(process.hbherecoMB+process.hfrecoMB+process.horecoMB)


process.muontracking_with_SET = cms.Sequence(process.SETMuonSeed+process.standAloneSETMuons+process.globalSETMuons)


process.alcaBeamMonitor = cms.Sequence(process.scalerBeamSpot+process.AlcaBeamMonitor)


process.electronAnalyzerSequence = cms.Sequence(process.mergedSuperClusters+process.dqmElectronGeneralAnalysis+process.dqmElectronAnalysisAllElectrons+process.dqmElectronAnalysisSelectionEt+process.dqmElectronAnalysisSelectionEtIso+process.dqmElectronTagProbeAnalysis)


process.caloTowersMETOptRec = cms.Sequence(process.calotoweroptmaker)


process.ctfTracksNoOverlaps = cms.Sequence(process.ckfTrackCandidatesNoOverlaps+process.ctfNoOverlaps)


process.conversionSequence = cms.Sequence(process.conversions)


process.ecalBarrelCertificationSequence = cms.Sequence(process.ecalBarrelDaqInfoTask+process.ecalBarrelDcsInfoTask+process.ecalBarrelDataCertificationTask)


process.muonMonitors = cms.Sequence(process.muonTrackAnalyzers+process.dtSegmentsMonitor+process.cscMonitor+process.muonAnalyzer+process.muonIdDQM+process.dqmInfoMuons+process.muIsoDQM_seq)


process.SiStripDQMTier0 = cms.Sequence(process.APVPhases+process.consecutiveHEs+process.siStripFEDCheck+process.siStripFEDMonitor+process.SiStripMonitorDigi+process.SiStripMonitorCluster+process.SiStripMonitorTrack+process.MonitorTrackResiduals+process.TrackerCollisionTrackMon+process.dqmInfoSiStrip)


process.es_dqm_source_offline = cms.Sequence(process.ecalPreshowerRawDataTask+process.ecalPreshowerFEDIntegrityTask+process.ecalPreshowerIntegrityTask+process.ecalPreshowerOccupancyTask+process.ecalPreshowerTrendTask)


process.mbueAndqcd_seq = cms.Sequence(process.chargedParticles+process.chargedak5GenJets+process.mbueAndqcdValidation)


process.jetPlusTrackZSPCorJetAntiKt5 = cms.Sequence(process.JetPlusTrackCorrectionsAntiKt5)


process.recoAllGenJetsNoNu = cms.Sequence(process.sisCone5GenJetsNoNu+process.sisCone7GenJetsNoNu+process.kt4GenJetsNoNu+process.kt6GenJetsNoNu+process.iterativeCone5GenJetsNoNu+process.ak5GenJetsNoNu+process.ak7GenJetsNoNu+process.gk5GenJetsNoNu+process.gk7GenJetsNoNu+process.ca4GenJetsNoNu+process.ca6GenJetsNoNu)


process.pfClusteringECAL = cms.Sequence(process.particleFlowRecHitECAL+process.particleFlowClusterECAL)


process.siPixelOfflineDQM_source_woTrack = cms.Sequence(process.SiPixelHLTSource+process.SiPixelRawDataErrorSource+process.SiPixelDigiSource+process.SiPixelRecHitSource+process.SiPixelClusterSource+process.dqmInfo)


process.striptrackerlocalreco = cms.Sequence(process.siStripZeroSuppression+process.siStripClusters+process.siStripMatchedRecHits)


process.recoPFJets = cms.Sequence(process.kt4PFJets+process.kt6PFJets+process.iterativeCone5PFJets+process.ak5PFJets+process.ak7PFJets)


process.ecalEndcapDefaultTasksSequence = cms.Sequence(process.ecalEndcapOccupancyTask+process.ecalEndcapIntegrityTask+process.ecalEndcapStatusFlagsTask+process.ecalEndcapSelectiveReadoutTask+process.ecalEndcapRawDataTask+process.ecalEndcapLaserTask+process.ecalEndcapLedTask+process.ecalEndcapPedestalOnlineTask+process.ecalEndcapPedestalTask+process.ecalEndcapTestPulseTask+process.ecalEndcapTriggerTowerTask+process.ecalEndcapTimingTask)


process.muoncosmicreco2legsHighLevel = cms.Sequence(process.globalCosmicMuons+process.muonsFromCosmics)


process.heavyFlavorValidationSequence = cms.Sequence(process.hfv1+process.hfv2+process.hfv3+process.hfv4+process.hfv5+process.hfv6)


process.vertexValidation = cms.Sequence(process.trackingParticleRecoTrackAsssociation+process.v0Validator)


process.muonAssociation_seq = cms.Sequence(process.extractedMuonTracks_seq+process.tpToTkMuonAssociation+process.tpToStaMuonAssociation+process.tpToStaUpdMuonAssociation+process.tpToGlbMuonAssociation+process.tpToTkmuTrackAssociation)


process.muonlocalreco = cms.Sequence(process.dtlocalreco+process.csclocalreco+process.rpcRecHits)


process.hcalMonitorTasksCalibrationSequence = cms.Sequence(process.hcalRecHitMonitor+process.hcalRawDataMonitor+process.hcalDetDiagPedestalMonitor+process.hcalDetDiagLaserMonitor+process.hcalDetDiagNoiseMonitor+process.hcalDetDiagTimingMonitor)


process.fifthStep = cms.Sequence(process.fourthfilter+process.fifthClusters+process.fifthPixelRecHits+process.fifthStripRecHits+process.fifthSeeds+process.fifthTrackCandidates+process.fifthWithMaterialTracks+process.tobtecStepLoose+process.tobtecStepTight+process.tobtecStep)


process.calotowersValidationSequence = cms.Sequence(process.AllCaloTowersValidation)


process.multi5x5PreshowerClusteringSequence = cms.Sequence(process.correctedMulti5x5SuperClustersWithPreshower+process.multi5x5PreshowerClusterShape)


process.tcMetSequence = cms.Sequence(process.tcMet+process.tcMetWithPFclusters)


process.muonAssociationFastSim_seq = cms.Sequence(process.extractedMuonTracks_seq+process.tpToTkMuonAssociationFS+process.tpToStaMuonAssociationFS+process.tpToStaUpdMuonAssociationFS+process.tpToGlbMuonAssociationFS+process.tpToTevFirstMuonAssociationFS+process.tpToTevPickyMuonAssociationFS+process.tpToTevDytMuonAssociationFS+process.tpToTkmuTrackAssociationFS)


process.muonValidationTEV_seq = cms.Sequence(process.tevMuonFirstTrackVMuonAssoc+process.tevMuonPickyTrackVMuonAssoc+process.tevMuonDytTrackVMuonAssoc)


process.muoncosmicreco1legHighLevel = cms.Sequence(process.globalCosmicMuons1Leg+process.muonsFromCosmics1Leg)


process.muonIdValDQMSeq = cms.Sequence(process.muonIdVal+process.muonIdDQMInVal)


process.photonIDSequence = cms.Sequence(process.PhotonIDProd)


process.produceAndDiscriminateFixedConePFTaus = cms.Sequence(process.fixedConePFTauProducer+process.fixedConePFTauDiscriminationByLeadingTrackFinding+process.fixedConePFTauDiscriminationByLeadingTrackPtCut+process.fixedConePFTauDiscriminationByLeadingPionPtCut+process.fixedConePFTauDiscriminationByIsolation+process.fixedConePFTauDiscriminationByTrackIsolation+process.fixedConePFTauDiscriminationByECALIsolation+process.fixedConePFTauDiscriminationByIsolationUsingLeadingPion+process.fixedConePFTauDiscriminationByTrackIsolationUsingLeadingPion+process.fixedConePFTauDiscriminationByECALIsolationUsingLeadingPion+process.fixedConePFTauDiscriminationAgainstElectron+process.fixedConePFTauDiscriminationAgainstMuon)


process.HLTSusyExoValSeq_FastSim = cms.Sequence(process.HLTSusyExoValFastSim)


process.ecalEndcapCertificationSequence = cms.Sequence(process.ecalEndcapDaqInfoTask+process.ecalEndcapDcsInfoTask+process.ecalEndcapDataCertificationTask)


process.HLTSusyExoValSeq = cms.Sequence(process.HLTSusyExoVal)


process.recoJetIds = cms.Sequence(process.ak5JetID+process.ak7JetID+process.ic5JetID+process.kt4JetID+process.kt6JetID)


process.egammareco_woConvPhotons = cms.Sequence(process.electronSequence+process.photonSequence)


process.electronGsfTracking = cms.Sequence(process.electronSeeds+process.electronCkfTrackCandidates+process.electronGsfTracks)


process.HLTJetMETValSeq = cms.Sequence(process.SingleJetValidation)


process.recoAllJetsPUOffsetCorr = cms.Sequence(process.sisCone5CaloJetsPUCorr+process.sisCone7CaloJetsPUCorr+process.kt4CaloJetsPUCorr+process.kt6CaloJetsPUCorr+process.iterativeCone5CaloJetsPUCorr+process.ak5CaloJetsPUCorr+process.ak7CaloJetsPUCorr+process.gk5CaloJetsPUCorr+process.gk7CaloJetsPUCorr+process.ca4CaloJetsPUCorr+process.ca6CaloJetsPUCorr)


process.particleFlowTrackWithDisplacedVertex = cms.Sequence(process.pfTrack+process.pfConversions+process.pfV0+process.particleFlowDisplacedVertexCandidate+process.particleFlowDisplacedVertex+process.pfDisplacedTrackerVertex+process.pfTrackElec)


process.rpcTier0Source = cms.Sequence(process.rpcdigidqm+process.rpcrechitprobability+process.rpcDcsInfo+process.rpcefficiency+process.rpcEventInfo+process.rpcFEDIntegrity)


process.genvalid = cms.Sequence(process.basicGenTest_seq)


process.muonAssociationCosmic_seq = cms.Sequence(process.tpToTkCosmicMuonAssociation+process.tpToStaCosmicMuonAssociation+process.tpToGlbCosmicMuonAssociation)


process.pfPhotonIsoDepositsSequence = cms.Sequence(process.isoDepPhotonWithCharged+process.isoDepPhotonWithNeutral+process.isoDepPhotonWithPhotons)


process.egammaValidationSequence = cms.Sequence(process.egammaValidators)


process.reducedHcalRecHitsSequence = cms.Sequence(process.reducedHcalRecHits)


process.TnPEfficiency = cms.Sequence(process.JpsiMuMu+process.UpsilonMuMu+process.ZMuMu)


process.pfClusteringHCALall = cms.Sequence(process.particleFlowClusterHCAL+process.particleFlowClusterHFHAD+process.particleFlowClusterHFEM)


process.hltassociation = cms.Sequence(process.egammaSelectors)


process.photonPrevalidationSequence = cms.Sequence(process.tpSelection+process.tpSelecForFakeRate+process.tpSelecForEfficiency)


process.recoAllPFJets = cms.Sequence(process.sisCone5PFJets+process.sisCone7PFJets+process.kt4PFJets+process.kt6PFJets+process.iterativeCone5PFJets+process.ak5PFJets+process.ak7PFJets+process.gk5PFJets+process.gk7PFJets+process.ca4PFJets+process.ca6PFJets)


process.conversionTrackMergers = cms.Sequence(process.inOutOutInConversionTrackMerger+process.generalInOutOutInConversionTrackMerger+process.gsfGeneralInOutOutInConversionTrackMerger)


process.JetPlusTrackCorrections = cms.Sequence(process.JPTeidTight+process.JetPlusTrackZSPCorJetIcone5)


process.HLTTauDQMOfflineHarvesting = cms.Sequence(process.HLTTauPostProcess)


process.fourthStep = cms.Sequence(process.thfilter+process.fourthClusters+process.fourthPixelRecHits+process.fourthStripRecHits+process.fourthPLSeeds+process.fourthTrackCandidates+process.fourthWithMaterialTracks+process.pixellessStepLoose+process.pixellessStepTight+process.pixellessStep)


process.pfSortByTypeSequence = cms.Sequence(process.pfAllNeutralHadrons+process.pfAllChargedHadrons+process.pfAllPhotons)


process.secondStep = cms.Sequence(process.firstfilter+process.secClusters+process.secPixelRecHits+process.secStripRecHits+process.secTriplets+process.secTrackCandidates+process.secWithMaterialTracks+process.secStepVtxLoose+process.secStepTrkLoose+process.secStepVtxTight+process.secStepTrkTight+process.secStepVtx+process.secStepTrk+process.secStep)


process.siPixelOfflineDQM_heavyions_source = cms.Sequence(process.SiPixelHLTSource+process.SiPixelRawDataErrorSource+process.SiPixelDigiSource+process.SiPixelRecHitSource+process.SiPixelClusterSource+process.SiPixelTrackResidualSource_HeavyIons+process.SiPixelHitEfficiencySource_HeavyIons+process.dqmInfo)


process.pfPhotonIsolationFromDepositsSequence = cms.Sequence(process.isoValPhotonWithCharged+process.isoValPhotonWithNeutral+process.isoValPhotonWithPhotons)


process.ecalLocalRecoSequence = cms.Sequence(process.ecalGlobalUncalibRecHit+process.ecalDetIdToBeRecovered+process.ecalRecHit+process.ecalCompactTrigPrim+process.ecalTPSkim+process.ecalPreshowerRecHit)


process.kt4JTA = cms.Sequence(process.kt4JetTracksAssociatorAtVertex+process.kt4JetTracksAssociatorAtCaloFace+process.kt4JetExtender)


process.particleFlowTrack = cms.Sequence(process.pfTrack+process.pfTrackElec)


process.muIsoVal_seq = cms.Sequence(process.MuIsoValidation_inc+process.MuIsoValidation_global)


process.recoAllJets = cms.Sequence(process.sisCone5CaloJets+process.sisCone7CaloJets+process.kt4CaloJets+process.kt6CaloJets+process.iterativeCone5CaloJets+process.ak5CaloJets+process.ak7CaloJets+process.gk5CaloJets+process.gk7CaloJets+process.ca4CaloJets+process.ca6CaloJets)


process.JPTJetsCollectionForTCTaus = cms.Sequence(process.jptRecoTauProducer)


process.BeamHaloId = cms.Sequence(process.CSCHaloData+process.EcalHaloData+process.HcalHaloData+process.GlobalHaloData+process.BeamHaloSummary)


process.sisCone5JTA = cms.Sequence(process.sisCone5JetTracksAssociatorAtVertex+process.sisCone5JetTracksAssociatorAtCaloFace+process.sisCone5JetExtender)


process.ecalDigisValidationSequence = cms.Sequence(process.ecalDigisValidation+process.ecalBarrelDigisValidation+process.ecalEndcapDigisValidation+process.ecalPreshowerDigisValidation+process.ecalSelectiveReadoutValidation)


process.egammaDQMOffline = cms.Sequence(process.photonAnalysis+process.piZeroAnalysis+process.electronAnalyzerSequence)


process.eb_dqm_source_offline = cms.Sequence(process.ecalBarrelMonitorModule+process.dqmInfoEB+process.ecalBarrelOccupancyTask+process.ecalBarrelIntegrityTask+process.ecalBarrelStatusFlagsTask+process.ecalBarrelRawDataTask+process.ecalBarrelPedestalOnlineTask+process.ecalBarrelTriggerTowerTask+process.ecalBarrelClusterTask+process.ecalBarrelHltTask+process.ecalBarrelClusterTaskExtras)


process.tracksValidationSelectors = cms.Sequence(process.cutsRecoTracksHp+process.cutsRecoTracksZero+process.cutsRecoTracksZeroHp+process.cutsRecoTracksFirst+process.cutsRecoTracksFirstHp+process.cutsRecoTracksSecond+process.cutsRecoTracksSecondHp+process.cutsRecoTracksThird+process.cutsRecoTracksThirdHp+process.cutsRecoTracksFourth+process.cutsRecoTracksFourthHp+process.cutsRecoTracksFifth+process.cutsRecoTracksFifthHp)


process.muonAssociationTEV_seq = cms.Sequence(process.tpToTevFirstMuonAssociation+process.tpToTevPickyMuonAssociation+process.tpToTevDytMuonAssociation)


process.pfTrackingGlobalReco = cms.Sequence(process.particleFlowTrackWithDisplacedVertex)


process.cosmicMuonQualityTests = cms.Sequence(process.ClientTrackEfficiencyTkTracks+process.ClientTrackEfficiencySTACosmicMuons+process.muonSourcesQualityTests+process.muTrackResidualsTest+process.muRecoTest+process.muonClientsQualityTests+process.muonComp2RefQualityTests+process.muonComp2RefKolmoQualityTests+process.muonCosmicTestSummary)


process.muonAssociationHLTFastSim_seq = cms.Sequence(process.tpToL2MuonAssociationFS+process.tpToL2UpdMuonAssociationFS+process.tpToL3MuonAssociationFS+process.tpToL3TkMuonAssociationFS)


process.egammareco = cms.Sequence(process.electronSequence+process.conversionSequence+process.photonSequence)


process.photonValidationSequence = cms.Sequence(process.photonValidation+process.tkConversionValidation)


process.produceHPSPFTaus = cms.Sequence(process.hpsSelectionDiscriminator+process.hpsTightIsolationCleaner+process.hpsMediumIsolationCleaner+process.hpsLooseIsolationCleaner+process.hpsVLooseIsolationCleaner+process.hpsPFTauProducer)


process.GsfGlobalElectronTestSequence = cms.Sequence(process.CkfElectronCandidates+process.GsfGlobalElectronTest)


process.tauValidation_seq = cms.Sequence(process.tauValidation)


process.wMuoValidation = cms.Sequence(process.wMinusMuoValidation+process.wPlusMuoValidation)


process.hcalMonitorTasksOfflineSequence = cms.Sequence(process.hcalDigiMonitor+process.hcalHotCellMonitor+process.hcalDeadCellMonitor+process.hcalRecHitMonitor+process.hcalBeamMonitor+process.hcalRawDataMonitor+process.hcalDetDiagNoiseMonitor+process.hcalLSbyLSMonitor+process.hcalNoiseMonitor)


process.jetPlusTrackZSPCorJetIcone5 = cms.Sequence(process.JetPlusTrackCorrections)


process.recoTauHPSTancSequence = cms.Sequence(process.recoTauCommonSequence+process.ak5PFJetsLegacyHPSPiZeros+process.combinatoricRecoTaus+process.hpsTancTauInitialSequence+process.hpsTancTauDiscriminantSequence)


process.METRelValSequence = cms.Sequence(process.metAnalyzer+process.metHOAnalyzer+process.metNoHFAnalyzer+process.metNoHFHOAnalyzer+process.metOptAnalyzer+process.metOptHOAnalyzer+process.metOptNoHFAnalyzer+process.metOptNoHFHOAnalyzer+process.pfMetAnalyzer+process.tcMetAnalyzer+process.corMetGlobalMuonsAnalyzer+process.genMetTrueAnalyzer+process.genMetCaloAnalyzer+process.genMetCaloAndNonPromptAnalyzer)


process.multi5x5ClusteringSequence = cms.Sequence(process.multi5x5BasicClusters+process.multi5x5SuperClusters+process.multi5x5SuperClustersWithPreshower)


process.rpcRecHitValidation_step = cms.Sequence(process.rpcRecHitV)


process.dqmPhysics = cms.Sequence(process.bphysicsOniaDQM+process.ewkDQM+process.ewkMuDQM+process.ewkElecDQM+process.ewkMuLumiMonitorDQM+process.qcdPhotonsDQM+process.qcdHighPtDQM+process.topDiLeptonOfflineDQM+process.topSingleLeptonDQM+process.ewkTauDQM+process.susyDQM+process.QcdUeDQM+process.HiggsDQM)


process.jetGlobalReco = cms.Sequence(process.recoJets+process.recoJetIds+process.recoTrackJets)


process.HLTAlCaVal_FastSim = cms.Sequence(process.RelValEcalPi0Mon+process.RelValEcalPhiSymMon+process.hltHITvalFastSim)


process.pfPhotonIsolationSequence = cms.Sequence(process.pfPhotonIsoDepositsSequence+process.pfPhotonIsolationFromDepositsSequence)


process.cosmicsMuonIdSequence = cms.Sequence(process.cosmicsVetoSeeds+process.cosmicsVetoTrackCandidates+process.cosmicsVetoTracksRaw+process.cosmicsVetoTracks+process.cosmicsVeto)


process.muontracking = cms.Sequence(process.standAloneMuonSeeds+process.standAloneMuons+process.globalMuons)


process.doAlldEdXEstimators = cms.Sequence(process.dedxTruncated40+process.dedxHarmonic2+process.dedxDiscrimASmi)


process.ecalBarrelTestBeamTasksSequence = cms.Sequence(process.ecalBarrelDefaultTasksSequence+process.ecalBarrelBeamHodoTask+process.ecalBarrelBeamCaloTask)


process.muonIdProducerSequence = cms.Sequence(process.glbTrackQual+process.muons+process.calomuons+process.muonEcalDetIds+process.muonShowerInformation)


process.hltMonTauReco = cms.Sequence(process.hltTauMonitor+process.hltTauElectronMonitor)


process.recoPFMET = cms.Sequence(process.pfMet)


process.rstracks = cms.Sequence(process.roadSearchSeeds+process.roadSearchClouds+process.rsTrackCandidates+process.rsWithMaterialTracks)


process.egammarecoFull_woHFElectrons = cms.Sequence(process.egammareco+process.interestingEgammaIsoDetIds+process.photonIDSequence+process.eIdSequence)


process.hcalGlobalRecoSequence = cms.Sequence(process.hbhereco)


process.muonValidation_seq = cms.Sequence(process.trkMuonTrackVTrackAssoc+process.staMuonTrackVMuonAssoc+process.staUpdMuonTrackVMuonAssoc+process.glbMuonTrackVMuonAssoc+process.recoMuonVMuAssoc_trk+process.recoMuonVMuAssoc_sta+process.recoMuonVMuAssoc_glb+process.recoMuonVMuAssoc_trkPF+process.recoMuonVMuAssoc_staPF+process.recoMuonVMuAssoc_glbPF)


process.conversionTrackSequenceNoEcalSeeded = cms.Sequence(process.generalConversionTrackProducer+process.gsfConversionTrackProducer+process.gsfGeneralConversionTrackMerger)


process.siPixelOfflineDQM_source = cms.Sequence(process.SiPixelHLTSource+process.SiPixelRawDataErrorSource+process.SiPixelDigiSource+process.SiPixelRecHitSource+process.SiPixelClusterSource+process.SiPixelTrackResidualSource+process.SiPixelHitEfficiencySource+process.dqmInfo)


process.siStripElectronSequence = cms.Sequence(process.siStripElectrons+process.egammaCTFFinalFitWithMaterial+process.siStripElectronToTrackAssociator)


process.l1tmonitor = cms.Sequence(process.l1tgt+process.l1tgmt+process.l1trpctf+process.l1tcsctf+process.l1tdttf+process.l1trct+process.l1tgct+process.l1tfed+process.dqmEnvL1T)


process.L1Reco_L1Extra_L1GtRecord = cms.Sequence(process.l1extraParticles+process.l1GtRecord)


process.ecal_dqm_source_offline = cms.Sequence(process.eb_dqm_source_offline+process.ee_dqm_source_offline)


process.muonMonitorsAndQualityTests = cms.Sequence(process.muonMonitors+process.muonQualityTests)


process.validation_prod = cms.Sequence(process.basicGenTest_seq+process.hltvalidation_prod)


process.METValidation = cms.Sequence(process.metAnalyzer+process.metHOAnalyzer+process.metNoHFAnalyzer+process.metNoHFHOAnalyzer+process.metOptAnalyzer+process.metOptHOAnalyzer+process.metOptNoHFAnalyzer+process.metOptNoHFHOAnalyzer+process.pfMetAnalyzer+process.tcMetAnalyzer+process.corMetGlobalMuonsAnalyzer+process.genMetTrueAnalyzer+process.genMetCaloAnalyzer+process.genMetCaloAndNonPromptAnalyzer)


process.wEleValidation = cms.Sequence(process.wMinusEleValidation+process.wPlusEleValidation)


process.hybridClusteringSequence = cms.Sequence(process.cleanedHybridSuperClusters+process.uncleanedHybridSuperClusters+process.hybridSuperClusters+process.correctedHybridSuperClusters)


process.ecalLocalRecoSequence_nopreshower = cms.Sequence(process.ecalGlobalUncalibRecHit+process.ecalRecHit)


process.jetMETAnalyzerSequence = cms.Sequence(process.jetMETAnalyzer)


process.recoAllGenJetsNoMuNoNu = cms.Sequence(process.sisCone5GenJetsNoMuNoNu+process.sisCone7GenJetsNoMuNoNu+process.kt4GenJetsNoMuNoNu+process.kt6GenJetsNoMuNoNu+process.iterativeCone5GenJetsNoMuNoNu+process.ak5GenJetsNoMuNoNu+process.ak7GenJetsNoMuNoNu+process.gk5GenJetsNoMuNoNu+process.gk7GenJetsNoMuNoNu+process.ca4GenJetsNoMuNoNu+process.ca6GenJetsNoMuNoNu)


process.doAlldEdXDiscriminators = cms.Sequence(process.dedxDiscrimProd+process.dedxDiscrimBTag+process.dedxDiscrimSmi+process.dedxDiscrimASmi)


process.hfEMClusteringSequence = cms.Sequence(process.hfEMClusters+process.hfRecoEcalCandidate)


process.thirdStep = cms.Sequence(process.secfilter+process.thClusters+process.thPixelRecHits+process.thStripRecHits+process.thTripletsA+process.thTripletsB+process.thTriplets+process.thTrackCandidates+process.thWithMaterialTracks+process.thStepVtxLoose+process.thStepTrkLoose+process.thStepVtxTight+process.thStepTrkTight+process.thStepVtx+process.thStepTrk+process.thStep)


process.pfElectronIsolationFromDepositsSequence = cms.Sequence(process.isoValElectronWithCharged+process.isoValElectronWithNeutral+process.isoValElectronWithPhotons)


process.recoMuonAssociationHLTFastSim_seq = cms.Sequence(process.muonAssociationHLTFastSim_seq)


process.egammaValidation = cms.Sequence(process.electronMcSignalValidator+process.electronMcFakeValidator+process.photonValidationSequence)


process.muIsolation_ParamGlobalMuons = cms.Sequence(process.muIsoDeposits_ParamGlobalMuons)


process.muonreco = cms.Sequence(process.muontracking+process.muonIdProducerSequence)


process.ecalEndcapTestBeamTasksSequence = cms.Sequence(process.ecalEndcapDefaultTasksSequence+process.ecalEndcapBeamHodoTask+process.ecalEndcapBeamCaloTask)


process.egammarecoFull = cms.Sequence(process.egammareco+process.interestingEgammaIsoDetIds+process.photonIDSequence+process.eIdSequence+process.hfEMClusteringSequence)


process.egammareco_withElectronID = cms.Sequence(process.egammareco+process.eIdSequence)


process.recoMuonValidationHLT_seq = cms.Sequence(process.muonAssociationHLT_seq+process.muonValidationHLT_seq)


process.recoTauClassicShrinkingConeMVASequence = cms.Sequence(process.produceShrinkingConeDiscriminationByTauNeuralClassifier)


process.muoncosmichighlevelreco = cms.Sequence(process.muoncosmicreco2legsHighLevel+process.muoncosmicreco1legHighLevel+process.cosmicsMuonIdSequence)


process.RawToDigi = cms.Sequence(process.csctfDigis+process.dttfDigis+process.gctDigis+process.gtDigis+process.gtEvmDigis+process.siPixelDigis+process.SiStripRawToDigis+process.ecalDigis+process.ecalPreshowerDigis+process.hcalDigis+process.muonCSCDigis+process.muonDTDigis+process.muonRPCDigis+process.castorDigis+process.scalersRawToDigi)


process.iterTracking = cms.Sequence(process.firstStep+process.secondStep+process.thirdStep+process.fourthStep+process.fifthStep)


process.HLTMuonAss_FastSim = cms.Sequence(process.recoMuonAssociationHLTFastSim_seq)


process.globalPrevalidation = cms.Sequence(process.tracksValidationSelectors+process.photonPrevalidationSequence)


process.hcalOfflineDQMSource = cms.Sequence(process.hcalMonitor+process.zdcMonitor+process.hcalMonitorTasksOfflineSequence+process.dqmInfoHcal)


process.egammarecoWithID = cms.Sequence(process.egammareco+process.photonIDSequence+process.eIdSequence)


process.trackerlocalreco = cms.Sequence(process.pixeltrackerlocalreco+process.striptrackerlocalreco)


process.jetMETDQMOfflineSource = cms.Sequence(process.analyzecaloTowersDQM+process.AnalyzeBeamHalo+process.jetMETAnalyzerSequence)


process.DQMOfflinePreDPG = cms.Sequence(process.dqmDcsInfo+process.ecal_dqm_source_offline+process.hcalOfflineDQMSource+process.SiStripDQMTier0+process.siPixelOfflineDQM_source+process.dtSources+process.rpcTier0Source+process.cscSources+process.es_dqm_source_offline+process.castorSources)


process.egammareco_withPhotonID = cms.Sequence(process.egammareco+process.photonIDSequence)


process.reducedRecHits = cms.Sequence(process.reducedEcalRecHitsSequence+process.reducedHcalRecHitsSequence)


process.muontracking_with_TeVRefinement = cms.Sequence(process.muontracking+process.tevMuons)


process.conversionTrackSequence = cms.Sequence(process.ckfTracksFromConversions+process.conversionTrackProducers+process.conversionTrackMergers)


process.egammaHighLevelRecoPostPF = cms.Sequence(process.gsfElectronMergingSequence+process.interestingEgammaIsoDetIds+process.photonIDSequence+process.eIdSequence+process.hfEMClusteringSequence)


process.analyzecaloTowers = cms.Sequence(process.caloTowersMETOptRec+process.towerOptAnalyzer+process.towerSchemeBAnalyzer)


process.recoJetAssociations = cms.Sequence(process.ic5JetTracksAssociatorAtVertex+process.iterativeCone5JTA+process.kt4JTA+process.ak5JTA+process.ak7JTA)


process.tautagging = cms.Sequence(process.JPTJetsCollectionForTCTaus+process.TCTau)


process.preprodPrevalidation = cms.Sequence(process.tracksValidationSelectors)


process.caloglobalreco = cms.Sequence(process.hcalGlobalRecoSequence)


process.pfElectronIsolationSequence = cms.Sequence(process.pfElectronIsoDepositsSequence+process.pfElectronIsolationFromDepositsSequence)


process.muIsolation_muons = cms.Sequence(process.muIsoDeposits_muons)


process.ckftracks_wodEdX = cms.Sequence(process.iterTracking+process.trackCollectionMerging+process.newCombinedSeeds)


process.recoTauClassicShrinkingConeSequence = cms.Sequence(process.recoTauCommonSequence+process.ak5PFJetsLegacyTaNCPiZeros+process.produceAndDiscriminateShrinkingConePFTaus)


process.mbueAndqcdValidation_seq = cms.Sequence(process.mbueAndqcd_seq)


process.calolocalreco = cms.Sequence(process.ecalLocalRecoSequence+process.hcalLocalRecoSequence)


process.recoJPTJets = cms.Sequence(process.jetPlusTrackZSPCorJetIcone5+process.jetPlusTrackZSPCorJetAntiKt5)


process.calolocalrecoNZS = cms.Sequence(process.ecalLocalRecoSequence+process.hcalLocalRecoSequence+process.hcalLocalRecoSequenceNZS)


process.muonFullOfflineDQM = cms.Sequence(process.offlineDQMMuonTrig+process.topTrigOfflineDQM+process.topHLTDiMuonAnalyzer+process.TnPEfficiency)


process.HLTTauVal = cms.Sequence(process.hltTauRef+process.hltTauValIdeal5E32)


process.metreco = cms.Sequence(process.met+process.metNoHF+process.metHO+process.metNoHFHO+process.calotoweroptmaker+process.metOpt+process.metOptNoHF+process.calotoweroptmakerWithHO+process.metOptHO+process.metOptNoHFHO+process.htMetKT4+process.htMetKT6+process.htMetIC5+process.htMetAK5+process.htMetAK7+process.muonMETValueMapProducer+process.corMetGlobalMuons+process.muonTCMETValueMapProducer+process.tcMetSequence+process.BeamHaloId)


process.muonlocalreco_with_2DSegments = cms.Sequence(process.dtlocalreco_with_2DSegments+process.csclocalreco+process.rpcRecHits)


process.ecalClusters = cms.Sequence(process.hybridClusteringSequence+process.multi5x5ClusteringSequence+process.multi5x5PreshowerClusteringSequence)


process.DQMOfflineDPG = cms.Sequence(process.DQMOfflinePreDPG+process.DQMMessageLogger)


process.egammareco_withIsolation_woConvPhotons = cms.Sequence(process.egammareco_woConvPhotons+process.egammaIsolationSequence)


process.prevalidation_preprod = cms.Sequence(process.preprodPrevalidation)


process.jetPlusTrackZSPCorJetSiscone5 = cms.Sequence(process.JetPlusTrackCorrectionsSisCone5)


process.ckftracks = cms.Sequence(process.iterTracking+process.trackCollectionMerging+process.newCombinedSeeds+process.doAlldEdXEstimators)


process.produceAndDiscriminateHPSPFTaus = cms.Sequence(process.produceHPSPFTaus+process.hpsPFTauDiscriminationByDecayModeFinding+process.hpsPFTauDiscriminationByVLooseIsolation+process.hpsPFTauDiscriminationByLooseIsolation+process.hpsPFTauDiscriminationByMediumIsolation+process.hpsPFTauDiscriminationByTightIsolation+process.hpsPFTauDiscriminationByLooseElectronRejection+process.hpsPFTauDiscriminationByMediumElectronRejection+process.hpsPFTauDiscriminationByTightElectronRejection+process.hpsPFTauDiscriminationByLooseMuonRejection+process.hpsPFTauDiscriminationByTightMuonRejection)


process.offlineHLTSource = cms.Sequence(process.hltResults+process.egHLTOffDQMSource+process.muonFullOfflineDQM+process.HLTTauDQMOffline+process.jetMETHLTOfflineSource+process.TnPEfficiency+process.dqmEnvHLT)


process.DQMOfflinePrePOGMC = cms.Sequence(process.pvMonitor+process.bTagPlots+process.dqmPhysics)


process.recoMuonValidation = cms.Sequence(process.recoMixMuonAssociatorByHits_seq+process.muonAssociation_seq+process.muonValidation_seq+process.muonAssociationTEV_seq+process.muonValidationTEV_seq+process.muonAssociationSET_seq+process.muonValidationSET_seq)


process.prevalidation = cms.Sequence(process.globalPrevalidation+process.hltassociation)


process.recoTauClassicFixedConeSequence = cms.Sequence(process.recoTauCommonSequence+process.ak5PFJetsRecoTauPiZeros+process.produceAndDiscriminateFixedConePFTaus)


process.muoncosmicreco = cms.Sequence(process.muoncosmicreco2legsSTA+process.muoncosmicreco1legSTA)


process.ecalEndcapCosmicTasksSequence = cms.Sequence(process.ecalEndcapDefaultTasksSequence+process.ecalEndcapCosmicTask)


process.onlineHLTSource = cms.Sequence(process.EcalPi0Mon+process.EcalPhiSymMon+process.hltMonMuBits+process.hltMonTauReco+process.dqmEnvHLTOnline)


process.recoMuonValidationHLTFastSim_seq = cms.Sequence(process.muonValidationHLTFastSim_seq)


process.DQMOfflinePhysics = cms.Sequence(process.dqmPhysics)


process.pfCandsForIsolationSequence = cms.Sequence(process.pfNoPileUpSequence+process.pfSortByTypeSequence)


process.pfClusteringHCAL = cms.Sequence(process.particleFlowRecHitHCAL+process.pfClusteringHCALall)


process.trigdqm_forValidation = cms.Sequence(process.hltMonTauReco+process.HLTTauDQMOffline+process.egHLTOffDQMSource)


process.hltvalidation_preprod = cms.Sequence(process.HLTTauVal+process.HLTTopVal+process.HLTFourVector+process.heavyFlavorValidationSequence+process.HLTSusyExoValSeq)


process.wValidation_seq = cms.Sequence(process.wEleValidation+process.wMuoValidation)


process.recoCosmicMuonValidation = cms.Sequence(process.muonAssociationCosmic_seq+process.muonValidationCosmic_seq)


process.egammaHighLevelRecoPrePF = cms.Sequence(process.gsfEcalDrivenElectronSequence+process.conversionSequence+process.photonSequence)


process.validation_preprod = cms.Sequence(process.basicGenTest_seq+process.trackingTruthValid+process.tracksValidation+process.METRelValSequence+process.recoMuonValidation+process.muIsoVal_seq+process.muonIdValDQMSeq+process.hltvalidation_preprod)


process.egammareco_withIsolation = cms.Sequence(process.egammareco+process.egammaIsolationSequence)


process.muIsolation = cms.Sequence(process.muIsolation_muons)


process.muonreco_with_SET = cms.Sequence(process.muontracking_with_SET)


process.muonrecowith_TeVRefinemen = cms.Sequence(process.muontracking_with_TeVRefinement+process.muonIdProducerSequence)


process.HLTMuonVal = cms.Sequence(process.recoMuonValidationHLT_seq+process.hltMuonValidator+process.relvalMuonBits)


process.genvalid_w = cms.Sequence(process.basicGenTest_seq+process.mbueAndqcdValidation_seq+process.wValidation_seq+process.tauValidation_seq)


process.hltassociation_fastsim = cms.Sequence(process.HLTMuonAss_FastSim+process.egammaSelectors+process.hltTauRef)


process.trackingGlobalReco = cms.Sequence(process.ckftracks+process.trackExtrapolator)


process.muonreco_plus_isolation_plus_SET = cms.Sequence(process.muonrecowith_TeVRefinemen+process.muonreco_with_SET+process.muIsolation)


process.pfBasedElectronIsoSequence = cms.Sequence(process.pfCandsForIsolationSequence+process.pfSelectedElectrons+process.pfElectronIsolationSequence+process.pfElectronIsolationFromDepositsSequence)


process.pfElectronTranslatorSequence = cms.Sequence(process.pfBasedElectronIsoSequence+process.pfElectronTranslator+process.pfElectronInterestingEcalDetIdEB+process.pfElectronInterestingEcalDetIdEE)


process.particleFlowCluster = cms.Sequence(process.towerMakerPF+process.pfClusteringECAL+process.pfClusteringHCAL+process.pfClusteringPS)


process.ckftracks_woBH = cms.Sequence(process.iterTracking+process.trackCollectionMerging+process.newCombinedSeeds+process.doAlldEdXEstimators)


process.jetHighLevelReco = cms.Sequence(process.recoJetAssociations+process.recoPFJets+process.recoJPTJets)


process.muonrecoComplete = cms.Sequence(process.muonreco_plus_isolation_plus_SET+process.muonSelectionTypeSequence)


process.pfBasedPhotonIsoSequence = cms.Sequence(process.pfCandsForIsolationSequence+process.pfSelectedPhotons+process.pfPhotonIsolationSequence+process.pfPhotonIsolationFromDepositsSequence)


process.hltvalidation_preprod_fastsim = cms.Sequence(process.HLTTauVal+process.HLTTopVal+process.HLTFourVector+process.heavyFlavorValidationSequence+process.HLTSusyExoValSeq_FastSim)


process.globalValidation = cms.Sequence(process.trackerHitsValidation+process.trackerDigisValidation+process.trackerRecHitsValidation+process.trackingTruthValid+process.trackingRecHitsValid+process.tracksValidation+process.ecalSimHitsValidationSequence+process.ecalDigisValidationSequence+process.ecalRecHitsValidationSequence+process.ecalClustersValidationSequence+process.hcalSimHitStudy+process.hcalRecHitsValidationSequence+process.calotowersValidationSequence+process.validSimHit+process.muondtdigianalyzer+process.cscDigiValidation+process.validationMuonRPCDigis+process.recoMuonValidation+process.muIsoVal_seq+process.muonIdValDQMSeq+process.mixCollectionValidation+process.JetValidation+process.METValidation+process.vertexValidation+process.egammaValidation+process.pfJetValidationSequence+process.pfMETValidationSequence+process.rpcRecHitValidation_step)


process.metrecoPlusHCALNoise = cms.Sequence(process.metreco+process.hcalnoise)


process.DQMOfflinePOGMC = cms.Sequence(process.DQMOfflinePrePOGMC+process.DQMMessageLogger)


process.hltvalidation = cms.Sequence(process.HLTMuonVal+process.HLTTauVal+process.egammaValidationSequence+process.HLTTopVal+process.HLTFourVector+process.heavyFlavorValidationSequence+process.HLTJetMETValSeq+process.HLTAlCaVal+process.HLTSusyExoValSeq+process.HiggsValidationSequence)


process.HLTMuonVal_FastSim = cms.Sequence(process.recoMuonValidationHLTFastSim_seq+process.hltMuonValidator)


process.ckftracks_plus_pixelless = cms.Sequence(process.ckftracks+process.ctfTracksPixelLess)


process.triggerOfflineDQMSource = cms.Sequence(process.l1temumonitor+process.l1tmonitor+process.onlineHLTSource+process.offlineHLTSource)


process.muonreco_plus_isolation = cms.Sequence(process.muonrecowith_TeVRefinemen+process.muIsolation)


process.pfPhotonTranslatorSequence = cms.Sequence(process.pfBasedPhotonIsoSequence+process.pfPhotonTranslator+process.pfPhotonInterestingEcalDetIdEB+process.pfPhotonInterestingEcalDetIdEE)


process.egammaGlobalReco = cms.Sequence(process.electronGsfTracking+process.conversionTrackSequence+process.allConversionSequence)


process.recoTauClassicHPSSequence = cms.Sequence(process.recoTauCommonSequence+process.ak5PFJetsLegacyHPSPiZeros+process.combinatoricRecoTaus+process.produceAndDiscriminateHPSPFTaus)


process.genvalid_qcd = cms.Sequence(process.basicGenTest_seq+process.mbueAndqcdValidation_seq)


process.localreco_HcalNZS = cms.Sequence(process.trackerlocalreco+process.muonlocalreco+process.calolocalrecoNZS+process.castorreco+process.lumiProducer)


process.localreco = cms.Sequence(process.trackerlocalreco+process.muonlocalreco+process.calolocalreco+process.castorreco+process.lumiProducer)


process.muonrecoComplete_minus_SET_minus_muIDmaps = cms.Sequence(process.muonrecowith_TeVRefinemen+process.muIsolation)


process.validation = cms.Sequence(cms.SequencePlaceholder("mix")+process.basicGenTest_seq+process.globaldigisanalyze+process.globalhitsanalyze+process.globalrechitsanalyze+process.trackerHitsValidation+process.trackerDigisValidation+process.pixRecHitsValid+process.stripRecHitsValid+process.trackingTruthValid+process.trackingRecHitsValid+process.tracksValidation+process.ecalSimHitsValidationSequence+process.ecalDigisValidationSequence+process.ecalRecHitsValidationSequence+process.ecalClustersValidationSequence+process.hcalSimHitStudy+process.hcalRecHitsValidationSequence+process.calotowersValidationSequence+process.validSimHit+process.muondtdigianalyzer+process.cscDigiValidation+process.validationMuonRPCDigis+process.recoMuonValidation+process.muIsoVal_seq+process.muonIdValDQMSeq+process.mixCollectionValidation+process.JetValidation+process.METValidation+process.vertexValidation+process.egammaValidation+process.pfJetValidationSequence+process.pfMETValidationSequence+process.rpcRecHitValidation_step+process.hltvalidation)


process.genvalid_dy = cms.Sequence(process.basicGenTest_seq+process.mbueAndqcdValidation_seq+process.drellYanValidation_seq+process.tauValidation_seq)


process.muonrecoComplete_minus_muIDmaps = cms.Sequence(process.muonreco_plus_isolation_plus_SET)


process.hltvalidation_withDQM = cms.Sequence(process.hltvalidation+process.trigdqm_forValidation)


process.muonreco_plus_isolation_plus_SET_plus_muIDmaps = cms.Sequence(process.muonreco_plus_isolation_plus_SET+process.muonSelectionTypeSequence)


process.particleFlowReco = cms.Sequence(process.particleFlowTrackWithDisplacedVertex+process.particleFlowBlock+process.particleFlow+process.pfElectronTranslatorSequence+process.pfPhotonTranslatorSequence)


process.globalreco = cms.Sequence(process.offlineBeamSpot+process.recopixelvertexing+process.trackingGlobalReco+process.hcalGlobalRecoSequence+process.particleFlowCluster+process.ecalClusters+process.caloTowersRec+process.vertexreco+process.egammaGlobalReco+process.pfTrackingGlobalReco+process.jetGlobalReco+process.muonrecoComplete+process.muoncosmicreco+process.CastorFullReco)


process.hltvalidation_fastsim = cms.Sequence(process.HLTMuonVal_FastSim+process.HLTTauValFS+process.egammaValidationSequenceFS+process.HLTTopVal+process.HLTFourVector+process.heavyFlavorValidationSequence+process.HLTJetMETValSeq+process.HLTAlCaVal_FastSim+process.HLTSusyExoValSeq_FastSim+process.HiggsValidationSequence)


process.globalreco_plusPL = cms.Sequence(process.globalreco+process.ctfTracksPixelLess)


process.globalreco_plusRS = cms.Sequence(process.globalreco+process.rstracks)


process.PFTau = cms.Sequence(process.recoTauCommonSequence+process.recoTauClassicShrinkingConeSequence+process.recoTauClassicHPSSequence+process.recoTauClassicShrinkingConeMVASequence+process.recoTauHPSTancSequence)


process.DQMOfflinePrePOG = cms.Sequence(process.muonMonitors+process.jetMETDQMOfflineSource+process.egammaDQMOffline+process.triggerOfflineDQMSource+process.pvMonitor+process.bTagPlots+process.alcaBeamMonitor+process.dqmPhysics)


process.reconstruction_fromRECO = cms.Sequence(process.siPixelRecHits+process.siStripMatchedRecHits+process.dt4DSegments+process.dt4DCosmicSegments+process.cscSegments+process.lumiProducer+process.offlineBeamSpot+process.recopixelvertexing+process.trackingGlobalReco+process.particleFlowCluster+process.ecalClusters+process.caloTowersRec+process.vertexreco+process.egammaGlobalReco+process.pfTrackingGlobalReco+process.jetGlobalReco+process.muonrecoComplete+process.muoncosmicreco+process.CastorFullReco+process.egammaHighLevelRecoPrePF+process.particleFlowReco+process.egammaHighLevelRecoPostPF+process.jetHighLevelReco+process.tautagging+process.metreco+process.btagging+process.recoPFMET+process.PFTau+process.regionalCosmicTracksSeq+process.muoncosmichighlevelreco+process.interestingEcalDetIdEB+process.interestingEcalDetIdEBU+process.interestingEcalDetIdEE+process.interestingTrackEcalDetIds+process.reducedEcalRecHitsEB+process.reducedEcalRecHitsEE+process.reducedEcalRecHitsES+process.reducedHcalRecHitsSequence+process.logErrorHarvester)


process.highlevelreco = cms.Sequence(process.egammaHighLevelRecoPrePF+process.particleFlowReco+process.egammaHighLevelRecoPostPF+process.jetHighLevelReco+process.tautagging+process.metrecoPlusHCALNoise+process.btagging+process.recoPFMET+process.PFTau+process.regionalCosmicTracksSeq+process.muoncosmichighlevelreco+process.reducedRecHits)


process.reconstruction_standard_candle = cms.Sequence(process.localreco+process.globalreco+process.vertexreco+process.recoJetAssociations+process.btagging+process.electronSequence+process.photonSequence)


process.reconstruction_withRS = cms.Sequence(process.localreco+process.globalreco_plusRS+process.highlevelreco+process.logErrorHarvester)


process.DQMOfflinePOG = cms.Sequence(process.DQMOfflinePrePOG+process.DQMMessageLogger)


process.DQMOffline = cms.Sequence(process.DQMOfflinePreDPG+process.DQMOfflinePrePOG+process.DQMMessageLogger)


process.reconstruction_withPixellessTk = cms.Sequence(process.localreco+process.globalreco_plusPL+process.highlevelreco+process.logErrorHarvester)


process.reconstruction_woCosmicMuons = cms.Sequence(process.localreco+process.globalreco+process.highlevelreco+process.logErrorHarvester)


process.reconstruction = cms.Sequence(process.localreco+process.globalreco+process.highlevelreco+process.logErrorHarvester)


process.reconstruction_HcalNZS = cms.Sequence(process.localreco_HcalNZS+process.globalreco+process.highlevelreco+process.logErrorHarvester)


process.raw2digi_step = cms.Path(process.RawToDigi)


process.L1Reco_step = cms.Path(process.L1Reco)


process.reconstruction_step = cms.Path(process.reconstruction)


process.dqmoffline_step = cms.Path(process.DQMOfflinePOGMC)


process.validation_step = cms.EndPath(process.validation_prod)


process.endjob_step = cms.EndPath(process.endOfProcess)


process.RECOSIMoutput_step = cms.EndPath(process.RECOSIMoutput)


process.DQMoutput_step = cms.EndPath(process.DQMoutput)


process.DBService = cms.Service("DBService")


process.DQMStore = cms.Service("DQMStore")


process.DTDataIntegrityTask = cms.Service("DTDataIntegrityTask",
    processingMode = cms.untracked.string('Offline'),
    fedIntegrityFolder = cms.untracked.string('DT/FEDIntegrity'),
    getSCInfo = cms.untracked.bool(True)
)


process.MessageLogger = cms.Service("MessageLogger",
    suppressInfo = cms.untracked.vstring(),
    debugs = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    suppressDebug = cms.untracked.vstring(),
    cout = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    cerr_stats = cms.untracked.PSet(
        threshold = cms.untracked.string('WARNING'),
        output = cms.untracked.string('cerr'),
        optionalPSet = cms.untracked.bool(True)
    ),
    warnings = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    default = cms.untracked.PSet(

    ),
    statistics = cms.untracked.vstring('cerr_stats'),
    cerr = cms.untracked.PSet(
        INFO = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        noTimeStamps = cms.untracked.bool(False),
        FwkReport = cms.untracked.PSet(
            reportEvery = cms.untracked.int32(1),
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(10000000)
        ),
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000)
        ),
        Root_NoDictionary = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(0)
        ),
        threshold = cms.untracked.string('INFO'),
        FwkJob = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(0)
        ),
        FwkSummary = cms.untracked.PSet(
            reportEvery = cms.untracked.int32(1),
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(10000000)
        ),
        optionalPSet = cms.untracked.bool(True)
    ),
    FrameworkJobReport = cms.untracked.PSet(
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        optionalPSet = cms.untracked.bool(True),
        FwkJob = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(10000000)
        )
    ),
    suppressWarning = cms.untracked.vstring('particleFlowDisplacedVertexCandidate'),
    errors = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    destinations = cms.untracked.vstring('warnings', 
        'errors', 
        'infos', 
        'debugs', 
        'cout', 
        'cerr'),
    debugModules = cms.untracked.vstring(),
    infos = cms.untracked.PSet(
        optionalPSet = cms.untracked.bool(True),
        Root_NoDictionary = cms.untracked.PSet(
            optionalPSet = cms.untracked.bool(True),
            limit = cms.untracked.int32(0)
        ),
        placeholder = cms.untracked.bool(True)
    ),
    categories = cms.untracked.vstring('FwkJob', 
        'FwkReport', 
        'FwkSummary', 
        'Root_NoDictionary'),
    fwkJobReports = cms.untracked.vstring('FrameworkJobReport')
)


process.RandomNumberGeneratorService = cms.Service("RandomNumberGeneratorService",
    mix = cms.PSet(
        initialSeed = cms.untracked.uint32(12345),
        engineName = cms.untracked.string('HepJamesRandom')
    ),
    restoreStateLabel = cms.untracked.string('randomEngineStateProducer')
)


process.SiStripDetInfoFileReader = cms.Service("SiStripDetInfoFileReader")


process.TkDetMap = cms.Service("TkDetMap")


process.UpdaterService = cms.Service("UpdaterService")


process.AnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    MaxDPhi = cms.double(1.6),
    ComponentName = cms.string('AnalyticalPropagator'),
    PropagationDirection = cms.string('alongMomentum')
)


process.AnyDirectionAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    MaxDPhi = cms.double(1.6),
    ComponentName = cms.string('AnyDirectionAnalyticalPropagator'),
    PropagationDirection = cms.string('anyDirection')
)


process.BeamHaloMPropagatorAlong = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('BeamHaloMPropagatorAlong'),
    Mass = cms.double(0.105),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(10000),
    useRungeKutta = cms.bool(True)
)


process.BeamHaloMPropagatorOpposite = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('BeamHaloMPropagatorOpposite'),
    Mass = cms.double(0.105),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(10000),
    useRungeKutta = cms.bool(True)
)


process.BeamHaloPropagatorAlong = cms.ESProducer("BeamHaloPropagatorESProducer",
    ComponentName = cms.string('BeamHaloPropagatorAlong'),
    CrossingTrackerPropagator = cms.string('BeamHaloSHPropagatorAlong'),
    PropagationDirection = cms.string('alongMomentum'),
    EndCapTrackerPropagator = cms.string('BeamHaloMPropagatorAlong')
)


process.BeamHaloPropagatorAny = cms.ESProducer("BeamHaloPropagatorESProducer",
    ComponentName = cms.string('BeamHaloPropagatorAny'),
    CrossingTrackerPropagator = cms.string('BeamHaloSHPropagatorAny'),
    PropagationDirection = cms.string('anyDirection'),
    EndCapTrackerPropagator = cms.string('BeamHaloMPropagatorAlong')
)


process.BeamHaloPropagatorOpposite = cms.ESProducer("BeamHaloPropagatorESProducer",
    ComponentName = cms.string('BeamHaloPropagatorOpposite'),
    CrossingTrackerPropagator = cms.string('BeamHaloSHPropagatorOpposite'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    EndCapTrackerPropagator = cms.string('BeamHaloMPropagatorOpposite')
)


process.BeamHaloSHPropagatorAlong = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('alongMomentum'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('BeamHaloSHPropagatorAlong'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.BeamHaloSHPropagatorAny = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('anyDirection'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('BeamHaloSHPropagatorAny'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.BeamHaloSHPropagatorOpposite = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('oppositeToMomentum'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('BeamHaloSHPropagatorOpposite'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.CSCGeometryESModule = cms.ESProducer("CSCGeometryESModule",
    appendToDataLabel = cms.string(''),
    useDDD = cms.bool(False),
    debugV = cms.untracked.bool(False),
    useGangedStripsInME1a = cms.bool(True),
    alignmentsLabel = cms.string(''),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True),
    useCentreTIOffsets = cms.bool(False),
    applyAlignment = cms.bool(True)
)


process.CaloGeometryBuilder = cms.ESProducer("CaloGeometryBuilder",
    SelectedCalos = cms.vstring('HCAL', 
        'ZDC', 
        'CASTOR', 
        'EcalBarrel', 
        'EcalEndcap', 
        'EcalPreshower', 
        'TOWER')
)


process.CaloTopologyBuilder = cms.ESProducer("CaloTopologyBuilder")


process.CaloTowerConstituentsMapBuilder = cms.ESProducer("CaloTowerConstituentsMapBuilder",
    MapFile = cms.untracked.string('Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz')
)


process.CaloTowerGeometryFromDBEP = cms.ESProducer("CaloTowerGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.CastorDbProducer = cms.ESProducer("CastorDbProducer")


process.CastorGeometryFromDBEP = cms.ESProducer("CastorGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.Chi2EstimatorForMuRefit = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(100000.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2EstimatorForMuRefit')
)


process.Chi2EstimatorForMuonTrackLoader = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(100000.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2EstimatorForMuonTrackLoader')
)


process.Chi2EstimatorForRefit = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(100000.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2EstimatorForRefit')
)


process.Chi2MeasurementEstimator = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(30.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2')
)


process.Chi2MeasurementEstimatorForInOut = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(100.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2ForInOut')
)


process.Chi2MeasurementEstimatorForOutIn = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(500.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2ForOutIn')
)


process.CkfElectronTrajectoryBuilder = cms.ESProducer("CkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('fwdElectronPropagator'),
    trajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('CkfElectronTrajectoryBuilder'),
    propagatorOpposite = cms.string('bwdElectronPropagator'),
    MeasurementTrackerName = cms.string(''),
    estimator = cms.string('electronChi2'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.CkfTrajectoryBuilder = cms.ESProducer("CkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('CkfTrajectoryBuilder'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    MeasurementTrackerName = cms.string(''),
    estimator = cms.string('Chi2'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.CkfTrajectoryBuilderBeamHalo = cms.ESProducer("CkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('BeamHaloPropagatorAlong'),
    trajectoryFilterName = cms.string('ckfTrajectoryFilterBeamHaloMuon'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('CkfTrajectoryBuilderBH'),
    propagatorOpposite = cms.string('BeamHaloPropagatorOpposite'),
    MeasurementTrackerName = cms.string(''),
    estimator = cms.string('Chi2'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.CloseComponentsMerger5D = cms.ESProducer("CloseComponentsMergerESProducer5D",
    ComponentName = cms.string('CloseComponentsMerger5D'),
    MaxComponents = cms.int32(12),
    DistanceMeasure = cms.string('KullbackLeiblerDistance5D')
)


process.CloseComponentsMerger_forPreId = cms.ESProducer("CloseComponentsMergerESProducer5D",
    ComponentName = cms.string('CloseComponentsMerger_forPreId'),
    MaxComponents = cms.int32(4),
    DistanceMeasure = cms.string('KullbackLeiblerDistance5D')
)


process.ClusterShapeHitFilterESProducer = cms.ESProducer("ClusterShapeHitFilterESProducer",
    ComponentName = cms.string('ClusterShapeHitFilter')
)


process.CosmicParametersDefinerForTP = cms.ESProducer("CosmicParametersDefinerForTPESProducer",
    ComponentName = cms.string('CosmicParametersDefinerForTP')
)


process.DTGeometryESModule = cms.ESProducer("DTGeometryESModule",
    appendToDataLabel = cms.string(''),
    fromDDD = cms.bool(False),
    applyAlignment = cms.bool(True),
    alignmentsLabel = cms.string('')
)


process.DummyDetLayerGeometry = cms.ESProducer("DetLayerGeometryESProducer",
    ComponentName = cms.string('DummyDetLayerGeometry')
)


process.EcalBarrelGeometryFromDBEP = cms.ESProducer("EcalBarrelGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalElectronicsMappingBuilder = cms.ESProducer("EcalElectronicsMappingBuilder")


process.EcalEndcapGeometryFromDBEP = cms.ESProducer("EcalEndcapGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalLaserCorrectionService = cms.ESProducer("EcalLaserCorrectionService")


process.EcalPreshowerGeometryFromDBEP = cms.ESProducer("EcalPreshowerGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalTrigTowerConstituentsMapBuilder = cms.ESProducer("EcalTrigTowerConstituentsMapBuilder",
    MapFile = cms.untracked.string('Geometry/EcalMapping/data/EndCap_TTMap.txt')
)


process.ElectronChi2 = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(2000.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('ElectronChi2')
)


process.ElectronMaterialEffects = cms.ESProducer("GsfMaterialEffectsESProducer",
    BetheHeitlerParametrization = cms.string('BetheHeitler_cdfmom_nC6_O5.par'),
    EnergyLossUpdator = cms.string('GsfBetheHeitlerUpdator'),
    ComponentName = cms.string('ElectronMaterialEffects'),
    MultipleScatteringUpdator = cms.string('MultipleScatteringUpdator'),
    Mass = cms.double(0.000511),
    BetheHeitlerCorrection = cms.int32(2)
)


process.ElectronMaterialEffects_forPreId = cms.ESProducer("GsfMaterialEffectsESProducer",
    BetheHeitlerParametrization = cms.string('BetheHeitler_cdfmom_nC3_O5.par'),
    EnergyLossUpdator = cms.string('GsfBetheHeitlerUpdator'),
    ComponentName = cms.string('ElectronMaterialEffects_forPreId'),
    MultipleScatteringUpdator = cms.string('MultipleScatteringUpdator'),
    Mass = cms.double(0.000511),
    BetheHeitlerCorrection = cms.int32(2)
)


process.EstimatorForSTA = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(1000.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('Chi2STA')
)


process.FittingSmootherRKP5 = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(20.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('RKFitter'),
    MinNumberOfHits = cms.int32(4),
    Smoother = cms.string('RKSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(False),
    ComponentName = cms.string('FittingSmootherRKP5'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.GlbMuKFFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('GlbMuKFFitter'),
    Estimator = cms.string('Chi2EstimatorForMuRefit'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    minHits = cms.int32(3)
)


process.GlobalDetLayerGeometry = cms.ESProducer("GlobalDetLayerGeometryESProducer",
    ComponentName = cms.string('GlobalDetLayerGeometry')
)


process.GlobalTrackingGeometryESProducer = cms.ESProducer("GlobalTrackingGeometryESProducer")


process.GroupedCkfTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    bestHitOnly = cms.bool(True),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('GroupedCkfTrajectoryBuilder'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    MeasurementTrackerName = cms.string(''),
    minNrOfHitsForRebuild = cms.int32(5),
    lockHits = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    requireSeedHitsInRebuild = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    estimator = cms.string('Chi2'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.GroupedCkfTrajectoryBuilderP5 = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    bestHitOnly = cms.bool(True),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('ckfBaseTrajectoryFilterP5'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('GroupedCkfTrajectoryBuilderP5'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    MeasurementTrackerName = cms.string(''),
    minNrOfHitsForRebuild = cms.int32(5),
    lockHits = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    requireSeedHitsInRebuild = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    estimator = cms.string('Chi2'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.GsfElectronFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('GsfTrajectoryFitter'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('GsfTrajectorySmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('GsfElectronFittingSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.GsfTrajectoryFitter = cms.ESProducer("GsfTrajectoryFitterESProducer",
    Merger = cms.string('CloseComponentsMerger5D'),
    ComponentName = cms.string('GsfTrajectoryFitter'),
    MaterialEffectsUpdator = cms.string('ElectronMaterialEffects'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    GeometricalPropagator = cms.string('fwdAnalyticalPropagator')
)


process.GsfTrajectoryFitter_forPreId = cms.ESProducer("GsfTrajectoryFitterESProducer",
    Merger = cms.string('CloseComponentsMerger_forPreId'),
    ComponentName = cms.string('GsfTrajectoryFitter_forPreId'),
    MaterialEffectsUpdator = cms.string('ElectronMaterialEffects_forPreId'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    GeometricalPropagator = cms.string('fwdAnalyticalPropagator')
)


process.GsfTrajectorySmoother = cms.ESProducer("GsfTrajectorySmootherESProducer",
    ErrorRescaling = cms.double(100.0),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Merger = cms.string('CloseComponentsMerger5D'),
    ComponentName = cms.string('GsfTrajectorySmoother'),
    GeometricalPropagator = cms.string('bwdAnalyticalPropagator'),
    MaterialEffectsUpdator = cms.string('ElectronMaterialEffects')
)


process.GsfTrajectorySmoother_forPreId = cms.ESProducer("GsfTrajectorySmootherESProducer",
    ErrorRescaling = cms.double(100.0),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Merger = cms.string('CloseComponentsMerger_forPreId'),
    ComponentName = cms.string('GsfTrajectorySmoother_forPreId'),
    GeometricalPropagator = cms.string('bwdAnalyticalPropagator'),
    MaterialEffectsUpdator = cms.string('ElectronMaterialEffects_forPreId')
)


process.HcalAlignmentEP = cms.ESProducer("HcalAlignmentEP")


process.HcalGeometryFromDBEP = cms.ESProducer("HcalGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.HcalTopologyIdealEP = cms.ESProducer("HcalTopologyIdealEP")


process.KFFitterForRefitInsideOut = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitterForRefitInsideOut'),
    Estimator = cms.string('Chi2EstimatorForRefit'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    minHits = cms.int32(3)
)


process.KFFitterForRefitOutsideIn = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitterForRefitOutsideIn'),
    Estimator = cms.string('Chi2EstimatorForRefit'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
    minHits = cms.int32(3)
)


process.KFFittingSmootheForSTA = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('KFFitterSTA'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('KFSmootherSTA'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFitterSmootherSTA'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.KFFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('KFFitter'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('KFSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFittingSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.KFFittingSmootherBeamHalo = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('KFFitterBH'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('KFSmootherBH'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFittingSmootherBH'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.KFFittingSmootherForInOut = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('KFFitterForInOut'),
    MinNumberOfHits = cms.int32(3),
    Smoother = cms.string('KFSmootherForInOut'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFittingSmootherForInOut'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.KFFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(20.0),
    LogPixelProbabilityCut = cms.double(-14.0),
    Fitter = cms.string('RKFitter'),
    MinNumberOfHits = cms.int32(3),
    Smoother = cms.string('RKSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.KFSmootherForMuonTrackLoader = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherForMuonTrackLoader'),
    Estimator = cms.string('Chi2EstimatorForMuonTrackLoader'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFSmootherForMuonTrackLoaderL3 = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherForMuonTrackLoaderL3'),
    Estimator = cms.string('Chi2EstimatorForMuonTrackLoader'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyOpposite'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFSmootherForRefitInsideOut = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherForRefitInsideOut'),
    Estimator = cms.string('Chi2EstimatorForRefit'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFSmootherForRefitOutsideIn = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherForRefitOutsideIn'),
    Estimator = cms.string('Chi2EstimatorForRefit'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFSwitching1DUpdatorESProducer = cms.ESProducer("KFSwitching1DUpdatorESProducer",
    ComponentName = cms.string('KFSwitching1DUpdator'),
    doEndCap = cms.bool(False)
)


process.KFTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitter'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('PropagatorWithMaterial'),
    minHits = cms.int32(3)
)


process.KFTrajectoryFitterBeamHalo = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitterBH'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('BeamHaloPropagatorAlong'),
    minHits = cms.int32(3)
)


process.KFTrajectoryFitterForInOut = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitterForInOut'),
    Estimator = cms.string('Chi2ForInOut'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('alongMomElePropagator'),
    minHits = cms.int32(3)
)


process.KFTrajectoryFitterForOutIn = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitterForOutIn'),
    Estimator = cms.string('Chi2ForOutIn'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('alongMomElePropagator'),
    minHits = cms.int32(3)
)


process.KFTrajectoryFitterForSTA = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('KFFitterSTA'),
    Estimator = cms.string('Chi2STA'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SteppingHelixPropagatorAny'),
    minHits = cms.int32(3)
)


process.KFTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmoother'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('PropagatorWithMaterial'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFTrajectorySmootherBeamHalo = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherBH'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('BeamHaloPropagatorAlong'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFTrajectorySmootherForInOut = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherForInOut'),
    Estimator = cms.string('Chi2ForInOut'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('oppositeToMomElePropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFTrajectorySmootherForSTA = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('KFSmootherSTA'),
    Estimator = cms.string('Chi2STA'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('SteppingHelixPropagatorOpposite'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.KFUpdatorESProducer = cms.ESProducer("KFUpdatorESProducer",
    ComponentName = cms.string('KFUpdator')
)


process.KullbackLeiblerDistance5D = cms.ESProducer("DistanceBetweenComponentsESProducer5D",
    ComponentName = cms.string('KullbackLeiblerDistance5D'),
    DistanceMeasure = cms.string('KullbackLeibler')
)


process.LhcParametersDefinerForTP = cms.ESProducer("ParametersDefinerForTPESProducer",
    ComponentName = cms.string('LhcParametersDefinerForTP')
)


process.MRHFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('MRHFitter'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('MRHSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('MRHFittingSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.MRHTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('MRHFitter'),
    Estimator = cms.string('MRHChi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    minHits = cms.int32(3)
)


process.MRHTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('MRHSmoother'),
    Estimator = cms.string('MRHChi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.MaterialPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('PropagatorWithMaterial'),
    Mass = cms.double(0.105),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.MaterialPropagatorPtMin01 = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('PropagatorWithMaterialPtMin01'),
    Mass = cms.double(0.105),
    ptMin = cms.double(0.1),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.MeasurementTracker = cms.ESProducer("MeasurementTrackerESProducer",
    StripCPE = cms.string('StripCPEfromTrackAngle'),
    inactivePixelDetectorLabels = cms.VInputTag(),
    PixelCPE = cms.string('PixelCPEGeneric'),
    stripLazyGetterProducer = cms.string(''),
    OnDemand = cms.bool(False),
    Regional = cms.bool(False),
    UsePixelModuleQualityDB = cms.bool(True),
    pixelClusterProducer = cms.string('siPixelClusters'),
    switchOffPixelsIfEmpty = cms.bool(True),
    inactiveStripDetectorLabels = cms.VInputTag(cms.InputTag("siStripDigis")),
    MaskBadAPVFibers = cms.bool(True),
    UseStripStripQualityDB = cms.bool(True),
    UsePixelROCQualityDB = cms.bool(True),
    DebugPixelROCQualityDB = cms.untracked.bool(False),
    UseStripAPVFiberQualityDB = cms.bool(True),
    stripClusterProducer = cms.string('siStripClusters'),
    DebugStripAPVFiberQualityDB = cms.untracked.bool(False),
    DebugStripStripQualityDB = cms.untracked.bool(False),
    SiStripQualityLabel = cms.string(''),
    badStripCuts = cms.PSet(
        TOB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TID = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TEC = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TIB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        )
    ),
    DebugStripModuleQualityDB = cms.untracked.bool(False),
    ComponentName = cms.string(''),
    DebugPixelModuleQualityDB = cms.untracked.bool(False),
    HitMatcher = cms.string('StandardMatcher'),
    UseStripModuleQualityDB = cms.bool(True)
)


process.MuonDetLayerGeometryESProducer = cms.ESProducer("MuonDetLayerGeometryESProducer")


process.MuonNumberingInitialization = cms.ESProducer("MuonNumberingInitialization")


process.MuonTransientTrackingRecHitBuilderESProducer = cms.ESProducer("MuonTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('MuonRecHitBuilder')
)


process.OnlineTrackAssociatorByHits = cms.ESProducer("TrackAssociatorByHitsESProducer",
    Quality_SimToReco = cms.double(0.5),
    ThreeHitTracksAreSpecial = cms.bool(False),
    UseGrouped = cms.bool(False),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    UseSplitting = cms.bool(False),
    Purity_SimToReco = cms.double(0.75),
    UsePixels = cms.bool(True),
    associateRecoTracks = cms.bool(True),
    AbsoluteNumberOfHits = cms.bool(False),
    associateStrip = cms.bool(True),
    Cut_RecoToSim = cms.double(0.75),
    SimToRecoDenominator = cms.string('sim'),
    ComponentName = cms.string('OnlineTrackAssociatorByHits')
)


process.OppositeAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    MaxDPhi = cms.double(1.6),
    ComponentName = cms.string('AnalyticalPropagatorOpposite'),
    PropagationDirection = cms.string('oppositeToMomentum')
)


process.OppositeMaterialPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('PropagatorWithMaterialOpposite'),
    Mass = cms.double(0.105),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.OppositeMaterialPropagatorPtMin01 = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('PropagatorWithMaterialOppositePtMin01'),
    Mass = cms.double(0.105),
    ptMin = cms.double(0.1),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.ParametrizedMagneticFieldProducer = cms.ESProducer("ParametrizedMagneticFieldProducer",
    version = cms.string('OAE_1103l_071212'),
    parameters = cms.PSet(
        BValue = cms.string('3_8T')
    ),
    label = cms.untracked.string('parametrizedField')
)


process.PixelCPEGenericESProducer = cms.ESProducer("PixelCPEGenericESProducer",
    EdgeClusterErrorX = cms.double(50.0),
    DoCosmics = cms.bool(False),
    LoadTemplatesFromDB = cms.bool(True),
    UseErrorsFromTemplates = cms.bool(True),
    eff_charge_cut_highX = cms.double(1.0),
    TruncatePixelCharge = cms.bool(True),
    size_cutY = cms.double(3.0),
    size_cutX = cms.double(3.0),
    inflate_all_errors_no_trk_angle = cms.bool(False),
    IrradiationBiasCorrection = cms.bool(False),
    TanLorentzAnglePerTesla = cms.double(0.106),
    inflate_errors = cms.bool(False),
    eff_charge_cut_lowX = cms.double(0.0),
    eff_charge_cut_highY = cms.double(1.0),
    ClusterProbComputationFlag = cms.int32(0),
    EdgeClusterErrorY = cms.double(85.0),
    ComponentName = cms.string('PixelCPEGeneric'),
    eff_charge_cut_lowY = cms.double(0.0),
    PixelErrorParametrization = cms.string('NOTcmsim'),
    Alpha2Order = cms.bool(True)
)


process.RK1DFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('RK1DFitter'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('RK1DSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('RK1DFittingSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.RK1DTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('RK1DFitter'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFSwitching1DUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    minHits = cms.int32(3)
)


process.RK1DTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('RK1DSmoother'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFSwitching1DUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.RKFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(-1.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('RKFitter'),
    MinNumberOfHits = cms.int32(5),
    Smoother = cms.string('RKSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('RKFittingSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.RKOutliers1DFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(20.0),
    LogPixelProbabilityCut = cms.double(-16.0),
    Fitter = cms.string('RK1DFitter'),
    MinNumberOfHits = cms.int32(3),
    Smoother = cms.string('RK1DSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('RKOutliers1DFittingSmoother'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.RKTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('RKFitter'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    minHits = cms.int32(3)
)


process.RKTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3),
    ComponentName = cms.string('RKSmoother'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.RPCGeometryESModule = cms.ESProducer("RPCGeometryESModule",
    useDDD = cms.untracked.bool(False),
    compatibiltyWith11 = cms.untracked.bool(True)
)


process.RungeKuttaTrackerPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('RungeKuttaTrackerPropagator'),
    Mass = cms.double(0.105),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(True)
)


process.RungeKuttaTrackerPropagatorOpposite = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('RungeKuttaTrackerPropagatorOpposite'),
    Mass = cms.double(0.105),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(True)
)


process.SiStripRecHitMatcherESProducer = cms.ESProducer("SiStripRecHitMatcherESProducer",
    ComponentName = cms.string('StandardMatcher'),
    NSigmaInside = cms.double(3.0)
)


process.SmartPropagator = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('PropagatorWithMaterial'),
    MuonPropagator = cms.string('SteppingHelixPropagatorAlong'),
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('SmartPropagator')
)


process.SmartPropagatorAny = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('PropagatorWithMaterial'),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('SmartPropagatorAny')
)


process.SmartPropagatorAnyOpposite = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('PropagatorWithMaterialOpposite'),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('SmartPropagatorAnyOpposite')
)


process.SmartPropagatorAnyRK = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('RungeKuttaTrackerPropagator'),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('SmartPropagatorAnyRK')
)


process.SmartPropagatorAnyRKOpposite = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('RungeKuttaTrackerPropagatorOpposite'),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('SmartPropagatorAnyRKOpposite')
)


process.SmartPropagatorOpposite = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('PropagatorWithMaterialOpposite'),
    MuonPropagator = cms.string('SteppingHelixPropagatorOpposite'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('SmartPropagatorOpposite')
)


process.SmartPropagatorRK = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('RungeKuttaTrackerPropagator'),
    MuonPropagator = cms.string('SteppingHelixPropagatorAlong'),
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('SmartPropagatorRK')
)


process.SmartPropagatorRKOpposite = cms.ESProducer("SmartPropagatorESProducer",
    Epsilon = cms.double(5.0),
    TrackerPropagator = cms.string('RungeKuttaTrackerPropagatorOpposite'),
    MuonPropagator = cms.string('SteppingHelixPropagatorOpposite'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('SmartPropagatorRKOpposite')
)


process.SteppingHelixPropagatorAlong = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('alongMomentum'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAlong'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.SteppingHelixPropagatorAlongNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('alongMomentum'),
    useTuningForL2Speed = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAlongNoError'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(True),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    endcapShiftInZPos = cms.double(0.0),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useMatVolumes = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    returnTangentPlane = cms.bool(True)
)


process.SteppingHelixPropagatorAny = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('anyDirection'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAny'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.SteppingHelixPropagatorAnyNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('anyDirection'),
    useTuningForL2Speed = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAnyNoError'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(True),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    endcapShiftInZPos = cms.double(0.0),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useMatVolumes = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    returnTangentPlane = cms.bool(True)
)


process.SteppingHelixPropagatorL2Along = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('alongMomentum'),
    useTuningForL2Speed = cms.bool(True),
    ComponentName = cms.string('SteppingHelixPropagatorL2Along'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    endcapShiftInZPos = cms.double(0.0),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useMatVolumes = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    returnTangentPlane = cms.bool(True)
)


process.SteppingHelixPropagatorL2AlongNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('alongMomentum'),
    useMatVolumes = cms.bool(True),
    ComponentName = cms.string('SteppingHelixPropagatorL2AlongNoError'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(True),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useTuningForL2Speed = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.SteppingHelixPropagatorL2Any = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('anyDirection'),
    useTuningForL2Speed = cms.bool(True),
    ComponentName = cms.string('SteppingHelixPropagatorL2Any'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    endcapShiftInZPos = cms.double(0.0),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useMatVolumes = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    returnTangentPlane = cms.bool(True)
)


process.SteppingHelixPropagatorL2AnyNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('anyDirection'),
    useMatVolumes = cms.bool(True),
    ComponentName = cms.string('SteppingHelixPropagatorL2AnyNoError'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(True),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useTuningForL2Speed = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.SteppingHelixPropagatorL2Opposite = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('oppositeToMomentum'),
    useTuningForL2Speed = cms.bool(True),
    ComponentName = cms.string('SteppingHelixPropagatorL2Opposite'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    endcapShiftInZPos = cms.double(0.0),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useMatVolumes = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    returnTangentPlane = cms.bool(True)
)


process.SteppingHelixPropagatorL2OppositeNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('oppositeToMomentum'),
    useMatVolumes = cms.bool(True),
    ComponentName = cms.string('SteppingHelixPropagatorL2OppositeNoError'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(True),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useTuningForL2Speed = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.SteppingHelixPropagatorOpposite = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('oppositeToMomentum'),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(False),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    returnTangentPlane = cms.bool(True),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorOpposite'),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    endcapShiftInZPos = cms.double(0.0)
)


process.SteppingHelixPropagatorOppositeNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    endcapShiftInZNeg = cms.double(0.0),
    PropagationDirection = cms.string('oppositeToMomentum'),
    useTuningForL2Speed = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorOppositeNoError'),
    useIsYokeFlag = cms.bool(True),
    NoErrorPropagation = cms.bool(True),
    SetVBFPointer = cms.bool(False),
    AssumeNoMaterial = cms.bool(False),
    endcapShiftInZPos = cms.double(0.0),
    useInTeslaFromMagField = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    useEndcapShiftsInZ = cms.bool(False),
    sendLogWarning = cms.bool(False),
    useMatVolumes = cms.bool(True),
    debug = cms.bool(False),
    ApplyRadX0Correction = cms.bool(True),
    useMagVolumes = cms.bool(True),
    returnTangentPlane = cms.bool(True)
)


process.StraightLinePropagator = cms.ESProducer("StraightLinePropagatorESProducer",
    ComponentName = cms.string('StraightLinePropagator'),
    PropagationDirection = cms.string('alongMomentum')
)


process.StripCPEESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('SimpleStripCPE')
)


process.StripCPEfromTrackAngleESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('StripCPEfromTrackAngle')
)


process.TTRHBuilderAngleAndTemplate = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('StripCPEfromTrackAngle'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPETemplateReco'),
    ComponentName = cms.string('WithAngleAndTemplate')
)


process.TrackAssociatorByChi2ESProducer = cms.ESProducer("TrackAssociatorByChi2ESProducer",
    onlyDiagonal = cms.bool(False),
    chi2cut = cms.double(25.0),
    beamSpot = cms.InputTag("offlineBeamSpot")
)


process.TrackAssociatorByHits = cms.ESProducer("TrackAssociatorByHitsESProducer",
    Quality_SimToReco = cms.double(0.5),
    ThreeHitTracksAreSpecial = cms.bool(True),
    UseGrouped = cms.bool(True),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    UseSplitting = cms.bool(True),
    Purity_SimToReco = cms.double(0.75),
    UsePixels = cms.bool(True),
    associateRecoTracks = cms.bool(True),
    AbsoluteNumberOfHits = cms.bool(False),
    associateStrip = cms.bool(True),
    Cut_RecoToSim = cms.double(0.75),
    SimToRecoDenominator = cms.string('sim'),
    ComponentName = cms.string('TrackAssociatorByHits')
)


process.TrackAssociatorByHitsRecoDenom = cms.ESProducer("TrackAssociatorByHitsESProducer",
    Quality_SimToReco = cms.double(0.5),
    ThreeHitTracksAreSpecial = cms.bool(True),
    UseGrouped = cms.bool(True),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    UseSplitting = cms.bool(True),
    Purity_SimToReco = cms.double(0.75),
    UsePixels = cms.bool(True),
    associateRecoTracks = cms.bool(True),
    AbsoluteNumberOfHits = cms.bool(False),
    associateStrip = cms.bool(True),
    Cut_RecoToSim = cms.double(0.75),
    SimToRecoDenominator = cms.string('reco'),
    ComponentName = cms.string('TrackAssociatorByHitsRecoDenom')
)


process.TrackAssociatorByPosDeltaR = cms.ESProducer("TrackAssociatorByPositionESProducer",
    QminCut = cms.double(120.0),
    MinIfNoMatch = cms.bool(False),
    ComponentName = cms.string('TrackAssociatorByDeltaR'),
    propagator = cms.string('SteppingHelixPropagatorAlong'),
    positionMinimumDistance = cms.double(0.0),
    QCut = cms.double(0.5),
    method = cms.string('momdr'),
    ConsiderAllSimHits = cms.bool(True)
)


process.TrackerDigiGeometryESModule = cms.ESProducer("TrackerDigiGeometryESModule",
    appendToDataLabel = cms.string(''),
    fromDDD = cms.bool(False),
    applyAlignment = cms.bool(True),
    alignmentsLabel = cms.string('')
)


process.TrackerGeometricDetESModule = cms.ESProducer("TrackerGeometricDetESModule",
    fromDDD = cms.bool(False)
)


process.TrackerRecoGeometryESProducer = cms.ESProducer("TrackerRecoGeometryESProducer")


process.TrajectoryBuilderForConversions = cms.ESProducer("CkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('alongMomElePropagator'),
    trajectoryFilterName = cms.string('TrajectoryFilterForConversions'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('TrajectoryBuilderForConversions'),
    propagatorOpposite = cms.string('oppositeToMomElePropagator'),
    MeasurementTrackerName = cms.string(''),
    estimator = cms.string('eleLooseChi2'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.TrajectoryBuilderForElectrons = cms.ESProducer("CkfTrajectoryBuilderESProducer",
    propagatorAlong = cms.string('fwdGsfElectronPropagator'),
    trajectoryFilterName = cms.string('TrajectoryFilterForElectrons'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('TrajectoryBuilderForElectrons'),
    propagatorOpposite = cms.string('bwdGsfElectronPropagator'),
    MeasurementTrackerName = cms.string(''),
    estimator = cms.string('ElectronChi2'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    intermediateCleaning = cms.bool(False),
    lostHitPenalty = cms.double(90.0)
)


process.TrajectoryCleanerBySharedHitsForConversions = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    ComponentName = cms.string('TrajectoryCleanerBySharedHitsForConversions'),
    fractionShared = cms.double(0.5),
    allowSharedFirstHit = cms.bool(True)
)


process.TrajectoryFilterForConversions = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minimumNumberOfHits = cms.int32(3),
        minHitsMinPt = cms.int32(-1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(1),
        maxNumberOfHits = cms.int32(-1),
        maxConsecLostHits = cms.int32(1),
        chargeSignificance = cms.double(-1.0),
        nSigmaMinPt = cms.double(5.0),
        minPt = cms.double(0.9)
    ),
    ComponentName = cms.string('TrajectoryFilterForConversions')
)


process.TrajectoryFilterForElectrons = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minimumNumberOfHits = cms.int32(5),
        minHitsMinPt = cms.int32(-1),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(1),
        maxNumberOfHits = cms.int32(-1),
        maxConsecLostHits = cms.int32(1),
        chargeSignificance = cms.double(-1.0),
        nSigmaMinPt = cms.double(5.0),
        minPt = cms.double(2.0)
    ),
    ComponentName = cms.string('TrajectoryFilterForElectrons')
)


process.TransientTrackBuilderESProducer = cms.ESProducer("TransientTrackBuilderESProducer",
    ComponentName = cms.string('TransientTrackBuilder')
)


process.VolumeBasedMagneticFieldESProducer = cms.ESProducer("VolumeBasedMagneticFieldESProducer",
    scalingVolumes = cms.vint32(14100, 14200, 17600, 17800, 17900, 
        18100, 18300, 18400, 18600, 23100, 
        23300, 23400, 23600, 23800, 23900, 
        24100, 28600, 28800, 28900, 29100, 
        29300, 29400, 29600, 28609, 28809, 
        28909, 29109, 29309, 29409, 29609, 
        28610, 28810, 28910, 29110, 29310, 
        29410, 29610, 28611, 28811, 28911, 
        29111, 29311, 29411, 29611),
    scalingFactors = cms.vdouble(1, 1, 0.994, 1.004, 1.004, 
        1.005, 1.004, 1.004, 0.994, 0.965, 
        0.958, 0.958, 0.953, 0.958, 0.958, 
        0.965, 0.918, 0.924, 0.924, 0.906, 
        0.924, 0.924, 0.918, 0.991, 0.998, 
        0.998, 0.978, 0.998, 0.998, 0.991, 
        0.991, 0.998, 0.998, 0.978, 0.998, 
        0.998, 0.991, 0.991, 0.998, 0.998, 
        0.978, 0.998, 0.998, 0.991),
    overrideMasterSector = cms.bool(False),
    useParametrizedTrackerField = cms.bool(True),
    label = cms.untracked.string(''),
    version = cms.string('grid_1103l_090322_3_8t'),
    debugBuilder = cms.untracked.bool(False),
    paramLabel = cms.string('parametrizedField'),
    cacheLastVolume = cms.untracked.bool(True)
)


process.XMLFromDBSource = cms.ESProducer("XMLIdealGeometryESProducer",
    rootDDName = cms.string('cms:OCMS'),
    label = cms.string('Extended')
)


process.ZdcGeometryFromDBEP = cms.ESProducer("ZdcGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.alongMomElePropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('alongMomElePropagator'),
    Mass = cms.double(0.000511),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.beamHaloNavigationSchoolESProducer = cms.ESProducer("NavigationSchoolESProducer",
    ComponentName = cms.string('BeamHaloNavigationSchool')
)


process.bwdAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    MaxDPhi = cms.double(1.6),
    ComponentName = cms.string('bwdAnalyticalPropagator'),
    PropagationDirection = cms.string('oppositeToMomentum')
)


process.bwdElectronPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('bwdElectronPropagator'),
    Mass = cms.double(0.000511),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.bwdGsfElectronPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('bwdGsfElectronPropagator'),
    Mass = cms.double(0.000511),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.caloDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('CaloDetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(70),
    nPhi = cms.int32(72)
)


process.chi2CutForConversionTrajectoryBuilder = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(100000.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('eleLooseChi2')
)


process.ckfBaseInOutTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minPt = cms.double(0.9),
        minHitsMinPt = cms.int32(3),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(1),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        chargeSignificance = cms.double(-1.0),
        nSigmaMinPt = cms.double(5.0),
        minimumNumberOfHits = cms.int32(5)
    ),
    ComponentName = cms.string('ckfBaseInOutTrajectoryFilter')
)


process.ckfBaseTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minPt = cms.double(0.9),
        minHitsMinPt = cms.int32(3),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(1),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        chargeSignificance = cms.double(-1.0),
        nSigmaMinPt = cms.double(5.0),
        minimumNumberOfHits = cms.int32(5)
    ),
    ComponentName = cms.string('ckfBaseTrajectoryFilter')
)


process.ckfBaseTrajectoryFilterP5 = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minPt = cms.double(0.5),
        minHitsMinPt = cms.int32(3),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(4),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(3),
        chargeSignificance = cms.double(-1.0),
        nSigmaMinPt = cms.double(5.0),
        minimumNumberOfHits = cms.int32(5)
    ),
    ComponentName = cms.string('ckfBaseTrajectoryFilterP5')
)


process.ckfTrajectoryFilterBeamHaloMuon = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minPt = cms.double(0.1),
        minHitsMinPt = cms.int32(3),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(3),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(2),
        chargeSignificance = cms.double(-1.0),
        nSigmaMinPt = cms.double(5.0),
        minimumNumberOfHits = cms.int32(4)
    ),
    ComponentName = cms.string('ckfTrajectoryFilterBeamHaloMuon')
)


process.combinedMVA = cms.ESProducer("CombinedMVAJetTagESProducer",
    useCategories = cms.bool(False),
    calibrationRecord = cms.string('CombinedMVA'),
    jetTagComputers = cms.VPSet(cms.PSet(
        discriminator = cms.bool(True),
        variables = cms.bool(False),
        jetTagComputer = cms.string('jetProbability')
    ), 
        cms.PSet(
            discriminator = cms.bool(True),
            variables = cms.bool(False),
            jetTagComputer = cms.string('combinedSecondaryVertex')
        ), 
        cms.PSet(
            discriminator = cms.bool(True),
            variables = cms.bool(False),
            jetTagComputer = cms.string('softMuon')
        ), 
        cms.PSet(
            discriminator = cms.bool(True),
            variables = cms.bool(False),
            jetTagComputer = cms.string('softElectron')
        ))
)


process.combinedSecondaryVertex = cms.ESProducer("CombinedSecondaryVertexESProducer",
    useTrackWeights = cms.bool(True),
    pseudoMultiplicityMin = cms.uint32(2),
    correctVertexMass = cms.bool(True),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    charmCut = cms.double(1.5),
    vertexFlip = cms.bool(False),
    minimumTrackWeight = cms.double(0.5),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackMultiplicityMin = cms.uint32(3),
    trackPseudoSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSort = cms.string('sip2dSig'),
    trackFlip = cms.bool(False),
    calibrationRecords = cms.vstring('CombinedSVRecoVertex', 
        'CombinedSVPseudoVertex', 
        'CombinedSVNoVertex'),
    useCategories = cms.bool(True),
    categoryVariableName = cms.string('vertexCategory')
)


process.combinedSecondaryVertexMVA = cms.ESProducer("CombinedSecondaryVertexESProducer",
    useTrackWeights = cms.bool(True),
    pseudoMultiplicityMin = cms.uint32(2),
    correctVertexMass = cms.bool(True),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    charmCut = cms.double(1.5),
    vertexFlip = cms.bool(False),
    minimumTrackWeight = cms.double(0.5),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    trackMultiplicityMin = cms.uint32(3),
    trackPseudoSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSort = cms.string('sip2dSig'),
    trackFlip = cms.bool(False),
    calibrationRecords = cms.vstring('CombinedSVMVARecoVertex', 
        'CombinedSVMVAPseudoVertex', 
        'CombinedSVMVANoVertex'),
    useCategories = cms.bool(True),
    categoryVariableName = cms.string('vertexCategory')
)


process.compositeTrajectoryFilterESProducer = cms.ESProducer("CompositeTrajectoryFilterESProducer",
    filterNames = cms.vstring(),
    ComponentName = cms.string('compositeTrajectoryFilter')
)


process.cosmicsNavigationSchoolESProducer = cms.ESProducer("SkippingLayerCosmicNavigationSchoolESProducer",
    noPXB = cms.bool(False),
    noTID = cms.bool(False),
    noPXF = cms.bool(False),
    noTIB = cms.bool(False),
    ComponentName = cms.string('CosmicNavigationSchool'),
    allSelf = cms.bool(True),
    noTEC = cms.bool(False),
    noTOB = cms.bool(False),
    selfSearch = cms.bool(True)
)


process.ecalDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('EcalDetIdAssociator'),
    etaBinSize = cms.double(0.02),
    nEta = cms.int32(300),
    nPhi = cms.int32(360)
)


process.ecalSeverityLevel = cms.ESProducer("EcalSeverityLevelESProducer",
    dbstatusMask = cms.vuint32(1, 2046, 0, 0, 0, 
        64512),
    timeThresh = cms.double(2.0),
    flagMask = cms.vuint32(1, 34, 896, 4, 49152, 
        6232)
)


process.electronChi2 = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    MaxChi2 = cms.double(100.0),
    nSigma = cms.double(3.0),
    ComponentName = cms.string('electronChi2')
)


process.fakeForIdealAlignment = cms.ESProducer("FakeAlignmentProducer",
    appendToDataLabel = cms.string('fakeForIdeal')
)


process.fifthCkfInOutTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minPt = cms.double(0.1),
        minHitsMinPt = cms.int32(3),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(0),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        minimumNumberOfHits = cms.int32(4),
        nSigmaMinPt = cms.double(5.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('fifthCkfInOutTrajectoryFilter')
)


process.fifthCkfTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    bestHitOnly = cms.bool(True),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('fifthCkfTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('fifthCkfTrajectoryBuilder'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    inOutTrajectoryFilterName = cms.string('fifthCkfInOutTrajectoryFilter'),
    MeasurementTrackerName = cms.string('fifthMeasurementTracker'),
    minNrOfHitsForRebuild = cms.int32(4),
    lockHits = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(False),
    requireSeedHitsInRebuild = cms.bool(True),
    useSameTrajFilter = cms.bool(False),
    estimator = cms.string('Chi2'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.fifthCkfTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minPt = cms.double(0.1),
        minHitsMinPt = cms.int32(3),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(0),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        minimumNumberOfHits = cms.int32(6),
        nSigmaMinPt = cms.double(5.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('fifthCkfTrajectoryFilter')
)


process.fifthFittingSmootherWithOutlierRejection = cms.ESProducer("KFFittingSmootherESProducer",
    EstimateCut = cms.double(30),
    LogPixelProbabilityCut = cms.double(-14.0),
    Fitter = cms.string('fifthRKFitter'),
    MinNumberOfHits = cms.int32(8),
    Smoother = cms.string('fifthRKSmoother'),
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('fifthFittingSmootherWithOutlierRejection'),
    NoInvalidHitsBeginEnd = cms.bool(True),
    RejectTracks = cms.bool(True)
)


process.fifthMeasurementTracker = cms.ESProducer("MeasurementTrackerESProducer",
    StripCPE = cms.string('StripCPEfromTrackAngle'),
    inactivePixelDetectorLabels = cms.VInputTag(),
    PixelCPE = cms.string('PixelCPEGeneric'),
    stripLazyGetterProducer = cms.string(''),
    OnDemand = cms.bool(False),
    Regional = cms.bool(False),
    UsePixelModuleQualityDB = cms.bool(True),
    pixelClusterProducer = cms.string('fifthClusters'),
    switchOffPixelsIfEmpty = cms.bool(True),
    inactiveStripDetectorLabels = cms.VInputTag(cms.InputTag("siStripDigis")),
    MaskBadAPVFibers = cms.bool(True),
    UseStripStripQualityDB = cms.bool(True),
    UsePixelROCQualityDB = cms.bool(True),
    DebugPixelROCQualityDB = cms.untracked.bool(False),
    UseStripAPVFiberQualityDB = cms.bool(True),
    stripClusterProducer = cms.string('fifthClusters'),
    DebugStripAPVFiberQualityDB = cms.untracked.bool(False),
    DebugStripStripQualityDB = cms.untracked.bool(False),
    SiStripQualityLabel = cms.string(''),
    badStripCuts = cms.PSet(
        TOB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TID = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TEC = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TIB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        )
    ),
    DebugStripModuleQualityDB = cms.untracked.bool(False),
    ComponentName = cms.string('fifthMeasurementTracker'),
    DebugPixelModuleQualityDB = cms.untracked.bool(False),
    HitMatcher = cms.string('StandardMatcher'),
    UseStripModuleQualityDB = cms.bool(True)
)


process.fifthRKTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    ComponentName = cms.string('fifthRKFitter'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    minHits = cms.int32(8)
)


process.fifthRKTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(8),
    ComponentName = cms.string('fifthRKSmoother'),
    Estimator = cms.string('Chi2'),
    Updator = cms.string('KFUpdator'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.fifthlayerpairs = cms.ESProducer("SeedingLayersESProducer",
    TOB = cms.PSet(
        matchedRecHits = cms.InputTag("fifthStripRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    ComponentName = cms.string('fifthlayerPairs'),
    layerList = cms.vstring('TOB1+TOB2', 
        'TOB1+TEC1_pos', 
        'TOB1+TEC1_neg', 
        'TEC1_pos+TEC2_pos', 
        'TEC2_pos+TEC3_pos', 
        'TEC3_pos+TEC4_pos', 
        'TEC4_pos+TEC5_pos', 
        'TEC5_pos+TEC6_pos', 
        'TEC6_pos+TEC7_pos', 
        'TEC1_neg+TEC2_neg', 
        'TEC2_neg+TEC3_neg', 
        'TEC3_neg+TEC4_neg', 
        'TEC4_neg+TEC5_neg', 
        'TEC5_neg+TEC6_neg', 
        'TEC6_neg+TEC7_neg'),
    TEC = cms.PSet(
        matchedRecHits = cms.InputTag("fifthStripRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        minRing = cms.int32(5),
        maxRing = cms.int32(5)
    )
)


process.fourthCkfTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    bestHitOnly = cms.bool(True),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('fourthCkfTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('fourthCkfTrajectoryBuilder'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    MeasurementTrackerName = cms.string('fourthMeasurementTracker'),
    minNrOfHitsForRebuild = cms.int32(4),
    lockHits = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    requireSeedHitsInRebuild = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    estimator = cms.string('Chi2'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.fourthCkfTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minPt = cms.double(0.1),
        minHitsMinPt = cms.int32(3),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(0),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        minimumNumberOfHits = cms.int32(6),
        nSigmaMinPt = cms.double(5.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('fourthCkfTrajectoryFilter')
)


process.fourthMeasurementTracker = cms.ESProducer("MeasurementTrackerESProducer",
    StripCPE = cms.string('StripCPEfromTrackAngle'),
    inactivePixelDetectorLabels = cms.VInputTag(),
    PixelCPE = cms.string('PixelCPEGeneric'),
    stripLazyGetterProducer = cms.string(''),
    OnDemand = cms.bool(False),
    Regional = cms.bool(False),
    UsePixelModuleQualityDB = cms.bool(True),
    pixelClusterProducer = cms.string('fourthClusters'),
    switchOffPixelsIfEmpty = cms.bool(True),
    inactiveStripDetectorLabels = cms.VInputTag(cms.InputTag("siStripDigis")),
    MaskBadAPVFibers = cms.bool(True),
    UseStripStripQualityDB = cms.bool(True),
    UsePixelROCQualityDB = cms.bool(True),
    DebugPixelROCQualityDB = cms.untracked.bool(False),
    UseStripAPVFiberQualityDB = cms.bool(True),
    stripClusterProducer = cms.string('fourthClusters'),
    DebugStripAPVFiberQualityDB = cms.untracked.bool(False),
    DebugStripStripQualityDB = cms.untracked.bool(False),
    SiStripQualityLabel = cms.string(''),
    badStripCuts = cms.PSet(
        TOB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TID = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TEC = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TIB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        )
    ),
    DebugStripModuleQualityDB = cms.untracked.bool(False),
    ComponentName = cms.string('fourthMeasurementTracker'),
    DebugPixelModuleQualityDB = cms.untracked.bool(False),
    HitMatcher = cms.string('StandardMatcher'),
    UseStripModuleQualityDB = cms.bool(True)
)


process.fourthlayerpairs = cms.ESProducer("SeedingLayersESProducer",
    TID = cms.PSet(
        matchedRecHits = cms.InputTag("fourthStripRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        minRing = cms.int32(1),
        maxRing = cms.int32(2)
    ),
    ComponentName = cms.string('FourthLayerPairs'),
    layerList = cms.vstring('TIB1+TIB2', 
        'TIB1+TID1_pos', 
        'TIB1+TID1_neg', 
        'TID1_pos+TID2_pos', 
        'TID2_pos+TID3_pos', 
        'TID3_pos+TEC1_pos', 
        'TEC1_pos+TEC2_pos', 
        'TEC2_pos+TEC3_pos', 
        'TEC3_pos+TEC4_pos', 
        'TEC3_pos+TEC5_pos', 
        'TEC4_pos+TEC5_pos', 
        'TID1_neg+TID2_neg', 
        'TID2_neg+TID3_neg', 
        'TID3_neg+TEC1_neg', 
        'TEC1_neg+TEC2_neg', 
        'TEC2_neg+TEC3_neg', 
        'TEC3_neg+TEC4_neg', 
        'TEC3_neg+TEC5_neg', 
        'TEC4_neg+TEC5_neg'),
    TEC = cms.PSet(
        matchedRecHits = cms.InputTag("fourthStripRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        minRing = cms.int32(1),
        maxRing = cms.int32(2)
    ),
    TIB = cms.PSet(
        matchedRecHits = cms.InputTag("fourthStripRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    )
)


process.fwdAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    MaxDPhi = cms.double(1.6),
    ComponentName = cms.string('fwdAnalyticalPropagator'),
    PropagationDirection = cms.string('alongMomentum')
)


process.fwdElectronPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('fwdElectronPropagator'),
    Mass = cms.double(0.000511),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.fwdGsfElectronPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('alongMomentum'),
    ComponentName = cms.string('fwdGsfElectronPropagator'),
    Mass = cms.double(0.000511),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.ghostTrack = cms.ESProducer("GhostTrackESProducer",
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    charmCut = cms.double(1.5),
    trackSort = cms.string('sip2dSig'),
    minimumTrackWeight = cms.double(0.5),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    calibrationRecords = cms.vstring('GhostTrackRecoVertex', 
        'GhostTrackPseudoVertex', 
        'GhostTrackNoVertex'),
    useCategories = cms.bool(True),
    categoryVariableName = cms.string('vertexCategory')
)


process.hcalDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('HcalDetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(70),
    nPhi = cms.int32(72)
)


process.hcalRecAlgos = cms.ESProducer("HcalRecAlgoESProducer",
    RecoveredRecHitBits = cms.vstring('TimingAddedBit', 
        'TimingSubtractedBit'),
    SeverityLevels = cms.VPSet(cms.PSet(
        RecHitFlags = cms.vstring(''),
        ChannelStatus = cms.vstring(''),
        Level = cms.int32(0)
    ), 
        cms.PSet(
            RecHitFlags = cms.vstring(''),
            ChannelStatus = cms.vstring('HcalCellCaloTowerProb'),
            Level = cms.int32(1)
        ), 
        cms.PSet(
            RecHitFlags = cms.vstring('HSCP_R1R2', 
                'HSCP_FracLeader', 
                'HSCP_OuterEnergy', 
                'HSCP_ExpFit', 
                'ADCSaturationBit', 
                'HBHEIsolatedNoise'),
            ChannelStatus = cms.vstring(''),
            Level = cms.int32(5)
        ), 
        cms.PSet(
            RecHitFlags = cms.vstring('HBHEHpdHitMultiplicity', 
                'HBHEPulseShape', 
                'HOBit', 
                'HFDigiTime', 
                'HFInTimeWindow', 
                'HFS8S1Ratio', 
                'ZDCBit', 
                'CalibrationBit', 
                'TimingErrorBit'),
            ChannelStatus = cms.vstring(''),
            Level = cms.int32(8)
        ), 
        cms.PSet(
            RecHitFlags = cms.vstring('HFLongShort'),
            ChannelStatus = cms.vstring(''),
            Level = cms.int32(11)
        ), 
        cms.PSet(
            RecHitFlags = cms.vstring(''),
            ChannelStatus = cms.vstring('HcalCellCaloTowerMask'),
            Level = cms.int32(12)
        ), 
        cms.PSet(
            RecHitFlags = cms.vstring(''),
            ChannelStatus = cms.vstring('HcalCellHot'),
            Level = cms.int32(15)
        ), 
        cms.PSet(
            RecHitFlags = cms.vstring(''),
            ChannelStatus = cms.vstring('HcalCellOff', 
                'HcalCellDead'),
            Level = cms.int32(20)
        )),
    DropChannelStatusBits = cms.vstring('HcalCellMask', 
        'HcalCellOff', 
        'HcalCellDead')
)


process.hcal_db_producer = cms.ESProducer("HcalDbProducer",
    file = cms.untracked.string(''),
    dump = cms.untracked.vstring('')
)


process.hoDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('HODetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(30),
    nPhi = cms.int32(72)
)


process.idealForDigiCSCGeometry = cms.ESProducer("CSCGeometryESModule",
    appendToDataLabel = cms.string('idealForDigi'),
    useDDD = cms.bool(False),
    debugV = cms.untracked.bool(False),
    useGangedStripsInME1a = cms.bool(True),
    alignmentsLabel = cms.string('fakeForIdeal'),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True),
    useCentreTIOffsets = cms.bool(False),
    applyAlignment = cms.bool(False)
)


process.idealForDigiDTGeometry = cms.ESProducer("DTGeometryESModule",
    appendToDataLabel = cms.string('idealForDigi'),
    fromDDD = cms.bool(False),
    applyAlignment = cms.bool(False),
    alignmentsLabel = cms.string('fakeForIdeal')
)


process.idealForDigiTrackerGeometry = cms.ESProducer("TrackerDigiGeometryESModule",
    appendToDataLabel = cms.string('idealForDigi'),
    fromDDD = cms.bool(False),
    applyAlignment = cms.bool(False),
    alignmentsLabel = cms.string('fakeForIdeal')
)


process.impactParameterMVAComputer = cms.ESProducer("GenericMVAJetTagESProducer",
    useCategories = cms.bool(False),
    calibrationRecord = cms.string('ImpactParameterMVA')
)


process.jetBProbability = cms.ESProducer("JetBProbabilityESProducer",
    deltaR = cms.double(-1.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    trackIpSign = cms.int32(1),
    minimumProbability = cms.double(0.005),
    numberOfBTracks = cms.uint32(4),
    maximumDecayLength = cms.double(5.0)
)


process.jetProbability = cms.ESProducer("JetProbabilityESProducer",
    deltaR = cms.double(0.3),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    trackIpSign = cms.int32(1),
    minimumProbability = cms.double(0.005),
    maximumDecayLength = cms.double(5.0)
)


process.mixedlayerpairs = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedPairs'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    layerList = cms.vstring('BPix1+BPix2', 
        'BPix1+BPix3', 
        'BPix2+BPix3', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix1_neg', 
        'BPix1+FPix2_pos', 
        'BPix1+FPix2_neg', 
        'BPix2+FPix1_pos', 
        'BPix2+FPix1_neg', 
        'BPix2+FPix2_pos', 
        'BPix2+FPix2_neg', 
        'FPix1_pos+FPix2_pos', 
        'FPix1_neg+FPix2_neg', 
        'FPix2_pos+TEC1_pos', 
        'FPix2_pos+TEC2_pos', 
        'TEC1_pos+TEC2_pos', 
        'TEC2_pos+TEC3_pos', 
        'FPix2_neg+TEC1_neg', 
        'FPix2_neg+TEC2_neg', 
        'TEC1_neg+TEC2_neg', 
        'TEC2_neg+TEC3_neg'),
    TEC = cms.PSet(
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        minRing = cms.int32(1),
        maxRing = cms.int32(1)
    ),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedPairs'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    ComponentName = cms.string('MixedLayerPairs')
)


process.mixedlayertriplets = cms.ESProducer("SeedingLayersESProducer",
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg', 
        'BPix1+BPix2+TIB1', 
        'BPix1+BPix3+TIB1', 
        'BPix2+BPix3+TIB1', 
        'BPix1+FPix1_pos+TID1_pos', 
        'BPix1+FPix1_neg+TID1_neg', 
        'BPix1+FPix1_pos+TID2_pos', 
        'BPix1+FPix1_neg+TID2_neg', 
        'FPix1_pos+FPix2_pos+TEC1_pos', 
        'FPix1_neg+FPix2_neg+TEC1_neg', 
        'FPix1_pos+FPix2_pos+TEC2_pos', 
        'FPix1_neg+FPix2_neg+TEC2_neg'),
    ComponentName = cms.string('MixedLayerTriplets'),
    TEC = cms.PSet(
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedTriplets'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    TID = cms.PSet(
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedTriplets'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    TIB = cms.PSet(
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    )
)


process.muonAssociatorByHitsESProducerNoSimHits = cms.ESProducer("MuonAssociatorESProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    dumpDT = cms.bool(False),
    CSCsimHitsTag = cms.InputTag(""),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(True),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag(""),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(True),
    RPCsimhitsTag = cms.InputTag(""),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(False),
    UseMuon = cms.bool(True),
    ComponentName = cms.string('muonAssociatorByHits_NoSimHits')
)


process.muonAssociatorByHitsESProducerNoSimHits_glb = cms.ESProducer("MuonAssociatorESProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    dumpDT = cms.bool(False),
    CSCsimHitsTag = cms.InputTag(""),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(True),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag(""),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    ComponentName = cms.string('muonAssociatorByHits_NoSimHits_global'),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(True),
    RPCsimhitsTag = cms.InputTag(""),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(True)
)


process.muonAssociatorByHitsESProducerNoSimHits_glbPF = cms.ESProducer("MuonAssociatorESProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    dumpDT = cms.bool(False),
    CSCsimHitsTag = cms.InputTag(""),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(True),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag(""),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    ComponentName = cms.string('muonAssociatorByHits_NoSimHits_globalPF'),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(True),
    RPCsimhitsTag = cms.InputTag(""),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(True)
)


process.muonAssociatorByHitsESProducerNoSimHits_sta = cms.ESProducer("MuonAssociatorESProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    dumpDT = cms.bool(False),
    CSCsimHitsTag = cms.InputTag(""),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(True),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag(""),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    ComponentName = cms.string('muonAssociatorByHits_NoSimHits_standalone'),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(True),
    RPCsimhitsTag = cms.InputTag(""),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(False),
    UseMuon = cms.bool(True)
)


process.muonAssociatorByHitsESProducerNoSimHits_staPF = cms.ESProducer("MuonAssociatorESProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    dumpDT = cms.bool(False),
    CSCsimHitsTag = cms.InputTag(""),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(True),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag(""),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    ComponentName = cms.string('muonAssociatorByHits_NoSimHits_standalonePF'),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(True),
    RPCsimhitsTag = cms.InputTag(""),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(False),
    UseMuon = cms.bool(True)
)


process.muonAssociatorByHitsESProducerNoSimHits_trk = cms.ESProducer("MuonAssociatorESProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    dumpDT = cms.bool(False),
    CSCsimHitsTag = cms.InputTag(""),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(True),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag(""),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    ComponentName = cms.string('muonAssociatorByHits_NoSimHits_tracker'),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(True),
    RPCsimhitsTag = cms.InputTag(""),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(False)
)


process.muonAssociatorByHitsESProducerNoSimHits_trkPF = cms.ESProducer("MuonAssociatorESProducer",
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    dumpDT = cms.bool(False),
    CSCsimHitsTag = cms.InputTag(""),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(True),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag(""),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    ComponentName = cms.string('muonAssociatorByHits_NoSimHits_trackerPF'),
    UsePixels = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(True),
    RPCsimhitsTag = cms.InputTag(""),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    UseTracker = cms.bool(True),
    UseMuon = cms.bool(False)
)


process.muonDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('MuonDetIdAssociator'),
    includeBadChambers = cms.bool(False),
    etaBinSize = cms.double(0.125),
    nEta = cms.int32(48),
    nPhi = cms.int32(48)
)


process.myTTRHBuilderWithoutAngle = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('Fake'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPEGeneric'),
    ComponentName = cms.string('PixelTTRHBuilderWithoutAngle')
)


process.myTTRHBuilderWithoutAngle4MixedPairs = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('Fake'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPEGeneric'),
    ComponentName = cms.string('TTRHBuilderWithoutAngle4MixedPairs')
)


process.myTTRHBuilderWithoutAngle4MixedTriplets = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('Fake'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPEGeneric'),
    ComponentName = cms.string('TTRHBuilderWithoutAngle4MixedTriplets')
)


process.myTTRHBuilderWithoutAngle4PixelPairs = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('Fake'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPEGeneric'),
    ComponentName = cms.string('TTRHBuilderWithoutAngle4PixelPairs')
)


process.myTTRHBuilderWithoutAngle4PixelTriplets = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('Fake'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPEGeneric'),
    ComponentName = cms.string('TTRHBuilderWithoutAngle4PixelTriplets')
)


process.navigationSchoolESProducer = cms.ESProducer("NavigationSchoolESProducer",
    ComponentName = cms.string('SimpleNavigationSchool')
)


process.newMeasurementTracker = cms.ESProducer("MeasurementTrackerESProducer",
    StripCPE = cms.string('StripCPEfromTrackAngle'),
    inactivePixelDetectorLabels = cms.VInputTag(),
    PixelCPE = cms.string('PixelCPEGeneric'),
    stripLazyGetterProducer = cms.string(''),
    OnDemand = cms.bool(False),
    Regional = cms.bool(False),
    UsePixelModuleQualityDB = cms.bool(True),
    pixelClusterProducer = cms.string('newClusters'),
    switchOffPixelsIfEmpty = cms.bool(True),
    inactiveStripDetectorLabels = cms.VInputTag(cms.InputTag("siStripDigis")),
    MaskBadAPVFibers = cms.bool(True),
    UseStripStripQualityDB = cms.bool(True),
    UsePixelROCQualityDB = cms.bool(True),
    DebugPixelROCQualityDB = cms.untracked.bool(False),
    UseStripAPVFiberQualityDB = cms.bool(True),
    stripClusterProducer = cms.string('newClusters'),
    DebugStripAPVFiberQualityDB = cms.untracked.bool(False),
    DebugStripStripQualityDB = cms.untracked.bool(False),
    SiStripQualityLabel = cms.string(''),
    badStripCuts = cms.PSet(
        TOB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TID = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TEC = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TIB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        )
    ),
    DebugStripModuleQualityDB = cms.untracked.bool(False),
    ComponentName = cms.string('newMeasurementTracker'),
    DebugPixelModuleQualityDB = cms.untracked.bool(False),
    HitMatcher = cms.string('StandardMatcher'),
    UseStripModuleQualityDB = cms.bool(True)
)


process.newMixedLayerPairs = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedPairs'),
        HitProducer = cms.string('newPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    layerList = cms.vstring('BPix1+BPix2', 
        'BPix1+BPix3', 
        'BPix2+BPix3', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix1_neg', 
        'BPix1+FPix2_pos', 
        'BPix1+FPix2_neg', 
        'BPix2+FPix1_pos', 
        'BPix2+FPix1_neg', 
        'BPix2+FPix2_pos', 
        'BPix2+FPix2_neg', 
        'FPix1_pos+FPix2_pos', 
        'FPix1_neg+FPix2_neg', 
        'FPix2_pos+TEC1_pos', 
        'FPix2_pos+TEC2_pos', 
        'TEC1_pos+TEC2_pos', 
        'TEC2_pos+TEC3_pos', 
        'FPix2_neg+TEC1_neg', 
        'FPix2_neg+TEC2_neg', 
        'TEC1_neg+TEC2_neg', 
        'TEC2_neg+TEC3_neg'),
    TEC = cms.PSet(
        matchedRecHits = cms.InputTag("newStripRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        minRing = cms.int32(1),
        maxRing = cms.int32(1)
    ),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedPairs'),
        HitProducer = cms.string('newPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    ComponentName = cms.string('newMixedLayerPairs')
)


process.newTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    bestHitOnly = cms.bool(True),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('newTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('newTrajectoryBuilder'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    MeasurementTrackerName = cms.string(''),
    minNrOfHitsForRebuild = cms.int32(5),
    lockHits = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    requireSeedHitsInRebuild = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    estimator = cms.string('Chi2'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.newTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minPt = cms.double(0.6),
        minHitsMinPt = cms.int32(3),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(1),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        minimumNumberOfHits = cms.int32(3),
        nSigmaMinPt = cms.double(5.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('newTrajectoryFilter')
)


process.oppositeToMomElePropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    PropagationDirection = cms.string('oppositeToMomentum'),
    ComponentName = cms.string('oppositeToMomElePropagator'),
    Mass = cms.double(0.000511),
    ptMin = cms.double(-1.0),
    MaxDPhi = cms.double(1.6),
    useRungeKutta = cms.bool(False)
)


process.pixelLessLayerPairs4PixelLessTracking = cms.ESProducer("SeedingLayersESProducer",
    TIB3 = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched")
    ),
    TIB2 = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched")
    ),
    TIB1 = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched")
    ),
    TID1 = cms.PSet(
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched"),
        maxRing = cms.int32(3),
        minRing = cms.int32(1)
    ),
    TID3 = cms.PSet(
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched"),
        maxRing = cms.int32(2),
        minRing = cms.int32(1)
    ),
    TID2 = cms.PSet(
        useSimpleRphiHitsCleaner = cms.bool(False),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched"),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched"),
        maxRing = cms.int32(3),
        minRing = cms.int32(1)
    ),
    ComponentName = cms.string('pixelLessLayerPairs4PixelLessTracking'),
    TEC = cms.PSet(
        useSimpleRphiHitsCleaner = cms.bool(False),
        minRing = cms.int32(1),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHitUnmatched"),
        maxRing = cms.int32(2),
        stereoRecHits = cms.InputTag("siStripMatchedRecHits","stereoRecHitUnmatched")
    ),
    layerList = cms.vstring('TIB1+TIB2', 
        'TIB1+TIB3', 
        'TIB2+TIB3', 
        'TIB1+TID1_pos', 
        'TIB1+TID1_neg', 
        'TIB2+TID1_pos', 
        'TIB2+TID1_neg', 
        'TIB1+TID2_pos', 
        'TIB1+TID2_neg', 
        'TID1_pos+TID2_pos', 
        'TID2_pos+TID3_pos', 
        'TID3_pos+TEC2_pos', 
        'TEC1_pos+TEC2_pos', 
        'TEC2_pos+TEC3_pos', 
        'TID1_neg+TID2_neg', 
        'TID2_neg+TID3_neg', 
        'TID3_neg+TEC2_neg', 
        'TEC1_neg+TEC2_neg', 
        'TEC2_neg+TEC3_neg')
)


process.pixellayerpairs = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    layerList = cms.vstring('BPix1+BPix2', 
        'BPix1+BPix3', 
        'BPix2+BPix3', 
        'BPix1+FPix1_pos', 
        'BPix1+FPix1_neg', 
        'BPix1+FPix2_pos', 
        'BPix1+FPix2_neg', 
        'BPix2+FPix1_pos', 
        'BPix2+FPix1_neg', 
        'BPix2+FPix2_pos', 
        'BPix2+FPix2_neg', 
        'FPix1_pos+FPix2_pos', 
        'FPix1_neg+FPix2_neg'),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    ComponentName = cms.string('PixelLayerPairs')
)


process.pixellayertriplets = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg'),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
        HitProducer = cms.string('siPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    ComponentName = cms.string('PixelLayerTriplets')
)


process.preshowerDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('PreshowerDetIdAssociator'),
    etaBinSize = cms.double(0.1),
    nEta = cms.int32(60),
    nPhi = cms.int32(30)
)


process.rings = cms.ESProducer("RingMakerESProducer",
    DumpDetIds = cms.untracked.bool(False),
    ComponentName = cms.string(''),
    RingAsciiFileName = cms.untracked.string('rings.dat'),
    DetIdsDumpFileName = cms.untracked.string('tracker_detids.dat'),
    WriteOutRingsToAsciiFile = cms.untracked.bool(False),
    Configuration = cms.untracked.string('FULL')
)


process.roads = cms.ESProducer("RoadMapMakerESProducer",
    GeometryStructure = cms.string('FullDetector'),
    ComponentName = cms.string(''),
    RingsLabel = cms.string(''),
    WriteOutRoadMapToAsciiFile = cms.untracked.bool(False),
    SeedingType = cms.string('FourRingSeeds'),
    RoadMapAsciiFile = cms.untracked.string('roads.dat')
)


process.secCkfTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    bestHitOnly = cms.bool(True),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('secCkfTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('secCkfTrajectoryBuilder'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    MeasurementTrackerName = cms.string('secMeasurementTracker'),
    minNrOfHitsForRebuild = cms.int32(5),
    lockHits = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    requireSeedHitsInRebuild = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    estimator = cms.string('Chi2'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.secCkfTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minPt = cms.double(0.075),
        minHitsMinPt = cms.int32(3),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(1),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        minimumNumberOfHits = cms.int32(3),
        nSigmaMinPt = cms.double(5.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('secCkfTrajectoryFilter')
)


process.secMeasurementTracker = cms.ESProducer("MeasurementTrackerESProducer",
    StripCPE = cms.string('StripCPEfromTrackAngle'),
    inactivePixelDetectorLabels = cms.VInputTag(),
    PixelCPE = cms.string('PixelCPEGeneric'),
    stripLazyGetterProducer = cms.string(''),
    OnDemand = cms.bool(False),
    Regional = cms.bool(False),
    UsePixelModuleQualityDB = cms.bool(True),
    pixelClusterProducer = cms.string('secClusters'),
    switchOffPixelsIfEmpty = cms.bool(True),
    inactiveStripDetectorLabels = cms.VInputTag(cms.InputTag("siStripDigis")),
    MaskBadAPVFibers = cms.bool(True),
    UseStripStripQualityDB = cms.bool(True),
    UsePixelROCQualityDB = cms.bool(True),
    DebugPixelROCQualityDB = cms.untracked.bool(False),
    UseStripAPVFiberQualityDB = cms.bool(True),
    stripClusterProducer = cms.string('secClusters'),
    DebugStripAPVFiberQualityDB = cms.untracked.bool(False),
    DebugStripStripQualityDB = cms.untracked.bool(False),
    SiStripQualityLabel = cms.string(''),
    badStripCuts = cms.PSet(
        TOB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TID = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TEC = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TIB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        )
    ),
    DebugStripModuleQualityDB = cms.untracked.bool(False),
    ComponentName = cms.string('secMeasurementTracker'),
    DebugPixelModuleQualityDB = cms.untracked.bool(False),
    HitMatcher = cms.string('StandardMatcher'),
    UseStripModuleQualityDB = cms.bool(True)
)


process.seclayertriplets = cms.ESProducer("SeedingLayersESProducer",
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
        HitProducer = cms.string('secPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix1+FPix1_pos+FPix2_pos', 
        'BPix1+FPix1_neg+FPix2_neg'),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
        HitProducer = cms.string('secPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    ComponentName = cms.string('SecLayerTriplets')
)


process.siPixelTemplateDBObjectESProducer = cms.ESProducer("SiPixelTemplateDBObjectESProducer")


process.siStripGainESProducer = cms.ESProducer("SiStripGainESProducer",
    printDebug = cms.untracked.bool(False),
    appendToDataLabel = cms.string(''),
    APVGain = cms.VPSet(cms.PSet(
        Record = cms.string('SiStripApvGainRcd'),
        NormalizationFactor = cms.untracked.double(1.0),
        Label = cms.untracked.string('')
    ), 
        cms.PSet(
            Record = cms.string('SiStripApvGain2Rcd'),
            NormalizationFactor = cms.untracked.double(1.0),
            Label = cms.untracked.string('')
        )),
    AutomaticNormalization = cms.bool(False)
)


process.siStripQualityESProducer = cms.ESProducer("SiStripQualityESProducer",
    appendToDataLabel = cms.string(''),
    PrintDebugOutput = cms.bool(False),
    ThresholdForReducedGranularity = cms.double(0.3),
    UseEmptyRunInfo = cms.bool(False),
    ReduceGranularity = cms.bool(False),
    ListOfRecordToMerge = cms.VPSet(cms.PSet(
        record = cms.string('SiStripDetVOffRcd'),
        tag = cms.string('')
    ), 
        cms.PSet(
            record = cms.string('SiStripDetCablingRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('RunInfoRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadChannelRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadFiberRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadModuleRcd'),
            tag = cms.string('')
        ), 
        cms.PSet(
            record = cms.string('SiStripBadStripRcd'),
            tag = cms.string('')
        ))
)


process.simpleSecondaryVertex2Trk = cms.ESProducer("SimpleSecondaryVertexESProducer",
    minTracks = cms.uint32(2),
    unBoost = cms.bool(False),
    useSignificance = cms.bool(True),
    use3d = cms.bool(True)
)


process.simpleSecondaryVertex3Trk = cms.ESProducer("SimpleSecondaryVertexESProducer",
    minTracks = cms.uint32(3),
    unBoost = cms.bool(False),
    useSignificance = cms.bool(True),
    use3d = cms.bool(True)
)


process.sistripconn = cms.ESProducer("SiStripConnectivity")


process.softElectron = cms.ESProducer("ElectronTaggerESProducer",
    ipSign = cms.string('any')
)


process.softLeptonByIP3d = cms.ESProducer("LeptonTaggerByIPESProducer",
    use3d = cms.bool(True),
    ipSign = cms.string('any')
)


process.softLeptonByPt = cms.ESProducer("LeptonTaggerByPtESProducer",
    ipSign = cms.string('any')
)


process.softMuon = cms.ESProducer("MuonTaggerESProducer",
    ipSign = cms.string('any')
)


process.softMuonNoIP = cms.ESProducer("MuonTaggerNoIPESProducer",
    ipSign = cms.string('any')
)


process.stepOneCkfTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    bestHitOnly = cms.bool(True),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    trajectoryFilterName = cms.string('stepOneTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('stepOneCkfTrajectoryBuilder'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    MeasurementTrackerName = cms.string('newMeasurementTracker'),
    minNrOfHitsForRebuild = cms.int32(5),
    lockHits = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    requireSeedHitsInRebuild = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    estimator = cms.string('Chi2'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.stepOneTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minPt = cms.double(0.4),
        minHitsMinPt = cms.int32(3),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(1),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        minimumNumberOfHits = cms.int32(3),
        nSigmaMinPt = cms.double(5.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('stepOneTrajectoryFilter')
)


process.templates = cms.ESProducer("PixelCPETemplateRecoESProducer",
    DoCosmics = cms.bool(False),
    LoadTemplatesFromDB = cms.bool(True),
    ComponentName = cms.string('PixelCPETemplateReco'),
    Alpha2Order = cms.bool(True),
    ClusterProbComputationFlag = cms.int32(0),
    speed = cms.int32(-2),
    UseClusterSplitter = cms.bool(False)
)


process.thCkfTrajectoryBuilder = cms.ESProducer("GroupedCkfTrajectoryBuilderESProducer",
    bestHitOnly = cms.bool(True),
    propagatorAlong = cms.string('PropagatorWithMaterialPtMin01'),
    trajectoryFilterName = cms.string('thCkfTrajectoryFilter'),
    maxCand = cms.int32(5),
    ComponentName = cms.string('thCkfTrajectoryBuilder'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOppositePtMin01'),
    inOutTrajectoryFilterName = cms.string('ckfBaseTrajectoryFilter'),
    MeasurementTrackerName = cms.string('thMeasurementTracker'),
    minNrOfHitsForRebuild = cms.int32(5),
    lockHits = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    foundHitBonus = cms.double(5.0),
    updator = cms.string('KFUpdator'),
    alwaysUseInvalidHits = cms.bool(True),
    requireSeedHitsInRebuild = cms.bool(True),
    useSameTrajFilter = cms.bool(True),
    estimator = cms.string('Chi2'),
    intermediateCleaning = cms.bool(True),
    lostHitPenalty = cms.double(30.0)
)


process.thCkfTrajectoryFilter = cms.ESProducer("TrajectoryFilterESProducer",
    filterPset = cms.PSet(
        minPt = cms.double(0.1),
        minHitsMinPt = cms.int32(3),
        ComponentType = cms.string('CkfBaseTrajectoryFilter'),
        maxLostHits = cms.int32(0),
        maxNumberOfHits = cms.int32(100),
        maxConsecLostHits = cms.int32(1),
        minimumNumberOfHits = cms.int32(3),
        nSigmaMinPt = cms.double(5.0),
        chargeSignificance = cms.double(-1.0)
    ),
    ComponentName = cms.string('thCkfTrajectoryFilter')
)


process.thMeasurementTracker = cms.ESProducer("MeasurementTrackerESProducer",
    StripCPE = cms.string('StripCPEfromTrackAngle'),
    inactivePixelDetectorLabels = cms.VInputTag(),
    PixelCPE = cms.string('PixelCPEGeneric'),
    stripLazyGetterProducer = cms.string(''),
    OnDemand = cms.bool(False),
    Regional = cms.bool(False),
    UsePixelModuleQualityDB = cms.bool(True),
    pixelClusterProducer = cms.string('thClusters'),
    switchOffPixelsIfEmpty = cms.bool(True),
    inactiveStripDetectorLabels = cms.VInputTag(cms.InputTag("siStripDigis")),
    MaskBadAPVFibers = cms.bool(True),
    UseStripStripQualityDB = cms.bool(True),
    UsePixelROCQualityDB = cms.bool(True),
    DebugPixelROCQualityDB = cms.untracked.bool(False),
    UseStripAPVFiberQualityDB = cms.bool(True),
    stripClusterProducer = cms.string('thClusters'),
    DebugStripAPVFiberQualityDB = cms.untracked.bool(False),
    DebugStripStripQualityDB = cms.untracked.bool(False),
    SiStripQualityLabel = cms.string(''),
    badStripCuts = cms.PSet(
        TOB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TID = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TEC = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        ),
        TIB = cms.PSet(
            maxConsecutiveBad = cms.uint32(2),
            maxBad = cms.uint32(4)
        )
    ),
    DebugStripModuleQualityDB = cms.untracked.bool(False),
    ComponentName = cms.string('thMeasurementTracker'),
    DebugPixelModuleQualityDB = cms.untracked.bool(False),
    HitMatcher = cms.string('StandardMatcher'),
    UseStripModuleQualityDB = cms.bool(True)
)


process.thlayertripletsa = cms.ESProducer("SeedingLayersESProducer",
    layerList = cms.vstring('BPix1+BPix2+BPix3', 
        'BPix1+BPix2+FPix1_pos', 
        'BPix1+BPix2+FPix1_neg', 
        'BPix3+FPix1_pos+TID1_pos', 
        'BPix3+FPix1_neg+TID1_neg', 
        'FPix1_pos+FPix2_pos+TEC1_pos', 
        'FPix1_neg+FPix2_neg+TEC1_neg', 
        'FPix2_pos+TID3_pos+TEC1_pos', 
        'FPix2_neg+TID3_neg+TEC1_neg', 
        'FPix2_pos+TEC2_pos+TEC3_pos', 
        'FPix2_neg+TEC2_neg+TEC3_neg'),
    ComponentName = cms.string('ThLayerTripletsA'),
    TEC = cms.PSet(
        matchedRecHits = cms.InputTag("thStripRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        minRing = cms.int32(1),
        maxRing = cms.int32(2)
    ),
    FPix = cms.PSet(
        hitErrorRZ = cms.double(0.0036),
        hitErrorRPhi = cms.double(0.0051),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedTriplets'),
        HitProducer = cms.string('thPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    TID = cms.PSet(
        matchedRecHits = cms.InputTag("thStripRecHits","matchedRecHit"),
        useRingSlector = cms.bool(True),
        TTRHBuilder = cms.string('WithTrackAngle'),
        minRing = cms.int32(1),
        maxRing = cms.int32(2)
    ),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedTriplets'),
        HitProducer = cms.string('thPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    )
)


process.thlayertripletsb = cms.ESProducer("SeedingLayersESProducer",
    ComponentName = cms.string('ThLayerTripletsB'),
    layerList = cms.vstring('BPix2+BPix3+TIB1', 
        'BPix2+BPix3+TIB2', 
        'BPix3+TIB1+TIB2'),
    BPix = cms.PSet(
        hitErrorRZ = cms.double(0.006),
        hitErrorRPhi = cms.double(0.0027),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4MixedTriplets'),
        HitProducer = cms.string('thPixelRecHits'),
        useErrorsFromParam = cms.bool(True)
    ),
    TIB = cms.PSet(
        matchedRecHits = cms.InputTag("thStripRecHits","matchedRecHit"),
        TTRHBuilder = cms.string('WithTrackAngle')
    )
)


process.trackAssociatorByHitsForConversionValidation = cms.ESProducer("TrackAssociatorByHitsESProducer",
    Quality_SimToReco = cms.double(0.5),
    ThreeHitTracksAreSpecial = cms.bool(True),
    UseGrouped = cms.bool(True),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    UseSplitting = cms.bool(True),
    Purity_SimToReco = cms.double(0.5),
    UsePixels = cms.bool(True),
    associateRecoTracks = cms.bool(True),
    AbsoluteNumberOfHits = cms.bool(False),
    associateStrip = cms.bool(True),
    Cut_RecoToSim = cms.double(0.5),
    SimToRecoDenominator = cms.string('reco'),
    ComponentName = cms.string('trackAssociatorByHitsForConversionValidation')
)


process.trackAssociatorByHitsForPhotonValidation = cms.ESProducer("TrackAssociatorByHitsESProducer",
    Quality_SimToReco = cms.double(0.5),
    ThreeHitTracksAreSpecial = cms.bool(True),
    UseGrouped = cms.bool(True),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    UseSplitting = cms.bool(True),
    Purity_SimToReco = cms.double(0.5),
    UsePixels = cms.bool(True),
    associateRecoTracks = cms.bool(True),
    AbsoluteNumberOfHits = cms.bool(False),
    associateStrip = cms.bool(True),
    Cut_RecoToSim = cms.double(0.5),
    SimToRecoDenominator = cms.string('reco'),
    ComponentName = cms.string('trackAssociatorByHitsForPhotonValidation')
)


process.trackCounting3D2nd = cms.ESProducer("TrackCountingESProducer",
    deltaR = cms.double(-1.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    maximumDecayLength = cms.double(5.0),
    nthTrack = cms.int32(2)
)


process.trackCounting3D3rd = cms.ESProducer("TrackCountingESProducer",
    deltaR = cms.double(-1.0),
    maximumDistanceToJetAxis = cms.double(0.07),
    impactParameterType = cms.int32(0),
    trackQualityClass = cms.string('any'),
    maximumDecayLength = cms.double(5.0),
    nthTrack = cms.int32(3)
)


process.trajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    ComponentName = cms.string('TrajectoryCleanerBySharedHits'),
    fractionShared = cms.double(0.19),
    allowSharedFirstHit = cms.bool(True)
)


process.ttrhbwor = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('Fake'),
    Matcher = cms.string('Fake'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('Fake'),
    ComponentName = cms.string('WithoutRefit')
)


process.ttrhbwr = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    StripCPE = cms.string('StripCPEfromTrackAngle'),
    Matcher = cms.string('StandardMatcher'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    PixelCPE = cms.string('PixelCPEGeneric'),
    ComponentName = cms.string('WithTrackAngle')
)


process.BTagRecord = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('JetTagComputerRecord'),
    firstValid = cms.vuint32(1)
)


process.GlobalTag = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string('.'),
        enableReadOnlySessionOnUpdateConnection = cms.untracked.bool(False),
        idleConnectionCleanupPeriod = cms.untracked.int32(10),
        messageLevel = cms.untracked.int32(0),
        enablePoolAutomaticCleanUp = cms.untracked.bool(False),
        enableConnectionSharing = cms.untracked.bool(True),
        connectionRetrialTimeOut = cms.untracked.int32(60),
        connectionTimeOut = cms.untracked.int32(60),
        connectionRetrialPeriod = cms.untracked.int32(10)
    ),
    BlobStreamerName = cms.untracked.string('TBufferBlobStreamingService'),
    toGet = cms.VPSet(),
    connect = cms.string('frontier://FrontierProd/CMS_COND_31X_GLOBALTAG'),
    globaltag = cms.string('START42_V11::All')
)


process.HepPDTESSource = cms.ESSource("HepPDTESSource",
    pdtFileName = cms.FileInPath('SimGeneral/HepPDTESSource/data/pythiaparticle.tbl')
)


process.ak5CaloL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute')
)


process.ak5CaloL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloL6SLB')
)


process.ak5CaloL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloResidual')
)


process.ak5CaloL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.ak5CaloL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL1Offset', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute')
)


process.ak5CaloL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL1Offset', 
        'ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloResidual')
)


process.ak5CaloL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Fall10')
)


process.ak5CaloL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL2Relative', 
        'ak5CaloL3Absolute')
)


process.ak5CaloL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloL6SLB')
)


process.ak5CaloL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL2Relative', 
        'ak5CaloL3Absolute', 
        'ak5CaloResidual')
)


process.ak5CaloL2Relative = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    level = cms.string('L2Relative'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    era = cms.string('Spring10')
)


process.ak5CaloL3Absolute = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    level = cms.string('L3Absolute'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    era = cms.string('Spring10')
)


process.ak5CaloL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("ak5CaloJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("ak5CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    era = cms.string('')
)


process.ak5CaloResidual = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    level = cms.string('L2L3Residual'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    era = cms.string('Spring10DataV2')
)


process.ak5JPTL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5JPTL1Fastjet', 
        'ak5JPTL1Offset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute')
)


process.ak5JPTL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5JPTL1Fastjet', 
        'ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute', 
        'ak5JPTResidual')
)


process.ak5JPTL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.ak5JPTL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5JPTL1Offset', 
        'ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute')
)


process.ak5JPTL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5JPTL1Offset', 
        'ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute', 
        'ak5JPTResidual')
)


process.ak5JPTL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Fall10')
)


process.ak5JPTL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute')
)


process.ak5JPTL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5L1JPTOffset', 
        'ak5JPTL2Relative', 
        'ak5JPTL3Absolute', 
        'ak5JPTResidual')
)


process.ak5JPTL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Summer10'),
    section = cms.string(''),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L2Relative')
)


process.ak5JPTL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Summer10'),
    section = cms.string(''),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L3Absolute')
)


process.ak5JPTResidual = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10DataV2'),
    section = cms.string(''),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L2L3Residual')
)


process.ak5L1JPTOffset = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Summer10'),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L1JPTOffset')
)


process.ak5PFL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute')
)


process.ak5PFL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFL6SLB')
)


process.ak5PFL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFResidual')
)


process.ak5PFL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.ak5PFL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL1Offset', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute')
)


process.ak5PFL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL1Offset', 
        'ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFResidual')
)


process.ak5PFL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Fall10')
)


process.ak5PFL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL2Relative', 
        'ak5PFL3Absolute')
)


process.ak5PFL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFL6SLB')
)


process.ak5PFL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5PFL2Relative', 
        'ak5PFL3Absolute', 
        'ak5PFResidual')
)


process.ak5PFL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2Relative')
)


process.ak5PFL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L3Absolute')
)


process.ak5PFL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("ak5PFJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("ak5PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    era = cms.string('')
)


process.ak5PFResidual = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10DataV2'),
    section = cms.string(''),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.ak5TrackL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak5TrackL2Relative', 
        'ak5TrackL3Absolute')
)


process.ak5TrackL2L3 = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak5TrackL2Relative', 
        'ak5TrackL3Absolute')
)


process.ak5TrackL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('AK5TRK'),
    level = cms.string('L2Relative')
)


process.ak5TrackL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('AK5TRK'),
    level = cms.string('L3Absolute')
)


process.ak7CaloL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute')
)


process.ak7CaloL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7CaloL1Offset', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloL6SLB')
)


process.ak7CaloL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7CaloL1Fastjet', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloResidual')
)


process.ak7CaloL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.ak7CaloL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7CaloL1Offset', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute')
)


process.ak7CaloL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7CaloL1Offset', 
        'ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloResidual')
)


process.ak7CaloL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Fall10')
)


process.ak7CaloL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7CaloL2Relative', 
        'ak7CaloL3Absolute')
)


process.ak7CaloL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloL6SLB')
)


process.ak7CaloL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak7CaloL2Relative', 
        'ak7CaloL3Absolute', 
        'ak7CaloResidual')
)


process.ak7CaloL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('AK7Calo'),
    level = cms.string('L2Relative')
)


process.ak7CaloL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('AK7Calo'),
    level = cms.string('L3Absolute')
)


process.ak7CaloL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("ak7CaloJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("ak7CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    era = cms.string('')
)


process.ak7CaloResidual = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10DataV2'),
    section = cms.string(''),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.ak7JPTL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7JPTL1Fastjet', 
        'ak7L1JPTOffset', 
        'ak7JPTL2Relative', 
        'ak7JPTL3Absolute', 
        'ak7JPTResidual')
)


process.ak7JPTL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.ak7JPTL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7JPTL1Offset', 
        'ak7L1JPTOffset', 
        'ak7JPTL2Relative', 
        'ak7JPTL3Absolute')
)


process.ak7JPTL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7JPTL1Offset', 
        'ak7L1JPTOffset', 
        'ak7JPTL2Relative', 
        'ak7JPTL3Absolute', 
        'ak7JPTResidual')
)


process.ak7JPTL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Fall10')
)


process.ak7JPTL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7L1JPTOffset', 
        'ak7JPTL2Relative', 
        'ak7JPTL3Absolute')
)


process.ak7L1JPTOffset = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Summer10'),
    algorithm = cms.string('AK5JPT'),
    level = cms.string('L1JPTOffset')
)


process.ak7PFL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute')
)


process.ak7PFL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFL6SLB')
)


process.ak7PFL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7PFL1Fastjet', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFResidual')
)


process.ak7PFL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.ak7PFL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7PFL1Offset', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute')
)


process.ak7PFL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7PFL1Offset', 
        'ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFResidual')
)


process.ak7PFL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Fall10')
)


process.ak7PFL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7PFL2Relative', 
        'ak7PFL3Absolute')
)


process.ak7PFL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFL6SLB')
)


process.ak7PFL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ak7PFL2Relative', 
        'ak7PFL3Absolute', 
        'ak7PFResidual')
)


process.ak7PFL2Relative = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK7PF'),
    level = cms.string('L2Relative')
)


process.ak7PFL3Absolute = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK7PF'),
    level = cms.string('L3Absolute')
)


process.ak7PFL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("ak7PFJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("ak7PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    era = cms.string('')
)


process.ak7PFResidual = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10DataV2'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.eegeom = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalMappingRcd'),
    firstValid = cms.vuint32(1)
)


process.es_hardcode = cms.ESSource("HcalHardcodeCalibrations",
    toGet = cms.untracked.vstring('GainWidths')
)


process.essourceEcalSev = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalSeverityLevelAlgoRcd'),
    firstValid = cms.vuint32(1)
)


process.essourceSev = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('HcalSeverityLevelComputerRcd'),
    firstValid = cms.vuint32(1)
)


process.ic5CaloL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute')
)


process.ic5CaloL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5CaloL1Offset', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloL6SLB')
)


process.ic5CaloL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5CaloL1Fastjet', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloResidual')
)


process.ic5CaloL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.ic5CaloL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5CaloL1Offset', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute')
)


process.ic5CaloL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5CaloL1Offset', 
        'ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloResidual')
)


process.ic5CaloL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Fall10')
)


process.ic5CaloL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5CaloL2Relative', 
        'ic5CaloL3Absolute')
)


process.ic5CaloL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloL6SLB')
)


process.ic5CaloL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ic5CaloL2Relative', 
        'ic5CaloL3Absolute', 
        'ic5CaloResidual')
)


process.ic5CaloL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('IC5Calo'),
    level = cms.string('L2Relative')
)


process.ic5CaloL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('IC5Calo'),
    level = cms.string('L3Absolute')
)


process.ic5CaloL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("ic5CaloJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("ic5CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    era = cms.string('')
)


process.ic5CaloResidual = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10DataV2'),
    section = cms.string(''),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.ic5PFL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute')
)


process.ic5PFL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFL6SLB')
)


process.ic5PFL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5PFL1Fastjet', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFResidual')
)


process.ic5PFL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.ic5PFL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5PFL1Offset', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute')
)


process.ic5PFL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5PFL1Offset', 
        'ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFResidual')
)


process.ic5PFL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Fall10')
)


process.ic5PFL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5PFL2Relative', 
        'ic5PFL3Absolute')
)


process.ic5PFL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFL6SLB')
)


process.ic5PFL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('ic5PFL2Relative', 
        'ic5PFL3Absolute', 
        'ic5PFResidual')
)


process.ic5PFL2Relative = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('IC5PF'),
    level = cms.string('L2Relative')
)


process.ic5PFL3Absolute = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('IC5PF'),
    level = cms.string('L3Absolute')
)


process.ic5PFL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("ic5PFJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("ic5PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    era = cms.string('')
)


process.ic5PFResidual = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10DataV2'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.kt4CaloL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute')
)


process.kt4CaloL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4CaloL1Offset', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloL6SLB')
)


process.kt4CaloL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4CaloL1Fastjet', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloResidual')
)


process.kt4CaloL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.kt4CaloL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4CaloL1Offset', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute')
)


process.kt4CaloL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4CaloL1Offset', 
        'kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloResidual')
)


process.kt4CaloL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Fall10')
)


process.kt4CaloL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4CaloL2Relative', 
        'kt4CaloL3Absolute')
)


process.kt4CaloL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloL6SLB')
)


process.kt4CaloL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('kt4CaloL2Relative', 
        'kt4CaloL3Absolute', 
        'kt4CaloResidual')
)


process.kt4CaloL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('KT4Calo'),
    level = cms.string('L2Relative')
)


process.kt4CaloL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('KT4Calo'),
    level = cms.string('L3Absolute')
)


process.kt4CaloL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("kt4CaloJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("kt4CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    era = cms.string('')
)


process.kt4CaloResidual = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10DataV2'),
    section = cms.string(''),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.kt4PFL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute')
)


process.kt4PFL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFL6SLB')
)


process.kt4PFL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4PFL1Fastjet', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFResidual')
)


process.kt4PFL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.kt4PFL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4PFL1Offset', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute')
)


process.kt4PFL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4PFL1Offset', 
        'kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFResidual')
)


process.kt4PFL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Fall10')
)


process.kt4PFL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4PFL2Relative', 
        'kt4PFL3Absolute')
)


process.kt4PFL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFL6SLB')
)


process.kt4PFL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('kt4PFL2Relative', 
        'kt4PFL3Absolute', 
        'kt4PFResidual')
)


process.kt4PFL2Relative = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('KT4PF'),
    level = cms.string('L2Relative')
)


process.kt4PFL3Absolute = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('KT4PF'),
    level = cms.string('L3Absolute')
)


process.kt4PFL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("kt4PFJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("kt4PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    era = cms.string('')
)


process.kt4PFResidual = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10DataV2'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.kt6CaloL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5CaloL1Fastjet', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute')
)


process.kt6CaloL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6CaloL1Offset', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloL6SLB')
)


process.kt6CaloL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6CaloL1Fastjet', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloResidual')
)


process.kt6CaloL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.kt6CaloL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6CaloL1Offset', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute')
)


process.kt6CaloL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6CaloL1Offset', 
        'kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloResidual')
)


process.kt6CaloL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Fall10')
)


process.kt6CaloL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6CaloL2Relative', 
        'kt6CaloL3Absolute')
)


process.kt6CaloL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloL6SLB')
)


process.kt6CaloL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('kt6CaloL2Relative', 
        'kt6CaloL3Absolute', 
        'kt6CaloResidual')
)


process.kt6CaloL2Relative = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('KT6Calo'),
    level = cms.string('L2Relative')
)


process.kt6CaloL3Absolute = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10'),
    section = cms.string(''),
    algorithm = cms.string('KT6Calo'),
    level = cms.string('L3Absolute')
)


process.kt6CaloL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("kt6CaloJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("kt6CaloJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(True),
    era = cms.string('')
)


process.kt6CaloResidual = cms.ESSource("LXXXCorrectionService",
    useCondDB = cms.untracked.bool(True),
    era = cms.string('Spring10DataV2'),
    section = cms.string(''),
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.kt6PFL1FastL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute')
)


process.kt6PFL1FastL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('ak5PFL1Fastjet', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFL6SLB')
)


process.kt6PFL1FastL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6PFL1Fastjet', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFResidual')
)


process.kt6PFL1Fastjet = cms.ESSource("L1FastjetCorrectionService",
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet'),
    section = cms.string(''),
    srcRho = cms.InputTag("kt6PFJets","rho"),
    era = cms.string('Jec10V1')
)


process.kt6PFL1L2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6PFL1Offset', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute')
)


process.kt6PFL1L2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6PFL1Offset', 
        'kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFResidual')
)


process.kt6PFL1Offset = cms.ESSource("L1OffsetCorrectionService",
    minVtxNdof = cms.int32(4),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset'),
    section = cms.string(''),
    vertexCollection = cms.string('offlinePrimaryVertices'),
    era = cms.string('Fall10')
)


process.kt6PFL2L3 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6PFL2Relative', 
        'kt6PFL3Absolute')
)


process.kt6PFL2L3L6 = cms.ESSource("JetCorrectionServiceChain",
    useCondDB = cms.untracked.bool(True),
    correctors = cms.vstring('kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFL6SLB')
)


process.kt6PFL2L3Residual = cms.ESSource("JetCorrectionServiceChain",
    correctors = cms.vstring('kt6PFL2Relative', 
        'kt6PFL3Absolute', 
        'kt6PFResidual')
)


process.kt6PFL2Relative = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('KT6PF'),
    level = cms.string('L2Relative')
)


process.kt6PFL3Absolute = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('KT6PF'),
    level = cms.string('L3Absolute')
)


process.kt6PFL6SLB = cms.ESSource("L6SLBCorrectionService",
    srcBTagInfoElectron = cms.InputTag("kt6PFJetsSoftElectronTagInfos"),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    section = cms.string(''),
    srcBTagInfoMuon = cms.InputTag("kt6PFJetsSoftMuonTagInfos"),
    addMuonToJet = cms.bool(False),
    era = cms.string('')
)


process.kt6PFResidual = cms.ESSource("LXXXCorrectionService",
    section = cms.string(''),
    era = cms.string('Spring10DataV2'),
    useCondDB = cms.untracked.bool(True),
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.magfield = cms.ESSource("XMLIdealGeometryESSource",
    geomXMLFiles = cms.vstring('Geometry/CMSCommonData/data/normal/cmsextent.xml', 
        'Geometry/CMSCommonData/data/cms.xml', 
        'Geometry/CMSCommonData/data/cmsMagneticField.xml', 
        'MagneticField/GeomBuilder/data/MagneticFieldVolumes_1103l.xml', 
        'MagneticField/GeomBuilder/data/MagneticFieldParameters_07_2pi.xml', 
        'Geometry/CMSCommonData/data/materials.xml'),
    rootNodeName = cms.string('cmsMagneticField:MAGF')
)


process.tpparams12 = cms.ESSource("EmptyESSource",
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalTPGPhysicsConstRcd'),
    firstValid = cms.vuint32(1)
)


process.prefer("magfield")

process.ALCARECOEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep edmTriggerResults_*_*_*', 
        'keep *_ALCARECOTkAlZMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOTkAlCosmicsInCollisions_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*', 
        'keep *_ALCARECOTkAlCosmicsCTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsCosmicTF_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*', 
        'keep *_ALCARECOTkAlCosmicsCTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsCosmicTF_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*', 
        'keep *_ALCARECOTkAlCosmics*0T_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*', 
        'keep *_ALCARECOTkAlCosmics*0T_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*', 
        'keep *_ALCARECOTkAlLAST0Producer_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOTkAlMuonIsolated_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOTkAlJpsiMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOTkAlUpsilonMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOTkAlMinBias_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep *_ALCARECOTkAlBeamHalo_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOSiStripCalZeroBias_*_*', 
        'keep *_calZeroBiasClusters_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep *_ALCARECOSiStripCalMinBias_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep *_ecalPhiSymCorrected_phiSymEcalRecHitsEB_*', 
        'keep *_ecalPhiSymCorrected_phiSymEcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep recoGsfElectronCores_*_*_*', 
        'keep recoSuperClusters_*_*_*', 
        'keep *_electronGsfTracks_*_*', 
        'keep  *_gsfElectrons_*_*', 
        'keep  *_alCaIsolatedElectrons_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep edmTriggerResults_TriggerResults__*', 
        'keep edmHepMCProduct_*_*_*', 
        'keep *_ecalPi0Corrected_pi0EcalRecHitsEB_*', 
        'keep *_ecalPi0Corrected_pi0EcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_pi0EcalRecHitsES_*', 
        'keep *_ecalEtaCorrected_etaEcalRecHitsEB_*', 
        'keep *_ecalEtaCorrected_etaEcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_etaEcalRecHitsES_*', 
        'keep *_DiJProd_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_GammaJetProd_*_*', 
        'keep *_IsoProd_*_*', 
        'keep *_TkAlIsoProd_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_IsoProd_*_*', 
        'keep *_gtDigisAlCaMB_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMBspecial_*_*', 
        'keep HBHERecHitsSorted_hbherecoNoise_*_*', 
        'keep HORecHitsSorted_horecoNoise_*_*', 
        'keep HFRecHitsSorted_hfrecoNoise_*_*', 
        'keep *_hoCalibProducer_*_*', 
        'keep HOCalibVariabless_*_*_*', 
        'keep *_HcalNoiseProd_*_*', 
        'keep edmTriggerResults_*_*_HLT', 
        'keep *_ALCARECOMuAlStandAloneCosmics_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlGlobalCosmicsInCollisions_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlGlobalCosmics_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlCalIsolatedMu_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlZMuMu_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlOverlaps_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlBeamHaloOverlaps_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_ALCARECOMuAlBeamHalo_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep CSCDetIdCSCWireDigiMuonDigiCollection_*_*_*', 
        'keep CSCDetIdCSCStripDigiMuonDigiCollection_*_*_*', 
        'keep DTLayerIdDTDigiMuonDigiCollection_*_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep RPCDetIdRPCDigiMuonDigiCollection_*_*_*', 
        'keep recoMuons_muonsNoRPC_*_*', 
        'keep L1MuRegionalCands_*_RPCb_*', 
        'keep L1MuRegionalCands_*_RPCf_*', 
        'keep L1MuGMTCands_*_*_*', 
        'keep L1MuGMTReadoutCollection_*_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt4DSegmentsNoWire_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*', 
        'keep *_MEtoEDMConvertSiStrip_*_*', 
        'drop *_MEtoEDMConverter_*_*')
)

process.AODEventContent = cms.PSet(
    eventAutoFlushCompressedSize = cms.untracked.int32(15728640),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_castorreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep recoCaloClusters_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*', 
        'keep recoCaloClusters_multi5x5BasicClusters_multi5x5EndcapBasicClusters_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep recoTracks_GsfGlobalElectronTest_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTracks_ctfPixelLess_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'drop recoHcalNoiseRBXs_*_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *GlobalHaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*', 
        'keep recoMuonTimeExtraedmValueMap_muons_*_*', 
        'keep *_muonShowerInformation_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 
        'keep uintedmValueMap_cosmicsVeto_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer*_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer*_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices_*_*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'drop *_pfElectronTranslator_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoCaloClusters_pfElectronTranslator_*_*', 
        'keep recoPreshowerClusters_pfElectronTranslator_*_*', 
        'keep recoSuperClusters_pfElectronTranslator_*_*', 
        'keep recoCaloClusters_pfPhotonTranslator_*_*', 
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*', 
        'keep recoSuperClusters_pfPhotonTranslator_*_*', 
        'keep recoPhotons_pfPhotonTranslator_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep PileupSummaryInfo_*_*_*', 
        'keep PileupSummaryInfos_*_*_*')
)

process.AODSIMEventContent = cms.PSet(
    eventAutoFlushCompressedSize = cms.untracked.int32(15728640),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep *_castorreco_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep recoCaloClusters_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*', 
        'keep recoCaloClusters_multi5x5BasicClusters_multi5x5EndcapBasicClusters_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'keep recoTracks_GsfGlobalElectronTest_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTracks_ctfPixelLess_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_trackExtrapolator_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'drop recoHcalNoiseRBXs_*_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *GlobalHaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*', 
        'keep recoMuonTimeExtraedmValueMap_muons_*_*', 
        'keep *_muonShowerInformation_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 
        'keep uintedmValueMap_cosmicsVeto_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*', 
        'keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer*_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer*_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*', 
        'keep  *_offlinePrimaryVertices_*_*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*', 
        'keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*', 
        'drop CaloTowersSorted_towerMakerPF_*_*', 
        'drop *_pfElectronTranslator_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoCaloClusters_pfElectronTranslator_*_*', 
        'keep recoPreshowerClusters_pfElectronTranslator_*_*', 
        'keep recoSuperClusters_pfElectronTranslator_*_*', 
        'keep recoCaloClusters_pfPhotonTranslator_*_*', 
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*', 
        'keep recoSuperClusters_pfPhotonTranslator_*_*', 
        'keep recoPhotons_pfPhotonTranslator_*_*', 
        'keep *_offlineBeamSpot_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep LumiSummary_lumiProducer_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep PileupSummaryInfo_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_source_*_*', 
        'keep LHEEventProduct_source_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep PileupSummaryInfo_*_*_*', 
        'keep PileupSummaryInfos_*_*_*')
)

process.AnomalousCellParameters = cms.PSet(
    maxRecoveredHcalCells = cms.uint32(9999999),
    maxBadEcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999)
)

process.BeamSpotAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BeamSpotFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BeamSpotRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.CSCCommonTrigger = cms.PSet(
    MaxBX = cms.int32(9),
    MinBX = cms.int32(3)
)

process.CSCSegAlgoDF = cms.PSet(
    chamber_types = cms.vstring('ME1/a', 
        'ME1/b', 
        'ME1/2', 
        'ME1/3', 
        'ME2/1', 
        'ME2/2', 
        'ME3/1', 
        'ME3/2', 
        'ME4/1'),
    algo_name = cms.string('CSCSegAlgoDF'),
    parameters_per_chamber_type = cms.vint32(3, 1, 2, 2, 1, 
        2, 1, 2, 1),
    algo_psets = cms.VPSet(cms.PSet(
        tanThetaMax = cms.double(1.2),
        maxRatioResidualPrune = cms.double(3.0),
        dPhiFineMax = cms.double(0.025),
        tanPhiMax = cms.double(0.5),
        dXclusBoxMax = cms.double(8.0),
        preClustering = cms.untracked.bool(False),
        chi2Max = cms.double(5000.0),
        minHitsPerSegment = cms.int32(3),
        minHitsForPreClustering = cms.int32(10),
        minLayersApart = cms.int32(2),
        dRPhiFineMax = cms.double(8.0),
        nHitsPerClusterIsShower = cms.int32(20),
        CSCSegmentDebug = cms.untracked.bool(False),
        Pruning = cms.untracked.bool(False),
        dYclusBoxMax = cms.double(8.0)
    ), 
        cms.PSet(
            tanThetaMax = cms.double(2.0),
            maxRatioResidualPrune = cms.double(3.0),
            dPhiFineMax = cms.double(0.025),
            tanPhiMax = cms.double(0.8),
            dXclusBoxMax = cms.double(8.0),
            preClustering = cms.untracked.bool(False),
            chi2Max = cms.double(5000.0),
            minHitsPerSegment = cms.int32(3),
            minHitsForPreClustering = cms.int32(10),
            minLayersApart = cms.int32(2),
            dRPhiFineMax = cms.double(12.0),
            nHitsPerClusterIsShower = cms.int32(20),
            CSCSegmentDebug = cms.untracked.bool(False),
            Pruning = cms.untracked.bool(False),
            dYclusBoxMax = cms.double(12.0)
        ), 
        cms.PSet(
            tanThetaMax = cms.double(1.2),
            maxRatioResidualPrune = cms.double(3.0),
            dPhiFineMax = cms.double(0.025),
            tanPhiMax = cms.double(0.5),
            dXclusBoxMax = cms.double(8.0),
            preClustering = cms.untracked.bool(False),
            chi2Max = cms.double(5000.0),
            minHitsPerSegment = cms.int32(3),
            minHitsForPreClustering = cms.int32(30),
            minLayersApart = cms.int32(2),
            dRPhiFineMax = cms.double(8.0),
            nHitsPerClusterIsShower = cms.int32(20),
            CSCSegmentDebug = cms.untracked.bool(False),
            Pruning = cms.untracked.bool(False),
            dYclusBoxMax = cms.double(8.0)
        ))
)

process.CSCSegAlgoSK = cms.PSet(
    chamber_types = cms.vstring('ME1/a', 
        'ME1/b', 
        'ME1/2', 
        'ME1/3', 
        'ME2/1', 
        'ME2/2', 
        'ME3/1', 
        'ME3/2', 
        'ME4/1'),
    algo_name = cms.string('CSCSegAlgoSK'),
    parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
        1, 1, 1, 1),
    algo_psets = cms.VPSet(cms.PSet(
        dPhiFineMax = cms.double(0.025),
        verboseInfo = cms.untracked.bool(True),
        chi2Max = cms.double(99999.0),
        dPhiMax = cms.double(0.003),
        wideSeg = cms.double(3.0),
        minLayersApart = cms.int32(2),
        dRPhiFineMax = cms.double(8.0),
        dRPhiMax = cms.double(8.0)
    ), 
        cms.PSet(
            dPhiFineMax = cms.double(0.025),
            verboseInfo = cms.untracked.bool(True),
            chi2Max = cms.double(99999.0),
            dPhiMax = cms.double(0.025),
            wideSeg = cms.double(3.0),
            minLayersApart = cms.int32(2),
            dRPhiFineMax = cms.double(3.0),
            dRPhiMax = cms.double(8.0)
        ))
)

process.CSCSegAlgoST = cms.PSet(
    chamber_types = cms.vstring('ME1/a', 
        'ME1/b', 
        'ME1/2', 
        'ME1/3', 
        'ME2/1', 
        'ME2/2', 
        'ME3/1', 
        'ME3/2', 
        'ME4/1', 
        'ME4/2'),
    algo_name = cms.string('CSCSegAlgoST'),
    parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
        1, 1, 1, 1, 1),
    algo_psets = cms.VPSet(cms.PSet(
        maxRatioResidualPrune = cms.double(3),
        yweightPenalty = cms.double(1.5),
        maxRecHitsInCluster = cms.int32(20),
        preClusteringUseChaining = cms.bool(True),
        ForceCovariance = cms.bool(False),
        hitDropLimit6Hits = cms.double(0.3333),
        NormChi2Cut2D = cms.double(20.0),
        BPMinImprovement = cms.double(10000.0),
        Covariance = cms.double(0.0),
        tanPhiMax = cms.double(0.5),
        onlyBestSegment = cms.bool(False),
        SeedBig = cms.double(0.0015),
        dRPhiFineMax = cms.double(8.0),
        SeedSmall = cms.double(0.0002),
        curvePenalty = cms.double(2.0),
        dXclusBoxMax = cms.double(4.0),
        BrutePruning = cms.bool(True),
        curvePenaltyThreshold = cms.double(0.85),
        CorrectTheErrors = cms.bool(True),
        hitDropLimit4Hits = cms.double(0.6),
        useShowering = cms.bool(False),
        CSCDebug = cms.untracked.bool(False),
        yweightPenaltyThreshold = cms.double(1.0),
        tanThetaMax = cms.double(1.2),
        NormChi2Cut3D = cms.double(10.0),
        minHitsPerSegment = cms.int32(3),
        ForceCovarianceAll = cms.bool(False),
        dPhiFineMax = cms.double(0.025),
        prePrunLimit = cms.double(3.17),
        hitDropLimit5Hits = cms.double(0.8),
        preClustering = cms.bool(True),
        prePrun = cms.bool(True),
        maxDPhi = cms.double(999.0),
        maxDTheta = cms.double(999.0),
        Pruning = cms.bool(True),
        dYclusBoxMax = cms.double(8.0)
    ), 
        cms.PSet(
            maxRatioResidualPrune = cms.double(3),
            yweightPenalty = cms.double(1.5),
            maxRecHitsInCluster = cms.int32(24),
            preClusteringUseChaining = cms.bool(True),
            ForceCovariance = cms.bool(False),
            hitDropLimit6Hits = cms.double(0.3333),
            NormChi2Cut2D = cms.double(20.0),
            BPMinImprovement = cms.double(10000.0),
            Covariance = cms.double(0.0),
            tanPhiMax = cms.double(0.5),
            onlyBestSegment = cms.bool(False),
            SeedBig = cms.double(0.0015),
            dRPhiFineMax = cms.double(8.0),
            SeedSmall = cms.double(0.0002),
            curvePenalty = cms.double(2.0),
            dXclusBoxMax = cms.double(4.0),
            BrutePruning = cms.bool(True),
            curvePenaltyThreshold = cms.double(0.85),
            CorrectTheErrors = cms.bool(True),
            hitDropLimit4Hits = cms.double(0.6),
            useShowering = cms.bool(False),
            CSCDebug = cms.untracked.bool(False),
            yweightPenaltyThreshold = cms.double(1.0),
            tanThetaMax = cms.double(1.2),
            NormChi2Cut3D = cms.double(10.0),
            minHitsPerSegment = cms.int32(3),
            ForceCovarianceAll = cms.bool(False),
            dPhiFineMax = cms.double(0.025),
            prePrunLimit = cms.double(3.17),
            hitDropLimit5Hits = cms.double(0.8),
            preClustering = cms.bool(True),
            prePrun = cms.bool(True),
            maxDPhi = cms.double(999.0),
            maxDTheta = cms.double(999.0),
            Pruning = cms.bool(True),
            dYclusBoxMax = cms.double(8.0)
        ))
)

process.CSCSegAlgoTC = cms.PSet(
    chamber_types = cms.vstring('ME1/a', 
        'ME1/b', 
        'ME1/2', 
        'ME1/3', 
        'ME2/1', 
        'ME2/2', 
        'ME3/1', 
        'ME3/2', 
        'ME4/1'),
    algo_name = cms.string('CSCSegAlgoTC'),
    parameters_per_chamber_type = cms.vint32(2, 1, 1, 1, 1, 
        1, 1, 1, 1),
    algo_psets = cms.VPSet(cms.PSet(
        dPhiFineMax = cms.double(0.02),
        verboseInfo = cms.untracked.bool(True),
        SegmentSorting = cms.int32(1),
        chi2Max = cms.double(6000.0),
        dPhiMax = cms.double(0.003),
        chi2ndfProbMin = cms.double(0.0001),
        minLayersApart = cms.int32(2),
        dRPhiFineMax = cms.double(6.0),
        dRPhiMax = cms.double(1.2)
    ), 
        cms.PSet(
            dPhiFineMax = cms.double(0.013),
            verboseInfo = cms.untracked.bool(True),
            SegmentSorting = cms.int32(1),
            chi2Max = cms.double(6000.0),
            dPhiMax = cms.double(0.00198),
            chi2ndfProbMin = cms.double(0.0001),
            minLayersApart = cms.int32(2),
            dRPhiFineMax = cms.double(3.0),
            dRPhiMax = cms.double(0.6)
        ))
)

process.CSCTimingExtractorBlock = cms.PSet(
    CSCTimingParameters = cms.PSet(
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTsegments = cms.InputTag("dt4DSegments"),
            DTradius = cms.double(0.01),
            TightMatchDT = cms.bool(False),
            TightMatchCSC = cms.bool(True)
        ),
        CSCsegments = cms.InputTag("csc2DSegments"),
        CSCStripTimeOffset = cms.double(0.0),
        CSCStripError = cms.double(7.0),
        UseStripTime = cms.bool(True),
        debug = cms.bool(False),
        CSCWireError = cms.double(8.6),
        CSCWireTimeOffset = cms.double(0.0),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                'PropagatorWithMaterial', 
                'PropagatorWithMaterialOpposite'),
            RPCLayers = cms.bool(True)
        ),
        PruneCut = cms.double(9.0),
        UseWireTime = cms.bool(True)
    )
)

process.ChargeSignificanceTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('ChargeSignificanceTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0)
)

process.CkfBaseTrajectoryFilter_block = cms.PSet(
    minPt = cms.double(0.9),
    minHitsMinPt = cms.int32(3),
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    maxLostHits = cms.int32(1),
    maxNumberOfHits = cms.int32(100),
    maxConsecLostHits = cms.int32(1),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    chargeSignificance = cms.double(-1.0)
)

process.CombIsoCuts = cms.PSet(
    IsCombinedIso = cms.untracked.bool(True),
    IsoCut03 = cms.untracked.double(0.15),
    IsRelativeIso = cms.untracked.bool(True),
    ptThreshold = cms.untracked.double(0.0)
)

process.CommonEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_logErrorHarvester_*_*')
)

process.CompositeTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet()
)

process.CondDBSetup = cms.PSet(
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string('.'),
        enableReadOnlySessionOnUpdateConnection = cms.untracked.bool(False),
        idleConnectionCleanupPeriod = cms.untracked.int32(10),
        messageLevel = cms.untracked.int32(0),
        enablePoolAutomaticCleanUp = cms.untracked.bool(False),
        enableConnectionSharing = cms.untracked.bool(True),
        connectionRetrialTimeOut = cms.untracked.int32(60),
        connectionTimeOut = cms.untracked.int32(60),
        connectionRetrialPeriod = cms.untracked.int32(10)
    )
)

process.DATAMIXEREventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep CaloTowersSorted_calotoweroptmaker_*_*', 
        'keep CSCDetIdCSCALCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCALCTDigi_*', 
        'keep CSCDetIdCSCCLCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCCLCTDigi_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_muonCSCDigis_MuonCSCComparatorDigi_*', 
        'keep CSCDetIdCSCCorrelatedLCTDigiMuonDigiCollection_csctfDigis_*_*', 
        'keep CSCDetIdCSCCorrelatedLCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCCorrelatedLCTDigi_*', 
        'keep CSCDetIdCSCRPCDigiMuonDigiCollection_muonCSCDigis_MuonCSCRPCDigi_*', 
        'keep CSCDetIdCSCStripDigiMuonDigiCollection_muonCSCDigis_MuonCSCStripDigi_*', 
        'keep CSCDetIdCSCWireDigiMuonDigiCollection_muonCSCDigis_MuonCSCWireDigi_*', 
        'keep DTLayerIdDTDigiMuonDigiCollection_muonDTDigis_*_*', 
        'keep PixelDigiedmDetSetVector_siPixelDigis_*_*', 
        'keep SiStripDigiedmDetSetVector_siStripDigis_*_*', 
        'keep RPCDetIdRPCDigiMuonDigiCollection_muonRPCDigis_*_*', 
        'keep HBHEDataFramesSorted_hcalDigis_*_*', 
        'keep HFDataFramesSorted_hcalDigis_*_*', 
        'keep HODataFramesSorted_hcalDigis_*_*', 
        'keep EBDigiCollection_ecalDigis_*_*', 
        'keep EEDigiCollection_ecalDigis_*_*', 
        'keep ESDataFramesSorted_ecalPreshowerDigis_*_*')
)

process.DF_ME1234_1 = cms.PSet(
    preClustering = cms.untracked.bool(False),
    maxRatioResidualPrune = cms.double(3.0),
    dPhiFineMax = cms.double(0.025),
    chi2Max = cms.double(5000.0),
    dXclusBoxMax = cms.double(8.0),
    tanThetaMax = cms.double(1.2),
    tanPhiMax = cms.double(0.5),
    minHitsPerSegment = cms.int32(3),
    minHitsForPreClustering = cms.int32(10),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(8.0),
    nHitsPerClusterIsShower = cms.int32(20),
    CSCSegmentDebug = cms.untracked.bool(False),
    Pruning = cms.untracked.bool(False),
    dYclusBoxMax = cms.double(8.0)
)

process.DF_ME1234_2 = cms.PSet(
    preClustering = cms.untracked.bool(False),
    maxRatioResidualPrune = cms.double(3.0),
    dPhiFineMax = cms.double(0.025),
    chi2Max = cms.double(5000.0),
    dXclusBoxMax = cms.double(8.0),
    tanThetaMax = cms.double(2.0),
    tanPhiMax = cms.double(0.8),
    minHitsPerSegment = cms.int32(3),
    minHitsForPreClustering = cms.int32(10),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(12.0),
    nHitsPerClusterIsShower = cms.int32(20),
    CSCSegmentDebug = cms.untracked.bool(False),
    Pruning = cms.untracked.bool(False),
    dYclusBoxMax = cms.double(12.0)
)

process.DF_ME1A = cms.PSet(
    preClustering = cms.untracked.bool(False),
    maxRatioResidualPrune = cms.double(3.0),
    dPhiFineMax = cms.double(0.025),
    chi2Max = cms.double(5000.0),
    dXclusBoxMax = cms.double(8.0),
    tanThetaMax = cms.double(1.2),
    tanPhiMax = cms.double(0.5),
    minHitsPerSegment = cms.int32(3),
    minHitsForPreClustering = cms.int32(30),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(8.0),
    nHitsPerClusterIsShower = cms.int32(20),
    CSCSegmentDebug = cms.untracked.bool(False),
    Pruning = cms.untracked.bool(False),
    dYclusBoxMax = cms.double(8.0)
)

process.DQMEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_MEtoEDMConverter_*_*')
)

process.DTCombinatorialPatternReco2DAlgo_LinearDriftFromDB = cms.PSet(
    Reco2DAlgoConfig = cms.PSet(
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(True),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(True),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string(''),
                doWirePropCorrection = cms.bool(True),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        segmCleanerMode = cms.int32(2),
        nSharedHitsMax = cms.int32(2),
        AlphaMaxPhi = cms.double(1.0),
        hit_afterT0_resolution = cms.double(0.03),
        MaxAllowedHits = cms.uint32(50),
        performT0_vdriftSegCorrection = cms.bool(False),
        AlphaMaxTheta = cms.double(0.9),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False)
    ),
    Reco2DAlgoName = cms.string('DTCombinatorialPatternReco')
)

process.DTCombinatorialPatternReco2DAlgo_LinearDriftFromDB_CosmicData = cms.PSet(
    Reco2DAlgoConfig = cms.PSet(
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(False),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(False),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string('cosmics'),
                doWirePropCorrection = cms.bool(False),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        segmCleanerMode = cms.int32(1),
        nSharedHitsMax = cms.int32(2),
        AlphaMaxPhi = cms.double(100.0),
        hit_afterT0_resolution = cms.double(0.03),
        MaxAllowedHits = cms.uint32(50),
        performT0_vdriftSegCorrection = cms.bool(False),
        AlphaMaxTheta = cms.double(100.0),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False)
    ),
    Reco2DAlgoName = cms.string('DTCombinatorialPatternReco')
)

process.DTCombinatorialPatternReco4DAlgo_LinearDriftFromDB = cms.PSet(
    Reco4DAlgoName = cms.string('DTCombinatorialPatternReco4D'),
    Reco4DAlgoConfig = cms.PSet(
        Reco2DAlgoConfig = cms.PSet(
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                doVdriftCorr = cms.bool(True),
                debug = cms.untracked.bool(False),
                tTrigModeConfig = cms.PSet(
                    vPropWire = cms.double(24.4),
                    doTOFCorrection = cms.bool(True),
                    tofCorrType = cms.int32(0),
                    wirePropCorrType = cms.int32(0),
                    tTrigLabel = cms.string(''),
                    doWirePropCorrection = cms.bool(True),
                    doT0Correction = cms.bool(True),
                    debug = cms.untracked.bool(False)
                ),
                maxTime = cms.double(420.0)
            ),
            segmCleanerMode = cms.int32(2),
            nSharedHitsMax = cms.int32(2),
            AlphaMaxPhi = cms.double(1.0),
            hit_afterT0_resolution = cms.double(0.03),
            MaxAllowedHits = cms.uint32(50),
            performT0_vdriftSegCorrection = cms.bool(False),
            AlphaMaxTheta = cms.double(0.9),
            debug = cms.untracked.bool(False),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False)
        ),
        Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(True),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(True),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string(''),
                doWirePropCorrection = cms.bool(True),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        hit_afterT0_resolution = cms.double(0.03),
        performT0_vdriftSegCorrection = cms.bool(False),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        AllDTRecHits = cms.bool(True),
        performT0SegCorrection = cms.bool(False)
    )
)

process.DTCombinatorialPatternReco4DAlgo_LinearDriftFromDB_CosmicData = cms.PSet(
    Reco4DAlgoName = cms.string('DTCombinatorialPatternReco4D'),
    Reco4DAlgoConfig = cms.PSet(
        Reco2DAlgoConfig = cms.PSet(
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                doVdriftCorr = cms.bool(False),
                debug = cms.untracked.bool(False),
                tTrigModeConfig = cms.PSet(
                    vPropWire = cms.double(24.4),
                    doTOFCorrection = cms.bool(False),
                    tofCorrType = cms.int32(0),
                    wirePropCorrType = cms.int32(0),
                    tTrigLabel = cms.string('cosmics'),
                    doWirePropCorrection = cms.bool(False),
                    doT0Correction = cms.bool(True),
                    debug = cms.untracked.bool(False)
                ),
                maxTime = cms.double(420.0)
            ),
            segmCleanerMode = cms.int32(1),
            nSharedHitsMax = cms.int32(2),
            AlphaMaxPhi = cms.double(100.0),
            hit_afterT0_resolution = cms.double(0.03),
            MaxAllowedHits = cms.uint32(50),
            performT0_vdriftSegCorrection = cms.bool(False),
            AlphaMaxTheta = cms.double(100.0),
            debug = cms.untracked.bool(False),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False)
        ),
        Reco2DAlgoName = cms.string('DTCombinatorialPatternReco'),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            doVdriftCorr = cms.bool(False),
            debug = cms.untracked.bool(False),
            tTrigModeConfig = cms.PSet(
                vPropWire = cms.double(24.4),
                doTOFCorrection = cms.bool(False),
                tofCorrType = cms.int32(0),
                wirePropCorrType = cms.int32(0),
                tTrigLabel = cms.string('cosmics'),
                doWirePropCorrection = cms.bool(False),
                doT0Correction = cms.bool(True),
                debug = cms.untracked.bool(False)
            ),
            maxTime = cms.double(420.0)
        ),
        segmCleanerMode = cms.int32(1),
        nSharedHitsMax = cms.int32(2),
        hit_afterT0_resolution = cms.double(0.03),
        performT0_vdriftSegCorrection = cms.bool(False),
        debug = cms.untracked.bool(False),
        nUnSharedHitsMin = cms.int32(2),
        AllDTRecHits = cms.bool(True),
        performT0SegCorrection = cms.bool(False)
    )
)

process.DTLinearDriftAlgo_CosmicData = cms.PSet(
    recAlgoConfig = cms.PSet(
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        minTime = cms.double(-3.0),
        driftVelocity = cms.double(0.00543),
        hitResolution = cms.double(0.02),
        debug = cms.untracked.bool(False),
        maxTime = cms.double(420.0),
        tTrigModeConfig = cms.PSet(
            vPropWire = cms.double(24.4),
            doTOFCorrection = cms.bool(False),
            tofCorrType = cms.int32(0),
            wirePropCorrType = cms.int32(0),
            tTrigLabel = cms.string('cosmics'),
            doWirePropCorrection = cms.bool(False),
            doT0Correction = cms.bool(True),
            debug = cms.untracked.bool(False)
        )
    ),
    recAlgo = cms.string('DTLinearDriftAlgo')
)

process.DTLinearDriftFromDBAlgo = cms.PSet(
    recAlgoConfig = cms.PSet(
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        doVdriftCorr = cms.bool(True),
        debug = cms.untracked.bool(False),
        tTrigModeConfig = cms.PSet(
            vPropWire = cms.double(24.4),
            doTOFCorrection = cms.bool(True),
            tofCorrType = cms.int32(0),
            wirePropCorrType = cms.int32(0),
            tTrigLabel = cms.string(''),
            doWirePropCorrection = cms.bool(True),
            doT0Correction = cms.bool(True),
            debug = cms.untracked.bool(False)
        ),
        maxTime = cms.double(420.0)
    ),
    recAlgo = cms.string('DTLinearDriftFromDBAlgo')
)

process.DTLinearDriftFromDBAlgo_CosmicData = cms.PSet(
    recAlgoConfig = cms.PSet(
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        doVdriftCorr = cms.bool(False),
        debug = cms.untracked.bool(False),
        tTrigModeConfig = cms.PSet(
            vPropWire = cms.double(24.4),
            doTOFCorrection = cms.bool(False),
            tofCorrType = cms.int32(0),
            wirePropCorrType = cms.int32(0),
            tTrigLabel = cms.string('cosmics'),
            doWirePropCorrection = cms.bool(False),
            doT0Correction = cms.bool(True),
            debug = cms.untracked.bool(False)
        ),
        maxTime = cms.double(420.0)
    ),
    recAlgo = cms.string('DTLinearDriftFromDBAlgo')
)

process.DTTimingExtractorBlock = cms.PSet(
    DTTimingParameters = cms.PSet(
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTsegments = cms.InputTag("dt4DSegments"),
            DTradius = cms.double(0.01),
            TightMatchDT = cms.bool(False),
            TightMatchCSC = cms.bool(True)
        ),
        HitError = cms.double(6.0),
        DoWireCorr = cms.bool(True),
        PruneCut = cms.double(10000.0),
        DTsegments = cms.InputTag("dt4DSegments"),
        DropTheta = cms.bool(True),
        RequireBothProjections = cms.bool(False),
        HitsMin = cms.int32(3),
        DTTimeOffset = cms.double(0.0),
        debug = cms.bool(False),
        UseSegmentT0 = cms.bool(False),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                'PropagatorWithMaterial', 
                'PropagatorWithMaterialOpposite'),
            RPCLayers = cms.bool(True)
        )
    )
)

process.DefaultAlgorithms = cms.PSet(
    Fraction = cms.double(0.2),
    PedestalSubtractionFedMode = cms.bool(True),
    CutToAvoidSignal = cms.double(2.0),
    minStripsToFit = cms.uint32(4),
    consecThreshold = cms.uint32(5),
    hitStripThreshold = cms.uint32(40),
    Deviation = cms.uint32(25),
    CommonModeNoiseSubtractionMode = cms.string('Median'),
    TruncateInSuppressor = cms.bool(True),
    restoreThreshold = cms.double(0.5),
    APVInspectMode = cms.string('BaselineFollower'),
    ForceNoRestore = cms.bool(False),
    useRealMeanCM = cms.bool(False),
    DeltaCMThreshold = cms.uint32(20),
    nSigmaNoiseDerTh = cms.uint32(4),
    nSaturatedStrip = cms.uint32(2),
    SiStripFedZeroSuppressionMode = cms.uint32(4),
    APVRestoreMode = cms.string('BaselineFollower'),
    distortionThreshold = cms.uint32(40),
    Iterations = cms.int32(3),
    nSmooth = cms.uint32(9),
    SelfSelectRestoreAlgo = cms.bool(False)
)

process.DefaultClusterizer = cms.PSet(
    ChannelThreshold = cms.double(2.0),
    MaxSequentialBad = cms.uint32(1),
    Algorithm = cms.string('ThreeThresholdAlgorithm'),
    MaxSequentialHoles = cms.uint32(0),
    MaxAdjacentBad = cms.uint32(0),
    QualityLabel = cms.string(''),
    SeedThreshold = cms.double(3.0),
    ClusterThreshold = cms.double(5.0)
)

process.DigiToRawFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*')
)

process.EvtScalersAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*')
)

process.EvtScalersRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1TriggerScalerss_*_*_*', 
        'keep Level1TriggerScalerss_*_*_*', 
        'keep LumiScalerss_*_*_*', 
        'keep BeamSpotOnlines_*_*_*', 
        'keep DcsStatuss_*_*_*')
)

process.FEVTDEBUGEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = (cms.untracked.vstring('drop *', 'drop *', 'drop *', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep *_g4SimHits_*_*', 'keep edmHepMCProduct_source_*_*', 'keep *_allTrackMCMatch_*_*', 'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 'keep EBSrFlagsSorted_simEcalDigis_*_*', 'keep EESrFlagsSorted_simEcalDigis_*_*', 'keep CrossingFramePlaybackInfoExtended_*_*_*', 'keep PileupSummaryInfo_*_*_*', 'keep PileupSummaryInfos_*_*_*', 'keep LHERunInfoProduct_source_*_*', 'keep LHEEventProduct_source_*_*', 'keep GenRunInfoProduct_generator_*_*', 'keep GenEventInfoProduct_generator_*_*', 'keep edmHepMCProduct_generator_*_*', 'keep GenFilterInfo_*_*_*', 'keep *_genParticles_*_*', 'keep recoGenJets_*_*_*', 'keep *_genParticle_*_*', 'keep recoGenMETs_*_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep *_MEtoEDMConverter_*_*', 'keep *_randomEngineStateProducer_*_*', 'keep DetIdedmEDCollection_siStripDigis_*_*', 'keep *_siPixelClusters_*_*', 'keep *_siStripClusters_*_*', 'keep *_dt1DRecHits_*_*', 'keep *_dt4DSegments_*_*', 'keep *_dt1DCosmicRecHits_*_*', 'keep *_dt4DCosmicSegments_*_*', 'keep *_csc2DRecHits_*_*', 'keep *_cscSegments_*_*', 'keep *_rpcRecHits_*_*', 'keep *_hbhereco_*_*', 'keep *_hfreco_*_*', 'keep *_horeco_*_*', 'keep HBHERecHitsSorted_hbherecoMB_*_*', 'keep HORecHitsSorted_horecoMB_*_*', 'keep HFRecHitsSorted_hfrecoMB_*_*', 'keep ZDCDataFramesSorted_*Digis_*_*', 'keep ZDCRecHitsSorted_*_*_*', 'keep *_reducedHcalRecHits_*_*', 'keep *_castorreco_*_*', 'keep *_ecalPreshowerRecHit_*_*', 'keep *_ecalRecHit_*_*', 'keep *_ecalCompactTrigPrim_*_*', 'keep *_ecalTPSkim_*_*', 'keep *_selectDigi_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 'keep *_hybridSuperClusters_*_*', 'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 'keep *_multi5x5BasicClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 'drop recoClusterShapes_*_*_*', 'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 'keep *_CkfElectronCandidates_*_*', 'keep *_GsfGlobalElectronTest_*_*', 'keep *_electronMergedSeeds_*_*', 'keep recoGsfTracks_electronGsfTracks_*_*', 'keep recoGsfTrackExtras_electronGsfTracks_*_*', 'keep recoTrackExtras_electronGsfTracks_*_*', 'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoTrackExtras_generalTracks_*_*', 'keep TrackingRecHitsOwned_generalTracks_*_*', 'keep recoTracks_beamhaloTracks_*_*', 'keep recoTrackExtras_beamhaloTracks_*_*', 'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 'keep recoTracks_regionalCosmicTracks_*_*', 'keep recoTrackExtras_regionalCosmicTracks_*_*', 'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 'keep recoTracks_rsWithMaterialTracks_*_*', 'keep recoTrackExtras_rsWithMaterialTracks_*_*', 'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 'keep *_ctfPixelLess_*_*', 'keep *_dedxTruncated40_*_*', 'keep *_dedxDiscrimASmi_*_*', 'keep *_dedxHarmonic2_*_*', 'keep *_trackExtrapolator_*_*', 'keep *_kt4CaloJets_*_*', 'keep *_kt6CaloJets_*_*', 'keep *_ak5CaloJets_*_*', 'keep *_ak7CaloJets_*_*', 'keep *_iterativeCone5CaloJets_*_*', 'keep *_iterativeCone15CaloJets_*_*', 'keep *_kt4PFJets_*_*', 'keep *_kt6PFJets_*_*', 'keep *_ak5PFJets_*_*', 'keep *_ak7PFJets_*_*', 'keep *_iterativeCone5PFJets_*_*', 'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_ak5TrackJets_*_*', 'keep *_kt4TrackJets_*_*', 'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 'keep *_caloTowers_*_*', 'keep *_towerMaker_*_*', 'keep *_CastorTowerReco_*_*', 'keep *_ic5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 'keep *_iterativeCone5JetExtender_*_*', 'keep *_kt4JetTracksAssociatorAtVertex_*_*', 'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 'keep *_kt4JetExtender_*_*', 'keep *_ak5JetTracksAssociatorAtVertex_*_*', 'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak5JetExtender_*_*', 'keep *_ak7JetTracksAssociatorAtVertex_*_*', 'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak7JetExtender_*_*', 'keep *_ak5JetID_*_*', 'keep *_ak7JetID_*_*', 'keep *_ic5JetID_*_*', 'keep *_kt4JetID_*_*', 'keep *_kt6JetID_*_*', 'keep *_ak7BasicJets_*_*', 'keep *_ak7CastorJetID_*_*', 'keep recoCaloMETs_met_*_*', 'keep recoCaloMETs_metNoHF_*_*', 'keep recoCaloMETs_metHO_*_*', 'keep recoCaloMETs_corMetGlobalMuons_*_*', 'keep recoCaloMETs_metNoHFHO_*_*', 'keep recoCaloMETs_metOptHO_*_*', 'keep recoCaloMETs_metOpt_*_*', 'keep recoCaloMETs_metOptNoHFHO_*_*', 'keep recoCaloMETs_metOptNoHF_*_*', 'keep recoMETs_htMetAK5_*_*', 'keep recoMETs_htMetAK7_*_*', 'keep recoMETs_htMetIC5_*_*', 'keep recoMETs_htMetKT4_*_*', 'keep recoMETs_htMetKT6_*_*', 'keep recoMETs_tcMet_*_*', 'keep recoMETs_tcMetWithPFclusters_*_*', 'keep recoPFMETs_pfMet_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 'keep recoHcalNoiseRBXs_hcalnoise_*_*', 'keep HcalNoiseSummary_hcalnoise_*_*', 'keep *HaloData_*_*_*', 'keep *BeamHaloSummary_BeamHaloSummary_*_*', 'keep *_MuonSeed_*_*', 'keep *_ancientMuonSeed_*_*', 'keep *_mergedStandAloneMuonSeeds_*_*', 'keep TrackingRecHitsOwned_globalMuons_*_*', 'keep TrackingRecHitsOwned_tevMuons_*_*', 'keep recoCaloMuons_calomuons_*_*', 'keep *_CosmicMuonSeed_*_*', 'keep recoTrackExtras_cosmicMuons_*_*', 'keep TrackingRecHitsOwned_cosmicMuons_*_*', 'keep recoTrackExtras_globalCosmicMuons_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 'keep recoTrackExtras_cosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 'keep recoTracks_cosmicsVetoTracks_*_*', 'keep *_SETMuonSeed_*_*', 'keep recoTracks_standAloneSETMuons_*_*', 'keep recoTrackExtras_standAloneSETMuons_*_*', 'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 'keep recoTracks_globalSETMuons_*_*', 'keep recoTrackExtras_globalSETMuons_*_*', 'keep TrackingRecHitsOwned_globalSETMuons_*_*', 'keep recoMuons_muonsWithSET_*_*', 'keep recoTracks_standAloneMuons_*_*', 'keep recoTrackExtras_standAloneMuons_*_*', 'keep TrackingRecHitsOwned_standAloneMuons_*_*', 'keep recoTracks_globalMuons_*_*', 'keep recoTrackExtras_globalMuons_*_*', 'keep recoTracks_tevMuons_*_*', 'keep recoTrackExtras_tevMuons_*_*', 'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoMuons_muons_*_*', 'keep booledmValueMap_muid*_*_*', 'keep recoMuonTimeExtraedmValueMap_muons_*_*', 'keep *_muonShowerInformation_*_*', 'keep recoTracks_cosmicMuons_*_*', 'keep recoTracks_globalCosmicMuons_*_*', 'keep recoMuons_muonsFromCosmics_*_*', 'keep recoTracks_cosmicMuons1Leg_*_*', 'keep recoTracks_globalCosmicMuons1Leg_*_*', 'keep recoMuons_muonsFromCosmics1Leg_*_*', 'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 'keep uintedmValueMap_cosmicsVeto_*_*', 'keep *_muIsoDepositTk_*_*', 'keep *_muIsoDepositCalByAssociatorTowers_*_*', 'keep *_muIsoDepositCalByAssociatorHits_*_*', 'keep *_muIsoDepositJets_*_*', 'keep *_muGlobalIsoDepositCtfTk_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 'keep *_muGlobalIsoDepositJets_*_*', 'keep *_impactParameterTagInfos_*_*', 'keep *_trackCountingHighEffBJetTags_*_*', 'keep *_trackCountingHighPurBJetTags_*_*', 'keep *_jetProbabilityBJetTags_*_*', 'keep *_jetBProbabilityBJetTags_*_*', 'keep *_secondaryVertexTagInfos_*_*', 'keep *_ghostTrackVertexTagInfos_*_*', 'keep *_simpleSecondaryVertexBJetTags_*_*', 'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 'keep *_combinedSecondaryVertexBJetTags_*_*', 'keep *_combinedSecondaryVertexMVABJetTags_*_*', 'keep *_ghostTrackBJetTags_*_*', 'keep *_btagSoftElectrons_*_*', 'keep *_softElectronCands_*_*', 'keep *_softPFElectrons_*_*', 'keep *_softElectronTagInfos_*_*', 'keep *_softElectronBJetTags_*_*', 'keep *_softElectronByIP3dBJetTags_*_*', 'keep *_softElectronByPtBJetTags_*_*', 'keep *_softMuonTagInfos_*_*', 'keep *_softMuonBJetTags_*_*', 'keep *_softMuonByIP3dBJetTags_*_*', 'keep *_softMuonByPtBJetTags_*_*', 'keep *_combinedMVABJetTags_*_*', 'keep *_ak5PFJetsRecoTauPiZeros_*_*', 'keep *_hpsPFTauProducer*_*_*', 'keep *_hpsPFTauDiscrimination*_*_*', 'keep *_shrinkingConePFTauProducer*_*_*', 'keep *_shrinkingConePFTauDiscrimination*_*_*', 'keep *_hpsTancTaus_*_*', 'keep *_hpsTancTausDiscrimination*_*_*', 'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_caloRecoTauTagInfoProducer_*_*', 'keep recoCaloTaus_caloRecoTauProducer*_*_*', 'keep *_caloRecoTauDiscrimination*_*_*', 'keep  *_offlinePrimaryVertices_*_*', 'keep  *_offlinePrimaryVerticesWithBS_*_*')+cms.untracked.vstring('keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 'keep  *_nuclearInteractionMaker_*_*', 'keep *_generalV0Candidates_*_*', 'keep recoGsfElectronCores_gsfElectronCores_*_*', 'keep recoGsfElectrons_gsfElectrons_*_*', 'keep floatedmValueMap_eidRobustLoose_*_*', 'keep floatedmValueMap_eidRobustTight_*_*', 'keep floatedmValueMap_eidRobustHighEnergy_*_*', 'keep floatedmValueMap_eidLoose_*_*', 'keep floatedmValueMap_eidTight_*_*', 'keep recoPhotons_photons_*_*', 'keep recoPhotonCores_photonCore_*_*', 'keep recoConversions_conversions_*_*', 'drop *_conversions_uncleanedConversions_*', 'keep recoConversions_allConversions_*_*', 'keep recoTracks_ckfOutInTracksFromConversions_*_*', 'keep recoTracks_ckfInOutTracksFromConversions_*_*', 'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 'keep *_PhotonIDProd_*_*', 'keep *_hfRecoEcalCandidate_*_*', 'keep *_hfEMClusters_*_*', 'keep *_pixelTracks_*_*', 'keep *_pixelVertices_*_*', 'drop CaloTowersSorted_towerMakerPF_*_*', 'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 'keep recoPFClusters_particleFlowClusterECAL_*_*', 'keep recoPFClusters_particleFlowClusterHCAL_*_*', 'keep recoPFClusters_particleFlowClusterPS_*_*', 'keep recoPFBlocks_particleFlowBlock_*_*', 'keep recoPFCandidates_particleFlow_*_*', 'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 'keep *_pfElectronTranslator_*_*', 'keep *_pfPhotonTranslator_*_*', 'keep *_trackerDrivenElectronSeeds_preid_*', 'keep *_offlineBeamSpot_*_*', 'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'keep L1MuGMTReadoutCollection_gtDigis_*_*', 'keep L1GctEmCand*_gctDigis_*_*', 'keep L1GctJetCand*_gctDigis_*_*', 'keep L1GctEtHad*_gctDigis_*_*', 'keep L1GctEtMiss*_gctDigis_*_*', 'keep L1GctEtTotal*_gctDigis_*_*', 'keep L1GctHtMiss*_gctDigis_*_*', 'keep L1GctJetCounts*_gctDigis_*_*', 'keep L1GctHFRingEtSums*_gctDigis_*_*', 'keep L1GctHFBitCounts*_gctDigis_*_*', 'keep LumiDetails_lumiProducer_*_*', 'keep LumiSummary_lumiProducer_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep LHERunInfoProduct_source_*_*', 'keep LHEEventProduct_source_*_*', 'keep GenRunInfoProduct_generator_*_*', 'keep GenEventInfoProduct_generator_*_*', 'keep edmHepMCProduct_generator_*_*', 'keep GenFilterInfo_*_*_*', 'keep *_genParticles_*_*', 'keep recoGenMETs_*_*_*', 'keep *_kt4GenJets_*_*', 'keep *_kt6GenJets_*_*', 'keep *_ak5GenJets_*_*', 'keep *_ak7GenJets_*_*', 'keep *_iterativeCone5GenJets_*_*', 'keep *_genParticle_*_*', 'keep edmHepMCProduct_source_*_*', 'keep SimTracks_g4SimHits_*_*', 'keep SimVertexs_g4SimHits_*_*', 'keep *_allTrackMCMatch_*_*', 'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 'keep PileupSummaryInfo_*_*_*', 'keep PileupSummaryInfos_*_*_*', 'keep L1AcceptBunchCrossings_*_*_*', 'keep L1TriggerScalerss_*_*_*', 'keep Level1TriggerScalerss_*_*_*', 'keep LumiScalerss_*_*_*', 'keep BeamSpotOnlines_*_*_*', 'keep DcsStatuss_*_*_*', 'keep *_simCscTriggerPrimitiveDigis_*_*', 'keep *_simDtTriggerPrimitiveDigis_*_*', 'keep *_simRpcTriggerDigis_*_*', 'keep *_simRctDigis_*_*', 'keep *_simCsctfDigis_*_*', 'keep *_simCsctfTrackDigis_*_*', 'keep *_simDttfDigis_*_*', 'keep *_simGctDigis_*_*', 'keep *_simGmtDigis_*_*', 'keep *_simGtDigis_*_*', 'keep *_cscTriggerPrimitiveDigis_*_*', 'keep *_dtTriggerPrimitiveDigis_*_*', 'keep *_rpcTriggerDigis_*_*', 'keep *_rctDigis_*_*', 'keep *_csctfDigis_*_*', 'keep *_csctfTrackDigis_*_*', 'keep *_dttfDigis_*_*', 'keep *_gctDigis_*_*', 'keep *_gmtDigis_*_*', 'keep *_gtDigis_*_*', 'keep *_gtEvmDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'keep LumiDetails_lumiProducer_*_*', 'keep LumiSummary_lumiProducer_*_*', 'drop *_trackingtruthprod_*_*', 'drop *_electrontruth_*_*', 'keep *_mergedtruth_MergedTrackTruth_*', 'keep CrossingFramePlaybackInfoExtended_*_*_*', 'keep *_simSiPixelDigis_*_*', 'keep *_simSiStripDigis_*_*', 'keep *_allTrackMCMatch_*_*', 'keep *_trackingParticleRecoTrackAsssociation_*_*', 'keep *_assoc2secStepTk_*_*', 'keep *_assoc2thStepTk_*_*', 'keep *_assoc2GsfTracks_*_*', 'keep *_assocOutInConversionTracks_*_*', 'keep *_assocInOutConversionTracks_*_*', 'keep *_simMuonCSCDigis_*_*', 'keep *_simMuonDTDigis_*_*', 'keep *_simMuonRPCDigis_*_*', 'keep *_simEcalDigis_*_*', 'keep *_simEcalPreshowerDigis_*_*', 'keep *_simEcalTriggerPrimitiveDigis_*_*', 'keep *_simHcalDigis_*_*', 'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*', 'keep *_simHcalTriggerPrimitiveDigis_*_*'))
)

process.FEVTDEBUGHLTEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = (cms.untracked.vstring('drop *', 'drop *', 'drop *', 'drop *', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep *_g4SimHits_*_*', 'keep edmHepMCProduct_source_*_*', 'keep *_allTrackMCMatch_*_*', 'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 'keep EBSrFlagsSorted_simEcalDigis_*_*', 'keep EESrFlagsSorted_simEcalDigis_*_*', 'keep CrossingFramePlaybackInfoExtended_*_*_*', 'keep PileupSummaryInfo_*_*_*', 'keep PileupSummaryInfos_*_*_*', 'keep LHERunInfoProduct_source_*_*', 'keep LHEEventProduct_source_*_*', 'keep GenRunInfoProduct_generator_*_*', 'keep GenEventInfoProduct_generator_*_*', 'keep edmHepMCProduct_generator_*_*', 'keep GenFilterInfo_*_*_*', 'keep *_genParticles_*_*', 'keep recoGenJets_*_*_*', 'keep *_genParticle_*_*', 'keep recoGenMETs_*_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep *_MEtoEDMConverter_*_*', 'keep *_randomEngineStateProducer_*_*', 'keep DetIdedmEDCollection_siStripDigis_*_*', 'keep *_siPixelClusters_*_*', 'keep *_siStripClusters_*_*', 'keep *_dt1DRecHits_*_*', 'keep *_dt4DSegments_*_*', 'keep *_dt1DCosmicRecHits_*_*', 'keep *_dt4DCosmicSegments_*_*', 'keep *_csc2DRecHits_*_*', 'keep *_cscSegments_*_*', 'keep *_rpcRecHits_*_*', 'keep *_hbhereco_*_*', 'keep *_hfreco_*_*', 'keep *_horeco_*_*', 'keep HBHERecHitsSorted_hbherecoMB_*_*', 'keep HORecHitsSorted_horecoMB_*_*', 'keep HFRecHitsSorted_hfrecoMB_*_*', 'keep ZDCDataFramesSorted_*Digis_*_*', 'keep ZDCRecHitsSorted_*_*_*', 'keep *_reducedHcalRecHits_*_*', 'keep *_castorreco_*_*', 'keep *_ecalPreshowerRecHit_*_*', 'keep *_ecalRecHit_*_*', 'keep *_ecalCompactTrigPrim_*_*', 'keep *_ecalTPSkim_*_*', 'keep *_selectDigi_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 'keep *_hybridSuperClusters_*_*', 'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 'keep *_multi5x5BasicClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 'drop recoClusterShapes_*_*_*', 'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 'keep *_CkfElectronCandidates_*_*', 'keep *_GsfGlobalElectronTest_*_*', 'keep *_electronMergedSeeds_*_*', 'keep recoGsfTracks_electronGsfTracks_*_*', 'keep recoGsfTrackExtras_electronGsfTracks_*_*', 'keep recoTrackExtras_electronGsfTracks_*_*', 'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoTrackExtras_generalTracks_*_*', 'keep TrackingRecHitsOwned_generalTracks_*_*', 'keep recoTracks_beamhaloTracks_*_*', 'keep recoTrackExtras_beamhaloTracks_*_*', 'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 'keep recoTracks_regionalCosmicTracks_*_*', 'keep recoTrackExtras_regionalCosmicTracks_*_*', 'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 'keep recoTracks_rsWithMaterialTracks_*_*', 'keep recoTrackExtras_rsWithMaterialTracks_*_*', 'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 'keep *_ctfPixelLess_*_*', 'keep *_dedxTruncated40_*_*', 'keep *_dedxDiscrimASmi_*_*', 'keep *_dedxHarmonic2_*_*', 'keep *_trackExtrapolator_*_*', 'keep *_kt4CaloJets_*_*', 'keep *_kt6CaloJets_*_*', 'keep *_ak5CaloJets_*_*', 'keep *_ak7CaloJets_*_*', 'keep *_iterativeCone5CaloJets_*_*', 'keep *_iterativeCone15CaloJets_*_*', 'keep *_kt4PFJets_*_*', 'keep *_kt6PFJets_*_*', 'keep *_ak5PFJets_*_*', 'keep *_ak7PFJets_*_*', 'keep *_iterativeCone5PFJets_*_*', 'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_ak5TrackJets_*_*', 'keep *_kt4TrackJets_*_*', 'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 'keep *_caloTowers_*_*', 'keep *_towerMaker_*_*', 'keep *_CastorTowerReco_*_*', 'keep *_ic5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 'keep *_iterativeCone5JetExtender_*_*', 'keep *_kt4JetTracksAssociatorAtVertex_*_*', 'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 'keep *_kt4JetExtender_*_*', 'keep *_ak5JetTracksAssociatorAtVertex_*_*', 'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak5JetExtender_*_*', 'keep *_ak7JetTracksAssociatorAtVertex_*_*', 'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak7JetExtender_*_*', 'keep *_ak5JetID_*_*', 'keep *_ak7JetID_*_*', 'keep *_ic5JetID_*_*', 'keep *_kt4JetID_*_*', 'keep *_kt6JetID_*_*', 'keep *_ak7BasicJets_*_*', 'keep *_ak7CastorJetID_*_*', 'keep recoCaloMETs_met_*_*', 'keep recoCaloMETs_metNoHF_*_*', 'keep recoCaloMETs_metHO_*_*', 'keep recoCaloMETs_corMetGlobalMuons_*_*', 'keep recoCaloMETs_metNoHFHO_*_*', 'keep recoCaloMETs_metOptHO_*_*', 'keep recoCaloMETs_metOpt_*_*', 'keep recoCaloMETs_metOptNoHFHO_*_*', 'keep recoCaloMETs_metOptNoHF_*_*', 'keep recoMETs_htMetAK5_*_*', 'keep recoMETs_htMetAK7_*_*', 'keep recoMETs_htMetIC5_*_*', 'keep recoMETs_htMetKT4_*_*', 'keep recoMETs_htMetKT6_*_*', 'keep recoMETs_tcMet_*_*', 'keep recoMETs_tcMetWithPFclusters_*_*', 'keep recoPFMETs_pfMet_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 'keep recoHcalNoiseRBXs_hcalnoise_*_*', 'keep HcalNoiseSummary_hcalnoise_*_*', 'keep *HaloData_*_*_*', 'keep *BeamHaloSummary_BeamHaloSummary_*_*', 'keep *_MuonSeed_*_*', 'keep *_ancientMuonSeed_*_*', 'keep *_mergedStandAloneMuonSeeds_*_*', 'keep TrackingRecHitsOwned_globalMuons_*_*', 'keep TrackingRecHitsOwned_tevMuons_*_*', 'keep recoCaloMuons_calomuons_*_*', 'keep *_CosmicMuonSeed_*_*', 'keep recoTrackExtras_cosmicMuons_*_*', 'keep TrackingRecHitsOwned_cosmicMuons_*_*', 'keep recoTrackExtras_globalCosmicMuons_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 'keep recoTrackExtras_cosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 'keep recoTracks_cosmicsVetoTracks_*_*', 'keep *_SETMuonSeed_*_*', 'keep recoTracks_standAloneSETMuons_*_*', 'keep recoTrackExtras_standAloneSETMuons_*_*', 'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 'keep recoTracks_globalSETMuons_*_*', 'keep recoTrackExtras_globalSETMuons_*_*', 'keep TrackingRecHitsOwned_globalSETMuons_*_*', 'keep recoMuons_muonsWithSET_*_*', 'keep recoTracks_standAloneMuons_*_*', 'keep recoTrackExtras_standAloneMuons_*_*', 'keep TrackingRecHitsOwned_standAloneMuons_*_*', 'keep recoTracks_globalMuons_*_*', 'keep recoTrackExtras_globalMuons_*_*', 'keep recoTracks_tevMuons_*_*', 'keep recoTrackExtras_tevMuons_*_*', 'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoMuons_muons_*_*', 'keep booledmValueMap_muid*_*_*', 'keep recoMuonTimeExtraedmValueMap_muons_*_*', 'keep *_muonShowerInformation_*_*', 'keep recoTracks_cosmicMuons_*_*', 'keep recoTracks_globalCosmicMuons_*_*', 'keep recoMuons_muonsFromCosmics_*_*', 'keep recoTracks_cosmicMuons1Leg_*_*', 'keep recoTracks_globalCosmicMuons1Leg_*_*', 'keep recoMuons_muonsFromCosmics1Leg_*_*', 'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 'keep uintedmValueMap_cosmicsVeto_*_*', 'keep *_muIsoDepositTk_*_*', 'keep *_muIsoDepositCalByAssociatorTowers_*_*', 'keep *_muIsoDepositCalByAssociatorHits_*_*', 'keep *_muIsoDepositJets_*_*', 'keep *_muGlobalIsoDepositCtfTk_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 'keep *_muGlobalIsoDepositJets_*_*', 'keep *_impactParameterTagInfos_*_*', 'keep *_trackCountingHighEffBJetTags_*_*', 'keep *_trackCountingHighPurBJetTags_*_*', 'keep *_jetProbabilityBJetTags_*_*', 'keep *_jetBProbabilityBJetTags_*_*', 'keep *_secondaryVertexTagInfos_*_*', 'keep *_ghostTrackVertexTagInfos_*_*', 'keep *_simpleSecondaryVertexBJetTags_*_*', 'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 'keep *_combinedSecondaryVertexBJetTags_*_*', 'keep *_combinedSecondaryVertexMVABJetTags_*_*', 'keep *_ghostTrackBJetTags_*_*', 'keep *_btagSoftElectrons_*_*', 'keep *_softElectronCands_*_*', 'keep *_softPFElectrons_*_*', 'keep *_softElectronTagInfos_*_*', 'keep *_softElectronBJetTags_*_*', 'keep *_softElectronByIP3dBJetTags_*_*', 'keep *_softElectronByPtBJetTags_*_*', 'keep *_softMuonTagInfos_*_*', 'keep *_softMuonBJetTags_*_*', 'keep *_softMuonByIP3dBJetTags_*_*', 'keep *_softMuonByPtBJetTags_*_*', 'keep *_combinedMVABJetTags_*_*', 'keep *_ak5PFJetsRecoTauPiZeros_*_*', 'keep *_hpsPFTauProducer*_*_*', 'keep *_hpsPFTauDiscrimination*_*_*', 'keep *_shrinkingConePFTauProducer*_*_*', 'keep *_shrinkingConePFTauDiscrimination*_*_*', 'keep *_hpsTancTaus_*_*', 'keep *_hpsTancTausDiscrimination*_*_*', 'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_caloRecoTauTagInfoProducer_*_*', 'keep recoCaloTaus_caloRecoTauProducer*_*_*', 'keep *_caloRecoTauDiscrimination*_*_*', 'keep  *_offlinePrimaryVertices_*_*')+cms.untracked.vstring('keep  *_offlinePrimaryVerticesWithBS_*_*', 'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 'keep  *_nuclearInteractionMaker_*_*', 'keep *_generalV0Candidates_*_*', 'keep recoGsfElectronCores_gsfElectronCores_*_*', 'keep recoGsfElectrons_gsfElectrons_*_*', 'keep floatedmValueMap_eidRobustLoose_*_*', 'keep floatedmValueMap_eidRobustTight_*_*', 'keep floatedmValueMap_eidRobustHighEnergy_*_*', 'keep floatedmValueMap_eidLoose_*_*', 'keep floatedmValueMap_eidTight_*_*', 'keep recoPhotons_photons_*_*', 'keep recoPhotonCores_photonCore_*_*', 'keep recoConversions_conversions_*_*', 'drop *_conversions_uncleanedConversions_*', 'keep recoConversions_allConversions_*_*', 'keep recoTracks_ckfOutInTracksFromConversions_*_*', 'keep recoTracks_ckfInOutTracksFromConversions_*_*', 'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 'keep *_PhotonIDProd_*_*', 'keep *_hfRecoEcalCandidate_*_*', 'keep *_hfEMClusters_*_*', 'keep *_pixelTracks_*_*', 'keep *_pixelVertices_*_*', 'drop CaloTowersSorted_towerMakerPF_*_*', 'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 'keep recoPFClusters_particleFlowClusterECAL_*_*', 'keep recoPFClusters_particleFlowClusterHCAL_*_*', 'keep recoPFClusters_particleFlowClusterPS_*_*', 'keep recoPFBlocks_particleFlowBlock_*_*', 'keep recoPFCandidates_particleFlow_*_*', 'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 'keep *_pfElectronTranslator_*_*', 'keep *_pfPhotonTranslator_*_*', 'keep *_trackerDrivenElectronSeeds_preid_*', 'keep *_offlineBeamSpot_*_*', 'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'keep L1MuGMTReadoutCollection_gtDigis_*_*', 'keep L1GctEmCand*_gctDigis_*_*', 'keep L1GctJetCand*_gctDigis_*_*', 'keep L1GctEtHad*_gctDigis_*_*', 'keep L1GctEtMiss*_gctDigis_*_*', 'keep L1GctEtTotal*_gctDigis_*_*', 'keep L1GctHtMiss*_gctDigis_*_*', 'keep L1GctJetCounts*_gctDigis_*_*', 'keep L1GctHFRingEtSums*_gctDigis_*_*', 'keep L1GctHFBitCounts*_gctDigis_*_*', 'keep LumiDetails_lumiProducer_*_*', 'keep LumiSummary_lumiProducer_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep LHERunInfoProduct_source_*_*', 'keep LHEEventProduct_source_*_*', 'keep GenRunInfoProduct_generator_*_*', 'keep GenEventInfoProduct_generator_*_*', 'keep edmHepMCProduct_generator_*_*', 'keep GenFilterInfo_*_*_*', 'keep *_genParticles_*_*', 'keep recoGenMETs_*_*_*', 'keep *_kt4GenJets_*_*', 'keep *_kt6GenJets_*_*', 'keep *_ak5GenJets_*_*', 'keep *_ak7GenJets_*_*', 'keep *_iterativeCone5GenJets_*_*', 'keep *_genParticle_*_*', 'keep edmHepMCProduct_source_*_*', 'keep SimTracks_g4SimHits_*_*', 'keep SimVertexs_g4SimHits_*_*', 'keep *_allTrackMCMatch_*_*', 'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 'keep PileupSummaryInfo_*_*_*', 'keep PileupSummaryInfos_*_*_*', 'keep L1AcceptBunchCrossings_*_*_*', 'keep L1TriggerScalerss_*_*_*', 'keep Level1TriggerScalerss_*_*_*', 'keep LumiScalerss_*_*_*', 'keep BeamSpotOnlines_*_*_*', 'keep DcsStatuss_*_*_*', 'keep *_simCscTriggerPrimitiveDigis_*_*', 'keep *_simDtTriggerPrimitiveDigis_*_*', 'keep *_simRpcTriggerDigis_*_*', 'keep *_simRctDigis_*_*', 'keep *_simCsctfDigis_*_*', 'keep *_simCsctfTrackDigis_*_*', 'keep *_simDttfDigis_*_*', 'keep *_simGctDigis_*_*', 'keep *_simGmtDigis_*_*', 'keep *_simGtDigis_*_*', 'keep *_cscTriggerPrimitiveDigis_*_*', 'keep *_dtTriggerPrimitiveDigis_*_*', 'keep *_rpcTriggerDigis_*_*', 'keep *_rctDigis_*_*', 'keep *_csctfDigis_*_*', 'keep *_csctfTrackDigis_*_*', 'keep *_dttfDigis_*_*', 'keep *_gctDigis_*_*', 'keep *_gmtDigis_*_*', 'keep *_gtDigis_*_*', 'keep *_gtEvmDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'keep LumiDetails_lumiProducer_*_*', 'keep LumiSummary_lumiProducer_*_*', 'drop *_trackingtruthprod_*_*', 'drop *_electrontruth_*_*', 'keep *_mergedtruth_MergedTrackTruth_*', 'keep CrossingFramePlaybackInfoExtended_*_*_*', 'keep *_simSiPixelDigis_*_*', 'keep *_simSiStripDigis_*_*', 'keep *_allTrackMCMatch_*_*', 'keep *_trackingParticleRecoTrackAsssociation_*_*', 'keep *_assoc2secStepTk_*_*', 'keep *_assoc2thStepTk_*_*', 'keep *_assoc2GsfTracks_*_*', 'keep *_assocOutInConversionTracks_*_*', 'keep *_assocInOutConversionTracks_*_*', 'keep *_simMuonCSCDigis_*_*', 'keep *_simMuonDTDigis_*_*', 'keep *_simMuonRPCDigis_*_*', 'keep *_simEcalDigis_*_*', 'keep *_simEcalPreshowerDigis_*_*', 'keep *_simEcalTriggerPrimitiveDigis_*_*', 'keep *_simHcalDigis_*_*', 'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*', 'keep *_simHcalTriggerPrimitiveDigis_*_*', 'drop *_hlt*_*_*', 'keep *_hltAlCaEtaRecHitsFilter_*_*', 'keep *_hltAlCaPhiSymStream_*_*', 'keep *_hltAlCaPi0RecHitsFilter_*_*', 'keep *_hltAntiKT5L2L3CorrCaloJets_*_*', 'keep *_hltBLifetimeL25AssociatorStartupU_*_*', 'keep *_hltBLifetimeL25BJetTagsStartupU_*_*', 'keep *_hltBLifetimeL25JetsStartupU_*_*', 'keep *_hltBLifetimeL25TagInfosStartupU_*_*', 'keep *_hltBLifetimeL3AssociatorStartupU_*_*', 'keep *_hltBLifetimeL3BJetTagsStartupU_*_*', 'keep *_hltBLifetimeL3JetsStartupU_*_*', 'keep *_hltBLifetimeL3TagInfosStartupU_*_*', 'keep *_hltBLifetimeRegionalCtfWithMaterialTracksStartupU_*_*', 'keep *_hltBSoftMuonDiJet100L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet100L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet100L25Jets_*_*', 'keep *_hltBSoftMuonDiJet100L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet100Mu9L3_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet20L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet20L25Jets_*_*', 'keep *_hltBSoftMuonDiJet20L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet20Mu5L3_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet60L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet60L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet60L25Jets_*_*', 'keep *_hltBSoftMuonDiJet60L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet60Mu7L3_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet80L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet80L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet80L25Jets_*_*', 'keep *_hltBSoftMuonDiJet80L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet80Mu9L3_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3TagInfos_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet100_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet20_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet60_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet80_*_*', 'keep *_hltBSoftMuonL25BJetTagsUByDR_*_*', 'keep *_hltBSoftMuonL25JetsU_*_*', 'keep *_hltBSoftMuonL25TagInfosU_*_*', 'keep *_hltBSoftMuonL3BJetTagsUByDR_*_*', 'keep *_hltBSoftMuonL3BJetTagsUByPt_*_*', 'keep *_hltBSoftMuonL3TagInfosU_*_*', 'keep *_hltCkfL1IsoLargeWindowTrackCandidates_*_*', 'keep *_hltCkfL1NonIsoLargeWindowTrackCandidates_*_*', 'keep *_hltCorrectedHybridSuperClustersL1Isolated_*_*', 'keep *_hltCorrectedHybridSuperClustersL1NonIsolated_*_*', 'keep *_hltCorrectedMulti5x5EndcapSuperClustersWithPreshowerL1Isolated_*_*', 'keep *_hltCorrectedMulti5x5EndcapSuperClustersWithPreshowerL1NonIsolated_*_*', 'keep *_hltCsc2DRecHits_*_*', 'keep *_hltCscSegments_*_*', 'keep *_hltCtfL1IsoLargeWindowWithMaterialTracks_*_*', 'keep *_hltCtfL1NonIsoLargeWindowWithMaterialTracks_*_*', 'keep *_hltDoublePFTauTightIso20Track5_*_*', 'keep *_hltDoublePFTauTightIso20Track_*_*', 'keep *_hltDt1DRecHits_*_*', 'keep *_hltDt4DSegments_*_*', 'keep *_hltESRegionalPi0EtaRecHit_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTTrackIsolFilter_*_*', 'keep *_hltEle17CaloIdVTCaloIsoVTTrkIdTTrkIsoVTSC8TrackIsolFilter_*_*', 'keep *_hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched_*_*', 'keep *_hltFilterL25LeadingTrackPtCutDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL25LeadingTrackPtCutSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EcalIsolationDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL2EcalIsolationDoubleLooseIsoTau15_*_*', 'keep *_hltFilterL2EcalIsolationSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EcalIsolationSingleLooseIsoTau20_*_*', 'keep *_hltFilterL2EtCutDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL2EtCutDoubleLooseIsoTau15_*_*', 'keep *_hltFilterL2EtCutDoublePFIsoTau20Trk55_*_*', 'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET45_*_*', 'keep *_hltFilterL2EtCutSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EtCutSingleLooseIsoTau20_*_*', 'keep *_hltFilterL3TrackIsolationDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL3TrackIsolationSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 'keep *_hltFilterSingleIsoPFTau35Trk20MET45LeadTrack20MET45IsolationL1HLTMatched_*_*', 'keep *_hltGctDigis_*_*', 'keep *_hltGtDigis_*_*', 'keep *_hltHITCtfWithMaterialTracksHB8E29_*_*', 'keep *_hltHITCtfWithMaterialTracksHE8E29_*_*', 'keep *_hltHITIPTCorrectorHB8E29_*_*', 'keep *_hltHITIPTCorrectorHE8E29_*_*', 'keep *_hltHcalDigis_*_*', 'keep *_hltHoreco_*_*', 'keep *_hltIconeCentral1Regional_*_*', 'keep *_hltIconeCentral2Regional_*_*', 'keep *_hltIconeCentral3Regional_*_*', 'keep *_hltIconeCentral4Regional_*_*', 'keep *_hltIconeTau1Regional_*_*', 'keep *_hltIconeTau2Regional_*_*', 'keep *_hltIconeTau3Regional_*_*', 'keep *_hltIconeTau4Regional_*_*', 'keep *_hltIsolPixelTrackProdHB8E29_*_*', 'keep *_hltIsolPixelTrackProdHB_*_*', 'keep *_hltIsolPixelTrackProdHE8E29_*_*', 'keep *_hltIsolPixelTrackProdHE_*_*')+cms.untracked.vstring('keep *_hltIterativeCone5CaloJets_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep *_hltL1IsoEgammaRegionalCTFFinalFitWithMaterial_*_*', 'keep *_hltL1IsoEgammaRegionalCkfTrackCandidates_*_*', 'keep *_hltL1IsoEgammaRegionalPixelSeedGenerator_*_*', 'keep *_hltL1IsoHLTClusterShape_*_*', 'keep *_hltL1IsoLargeWindowElectronPixelSeeds_*_*', 'keep *_hltL1IsoPhotonHollowTrackIsol_*_*', 'keep *_hltL1IsoRecoEcalCandidate_*_*', 'keep *_hltL1IsoSiStripElectronPixelSeeds_*_*', 'keep *_hltL1IsoStartUpElectronPixelSeeds_*_*', 'keep *_hltL1IsolatedElectronHcalIsol_*_*', 'keep *_hltL1IsolatedPhotonEcalIsol_*_*', 'keep *_hltL1IsolatedPhotonHcalIsol_*_*', 'keep *_hltL1NonIsoEgammaRegionalCTFFinalFitWithMaterial_*_*', 'keep *_hltL1NonIsoEgammaRegionalCkfTrackCandidates_*_*', 'keep *_hltL1NonIsoEgammaRegionalPixelSeedGenerator_*_*', 'keep *_hltL1NonIsoHLTClusterShape_*_*', 'keep *_hltL1NonIsoLargeWindowElectronPixelSeeds_*_*', 'keep *_hltL1NonIsoPhotonHollowTrackIsol_*_*', 'keep *_hltL1NonIsoRecoEcalCandidate_*_*', 'keep *_hltL1NonIsoSiStripElectronPixelSeeds_*_*', 'keep *_hltL1NonIsoStartUpElectronPixelSeeds_*_*', 'keep *_hltL1NonIsolatedElectronHcalIsol_*_*', 'keep *_hltL1NonIsolatedPhotonEcalIsol_*_*', 'keep *_hltL1NonIsolatedPhotonHcalIsol_*_*', 'keep *_hltL1extraParticles_*_*', 'keep *_hltL1sDoubleIsoTau15Trk5_*_*', 'keep *_hltL1sDoubleLooseIsoTau15_*_*', 'keep *_hltL1sL1SingleEG12_*_*', 'keep *_hltL1sL1SingleMu10_*_*', 'keep *_hltL1sSingleIsoTau35Trk20MET45_*_*', 'keep *_hltL1sSingleLooseIsoTau20_*_*', 'keep *_hltL25TauConeIsolation_*_*', 'keep *_hltL25TauCtfWithMaterialTracks_*_*', 'keep *_hltL25TauJetTracksAssociator_*_*', 'keep *_hltL25TauLeadingTrackPtCutSelector_*_*', 'keep *_hltL2MuonCandidatesNoVtx_*_*', 'keep *_hltL2MuonCandidates_*_*', 'keep *_hltL2MuonIsolations_*_*', 'keep *_hltL2MuonSeeds_*_*', 'keep *_hltL2MuonsCandidates_*_*', 'keep *_hltL2Muons_*_*', 'keep *_hltL2TauJets_*_*', 'keep *_hltL2TauNarrowConeIsolationProducer_*_*', 'keep *_hltL2TauRelaxingIsolationSelector_*_*', 'keep *_hltL3MuonCandidatesNoVtx_*_*', 'keep *_hltL3MuonCandidates_*_*', 'keep *_hltL3MuonIsolations_*_*', 'keep *_hltL3MuonsCandidates_*_*', 'keep *_hltL3MuonsIOHit_*_*', 'keep *_hltL3MuonsLinksCombination_*_*', 'keep *_hltL3MuonsNoVtx_*_*', 'keep *_hltL3MuonsOIHit_*_*', 'keep *_hltL3MuonsOIState_*_*', 'keep *_hltL3Muons_*_*', 'keep *_hltL3TauConeIsolation_*_*', 'keep *_hltL3TauCtfWithMaterialTracks_*_*', 'keep *_hltL3TauIsolationSelector_*_*', 'keep *_hltL3TauJetTracksAssociator_*_*', 'keep *_hltL3TkFromL2OICombination_*_*', 'keep *_hltL3TkTracksFromL2IOHit_*_*', 'keep *_hltL3TkTracksFromL2OIHit_*_*', 'keep *_hltL3TkTracksFromL2OIState_*_*', 'keep *_hltL3TkTracksFromL2_*_*', 'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 'keep *_hltL3TrackCandidateFromL2OIState_*_*', 'keep *_hltL3TrackCandidateFromL2_*_*', 'keep *_hltL3TrajSeedIOHit_*_*', 'keep *_hltL3TrajSeedOIHit_*_*', 'keep *_hltL3TrajSeedOIState_*_*', 'keep *_hltL3TrajectorySeedNoVtx_*_*', 'keep *_hltL3TrajectorySeed_*_*', 'keep *_hltMCJetCorJetIcone5HF07_*_*', 'keep *_hltMet_*_*', 'keep *_hltMu15L3Filtered15_*_*', 'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 'keep *_hltMuTrackJpsiCtfTracks_*_*', 'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 'keep *_hltMuTrackJpsiPixelTrackSelector_*_*', 'keep *_hltMuTrackJpsiTrackSeeds_*_*', 'keep *_hltMuonCSCDigis_*_*', 'keep *_hltMuonDTDigis_*_*', 'keep *_hltMuonRPCDigis_*_*', 'keep *_hltOfflineBeamSpot_*_*', 'keep *_hltOverlapFilterIsoEle15IsoPFTau15_*_*', 'keep *_hltOverlapFilterMu15IsoPFTau20_*_*', 'keep *_hltPFTau15TrackLooseIso_*_*', 'keep *_hltPFTau15Track_*_*', 'keep *_hltPFTau15_*_*', 'keep *_hltPFTau20TrackLooseIso_*_*', 'keep *_hltPFTau20Track_*_*', 'keep *_hltPFTauTightIso35Track_*_*', 'keep *_hltPixelMatchElectronsL1Iso_*_*', 'keep *_hltPixelMatchElectronsL1NonIso_*_*', 'keep *_hltPixelMatchLargeWindowElectronsL1Iso_*_*', 'keep *_hltPixelMatchLargeWindowElectronsL1NonIso_*_*', 'keep *_hltPixelTracks_*_*', 'keep *_hltPixelVertices_*_*', 'keep *_hltRpcRecHits_*_*', 'keep *_hltSiPixelClusters_*_*', 'keep *_hltSiPixelRecHits_*_*', 'keep *_hltSiStripClusters_*_*', 'keep *_hltSiStripRawToClustersFacility_*_*', 'keep *_hltTowerMakerForAll_*_*', 'keep *_hltTowerMakerForMuons_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep L1GlobalTriggerReadoutRecord_*_*_*', 'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 'keep L1MuGMTCands_hltGtDigis_*_*', 'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 'keep TrackingRecHitsOwned_hltL3Muons_*_*', 'keep edmTriggerResults_*_*_*', 'keep l1extraL1EmParticles_*_*_*', 'keep l1extraL1EmParticles_hltL1extraParticles_*_*', 'keep l1extraL1EtMissParticles_hltL1extraParticles_*_*', 'keep l1extraL1JetParticles_hltL1extraParticles_*_*', 'keep l1extraL1MuonParticles_hltL1extraParticles_*_*', 'keep recoCaloJets_hltIterativeCone5CaloJets_*_*', 'keep recoCaloMETs_hltMet_*_*', 'keep recoElectronSeeds_hltL1IsoLargeWindowElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1IsoSiStripElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1IsoStartUpElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoLargeWindowElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoSiStripElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoStartUpElectronPixelSeeds_*_*', 'keep recoElectrons_hltPixelMatchLargeWindowElectronsL1Iso_*_*', 'keep recoElectrons_hltPixelMatchLargeWindowElectronsL1NonIso_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedElectronHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonTrackIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedElectronHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonTrackIsol_*_*', 'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 'keep triggerTriggerEventWithRefs_*_*_*', 'keep triggerTriggerEventWithRefs_hltTriggerSummaryRAW_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep triggerTriggerEvent_hltTriggerSummaryAOD_*_*', 'keep *_hltAntiKT5CaloJets_*_*', 'keep *_hltAntiKT5PFJets_*_*', 'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonMu5L3_*_*', 'keep *_hltConvPFTauTightIsoTrackPt20Isolation_*_*', 'keep *_hltConvPFTauTightIsoTrackPt20_*_*', 'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 'keep *_hltConvPFTausTightIso_*_*', 'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 'keep *_hltConvPFTausTrackFinding_*_*', 'keep *_hltConvPFTaus_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTDphiFilter_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTDphiFilter_*_*', 'keep *_hltFilterL2EtCutDoublePFIsoTau20Trk5_*_*', 'keep *_hltHITIPTCorrectorHB_*_*', 'keep *_hltHITIPTCorrectorHE_*_*', 'keep *_hltL1HLTDoubleIsoPFTau20Trk5JetsMatch_*_*', 'keep *_hltL1HLTSingleIsoPFTau35Trk20Met45JetsMatch_*_*', 'keep *_hltL1IsoElectronTrackIsol_*_*', 'keep *_hltL1NonIsoElectronTrackIsol_*_*', 'keep *_hltL2TauJets_*_*', 'keep *_hltMet_*_*', 'keep *_hltPFTauJetTracksAssociator_*_*', 'keep *_hltPFTauTagInfo_*_*', 'keep *_hltParticleFlow_*_*', 'keep *_hltPixelMatchElectronsL1Iso_*_*', 'keep *_hltPixelMatchElectronsL1NonIso_*_*', 'keep *_hltSingleMu15L3Filtered15_*_*'))
)

process.FEVTEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = (cms.untracked.vstring('drop *', 'drop *', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep DetIdedmEDCollection_siStripDigis_*_*', 'keep *_siPixelClusters_*_*', 'keep *_siStripClusters_*_*', 'keep *_dt1DRecHits_*_*', 'keep *_dt4DSegments_*_*', 'keep *_dt1DCosmicRecHits_*_*', 'keep *_dt4DCosmicSegments_*_*', 'keep *_csc2DRecHits_*_*', 'keep *_cscSegments_*_*', 'keep *_rpcRecHits_*_*', 'keep *_hbhereco_*_*', 'keep *_hfreco_*_*', 'keep *_horeco_*_*', 'keep HBHERecHitsSorted_hbherecoMB_*_*', 'keep HORecHitsSorted_horecoMB_*_*', 'keep HFRecHitsSorted_hfrecoMB_*_*', 'keep ZDCDataFramesSorted_*Digis_*_*', 'keep ZDCRecHitsSorted_*_*_*', 'keep *_reducedHcalRecHits_*_*', 'keep *_castorreco_*_*', 'keep *_ecalPreshowerRecHit_*_*', 'keep *_ecalRecHit_*_*', 'keep *_ecalCompactTrigPrim_*_*', 'keep *_ecalTPSkim_*_*', 'keep *_selectDigi_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 'keep *_hybridSuperClusters_*_*', 'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 'keep *_multi5x5BasicClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 'drop recoClusterShapes_*_*_*', 'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 'keep *_CkfElectronCandidates_*_*', 'keep *_GsfGlobalElectronTest_*_*', 'keep *_electronMergedSeeds_*_*', 'keep recoGsfTracks_electronGsfTracks_*_*', 'keep recoGsfTrackExtras_electronGsfTracks_*_*', 'keep recoTrackExtras_electronGsfTracks_*_*', 'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoTrackExtras_generalTracks_*_*', 'keep TrackingRecHitsOwned_generalTracks_*_*', 'keep recoTracks_beamhaloTracks_*_*', 'keep recoTrackExtras_beamhaloTracks_*_*', 'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 'keep recoTracks_regionalCosmicTracks_*_*', 'keep recoTrackExtras_regionalCosmicTracks_*_*', 'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 'keep recoTracks_rsWithMaterialTracks_*_*', 'keep recoTrackExtras_rsWithMaterialTracks_*_*', 'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 'keep *_ctfPixelLess_*_*', 'keep *_dedxTruncated40_*_*', 'keep *_dedxDiscrimASmi_*_*', 'keep *_dedxHarmonic2_*_*', 'keep *_trackExtrapolator_*_*', 'keep *_kt4CaloJets_*_*', 'keep *_kt6CaloJets_*_*', 'keep *_ak5CaloJets_*_*', 'keep *_ak7CaloJets_*_*', 'keep *_iterativeCone5CaloJets_*_*', 'keep *_iterativeCone15CaloJets_*_*', 'keep *_kt4PFJets_*_*', 'keep *_kt6PFJets_*_*', 'keep *_ak5PFJets_*_*', 'keep *_ak7PFJets_*_*', 'keep *_iterativeCone5PFJets_*_*', 'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_ak5TrackJets_*_*', 'keep *_kt4TrackJets_*_*', 'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 'keep *_caloTowers_*_*', 'keep *_towerMaker_*_*', 'keep *_CastorTowerReco_*_*', 'keep *_ic5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 'keep *_iterativeCone5JetExtender_*_*', 'keep *_kt4JetTracksAssociatorAtVertex_*_*', 'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 'keep *_kt4JetExtender_*_*', 'keep *_ak5JetTracksAssociatorAtVertex_*_*', 'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak5JetExtender_*_*', 'keep *_ak7JetTracksAssociatorAtVertex_*_*', 'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak7JetExtender_*_*', 'keep *_ak5JetID_*_*', 'keep *_ak7JetID_*_*', 'keep *_ic5JetID_*_*', 'keep *_kt4JetID_*_*', 'keep *_kt6JetID_*_*', 'keep *_ak7BasicJets_*_*', 'keep *_ak7CastorJetID_*_*', 'keep recoCaloMETs_met_*_*', 'keep recoCaloMETs_metNoHF_*_*', 'keep recoCaloMETs_metHO_*_*', 'keep recoCaloMETs_corMetGlobalMuons_*_*', 'keep recoCaloMETs_metNoHFHO_*_*', 'keep recoCaloMETs_metOptHO_*_*', 'keep recoCaloMETs_metOpt_*_*', 'keep recoCaloMETs_metOptNoHFHO_*_*', 'keep recoCaloMETs_metOptNoHF_*_*', 'keep recoMETs_htMetAK5_*_*', 'keep recoMETs_htMetAK7_*_*', 'keep recoMETs_htMetIC5_*_*', 'keep recoMETs_htMetKT4_*_*', 'keep recoMETs_htMetKT6_*_*', 'keep recoMETs_tcMet_*_*', 'keep recoMETs_tcMetWithPFclusters_*_*', 'keep recoPFMETs_pfMet_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 'keep recoHcalNoiseRBXs_hcalnoise_*_*', 'keep HcalNoiseSummary_hcalnoise_*_*', 'keep *HaloData_*_*_*', 'keep *BeamHaloSummary_BeamHaloSummary_*_*', 'keep *_MuonSeed_*_*', 'keep *_ancientMuonSeed_*_*', 'keep *_mergedStandAloneMuonSeeds_*_*', 'keep TrackingRecHitsOwned_globalMuons_*_*', 'keep TrackingRecHitsOwned_tevMuons_*_*', 'keep recoCaloMuons_calomuons_*_*', 'keep *_CosmicMuonSeed_*_*', 'keep recoTrackExtras_cosmicMuons_*_*', 'keep TrackingRecHitsOwned_cosmicMuons_*_*', 'keep recoTrackExtras_globalCosmicMuons_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 'keep recoTrackExtras_cosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 'keep recoTracks_cosmicsVetoTracks_*_*', 'keep *_SETMuonSeed_*_*', 'keep recoTracks_standAloneSETMuons_*_*', 'keep recoTrackExtras_standAloneSETMuons_*_*', 'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 'keep recoTracks_globalSETMuons_*_*', 'keep recoTrackExtras_globalSETMuons_*_*', 'keep TrackingRecHitsOwned_globalSETMuons_*_*', 'keep recoMuons_muonsWithSET_*_*', 'keep recoTracks_standAloneMuons_*_*', 'keep recoTrackExtras_standAloneMuons_*_*', 'keep TrackingRecHitsOwned_standAloneMuons_*_*', 'keep recoTracks_globalMuons_*_*', 'keep recoTrackExtras_globalMuons_*_*', 'keep recoTracks_tevMuons_*_*', 'keep recoTrackExtras_tevMuons_*_*', 'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoMuons_muons_*_*', 'keep booledmValueMap_muid*_*_*', 'keep recoMuonTimeExtraedmValueMap_muons_*_*', 'keep *_muonShowerInformation_*_*', 'keep recoTracks_cosmicMuons_*_*', 'keep recoTracks_globalCosmicMuons_*_*', 'keep recoMuons_muonsFromCosmics_*_*', 'keep recoTracks_cosmicMuons1Leg_*_*', 'keep recoTracks_globalCosmicMuons1Leg_*_*', 'keep recoMuons_muonsFromCosmics1Leg_*_*', 'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 'keep uintedmValueMap_cosmicsVeto_*_*', 'keep *_muIsoDepositTk_*_*', 'keep *_muIsoDepositCalByAssociatorTowers_*_*', 'keep *_muIsoDepositCalByAssociatorHits_*_*', 'keep *_muIsoDepositJets_*_*', 'keep *_muGlobalIsoDepositCtfTk_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 'keep *_muGlobalIsoDepositJets_*_*', 'keep *_impactParameterTagInfos_*_*', 'keep *_trackCountingHighEffBJetTags_*_*', 'keep *_trackCountingHighPurBJetTags_*_*', 'keep *_jetProbabilityBJetTags_*_*', 'keep *_jetBProbabilityBJetTags_*_*', 'keep *_secondaryVertexTagInfos_*_*', 'keep *_ghostTrackVertexTagInfos_*_*', 'keep *_simpleSecondaryVertexBJetTags_*_*', 'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 'keep *_combinedSecondaryVertexBJetTags_*_*', 'keep *_combinedSecondaryVertexMVABJetTags_*_*', 'keep *_ghostTrackBJetTags_*_*', 'keep *_btagSoftElectrons_*_*', 'keep *_softElectronCands_*_*', 'keep *_softPFElectrons_*_*', 'keep *_softElectronTagInfos_*_*', 'keep *_softElectronBJetTags_*_*', 'keep *_softElectronByIP3dBJetTags_*_*', 'keep *_softElectronByPtBJetTags_*_*', 'keep *_softMuonTagInfos_*_*', 'keep *_softMuonBJetTags_*_*', 'keep *_softMuonByIP3dBJetTags_*_*', 'keep *_softMuonByPtBJetTags_*_*', 'keep *_combinedMVABJetTags_*_*', 'keep *_ak5PFJetsRecoTauPiZeros_*_*', 'keep *_hpsPFTauProducer*_*_*', 'keep *_hpsPFTauDiscrimination*_*_*', 'keep *_shrinkingConePFTauProducer*_*_*', 'keep *_shrinkingConePFTauDiscrimination*_*_*', 'keep *_hpsTancTaus_*_*', 'keep *_hpsTancTausDiscrimination*_*_*', 'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_caloRecoTauTagInfoProducer_*_*', 'keep recoCaloTaus_caloRecoTauProducer*_*_*', 'keep *_caloRecoTauDiscrimination*_*_*', 'keep  *_offlinePrimaryVertices_*_*', 'keep  *_offlinePrimaryVerticesWithBS_*_*', 'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 'keep  *_nuclearInteractionMaker_*_*', 'keep *_generalV0Candidates_*_*', 'keep recoGsfElectronCores_gsfElectronCores_*_*', 'keep recoGsfElectrons_gsfElectrons_*_*', 'keep floatedmValueMap_eidRobustLoose_*_*', 'keep floatedmValueMap_eidRobustTight_*_*', 'keep floatedmValueMap_eidRobustHighEnergy_*_*', 'keep floatedmValueMap_eidLoose_*_*', 'keep floatedmValueMap_eidTight_*_*', 'keep recoPhotons_photons_*_*', 'keep recoPhotonCores_photonCore_*_*', 'keep recoConversions_conversions_*_*', 'drop *_conversions_uncleanedConversions_*', 'keep recoConversions_allConversions_*_*', 'keep recoTracks_ckfOutInTracksFromConversions_*_*', 'keep recoTracks_ckfInOutTracksFromConversions_*_*', 'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 'keep *_PhotonIDProd_*_*', 'keep *_hfRecoEcalCandidate_*_*', 'keep *_hfEMClusters_*_*', 'keep *_pixelTracks_*_*', 'keep *_pixelVertices_*_*', 'drop CaloTowersSorted_towerMakerPF_*_*')+cms.untracked.vstring('keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 'keep recoPFClusters_particleFlowClusterECAL_*_*', 'keep recoPFClusters_particleFlowClusterHCAL_*_*', 'keep recoPFClusters_particleFlowClusterPS_*_*', 'keep recoPFBlocks_particleFlowBlock_*_*', 'keep recoPFCandidates_particleFlow_*_*', 'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 'keep *_pfElectronTranslator_*_*', 'keep *_pfPhotonTranslator_*_*', 'keep *_trackerDrivenElectronSeeds_preid_*', 'keep *_offlineBeamSpot_*_*', 'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'keep L1MuGMTReadoutCollection_gtDigis_*_*', 'keep L1GctEmCand*_gctDigis_*_*', 'keep L1GctJetCand*_gctDigis_*_*', 'keep L1GctEtHad*_gctDigis_*_*', 'keep L1GctEtMiss*_gctDigis_*_*', 'keep L1GctEtTotal*_gctDigis_*_*', 'keep L1GctHtMiss*_gctDigis_*_*', 'keep L1GctJetCounts*_gctDigis_*_*', 'keep L1GctHFRingEtSums*_gctDigis_*_*', 'keep L1GctHFBitCounts*_gctDigis_*_*', 'keep LumiDetails_lumiProducer_*_*', 'keep LumiSummary_lumiProducer_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep L1AcceptBunchCrossings_*_*_*', 'keep L1TriggerScalerss_*_*_*', 'keep Level1TriggerScalerss_*_*_*', 'keep LumiScalerss_*_*_*', 'keep BeamSpotOnlines_*_*_*', 'keep DcsStatuss_*_*_*', 'keep *_logErrorHarvester_*_*'))
)

process.FEVTHLTALLEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = (cms.untracked.vstring('drop *', 'drop *', 'drop *', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep DetIdedmEDCollection_siStripDigis_*_*', 'keep *_siPixelClusters_*_*', 'keep *_siStripClusters_*_*', 'keep *_dt1DRecHits_*_*', 'keep *_dt4DSegments_*_*', 'keep *_dt1DCosmicRecHits_*_*', 'keep *_dt4DCosmicSegments_*_*', 'keep *_csc2DRecHits_*_*', 'keep *_cscSegments_*_*', 'keep *_rpcRecHits_*_*', 'keep *_hbhereco_*_*', 'keep *_hfreco_*_*', 'keep *_horeco_*_*', 'keep HBHERecHitsSorted_hbherecoMB_*_*', 'keep HORecHitsSorted_horecoMB_*_*', 'keep HFRecHitsSorted_hfrecoMB_*_*', 'keep ZDCDataFramesSorted_*Digis_*_*', 'keep ZDCRecHitsSorted_*_*_*', 'keep *_reducedHcalRecHits_*_*', 'keep *_castorreco_*_*', 'keep *_ecalPreshowerRecHit_*_*', 'keep *_ecalRecHit_*_*', 'keep *_ecalCompactTrigPrim_*_*', 'keep *_ecalTPSkim_*_*', 'keep *_selectDigi_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 'keep *_hybridSuperClusters_*_*', 'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 'keep *_multi5x5BasicClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 'drop recoClusterShapes_*_*_*', 'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 'keep *_CkfElectronCandidates_*_*', 'keep *_GsfGlobalElectronTest_*_*', 'keep *_electronMergedSeeds_*_*', 'keep recoGsfTracks_electronGsfTracks_*_*', 'keep recoGsfTrackExtras_electronGsfTracks_*_*', 'keep recoTrackExtras_electronGsfTracks_*_*', 'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoTrackExtras_generalTracks_*_*', 'keep TrackingRecHitsOwned_generalTracks_*_*', 'keep recoTracks_beamhaloTracks_*_*', 'keep recoTrackExtras_beamhaloTracks_*_*', 'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 'keep recoTracks_regionalCosmicTracks_*_*', 'keep recoTrackExtras_regionalCosmicTracks_*_*', 'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 'keep recoTracks_rsWithMaterialTracks_*_*', 'keep recoTrackExtras_rsWithMaterialTracks_*_*', 'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 'keep *_ctfPixelLess_*_*', 'keep *_dedxTruncated40_*_*', 'keep *_dedxDiscrimASmi_*_*', 'keep *_dedxHarmonic2_*_*', 'keep *_trackExtrapolator_*_*', 'keep *_kt4CaloJets_*_*', 'keep *_kt6CaloJets_*_*', 'keep *_ak5CaloJets_*_*', 'keep *_ak7CaloJets_*_*', 'keep *_iterativeCone5CaloJets_*_*', 'keep *_iterativeCone15CaloJets_*_*', 'keep *_kt4PFJets_*_*', 'keep *_kt6PFJets_*_*', 'keep *_ak5PFJets_*_*', 'keep *_ak7PFJets_*_*', 'keep *_iterativeCone5PFJets_*_*', 'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_ak5TrackJets_*_*', 'keep *_kt4TrackJets_*_*', 'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 'keep *_caloTowers_*_*', 'keep *_towerMaker_*_*', 'keep *_CastorTowerReco_*_*', 'keep *_ic5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 'keep *_iterativeCone5JetExtender_*_*', 'keep *_kt4JetTracksAssociatorAtVertex_*_*', 'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 'keep *_kt4JetExtender_*_*', 'keep *_ak5JetTracksAssociatorAtVertex_*_*', 'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak5JetExtender_*_*', 'keep *_ak7JetTracksAssociatorAtVertex_*_*', 'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak7JetExtender_*_*', 'keep *_ak5JetID_*_*', 'keep *_ak7JetID_*_*', 'keep *_ic5JetID_*_*', 'keep *_kt4JetID_*_*', 'keep *_kt6JetID_*_*', 'keep *_ak7BasicJets_*_*', 'keep *_ak7CastorJetID_*_*', 'keep recoCaloMETs_met_*_*', 'keep recoCaloMETs_metNoHF_*_*', 'keep recoCaloMETs_metHO_*_*', 'keep recoCaloMETs_corMetGlobalMuons_*_*', 'keep recoCaloMETs_metNoHFHO_*_*', 'keep recoCaloMETs_metOptHO_*_*', 'keep recoCaloMETs_metOpt_*_*', 'keep recoCaloMETs_metOptNoHFHO_*_*', 'keep recoCaloMETs_metOptNoHF_*_*', 'keep recoMETs_htMetAK5_*_*', 'keep recoMETs_htMetAK7_*_*', 'keep recoMETs_htMetIC5_*_*', 'keep recoMETs_htMetKT4_*_*', 'keep recoMETs_htMetKT6_*_*', 'keep recoMETs_tcMet_*_*', 'keep recoMETs_tcMetWithPFclusters_*_*', 'keep recoPFMETs_pfMet_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 'keep recoHcalNoiseRBXs_hcalnoise_*_*', 'keep HcalNoiseSummary_hcalnoise_*_*', 'keep *HaloData_*_*_*', 'keep *BeamHaloSummary_BeamHaloSummary_*_*', 'keep *_MuonSeed_*_*', 'keep *_ancientMuonSeed_*_*', 'keep *_mergedStandAloneMuonSeeds_*_*', 'keep TrackingRecHitsOwned_globalMuons_*_*', 'keep TrackingRecHitsOwned_tevMuons_*_*', 'keep recoCaloMuons_calomuons_*_*', 'keep *_CosmicMuonSeed_*_*', 'keep recoTrackExtras_cosmicMuons_*_*', 'keep TrackingRecHitsOwned_cosmicMuons_*_*', 'keep recoTrackExtras_globalCosmicMuons_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 'keep recoTrackExtras_cosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 'keep recoTracks_cosmicsVetoTracks_*_*', 'keep *_SETMuonSeed_*_*', 'keep recoTracks_standAloneSETMuons_*_*', 'keep recoTrackExtras_standAloneSETMuons_*_*', 'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 'keep recoTracks_globalSETMuons_*_*', 'keep recoTrackExtras_globalSETMuons_*_*', 'keep TrackingRecHitsOwned_globalSETMuons_*_*', 'keep recoMuons_muonsWithSET_*_*', 'keep recoTracks_standAloneMuons_*_*', 'keep recoTrackExtras_standAloneMuons_*_*', 'keep TrackingRecHitsOwned_standAloneMuons_*_*', 'keep recoTracks_globalMuons_*_*', 'keep recoTrackExtras_globalMuons_*_*', 'keep recoTracks_tevMuons_*_*', 'keep recoTrackExtras_tevMuons_*_*', 'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoMuons_muons_*_*', 'keep booledmValueMap_muid*_*_*', 'keep recoMuonTimeExtraedmValueMap_muons_*_*', 'keep *_muonShowerInformation_*_*', 'keep recoTracks_cosmicMuons_*_*', 'keep recoTracks_globalCosmicMuons_*_*', 'keep recoMuons_muonsFromCosmics_*_*', 'keep recoTracks_cosmicMuons1Leg_*_*', 'keep recoTracks_globalCosmicMuons1Leg_*_*', 'keep recoMuons_muonsFromCosmics1Leg_*_*', 'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 'keep uintedmValueMap_cosmicsVeto_*_*', 'keep *_muIsoDepositTk_*_*', 'keep *_muIsoDepositCalByAssociatorTowers_*_*', 'keep *_muIsoDepositCalByAssociatorHits_*_*', 'keep *_muIsoDepositJets_*_*', 'keep *_muGlobalIsoDepositCtfTk_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 'keep *_muGlobalIsoDepositJets_*_*', 'keep *_impactParameterTagInfos_*_*', 'keep *_trackCountingHighEffBJetTags_*_*', 'keep *_trackCountingHighPurBJetTags_*_*', 'keep *_jetProbabilityBJetTags_*_*', 'keep *_jetBProbabilityBJetTags_*_*', 'keep *_secondaryVertexTagInfos_*_*', 'keep *_ghostTrackVertexTagInfos_*_*', 'keep *_simpleSecondaryVertexBJetTags_*_*', 'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 'keep *_combinedSecondaryVertexBJetTags_*_*', 'keep *_combinedSecondaryVertexMVABJetTags_*_*', 'keep *_ghostTrackBJetTags_*_*', 'keep *_btagSoftElectrons_*_*', 'keep *_softElectronCands_*_*', 'keep *_softPFElectrons_*_*', 'keep *_softElectronTagInfos_*_*', 'keep *_softElectronBJetTags_*_*', 'keep *_softElectronByIP3dBJetTags_*_*', 'keep *_softElectronByPtBJetTags_*_*', 'keep *_softMuonTagInfos_*_*', 'keep *_softMuonBJetTags_*_*', 'keep *_softMuonByIP3dBJetTags_*_*', 'keep *_softMuonByPtBJetTags_*_*', 'keep *_combinedMVABJetTags_*_*', 'keep *_ak5PFJetsRecoTauPiZeros_*_*', 'keep *_hpsPFTauProducer*_*_*', 'keep *_hpsPFTauDiscrimination*_*_*', 'keep *_shrinkingConePFTauProducer*_*_*', 'keep *_shrinkingConePFTauDiscrimination*_*_*', 'keep *_hpsTancTaus_*_*', 'keep *_hpsTancTausDiscrimination*_*_*', 'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_caloRecoTauTagInfoProducer_*_*', 'keep recoCaloTaus_caloRecoTauProducer*_*_*', 'keep *_caloRecoTauDiscrimination*_*_*', 'keep  *_offlinePrimaryVertices_*_*', 'keep  *_offlinePrimaryVerticesWithBS_*_*', 'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 'keep  *_nuclearInteractionMaker_*_*', 'keep *_generalV0Candidates_*_*', 'keep recoGsfElectronCores_gsfElectronCores_*_*', 'keep recoGsfElectrons_gsfElectrons_*_*', 'keep floatedmValueMap_eidRobustLoose_*_*', 'keep floatedmValueMap_eidRobustTight_*_*', 'keep floatedmValueMap_eidRobustHighEnergy_*_*', 'keep floatedmValueMap_eidLoose_*_*', 'keep floatedmValueMap_eidTight_*_*', 'keep recoPhotons_photons_*_*', 'keep recoPhotonCores_photonCore_*_*', 'keep recoConversions_conversions_*_*', 'drop *_conversions_uncleanedConversions_*', 'keep recoConversions_allConversions_*_*', 'keep recoTracks_ckfOutInTracksFromConversions_*_*', 'keep recoTracks_ckfInOutTracksFromConversions_*_*', 'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 'keep *_PhotonIDProd_*_*', 'keep *_hfRecoEcalCandidate_*_*', 'keep *_hfEMClusters_*_*', 'keep *_pixelTracks_*_*', 'keep *_pixelVertices_*_*')+cms.untracked.vstring('drop CaloTowersSorted_towerMakerPF_*_*', 'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 'keep recoPFClusters_particleFlowClusterECAL_*_*', 'keep recoPFClusters_particleFlowClusterHCAL_*_*', 'keep recoPFClusters_particleFlowClusterPS_*_*', 'keep recoPFBlocks_particleFlowBlock_*_*', 'keep recoPFCandidates_particleFlow_*_*', 'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 'keep *_pfElectronTranslator_*_*', 'keep *_pfPhotonTranslator_*_*', 'keep *_trackerDrivenElectronSeeds_preid_*', 'keep *_offlineBeamSpot_*_*', 'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'keep L1MuGMTReadoutCollection_gtDigis_*_*', 'keep L1GctEmCand*_gctDigis_*_*', 'keep L1GctJetCand*_gctDigis_*_*', 'keep L1GctEtHad*_gctDigis_*_*', 'keep L1GctEtMiss*_gctDigis_*_*', 'keep L1GctEtTotal*_gctDigis_*_*', 'keep L1GctHtMiss*_gctDigis_*_*', 'keep L1GctJetCounts*_gctDigis_*_*', 'keep L1GctHFRingEtSums*_gctDigis_*_*', 'keep L1GctHFBitCounts*_gctDigis_*_*', 'keep LumiDetails_lumiProducer_*_*', 'keep LumiSummary_lumiProducer_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep L1AcceptBunchCrossings_*_*_*', 'keep L1TriggerScalerss_*_*_*', 'keep Level1TriggerScalerss_*_*_*', 'keep LumiScalerss_*_*_*', 'keep BeamSpotOnlines_*_*_*', 'keep DcsStatuss_*_*_*', 'keep *_logErrorHarvester_*_*', 'keep *_*_*_HLT'))
)

process.FEVTSIMEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = (cms.untracked.vstring('drop *', 'drop *', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep *_g4SimHits_*_*', 'keep edmHepMCProduct_source_*_*', 'keep *_allTrackMCMatch_*_*', 'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 'keep EBSrFlagsSorted_simEcalDigis_*_*', 'keep EESrFlagsSorted_simEcalDigis_*_*', 'keep CrossingFramePlaybackInfoExtended_*_*_*', 'keep PileupSummaryInfo_*_*_*', 'keep PileupSummaryInfos_*_*_*', 'keep LHERunInfoProduct_source_*_*', 'keep LHEEventProduct_source_*_*', 'keep GenRunInfoProduct_generator_*_*', 'keep GenEventInfoProduct_generator_*_*', 'keep edmHepMCProduct_generator_*_*', 'keep GenFilterInfo_*_*_*', 'keep *_genParticles_*_*', 'keep recoGenJets_*_*_*', 'keep *_genParticle_*_*', 'keep recoGenMETs_*_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep *_MEtoEDMConverter_*_*', 'keep *_randomEngineStateProducer_*_*', 'keep DetIdedmEDCollection_siStripDigis_*_*', 'keep *_siPixelClusters_*_*', 'keep *_siStripClusters_*_*', 'keep *_dt1DRecHits_*_*', 'keep *_dt4DSegments_*_*', 'keep *_dt1DCosmicRecHits_*_*', 'keep *_dt4DCosmicSegments_*_*', 'keep *_csc2DRecHits_*_*', 'keep *_cscSegments_*_*', 'keep *_rpcRecHits_*_*', 'keep *_hbhereco_*_*', 'keep *_hfreco_*_*', 'keep *_horeco_*_*', 'keep HBHERecHitsSorted_hbherecoMB_*_*', 'keep HORecHitsSorted_horecoMB_*_*', 'keep HFRecHitsSorted_hfrecoMB_*_*', 'keep ZDCDataFramesSorted_*Digis_*_*', 'keep ZDCRecHitsSorted_*_*_*', 'keep *_reducedHcalRecHits_*_*', 'keep *_castorreco_*_*', 'keep *_ecalPreshowerRecHit_*_*', 'keep *_ecalRecHit_*_*', 'keep *_ecalCompactTrigPrim_*_*', 'keep *_ecalTPSkim_*_*', 'keep *_selectDigi_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 'keep *_hybridSuperClusters_*_*', 'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 'keep *_multi5x5BasicClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 'drop recoClusterShapes_*_*_*', 'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 'keep *_CkfElectronCandidates_*_*', 'keep *_GsfGlobalElectronTest_*_*', 'keep *_electronMergedSeeds_*_*', 'keep recoGsfTracks_electronGsfTracks_*_*', 'keep recoGsfTrackExtras_electronGsfTracks_*_*', 'keep recoTrackExtras_electronGsfTracks_*_*', 'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoTrackExtras_generalTracks_*_*', 'keep TrackingRecHitsOwned_generalTracks_*_*', 'keep recoTracks_beamhaloTracks_*_*', 'keep recoTrackExtras_beamhaloTracks_*_*', 'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 'keep recoTracks_regionalCosmicTracks_*_*', 'keep recoTrackExtras_regionalCosmicTracks_*_*', 'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 'keep recoTracks_rsWithMaterialTracks_*_*', 'keep recoTrackExtras_rsWithMaterialTracks_*_*', 'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 'keep *_ctfPixelLess_*_*', 'keep *_dedxTruncated40_*_*', 'keep *_dedxDiscrimASmi_*_*', 'keep *_dedxHarmonic2_*_*', 'keep *_trackExtrapolator_*_*', 'keep *_kt4CaloJets_*_*', 'keep *_kt6CaloJets_*_*', 'keep *_ak5CaloJets_*_*', 'keep *_ak7CaloJets_*_*', 'keep *_iterativeCone5CaloJets_*_*', 'keep *_iterativeCone15CaloJets_*_*', 'keep *_kt4PFJets_*_*', 'keep *_kt6PFJets_*_*', 'keep *_ak5PFJets_*_*', 'keep *_ak7PFJets_*_*', 'keep *_iterativeCone5PFJets_*_*', 'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_ak5TrackJets_*_*', 'keep *_kt4TrackJets_*_*', 'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 'keep *_caloTowers_*_*', 'keep *_towerMaker_*_*', 'keep *_CastorTowerReco_*_*', 'keep *_ic5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 'keep *_iterativeCone5JetExtender_*_*', 'keep *_kt4JetTracksAssociatorAtVertex_*_*', 'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 'keep *_kt4JetExtender_*_*', 'keep *_ak5JetTracksAssociatorAtVertex_*_*', 'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak5JetExtender_*_*', 'keep *_ak7JetTracksAssociatorAtVertex_*_*', 'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak7JetExtender_*_*', 'keep *_ak5JetID_*_*', 'keep *_ak7JetID_*_*', 'keep *_ic5JetID_*_*', 'keep *_kt4JetID_*_*', 'keep *_kt6JetID_*_*', 'keep *_ak7BasicJets_*_*', 'keep *_ak7CastorJetID_*_*', 'keep recoCaloMETs_met_*_*', 'keep recoCaloMETs_metNoHF_*_*', 'keep recoCaloMETs_metHO_*_*', 'keep recoCaloMETs_corMetGlobalMuons_*_*', 'keep recoCaloMETs_metNoHFHO_*_*', 'keep recoCaloMETs_metOptHO_*_*', 'keep recoCaloMETs_metOpt_*_*', 'keep recoCaloMETs_metOptNoHFHO_*_*', 'keep recoCaloMETs_metOptNoHF_*_*', 'keep recoMETs_htMetAK5_*_*', 'keep recoMETs_htMetAK7_*_*', 'keep recoMETs_htMetIC5_*_*', 'keep recoMETs_htMetKT4_*_*', 'keep recoMETs_htMetKT6_*_*', 'keep recoMETs_tcMet_*_*', 'keep recoMETs_tcMetWithPFclusters_*_*', 'keep recoPFMETs_pfMet_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 'keep recoHcalNoiseRBXs_hcalnoise_*_*', 'keep HcalNoiseSummary_hcalnoise_*_*', 'keep *HaloData_*_*_*', 'keep *BeamHaloSummary_BeamHaloSummary_*_*', 'keep *_MuonSeed_*_*', 'keep *_ancientMuonSeed_*_*', 'keep *_mergedStandAloneMuonSeeds_*_*', 'keep TrackingRecHitsOwned_globalMuons_*_*', 'keep TrackingRecHitsOwned_tevMuons_*_*', 'keep recoCaloMuons_calomuons_*_*', 'keep *_CosmicMuonSeed_*_*', 'keep recoTrackExtras_cosmicMuons_*_*', 'keep TrackingRecHitsOwned_cosmicMuons_*_*', 'keep recoTrackExtras_globalCosmicMuons_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 'keep recoTrackExtras_cosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 'keep recoTracks_cosmicsVetoTracks_*_*', 'keep *_SETMuonSeed_*_*', 'keep recoTracks_standAloneSETMuons_*_*', 'keep recoTrackExtras_standAloneSETMuons_*_*', 'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 'keep recoTracks_globalSETMuons_*_*', 'keep recoTrackExtras_globalSETMuons_*_*', 'keep TrackingRecHitsOwned_globalSETMuons_*_*', 'keep recoMuons_muonsWithSET_*_*', 'keep recoTracks_standAloneMuons_*_*', 'keep recoTrackExtras_standAloneMuons_*_*', 'keep TrackingRecHitsOwned_standAloneMuons_*_*', 'keep recoTracks_globalMuons_*_*', 'keep recoTrackExtras_globalMuons_*_*', 'keep recoTracks_tevMuons_*_*', 'keep recoTrackExtras_tevMuons_*_*', 'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoMuons_muons_*_*', 'keep booledmValueMap_muid*_*_*', 'keep recoMuonTimeExtraedmValueMap_muons_*_*', 'keep *_muonShowerInformation_*_*', 'keep recoTracks_cosmicMuons_*_*', 'keep recoTracks_globalCosmicMuons_*_*', 'keep recoMuons_muonsFromCosmics_*_*', 'keep recoTracks_cosmicMuons1Leg_*_*', 'keep recoTracks_globalCosmicMuons1Leg_*_*', 'keep recoMuons_muonsFromCosmics1Leg_*_*', 'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 'keep uintedmValueMap_cosmicsVeto_*_*', 'keep *_muIsoDepositTk_*_*', 'keep *_muIsoDepositCalByAssociatorTowers_*_*', 'keep *_muIsoDepositCalByAssociatorHits_*_*', 'keep *_muIsoDepositJets_*_*', 'keep *_muGlobalIsoDepositCtfTk_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 'keep *_muGlobalIsoDepositJets_*_*', 'keep *_impactParameterTagInfos_*_*', 'keep *_trackCountingHighEffBJetTags_*_*', 'keep *_trackCountingHighPurBJetTags_*_*', 'keep *_jetProbabilityBJetTags_*_*', 'keep *_jetBProbabilityBJetTags_*_*', 'keep *_secondaryVertexTagInfos_*_*', 'keep *_ghostTrackVertexTagInfos_*_*', 'keep *_simpleSecondaryVertexBJetTags_*_*', 'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 'keep *_combinedSecondaryVertexBJetTags_*_*', 'keep *_combinedSecondaryVertexMVABJetTags_*_*', 'keep *_ghostTrackBJetTags_*_*', 'keep *_btagSoftElectrons_*_*', 'keep *_softElectronCands_*_*', 'keep *_softPFElectrons_*_*', 'keep *_softElectronTagInfos_*_*', 'keep *_softElectronBJetTags_*_*', 'keep *_softElectronByIP3dBJetTags_*_*', 'keep *_softElectronByPtBJetTags_*_*', 'keep *_softMuonTagInfos_*_*', 'keep *_softMuonBJetTags_*_*', 'keep *_softMuonByIP3dBJetTags_*_*', 'keep *_softMuonByPtBJetTags_*_*', 'keep *_combinedMVABJetTags_*_*', 'keep *_ak5PFJetsRecoTauPiZeros_*_*', 'keep *_hpsPFTauProducer*_*_*', 'keep *_hpsPFTauDiscrimination*_*_*', 'keep *_shrinkingConePFTauProducer*_*_*', 'keep *_shrinkingConePFTauDiscrimination*_*_*', 'keep *_hpsTancTaus_*_*', 'keep *_hpsTancTausDiscrimination*_*_*', 'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_caloRecoTauTagInfoProducer_*_*', 'keep recoCaloTaus_caloRecoTauProducer*_*_*', 'keep *_caloRecoTauDiscrimination*_*_*', 'keep  *_offlinePrimaryVertices_*_*', 'keep  *_offlinePrimaryVerticesWithBS_*_*', 'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*')+cms.untracked.vstring('keep  *_nuclearInteractionMaker_*_*', 'keep *_generalV0Candidates_*_*', 'keep recoGsfElectronCores_gsfElectronCores_*_*', 'keep recoGsfElectrons_gsfElectrons_*_*', 'keep floatedmValueMap_eidRobustLoose_*_*', 'keep floatedmValueMap_eidRobustTight_*_*', 'keep floatedmValueMap_eidRobustHighEnergy_*_*', 'keep floatedmValueMap_eidLoose_*_*', 'keep floatedmValueMap_eidTight_*_*', 'keep recoPhotons_photons_*_*', 'keep recoPhotonCores_photonCore_*_*', 'keep recoConversions_conversions_*_*', 'drop *_conversions_uncleanedConversions_*', 'keep recoConversions_allConversions_*_*', 'keep recoTracks_ckfOutInTracksFromConversions_*_*', 'keep recoTracks_ckfInOutTracksFromConversions_*_*', 'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 'keep *_PhotonIDProd_*_*', 'keep *_hfRecoEcalCandidate_*_*', 'keep *_hfEMClusters_*_*', 'keep *_pixelTracks_*_*', 'keep *_pixelVertices_*_*', 'drop CaloTowersSorted_towerMakerPF_*_*', 'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 'keep recoPFClusters_particleFlowClusterECAL_*_*', 'keep recoPFClusters_particleFlowClusterHCAL_*_*', 'keep recoPFClusters_particleFlowClusterPS_*_*', 'keep recoPFBlocks_particleFlowBlock_*_*', 'keep recoPFCandidates_particleFlow_*_*', 'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 'keep *_pfElectronTranslator_*_*', 'keep *_pfPhotonTranslator_*_*', 'keep *_trackerDrivenElectronSeeds_preid_*', 'keep *_offlineBeamSpot_*_*', 'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'keep L1MuGMTReadoutCollection_gtDigis_*_*', 'keep L1GctEmCand*_gctDigis_*_*', 'keep L1GctJetCand*_gctDigis_*_*', 'keep L1GctEtHad*_gctDigis_*_*', 'keep L1GctEtMiss*_gctDigis_*_*', 'keep L1GctEtTotal*_gctDigis_*_*', 'keep L1GctHtMiss*_gctDigis_*_*', 'keep L1GctJetCounts*_gctDigis_*_*', 'keep L1GctHFRingEtSums*_gctDigis_*_*', 'keep L1GctHFBitCounts*_gctDigis_*_*', 'keep LumiDetails_lumiProducer_*_*', 'keep LumiSummary_lumiProducer_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep LHERunInfoProduct_source_*_*', 'keep LHEEventProduct_source_*_*', 'keep GenRunInfoProduct_generator_*_*', 'keep GenEventInfoProduct_generator_*_*', 'keep edmHepMCProduct_generator_*_*', 'keep GenFilterInfo_*_*_*', 'keep *_genParticles_*_*', 'keep recoGenMETs_*_*_*', 'keep *_kt4GenJets_*_*', 'keep *_kt6GenJets_*_*', 'keep *_ak5GenJets_*_*', 'keep *_ak7GenJets_*_*', 'keep *_iterativeCone5GenJets_*_*', 'keep *_genParticle_*_*', 'keep edmHepMCProduct_source_*_*', 'keep SimTracks_g4SimHits_*_*', 'keep SimVertexs_g4SimHits_*_*', 'keep *_allTrackMCMatch_*_*', 'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 'keep PileupSummaryInfo_*_*_*', 'keep PileupSummaryInfos_*_*_*', 'keep L1AcceptBunchCrossings_*_*_*', 'keep L1TriggerScalerss_*_*_*', 'keep Level1TriggerScalerss_*_*_*', 'keep LumiScalerss_*_*_*', 'keep BeamSpotOnlines_*_*_*', 'keep DcsStatuss_*_*_*'))
)

process.GenJetParameters = cms.PSet(
    Active_Area_Repeats = cms.int32(5),
    src = cms.InputTag("genParticlesForJets"),
    doAreaFastjet = cms.bool(False),
    doPVCorrection = cms.bool(False),
    Ghost_EtaMax = cms.double(6.0),
    doRhoFastjet = cms.bool(False),
    srcPVs = cms.InputTag(""),
    inputEtMin = cms.double(0.0),
    doPUOffsetCorr = cms.bool(False),
    nSigmaPU = cms.double(1.0),
    radiusPU = cms.double(0.5),
    Rho_EtaMax = cms.double(4.5),
    jetPtMin = cms.double(3.0),
    jetType = cms.string('GenJet'),
    GhostArea = cms.double(0.01),
    inputEMin = cms.double(0.0)
)

process.GeneratorInterfaceAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep LHERunInfoProduct_source_*_*', 
        'keep LHEEventProduct_source_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*')
)

process.GeneratorInterfaceRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep LHERunInfoProduct_source_*_*', 
        'keep LHEEventProduct_source_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*')
)

process.GeneratorInterfaceRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep LHERunInfoProduct_source_*_*', 
        'keep LHEEventProduct_source_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*')
)

process.GlobalMuonRefitter = cms.PSet(
    TrackerSkipSection = cms.int32(-1),
    MuonHitsOption = cms.int32(1),
    Smoother = cms.string('KFSmootherForRefitInsideOut'),
    RefitDirection = cms.string('insideOut'),
    CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    TrackerSkipSystem = cms.int32(-1),
    DoPredictionsOnly = cms.bool(False),
    Chi2ProbabilityCut = cms.double(30.0),
    PropDirForCosmics = cms.bool(False),
    HitThreshold = cms.int32(1),
    TrackerRecHitBuilder = cms.string('WithTrackAngle'),
    DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
    Chi2CutCSC = cms.double(9.0),
    Chi2CutRPC = cms.double(1.0),
    Fitter = cms.string('KFFitterForRefitInsideOut'),
    RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
    MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
    RefitRPCHits = cms.bool(True),
    Chi2CutDT = cms.double(6.0),
    PtCut = cms.double(1.0),
    SkipStation = cms.int32(-1)
)

process.GlobalMuonTrackMatcher = cms.PSet(
    GlobalMuonTrackMatcher = cms.PSet(
        Pt_threshold1 = cms.double(0.0),
        DeltaDCut_3 = cms.double(15.0),
        MinP = cms.double(2.5),
        MinPt = cms.double(1.0),
        Chi2Cut_1 = cms.double(50.0),
        Pt_threshold2 = cms.double(999999999.0),
        LocChi2Cut = cms.double(20.0),
        Eta_threshold = cms.double(1.2),
        Quality_3 = cms.double(7.0),
        Quality_2 = cms.double(15.0),
        Chi2Cut_2 = cms.double(50.0),
        Chi2Cut_3 = cms.double(200.0),
        DeltaDCut_1 = cms.double(2.5),
        DeltaRCut_2 = cms.double(0.2),
        DeltaRCut_3 = cms.double(1.0),
        DeltaDCut_2 = cms.double(10.0),
        DeltaRCut_1 = cms.double(0.1),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        Quality_1 = cms.double(20.0)
    )
)

process.GlobalTrajectoryBuilderCommon = cms.PSet(
    MuonTrackingRegionBuilder = cms.PSet(
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        OnDemand = cms.double(-1.0),
        Rescale_Dz = cms.double(3.0),
        Eta_min = cms.double(0.1),
        Rescale_phi = cms.double(3.0),
        Eta_fixed = cms.double(0.2),
        DeltaZ_Region = cms.double(15.9),
        MeasurementTrackerName = cms.string(''),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        vertexCollection = cms.InputTag("pixelVertices"),
        Phi_fixed = cms.double(0.2),
        DeltaR = cms.double(0.2),
        EscapePt = cms.double(1.5),
        UseFixedRegion = cms.bool(False),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        Rescale_eta = cms.double(3.0),
        Phi_min = cms.double(0.1),
        UseVertex = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    ),
    GlobalMuonTrackMatcher = cms.PSet(
        Pt_threshold1 = cms.double(0.0),
        DeltaDCut_3 = cms.double(15.0),
        MinP = cms.double(2.5),
        MinPt = cms.double(1.0),
        Chi2Cut_1 = cms.double(50.0),
        Pt_threshold2 = cms.double(999999999.0),
        LocChi2Cut = cms.double(20.0),
        Eta_threshold = cms.double(1.2),
        Quality_3 = cms.double(7.0),
        Quality_2 = cms.double(15.0),
        Chi2Cut_2 = cms.double(50.0),
        Chi2Cut_3 = cms.double(200.0),
        DeltaDCut_1 = cms.double(2.5),
        DeltaRCut_2 = cms.double(0.2),
        DeltaRCut_3 = cms.double(1.0),
        DeltaDCut_2 = cms.double(10.0),
        DeltaRCut_1 = cms.double(0.1),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        Quality_1 = cms.double(20.0)
    ),
    ScaleTECyFactor = cms.double(-1.0),
    GlbRefitterParameters = cms.PSet(
        TrackerSkipSection = cms.int32(-1),
        DoPredictionsOnly = cms.bool(False),
        PropDirForCosmics = cms.bool(False),
        HitThreshold = cms.int32(1),
        MuonHitsOption = cms.int32(1),
        Chi2CutRPC = cms.double(1.0),
        Fitter = cms.string('GlbMuKFFitter'),
        DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('insideOut'),
        CSCRecSegmentLabel = cms.InputTag("cscSegments"),
        Chi2CutCSC = cms.double(150.0),
        Chi2CutDT = cms.double(10.0),
        RefitRPCHits = cms.bool(True),
        PtCut = cms.double(1.0),
        Chi2ProbabilityCut = cms.double(30.0),
        SkipStation = cms.int32(-1),
        Propagator = cms.string('SmartPropagatorAnyRK'),
        TrackerSkipSystem = cms.int32(-1)
    ),
    ScaleTECxFactor = cms.double(-1.0),
    TrackerRecHitBuilder = cms.string('WithTrackAngle'),
    MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
    RefitRPCHits = cms.bool(True),
    PCut = cms.double(2.5),
    TrackTransformer = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True)
    ),
    PtCut = cms.double(1.0),
    TrackerPropagator = cms.string('SteppingHelixPropagatorAny')
)

process.HLTDEBUGEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = (cms.untracked.vstring('drop *', 'keep *_logErrorHarvester_*_*', 'drop *_hlt*_*_*', 'keep *_hltAlCaEtaRecHitsFilter_*_*', 'keep *_hltAlCaPhiSymStream_*_*', 'keep *_hltAlCaPi0RecHitsFilter_*_*', 'keep *_hltAntiKT5L2L3CorrCaloJets_*_*', 'keep *_hltBLifetimeL25AssociatorStartupU_*_*', 'keep *_hltBLifetimeL25BJetTagsStartupU_*_*', 'keep *_hltBLifetimeL25JetsStartupU_*_*', 'keep *_hltBLifetimeL25TagInfosStartupU_*_*', 'keep *_hltBLifetimeL3AssociatorStartupU_*_*', 'keep *_hltBLifetimeL3BJetTagsStartupU_*_*', 'keep *_hltBLifetimeL3JetsStartupU_*_*', 'keep *_hltBLifetimeL3TagInfosStartupU_*_*', 'keep *_hltBLifetimeRegionalCtfWithMaterialTracksStartupU_*_*', 'keep *_hltBSoftMuonDiJet100L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet100L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet100L25Jets_*_*', 'keep *_hltBSoftMuonDiJet100L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet100Mu9L3_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet20L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet20L25Jets_*_*', 'keep *_hltBSoftMuonDiJet20L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet20Mu5L3_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet60L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet60L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet60L25Jets_*_*', 'keep *_hltBSoftMuonDiJet60L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet60Mu7L3_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet80L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet80L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet80L25Jets_*_*', 'keep *_hltBSoftMuonDiJet80L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet80Mu9L3_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3TagInfos_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet100_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet20_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet60_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet80_*_*', 'keep *_hltBSoftMuonL25BJetTagsUByDR_*_*', 'keep *_hltBSoftMuonL25JetsU_*_*', 'keep *_hltBSoftMuonL25TagInfosU_*_*', 'keep *_hltBSoftMuonL3BJetTagsUByDR_*_*', 'keep *_hltBSoftMuonL3BJetTagsUByPt_*_*', 'keep *_hltBSoftMuonL3TagInfosU_*_*', 'keep *_hltCkfL1IsoLargeWindowTrackCandidates_*_*', 'keep *_hltCkfL1NonIsoLargeWindowTrackCandidates_*_*', 'keep *_hltCorrectedHybridSuperClustersL1Isolated_*_*', 'keep *_hltCorrectedHybridSuperClustersL1NonIsolated_*_*', 'keep *_hltCorrectedMulti5x5EndcapSuperClustersWithPreshowerL1Isolated_*_*', 'keep *_hltCorrectedMulti5x5EndcapSuperClustersWithPreshowerL1NonIsolated_*_*', 'keep *_hltCsc2DRecHits_*_*', 'keep *_hltCscSegments_*_*', 'keep *_hltCtfL1IsoLargeWindowWithMaterialTracks_*_*', 'keep *_hltCtfL1NonIsoLargeWindowWithMaterialTracks_*_*', 'keep *_hltDoublePFTauTightIso20Track5_*_*', 'keep *_hltDoublePFTauTightIso20Track_*_*', 'keep *_hltDt1DRecHits_*_*', 'keep *_hltDt4DSegments_*_*', 'keep *_hltESRegionalPi0EtaRecHit_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTTrackIsolFilter_*_*', 'keep *_hltEle17CaloIdVTCaloIsoVTTrkIdTTrkIsoVTSC8TrackIsolFilter_*_*', 'keep *_hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched_*_*', 'keep *_hltFilterL25LeadingTrackPtCutDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL25LeadingTrackPtCutSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EcalIsolationDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL2EcalIsolationDoubleLooseIsoTau15_*_*', 'keep *_hltFilterL2EcalIsolationSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EcalIsolationSingleLooseIsoTau20_*_*', 'keep *_hltFilterL2EtCutDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL2EtCutDoubleLooseIsoTau15_*_*', 'keep *_hltFilterL2EtCutDoublePFIsoTau20Trk55_*_*', 'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET45_*_*', 'keep *_hltFilterL2EtCutSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EtCutSingleLooseIsoTau20_*_*', 'keep *_hltFilterL3TrackIsolationDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL3TrackIsolationSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 'keep *_hltFilterSingleIsoPFTau35Trk20MET45LeadTrack20MET45IsolationL1HLTMatched_*_*', 'keep *_hltGctDigis_*_*', 'keep *_hltGtDigis_*_*', 'keep *_hltHITCtfWithMaterialTracksHB8E29_*_*', 'keep *_hltHITCtfWithMaterialTracksHE8E29_*_*', 'keep *_hltHITIPTCorrectorHB8E29_*_*', 'keep *_hltHITIPTCorrectorHE8E29_*_*', 'keep *_hltHcalDigis_*_*', 'keep *_hltHoreco_*_*', 'keep *_hltIconeCentral1Regional_*_*', 'keep *_hltIconeCentral2Regional_*_*', 'keep *_hltIconeCentral3Regional_*_*', 'keep *_hltIconeCentral4Regional_*_*', 'keep *_hltIconeTau1Regional_*_*', 'keep *_hltIconeTau2Regional_*_*', 'keep *_hltIconeTau3Regional_*_*', 'keep *_hltIconeTau4Regional_*_*', 'keep *_hltIsolPixelTrackProdHB8E29_*_*', 'keep *_hltIsolPixelTrackProdHB_*_*', 'keep *_hltIsolPixelTrackProdHE8E29_*_*', 'keep *_hltIsolPixelTrackProdHE_*_*', 'keep *_hltIterativeCone5CaloJets_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep *_hltL1IsoEgammaRegionalCTFFinalFitWithMaterial_*_*', 'keep *_hltL1IsoEgammaRegionalCkfTrackCandidates_*_*', 'keep *_hltL1IsoEgammaRegionalPixelSeedGenerator_*_*', 'keep *_hltL1IsoHLTClusterShape_*_*', 'keep *_hltL1IsoLargeWindowElectronPixelSeeds_*_*', 'keep *_hltL1IsoPhotonHollowTrackIsol_*_*', 'keep *_hltL1IsoRecoEcalCandidate_*_*', 'keep *_hltL1IsoSiStripElectronPixelSeeds_*_*', 'keep *_hltL1IsoStartUpElectronPixelSeeds_*_*', 'keep *_hltL1IsolatedElectronHcalIsol_*_*', 'keep *_hltL1IsolatedPhotonEcalIsol_*_*', 'keep *_hltL1IsolatedPhotonHcalIsol_*_*', 'keep *_hltL1NonIsoEgammaRegionalCTFFinalFitWithMaterial_*_*', 'keep *_hltL1NonIsoEgammaRegionalCkfTrackCandidates_*_*', 'keep *_hltL1NonIsoEgammaRegionalPixelSeedGenerator_*_*', 'keep *_hltL1NonIsoHLTClusterShape_*_*', 'keep *_hltL1NonIsoLargeWindowElectronPixelSeeds_*_*', 'keep *_hltL1NonIsoPhotonHollowTrackIsol_*_*', 'keep *_hltL1NonIsoRecoEcalCandidate_*_*', 'keep *_hltL1NonIsoSiStripElectronPixelSeeds_*_*', 'keep *_hltL1NonIsoStartUpElectronPixelSeeds_*_*', 'keep *_hltL1NonIsolatedElectronHcalIsol_*_*', 'keep *_hltL1NonIsolatedPhotonEcalIsol_*_*', 'keep *_hltL1NonIsolatedPhotonHcalIsol_*_*', 'keep *_hltL1extraParticles_*_*', 'keep *_hltL1sDoubleIsoTau15Trk5_*_*', 'keep *_hltL1sDoubleLooseIsoTau15_*_*', 'keep *_hltL1sL1SingleEG12_*_*', 'keep *_hltL1sL1SingleMu10_*_*', 'keep *_hltL1sSingleIsoTau35Trk20MET45_*_*', 'keep *_hltL1sSingleLooseIsoTau20_*_*', 'keep *_hltL25TauConeIsolation_*_*', 'keep *_hltL25TauCtfWithMaterialTracks_*_*', 'keep *_hltL25TauJetTracksAssociator_*_*', 'keep *_hltL25TauLeadingTrackPtCutSelector_*_*', 'keep *_hltL2MuonCandidatesNoVtx_*_*', 'keep *_hltL2MuonCandidates_*_*', 'keep *_hltL2MuonIsolations_*_*', 'keep *_hltL2MuonSeeds_*_*', 'keep *_hltL2MuonsCandidates_*_*', 'keep *_hltL2Muons_*_*', 'keep *_hltL2TauJets_*_*', 'keep *_hltL2TauNarrowConeIsolationProducer_*_*', 'keep *_hltL2TauRelaxingIsolationSelector_*_*', 'keep *_hltL3MuonCandidatesNoVtx_*_*', 'keep *_hltL3MuonCandidates_*_*', 'keep *_hltL3MuonIsolations_*_*', 'keep *_hltL3MuonsCandidates_*_*', 'keep *_hltL3MuonsIOHit_*_*', 'keep *_hltL3MuonsLinksCombination_*_*', 'keep *_hltL3MuonsNoVtx_*_*', 'keep *_hltL3MuonsOIHit_*_*', 'keep *_hltL3MuonsOIState_*_*', 'keep *_hltL3Muons_*_*', 'keep *_hltL3TauConeIsolation_*_*', 'keep *_hltL3TauCtfWithMaterialTracks_*_*', 'keep *_hltL3TauIsolationSelector_*_*', 'keep *_hltL3TauJetTracksAssociator_*_*', 'keep *_hltL3TkFromL2OICombination_*_*', 'keep *_hltL3TkTracksFromL2IOHit_*_*', 'keep *_hltL3TkTracksFromL2OIHit_*_*', 'keep *_hltL3TkTracksFromL2OIState_*_*', 'keep *_hltL3TkTracksFromL2_*_*', 'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 'keep *_hltL3TrackCandidateFromL2OIState_*_*', 'keep *_hltL3TrackCandidateFromL2_*_*', 'keep *_hltL3TrajSeedIOHit_*_*', 'keep *_hltL3TrajSeedOIHit_*_*', 'keep *_hltL3TrajSeedOIState_*_*', 'keep *_hltL3TrajectorySeedNoVtx_*_*', 'keep *_hltL3TrajectorySeed_*_*', 'keep *_hltMCJetCorJetIcone5HF07_*_*', 'keep *_hltMet_*_*', 'keep *_hltMu15L3Filtered15_*_*', 'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 'keep *_hltMuTrackJpsiCtfTracks_*_*', 'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 'keep *_hltMuTrackJpsiPixelTrackSelector_*_*', 'keep *_hltMuTrackJpsiTrackSeeds_*_*', 'keep *_hltMuonCSCDigis_*_*', 'keep *_hltMuonDTDigis_*_*', 'keep *_hltMuonRPCDigis_*_*', 'keep *_hltOfflineBeamSpot_*_*', 'keep *_hltOverlapFilterIsoEle15IsoPFTau15_*_*', 'keep *_hltOverlapFilterMu15IsoPFTau20_*_*', 'keep *_hltPFTau15TrackLooseIso_*_*', 'keep *_hltPFTau15Track_*_*', 'keep *_hltPFTau15_*_*', 'keep *_hltPFTau20TrackLooseIso_*_*', 'keep *_hltPFTau20Track_*_*', 'keep *_hltPFTauTightIso35Track_*_*', 'keep *_hltPixelMatchElectronsL1Iso_*_*', 'keep *_hltPixelMatchElectronsL1NonIso_*_*', 'keep *_hltPixelMatchLargeWindowElectronsL1Iso_*_*', 'keep *_hltPixelMatchLargeWindowElectronsL1NonIso_*_*', 'keep *_hltPixelTracks_*_*', 'keep *_hltPixelVertices_*_*', 'keep *_hltRpcRecHits_*_*', 'keep *_hltSiPixelClusters_*_*', 'keep *_hltSiPixelRecHits_*_*', 'keep *_hltSiStripClusters_*_*', 'keep *_hltSiStripRawToClustersFacility_*_*', 'keep *_hltTowerMakerForAll_*_*', 'keep *_hltTowerMakerForMuons_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep L1GlobalTriggerReadoutRecord_*_*_*', 'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 'keep L1MuGMTCands_hltGtDigis_*_*', 'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 'keep TrackingRecHitsOwned_hltL3Muons_*_*', 'keep edmTriggerResults_*_*_*', 'keep l1extraL1EmParticles_*_*_*', 'keep l1extraL1EmParticles_hltL1extraParticles_*_*', 'keep l1extraL1EtMissParticles_hltL1extraParticles_*_*', 'keep l1extraL1JetParticles_hltL1extraParticles_*_*', 'keep l1extraL1MuonParticles_hltL1extraParticles_*_*', 'keep recoCaloJets_hltIterativeCone5CaloJets_*_*', 'keep recoCaloMETs_hltMet_*_*', 'keep recoElectronSeeds_hltL1IsoLargeWindowElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1IsoSiStripElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1IsoStartUpElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoLargeWindowElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoSiStripElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoStartUpElectronPixelSeeds_*_*', 'keep recoElectrons_hltPixelMatchLargeWindowElectronsL1Iso_*_*', 'keep recoElectrons_hltPixelMatchLargeWindowElectronsL1NonIso_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedElectronHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonTrackIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedElectronHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonTrackIsol_*_*')+cms.untracked.vstring('keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 'keep triggerTriggerEventWithRefs_*_*_*', 'keep triggerTriggerEventWithRefs_hltTriggerSummaryRAW_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep triggerTriggerEvent_hltTriggerSummaryAOD_*_*', 'keep *_hltAntiKT5CaloJets_*_*', 'keep *_hltAntiKT5PFJets_*_*', 'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonMu5L3_*_*', 'keep *_hltConvPFTauTightIsoTrackPt20Isolation_*_*', 'keep *_hltConvPFTauTightIsoTrackPt20_*_*', 'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 'keep *_hltConvPFTausTightIso_*_*', 'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 'keep *_hltConvPFTausTrackFinding_*_*', 'keep *_hltConvPFTaus_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTDphiFilter_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTDphiFilter_*_*', 'keep *_hltFilterL2EtCutDoublePFIsoTau20Trk5_*_*', 'keep *_hltHITIPTCorrectorHB_*_*', 'keep *_hltHITIPTCorrectorHE_*_*', 'keep *_hltL1HLTDoubleIsoPFTau20Trk5JetsMatch_*_*', 'keep *_hltL1HLTSingleIsoPFTau35Trk20Met45JetsMatch_*_*', 'keep *_hltL1IsoElectronTrackIsol_*_*', 'keep *_hltL1NonIsoElectronTrackIsol_*_*', 'keep *_hltL2TauJets_*_*', 'keep *_hltMet_*_*', 'keep *_hltPFTauJetTracksAssociator_*_*', 'keep *_hltPFTauTagInfo_*_*', 'keep *_hltParticleFlow_*_*', 'keep *_hltPixelMatchElectronsL1Iso_*_*', 'keep *_hltPixelMatchElectronsL1NonIso_*_*', 'keep *_hltSingleMu15L3Filtered15_*_*'))
)

process.HLTDebugFEVT = cms.PSet(
    outputCommands = (cms.vstring('drop *_hlt*_*_*', 'keep *_hltAlCaEtaRecHitsFilter_*_*', 'keep *_hltAlCaPhiSymStream_*_*', 'keep *_hltAlCaPi0RecHitsFilter_*_*', 'keep *_hltAntiKT5L2L3CorrCaloJets_*_*', 'keep *_hltBLifetimeL25AssociatorStartupU_*_*', 'keep *_hltBLifetimeL25BJetTagsStartupU_*_*', 'keep *_hltBLifetimeL25JetsStartupU_*_*', 'keep *_hltBLifetimeL25TagInfosStartupU_*_*', 'keep *_hltBLifetimeL3AssociatorStartupU_*_*', 'keep *_hltBLifetimeL3BJetTagsStartupU_*_*', 'keep *_hltBLifetimeL3JetsStartupU_*_*', 'keep *_hltBLifetimeL3TagInfosStartupU_*_*', 'keep *_hltBLifetimeRegionalCtfWithMaterialTracksStartupU_*_*', 'keep *_hltBSoftMuonDiJet100L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet100L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet100L25Jets_*_*', 'keep *_hltBSoftMuonDiJet100L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet100Mu9L3_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet20L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet20L25Jets_*_*', 'keep *_hltBSoftMuonDiJet20L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet20Mu5L3_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet60L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet60L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet60L25Jets_*_*', 'keep *_hltBSoftMuonDiJet60L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet60Mu7L3_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet80L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet80L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet80L25Jets_*_*', 'keep *_hltBSoftMuonDiJet80L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet80Mu9L3_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3TagInfos_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet100_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet20_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet60_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet80_*_*', 'keep *_hltBSoftMuonL25BJetTagsUByDR_*_*', 'keep *_hltBSoftMuonL25JetsU_*_*', 'keep *_hltBSoftMuonL25TagInfosU_*_*', 'keep *_hltBSoftMuonL3BJetTagsUByDR_*_*', 'keep *_hltBSoftMuonL3BJetTagsUByPt_*_*', 'keep *_hltBSoftMuonL3TagInfosU_*_*', 'keep *_hltCkfL1IsoLargeWindowTrackCandidates_*_*', 'keep *_hltCkfL1NonIsoLargeWindowTrackCandidates_*_*', 'keep *_hltCorrectedHybridSuperClustersL1Isolated_*_*', 'keep *_hltCorrectedHybridSuperClustersL1NonIsolated_*_*', 'keep *_hltCorrectedMulti5x5EndcapSuperClustersWithPreshowerL1Isolated_*_*', 'keep *_hltCorrectedMulti5x5EndcapSuperClustersWithPreshowerL1NonIsolated_*_*', 'keep *_hltCsc2DRecHits_*_*', 'keep *_hltCscSegments_*_*', 'keep *_hltCtfL1IsoLargeWindowWithMaterialTracks_*_*', 'keep *_hltCtfL1NonIsoLargeWindowWithMaterialTracks_*_*', 'keep *_hltDoublePFTauTightIso20Track5_*_*', 'keep *_hltDoublePFTauTightIso20Track_*_*', 'keep *_hltDt1DRecHits_*_*', 'keep *_hltDt4DSegments_*_*', 'keep *_hltESRegionalPi0EtaRecHit_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTTrackIsolFilter_*_*', 'keep *_hltEle17CaloIdVTCaloIsoVTTrkIdTTrkIsoVTSC8TrackIsolFilter_*_*', 'keep *_hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched_*_*', 'keep *_hltFilterL25LeadingTrackPtCutDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL25LeadingTrackPtCutSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EcalIsolationDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL2EcalIsolationDoubleLooseIsoTau15_*_*', 'keep *_hltFilterL2EcalIsolationSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EcalIsolationSingleLooseIsoTau20_*_*', 'keep *_hltFilterL2EtCutDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL2EtCutDoubleLooseIsoTau15_*_*', 'keep *_hltFilterL2EtCutDoublePFIsoTau20Trk55_*_*', 'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET45_*_*', 'keep *_hltFilterL2EtCutSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EtCutSingleLooseIsoTau20_*_*', 'keep *_hltFilterL3TrackIsolationDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL3TrackIsolationSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 'keep *_hltFilterSingleIsoPFTau35Trk20MET45LeadTrack20MET45IsolationL1HLTMatched_*_*', 'keep *_hltGctDigis_*_*', 'keep *_hltGtDigis_*_*', 'keep *_hltHITCtfWithMaterialTracksHB8E29_*_*', 'keep *_hltHITCtfWithMaterialTracksHE8E29_*_*', 'keep *_hltHITIPTCorrectorHB8E29_*_*', 'keep *_hltHITIPTCorrectorHE8E29_*_*', 'keep *_hltHcalDigis_*_*', 'keep *_hltHoreco_*_*', 'keep *_hltIconeCentral1Regional_*_*', 'keep *_hltIconeCentral2Regional_*_*', 'keep *_hltIconeCentral3Regional_*_*', 'keep *_hltIconeCentral4Regional_*_*', 'keep *_hltIconeTau1Regional_*_*', 'keep *_hltIconeTau2Regional_*_*', 'keep *_hltIconeTau3Regional_*_*', 'keep *_hltIconeTau4Regional_*_*', 'keep *_hltIsolPixelTrackProdHB8E29_*_*', 'keep *_hltIsolPixelTrackProdHB_*_*', 'keep *_hltIsolPixelTrackProdHE8E29_*_*', 'keep *_hltIsolPixelTrackProdHE_*_*', 'keep *_hltIterativeCone5CaloJets_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep *_hltL1IsoEgammaRegionalCTFFinalFitWithMaterial_*_*', 'keep *_hltL1IsoEgammaRegionalCkfTrackCandidates_*_*', 'keep *_hltL1IsoEgammaRegionalPixelSeedGenerator_*_*', 'keep *_hltL1IsoHLTClusterShape_*_*', 'keep *_hltL1IsoLargeWindowElectronPixelSeeds_*_*', 'keep *_hltL1IsoPhotonHollowTrackIsol_*_*', 'keep *_hltL1IsoRecoEcalCandidate_*_*', 'keep *_hltL1IsoSiStripElectronPixelSeeds_*_*', 'keep *_hltL1IsoStartUpElectronPixelSeeds_*_*', 'keep *_hltL1IsolatedElectronHcalIsol_*_*', 'keep *_hltL1IsolatedPhotonEcalIsol_*_*', 'keep *_hltL1IsolatedPhotonHcalIsol_*_*', 'keep *_hltL1NonIsoEgammaRegionalCTFFinalFitWithMaterial_*_*', 'keep *_hltL1NonIsoEgammaRegionalCkfTrackCandidates_*_*', 'keep *_hltL1NonIsoEgammaRegionalPixelSeedGenerator_*_*', 'keep *_hltL1NonIsoHLTClusterShape_*_*', 'keep *_hltL1NonIsoLargeWindowElectronPixelSeeds_*_*', 'keep *_hltL1NonIsoPhotonHollowTrackIsol_*_*', 'keep *_hltL1NonIsoRecoEcalCandidate_*_*', 'keep *_hltL1NonIsoSiStripElectronPixelSeeds_*_*', 'keep *_hltL1NonIsoStartUpElectronPixelSeeds_*_*', 'keep *_hltL1NonIsolatedElectronHcalIsol_*_*', 'keep *_hltL1NonIsolatedPhotonEcalIsol_*_*', 'keep *_hltL1NonIsolatedPhotonHcalIsol_*_*', 'keep *_hltL1extraParticles_*_*', 'keep *_hltL1sDoubleIsoTau15Trk5_*_*', 'keep *_hltL1sDoubleLooseIsoTau15_*_*', 'keep *_hltL1sL1SingleEG12_*_*', 'keep *_hltL1sL1SingleMu10_*_*', 'keep *_hltL1sSingleIsoTau35Trk20MET45_*_*', 'keep *_hltL1sSingleLooseIsoTau20_*_*', 'keep *_hltL25TauConeIsolation_*_*', 'keep *_hltL25TauCtfWithMaterialTracks_*_*', 'keep *_hltL25TauJetTracksAssociator_*_*', 'keep *_hltL25TauLeadingTrackPtCutSelector_*_*', 'keep *_hltL2MuonCandidatesNoVtx_*_*', 'keep *_hltL2MuonCandidates_*_*', 'keep *_hltL2MuonIsolations_*_*', 'keep *_hltL2MuonSeeds_*_*', 'keep *_hltL2MuonsCandidates_*_*', 'keep *_hltL2Muons_*_*', 'keep *_hltL2TauJets_*_*', 'keep *_hltL2TauNarrowConeIsolationProducer_*_*', 'keep *_hltL2TauRelaxingIsolationSelector_*_*', 'keep *_hltL3MuonCandidatesNoVtx_*_*', 'keep *_hltL3MuonCandidates_*_*', 'keep *_hltL3MuonIsolations_*_*', 'keep *_hltL3MuonsCandidates_*_*', 'keep *_hltL3MuonsIOHit_*_*', 'keep *_hltL3MuonsLinksCombination_*_*', 'keep *_hltL3MuonsNoVtx_*_*', 'keep *_hltL3MuonsOIHit_*_*', 'keep *_hltL3MuonsOIState_*_*', 'keep *_hltL3Muons_*_*', 'keep *_hltL3TauConeIsolation_*_*', 'keep *_hltL3TauCtfWithMaterialTracks_*_*', 'keep *_hltL3TauIsolationSelector_*_*', 'keep *_hltL3TauJetTracksAssociator_*_*', 'keep *_hltL3TkFromL2OICombination_*_*', 'keep *_hltL3TkTracksFromL2IOHit_*_*', 'keep *_hltL3TkTracksFromL2OIHit_*_*', 'keep *_hltL3TkTracksFromL2OIState_*_*', 'keep *_hltL3TkTracksFromL2_*_*', 'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 'keep *_hltL3TrackCandidateFromL2OIState_*_*', 'keep *_hltL3TrackCandidateFromL2_*_*', 'keep *_hltL3TrajSeedIOHit_*_*', 'keep *_hltL3TrajSeedOIHit_*_*', 'keep *_hltL3TrajSeedOIState_*_*', 'keep *_hltL3TrajectorySeedNoVtx_*_*', 'keep *_hltL3TrajectorySeed_*_*', 'keep *_hltMCJetCorJetIcone5HF07_*_*', 'keep *_hltMet_*_*', 'keep *_hltMu15L3Filtered15_*_*', 'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 'keep *_hltMuTrackJpsiCtfTracks_*_*', 'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 'keep *_hltMuTrackJpsiPixelTrackSelector_*_*', 'keep *_hltMuTrackJpsiTrackSeeds_*_*', 'keep *_hltMuonCSCDigis_*_*', 'keep *_hltMuonDTDigis_*_*', 'keep *_hltMuonRPCDigis_*_*', 'keep *_hltOfflineBeamSpot_*_*', 'keep *_hltOverlapFilterIsoEle15IsoPFTau15_*_*', 'keep *_hltOverlapFilterMu15IsoPFTau20_*_*', 'keep *_hltPFTau15TrackLooseIso_*_*', 'keep *_hltPFTau15Track_*_*', 'keep *_hltPFTau15_*_*', 'keep *_hltPFTau20TrackLooseIso_*_*', 'keep *_hltPFTau20Track_*_*', 'keep *_hltPFTauTightIso35Track_*_*', 'keep *_hltPixelMatchElectronsL1Iso_*_*', 'keep *_hltPixelMatchElectronsL1NonIso_*_*', 'keep *_hltPixelMatchLargeWindowElectronsL1Iso_*_*', 'keep *_hltPixelMatchLargeWindowElectronsL1NonIso_*_*', 'keep *_hltPixelTracks_*_*', 'keep *_hltPixelVertices_*_*', 'keep *_hltRpcRecHits_*_*', 'keep *_hltSiPixelClusters_*_*', 'keep *_hltSiPixelRecHits_*_*', 'keep *_hltSiStripClusters_*_*', 'keep *_hltSiStripRawToClustersFacility_*_*', 'keep *_hltTowerMakerForAll_*_*', 'keep *_hltTowerMakerForMuons_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep L1GlobalTriggerReadoutRecord_*_*_*', 'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 'keep L1MuGMTCands_hltGtDigis_*_*', 'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 'keep TrackingRecHitsOwned_hltL3Muons_*_*', 'keep edmTriggerResults_*_*_*', 'keep l1extraL1EmParticles_*_*_*', 'keep l1extraL1EmParticles_hltL1extraParticles_*_*', 'keep l1extraL1EtMissParticles_hltL1extraParticles_*_*', 'keep l1extraL1JetParticles_hltL1extraParticles_*_*', 'keep l1extraL1MuonParticles_hltL1extraParticles_*_*', 'keep recoCaloJets_hltIterativeCone5CaloJets_*_*', 'keep recoCaloMETs_hltMet_*_*', 'keep recoElectronSeeds_hltL1IsoLargeWindowElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1IsoSiStripElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1IsoStartUpElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoLargeWindowElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoSiStripElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoStartUpElectronPixelSeeds_*_*', 'keep recoElectrons_hltPixelMatchLargeWindowElectronsL1Iso_*_*', 'keep recoElectrons_hltPixelMatchLargeWindowElectronsL1NonIso_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedElectronHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonTrackIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedElectronHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonTrackIsol_*_*', 'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*')+cms.vstring('keep triggerTriggerEventWithRefs_*_*_*', 'keep triggerTriggerEventWithRefs_hltTriggerSummaryRAW_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep triggerTriggerEvent_hltTriggerSummaryAOD_*_*', 'keep *_hltAntiKT5CaloJets_*_*', 'keep *_hltAntiKT5PFJets_*_*', 'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonMu5L3_*_*', 'keep *_hltConvPFTauTightIsoTrackPt20Isolation_*_*', 'keep *_hltConvPFTauTightIsoTrackPt20_*_*', 'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 'keep *_hltConvPFTausTightIso_*_*', 'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 'keep *_hltConvPFTausTrackFinding_*_*', 'keep *_hltConvPFTaus_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTDphiFilter_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTDphiFilter_*_*', 'keep *_hltFilterL2EtCutDoublePFIsoTau20Trk5_*_*', 'keep *_hltHITIPTCorrectorHB_*_*', 'keep *_hltHITIPTCorrectorHE_*_*', 'keep *_hltL1HLTDoubleIsoPFTau20Trk5JetsMatch_*_*', 'keep *_hltL1HLTSingleIsoPFTau35Trk20Met45JetsMatch_*_*', 'keep *_hltL1IsoElectronTrackIsol_*_*', 'keep *_hltL1NonIsoElectronTrackIsol_*_*', 'keep *_hltL2TauJets_*_*', 'keep *_hltMet_*_*', 'keep *_hltPFTauJetTracksAssociator_*_*', 'keep *_hltPFTauTagInfo_*_*', 'keep *_hltParticleFlow_*_*', 'keep *_hltPixelMatchElectronsL1Iso_*_*', 'keep *_hltPixelMatchElectronsL1NonIso_*_*', 'keep *_hltSingleMu15L3Filtered15_*_*'))
)

process.HLTDebugRAW = cms.PSet(
    outputCommands = (cms.vstring('drop *_hlt*_*_*', 'keep *_hltAlCaEtaRecHitsFilter_*_*', 'keep *_hltAlCaPhiSymStream_*_*', 'keep *_hltAlCaPi0RecHitsFilter_*_*', 'keep *_hltAntiKT5L2L3CorrCaloJets_*_*', 'keep *_hltBLifetimeL25AssociatorStartupU_*_*', 'keep *_hltBLifetimeL25BJetTagsStartupU_*_*', 'keep *_hltBLifetimeL25JetsStartupU_*_*', 'keep *_hltBLifetimeL25TagInfosStartupU_*_*', 'keep *_hltBLifetimeL3AssociatorStartupU_*_*', 'keep *_hltBLifetimeL3BJetTagsStartupU_*_*', 'keep *_hltBLifetimeL3JetsStartupU_*_*', 'keep *_hltBLifetimeL3TagInfosStartupU_*_*', 'keep *_hltBLifetimeRegionalCtfWithMaterialTracksStartupU_*_*', 'keep *_hltBSoftMuonDiJet100L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet100L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet100L25Jets_*_*', 'keep *_hltBSoftMuonDiJet100L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet100Mu9L3_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet20L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet20L25Jets_*_*', 'keep *_hltBSoftMuonDiJet20L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet20Mu5L3_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet60L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet60L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet60L25Jets_*_*', 'keep *_hltBSoftMuonDiJet60L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet60Mu7L3_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet80L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet80L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet80L25Jets_*_*', 'keep *_hltBSoftMuonDiJet80L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet80Mu9L3_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3TagInfos_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet100_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet20_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet60_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet80_*_*', 'keep *_hltBSoftMuonL25BJetTagsUByDR_*_*', 'keep *_hltBSoftMuonL25JetsU_*_*', 'keep *_hltBSoftMuonL25TagInfosU_*_*', 'keep *_hltBSoftMuonL3BJetTagsUByDR_*_*', 'keep *_hltBSoftMuonL3BJetTagsUByPt_*_*', 'keep *_hltBSoftMuonL3TagInfosU_*_*', 'keep *_hltCkfL1IsoLargeWindowTrackCandidates_*_*', 'keep *_hltCkfL1NonIsoLargeWindowTrackCandidates_*_*', 'keep *_hltCorrectedHybridSuperClustersL1Isolated_*_*', 'keep *_hltCorrectedHybridSuperClustersL1NonIsolated_*_*', 'keep *_hltCorrectedMulti5x5EndcapSuperClustersWithPreshowerL1Isolated_*_*', 'keep *_hltCorrectedMulti5x5EndcapSuperClustersWithPreshowerL1NonIsolated_*_*', 'keep *_hltCsc2DRecHits_*_*', 'keep *_hltCscSegments_*_*', 'keep *_hltCtfL1IsoLargeWindowWithMaterialTracks_*_*', 'keep *_hltCtfL1NonIsoLargeWindowWithMaterialTracks_*_*', 'keep *_hltDoublePFTauTightIso20Track5_*_*', 'keep *_hltDoublePFTauTightIso20Track_*_*', 'keep *_hltDt1DRecHits_*_*', 'keep *_hltDt4DSegments_*_*', 'keep *_hltESRegionalPi0EtaRecHit_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTTrackIsolFilter_*_*', 'keep *_hltEle17CaloIdVTCaloIsoVTTrkIdTTrkIsoVTSC8TrackIsolFilter_*_*', 'keep *_hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched_*_*', 'keep *_hltFilterL25LeadingTrackPtCutDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL25LeadingTrackPtCutSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EcalIsolationDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL2EcalIsolationDoubleLooseIsoTau15_*_*', 'keep *_hltFilterL2EcalIsolationSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EcalIsolationSingleLooseIsoTau20_*_*', 'keep *_hltFilterL2EtCutDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL2EtCutDoubleLooseIsoTau15_*_*', 'keep *_hltFilterL2EtCutDoublePFIsoTau20Trk55_*_*', 'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET45_*_*', 'keep *_hltFilterL2EtCutSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EtCutSingleLooseIsoTau20_*_*', 'keep *_hltFilterL3TrackIsolationDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL3TrackIsolationSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 'keep *_hltFilterSingleIsoPFTau35Trk20MET45LeadTrack20MET45IsolationL1HLTMatched_*_*', 'keep *_hltGctDigis_*_*', 'keep *_hltGtDigis_*_*', 'keep *_hltHITCtfWithMaterialTracksHB8E29_*_*', 'keep *_hltHITCtfWithMaterialTracksHE8E29_*_*', 'keep *_hltHITIPTCorrectorHB8E29_*_*', 'keep *_hltHITIPTCorrectorHE8E29_*_*', 'keep *_hltHcalDigis_*_*', 'keep *_hltHoreco_*_*', 'keep *_hltIconeCentral1Regional_*_*', 'keep *_hltIconeCentral2Regional_*_*', 'keep *_hltIconeCentral3Regional_*_*', 'keep *_hltIconeCentral4Regional_*_*', 'keep *_hltIconeTau1Regional_*_*', 'keep *_hltIconeTau2Regional_*_*', 'keep *_hltIconeTau3Regional_*_*', 'keep *_hltIconeTau4Regional_*_*', 'keep *_hltIsolPixelTrackProdHB8E29_*_*', 'keep *_hltIsolPixelTrackProdHB_*_*', 'keep *_hltIsolPixelTrackProdHE8E29_*_*', 'keep *_hltIsolPixelTrackProdHE_*_*', 'keep *_hltIterativeCone5CaloJets_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep *_hltL1IsoEgammaRegionalCTFFinalFitWithMaterial_*_*', 'keep *_hltL1IsoEgammaRegionalCkfTrackCandidates_*_*', 'keep *_hltL1IsoEgammaRegionalPixelSeedGenerator_*_*', 'keep *_hltL1IsoHLTClusterShape_*_*', 'keep *_hltL1IsoLargeWindowElectronPixelSeeds_*_*', 'keep *_hltL1IsoPhotonHollowTrackIsol_*_*', 'keep *_hltL1IsoRecoEcalCandidate_*_*', 'keep *_hltL1IsoSiStripElectronPixelSeeds_*_*', 'keep *_hltL1IsoStartUpElectronPixelSeeds_*_*', 'keep *_hltL1IsolatedElectronHcalIsol_*_*', 'keep *_hltL1IsolatedPhotonEcalIsol_*_*', 'keep *_hltL1IsolatedPhotonHcalIsol_*_*', 'keep *_hltL1NonIsoEgammaRegionalCTFFinalFitWithMaterial_*_*', 'keep *_hltL1NonIsoEgammaRegionalCkfTrackCandidates_*_*', 'keep *_hltL1NonIsoEgammaRegionalPixelSeedGenerator_*_*', 'keep *_hltL1NonIsoHLTClusterShape_*_*', 'keep *_hltL1NonIsoLargeWindowElectronPixelSeeds_*_*', 'keep *_hltL1NonIsoPhotonHollowTrackIsol_*_*', 'keep *_hltL1NonIsoRecoEcalCandidate_*_*', 'keep *_hltL1NonIsoSiStripElectronPixelSeeds_*_*', 'keep *_hltL1NonIsoStartUpElectronPixelSeeds_*_*', 'keep *_hltL1NonIsolatedElectronHcalIsol_*_*', 'keep *_hltL1NonIsolatedPhotonEcalIsol_*_*', 'keep *_hltL1NonIsolatedPhotonHcalIsol_*_*', 'keep *_hltL1extraParticles_*_*', 'keep *_hltL1sDoubleIsoTau15Trk5_*_*', 'keep *_hltL1sDoubleLooseIsoTau15_*_*', 'keep *_hltL1sL1SingleEG12_*_*', 'keep *_hltL1sL1SingleMu10_*_*', 'keep *_hltL1sSingleIsoTau35Trk20MET45_*_*', 'keep *_hltL1sSingleLooseIsoTau20_*_*', 'keep *_hltL25TauConeIsolation_*_*', 'keep *_hltL25TauCtfWithMaterialTracks_*_*', 'keep *_hltL25TauJetTracksAssociator_*_*', 'keep *_hltL25TauLeadingTrackPtCutSelector_*_*', 'keep *_hltL2MuonCandidatesNoVtx_*_*', 'keep *_hltL2MuonCandidates_*_*', 'keep *_hltL2MuonIsolations_*_*', 'keep *_hltL2MuonSeeds_*_*', 'keep *_hltL2MuonsCandidates_*_*', 'keep *_hltL2Muons_*_*', 'keep *_hltL2TauJets_*_*', 'keep *_hltL2TauNarrowConeIsolationProducer_*_*', 'keep *_hltL2TauRelaxingIsolationSelector_*_*', 'keep *_hltL3MuonCandidatesNoVtx_*_*', 'keep *_hltL3MuonCandidates_*_*', 'keep *_hltL3MuonIsolations_*_*', 'keep *_hltL3MuonsCandidates_*_*', 'keep *_hltL3MuonsIOHit_*_*', 'keep *_hltL3MuonsLinksCombination_*_*', 'keep *_hltL3MuonsNoVtx_*_*', 'keep *_hltL3MuonsOIHit_*_*', 'keep *_hltL3MuonsOIState_*_*', 'keep *_hltL3Muons_*_*', 'keep *_hltL3TauConeIsolation_*_*', 'keep *_hltL3TauCtfWithMaterialTracks_*_*', 'keep *_hltL3TauIsolationSelector_*_*', 'keep *_hltL3TauJetTracksAssociator_*_*', 'keep *_hltL3TkFromL2OICombination_*_*', 'keep *_hltL3TkTracksFromL2IOHit_*_*', 'keep *_hltL3TkTracksFromL2OIHit_*_*', 'keep *_hltL3TkTracksFromL2OIState_*_*', 'keep *_hltL3TkTracksFromL2_*_*', 'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 'keep *_hltL3TrackCandidateFromL2OIState_*_*', 'keep *_hltL3TrackCandidateFromL2_*_*', 'keep *_hltL3TrajSeedIOHit_*_*', 'keep *_hltL3TrajSeedOIHit_*_*', 'keep *_hltL3TrajSeedOIState_*_*', 'keep *_hltL3TrajectorySeedNoVtx_*_*', 'keep *_hltL3TrajectorySeed_*_*', 'keep *_hltMCJetCorJetIcone5HF07_*_*', 'keep *_hltMet_*_*', 'keep *_hltMu15L3Filtered15_*_*', 'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 'keep *_hltMuTrackJpsiCtfTracks_*_*', 'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 'keep *_hltMuTrackJpsiPixelTrackSelector_*_*', 'keep *_hltMuTrackJpsiTrackSeeds_*_*', 'keep *_hltMuonCSCDigis_*_*', 'keep *_hltMuonDTDigis_*_*', 'keep *_hltMuonRPCDigis_*_*', 'keep *_hltOfflineBeamSpot_*_*', 'keep *_hltOverlapFilterIsoEle15IsoPFTau15_*_*', 'keep *_hltOverlapFilterMu15IsoPFTau20_*_*', 'keep *_hltPFTau15TrackLooseIso_*_*', 'keep *_hltPFTau15Track_*_*', 'keep *_hltPFTau15_*_*', 'keep *_hltPFTau20TrackLooseIso_*_*', 'keep *_hltPFTau20Track_*_*', 'keep *_hltPFTauTightIso35Track_*_*', 'keep *_hltPixelMatchElectronsL1Iso_*_*', 'keep *_hltPixelMatchElectronsL1NonIso_*_*', 'keep *_hltPixelMatchLargeWindowElectronsL1Iso_*_*', 'keep *_hltPixelMatchLargeWindowElectronsL1NonIso_*_*', 'keep *_hltPixelTracks_*_*', 'keep *_hltPixelVertices_*_*', 'keep *_hltRpcRecHits_*_*', 'keep *_hltSiPixelClusters_*_*', 'keep *_hltSiPixelRecHits_*_*', 'keep *_hltSiStripClusters_*_*', 'keep *_hltSiStripRawToClustersFacility_*_*', 'keep *_hltTowerMakerForAll_*_*', 'keep *_hltTowerMakerForMuons_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep L1GlobalTriggerReadoutRecord_*_*_*', 'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 'keep L1MuGMTCands_hltGtDigis_*_*', 'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 'keep TrackingRecHitsOwned_hltL3Muons_*_*', 'keep edmTriggerResults_*_*_*', 'keep l1extraL1EmParticles_*_*_*', 'keep l1extraL1EmParticles_hltL1extraParticles_*_*', 'keep l1extraL1EtMissParticles_hltL1extraParticles_*_*', 'keep l1extraL1JetParticles_hltL1extraParticles_*_*', 'keep l1extraL1MuonParticles_hltL1extraParticles_*_*', 'keep recoCaloJets_hltIterativeCone5CaloJets_*_*', 'keep recoCaloMETs_hltMet_*_*', 'keep recoElectronSeeds_hltL1IsoLargeWindowElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1IsoSiStripElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1IsoStartUpElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoLargeWindowElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoSiStripElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoStartUpElectronPixelSeeds_*_*', 'keep recoElectrons_hltPixelMatchLargeWindowElectronsL1Iso_*_*', 'keep recoElectrons_hltPixelMatchLargeWindowElectronsL1NonIso_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedElectronHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonTrackIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedElectronHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonTrackIsol_*_*', 'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*')+cms.vstring('keep triggerTriggerEventWithRefs_*_*_*', 'keep triggerTriggerEventWithRefs_hltTriggerSummaryRAW_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep triggerTriggerEvent_hltTriggerSummaryAOD_*_*', 'keep *_hltAntiKT5CaloJets_*_*', 'keep *_hltAntiKT5PFJets_*_*', 'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonMu5L3_*_*', 'keep *_hltConvPFTauTightIsoTrackPt20Isolation_*_*', 'keep *_hltConvPFTauTightIsoTrackPt20_*_*', 'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 'keep *_hltConvPFTausTightIso_*_*', 'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 'keep *_hltConvPFTausTrackFinding_*_*', 'keep *_hltConvPFTaus_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTDphiFilter_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTDphiFilter_*_*', 'keep *_hltFilterL2EtCutDoublePFIsoTau20Trk5_*_*', 'keep *_hltHITIPTCorrectorHB_*_*', 'keep *_hltHITIPTCorrectorHE_*_*', 'keep *_hltL1HLTDoubleIsoPFTau20Trk5JetsMatch_*_*', 'keep *_hltL1HLTSingleIsoPFTau35Trk20Met45JetsMatch_*_*', 'keep *_hltL1IsoElectronTrackIsol_*_*', 'keep *_hltL1NonIsoElectronTrackIsol_*_*', 'keep *_hltL2TauJets_*_*', 'keep *_hltMet_*_*', 'keep *_hltPFTauJetTracksAssociator_*_*', 'keep *_hltPFTauTagInfo_*_*', 'keep *_hltParticleFlow_*_*', 'keep *_hltPixelMatchElectronsL1Iso_*_*', 'keep *_hltPixelMatchElectronsL1NonIso_*_*', 'keep *_hltSingleMu15L3Filtered15_*_*'))
)

process.HLTriggerAOD = cms.PSet(
    outputCommands = cms.vstring('drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.HLTriggerRAW = cms.PSet(
    outputCommands = cms.vstring('drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.HLTriggerRECO = cms.PSet(
    outputCommands = cms.vstring('drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.HcalNoiseParameterSet = cms.PSet(
    lMinRatio = cms.double(0.7),
    lMaxHighEHitTime = cms.double(9999.0),
    pMinHighEHitTime = cms.double(-4.0),
    lMaxLowEHitTime = cms.double(9999.0),
    TS4TS5EnergyThreshold = cms.double(50),
    lMinHPDHits = cms.int32(17),
    tMinRBXHits = cms.int32(50),
    TS4TS5UpperThreshold = cms.vdouble(70, 90, 100, 400, 4000),
    minEZeros = cms.double(10.0),
    pMinRBXHits = cms.int32(20),
    tMinHPDHits = cms.int32(16),
    minRecHitE = cms.double(1.5),
    hlMaxRBXEMF = cms.double(0.01),
    pMinEEMF = cms.double(10.0),
    pMaxRatio = cms.double(0.85),
    minEEMF = cms.double(50.0),
    pMaxHighEHitTime = cms.double(5.0),
    pMaxLowEHitTime = cms.double(6.0),
    minHighHitE = cms.double(25.0),
    lMinZeros = cms.int32(10),
    lMinRBXHits = cms.int32(999),
    tMaxRatio = cms.double(0.92),
    minLowHitE = cms.double(10.0),
    pMinRatio = cms.double(0.75),
    pMaxRBXEMF = cms.double(0.02),
    pMinE = cms.double(40.0),
    pMaxHPDEMF = cms.double(0.02),
    tMinHighEHitTime = cms.double(-7.0),
    TS4TS5LowerCut = cms.vdouble(-1, -0.7, -0.4, -0.2, -0.08, 
        0, 0.1),
    lMaxRatio = cms.double(0.96),
    lMinHighEHitTime = cms.double(-9999.0),
    pMinEZeros = cms.double(5.0),
    pMinERatio = cms.double(25.0),
    pMinZeros = cms.int32(4),
    tMinRatio = cms.double(0.73),
    TS4TS5UpperCut = cms.vdouble(1, 0.8, 0.75, 0.72, 0.72),
    pMinLowEHitTime = cms.double(-6.0),
    pMinHPDHits = cms.int32(10),
    lMinLowEHitTime = cms.double(-9999.0),
    tMinHPDNoOtherHits = cms.int32(9),
    minERatio = cms.double(50.0),
    tMinLowEHitTime = cms.double(-9999.0),
    tMaxHighEHitTime = cms.double(6.0),
    tMinZeros = cms.int32(8),
    lMinHPDNoOtherHits = cms.int32(10),
    TS4TS5LowerThreshold = cms.vdouble(100, 120, 150, 200, 300, 
        400, 500),
    tMaxLowEHitTime = cms.double(9999.0),
    pMinHPDNoOtherHits = cms.int32(7),
    hlMaxHPDEMF = cms.double(-9999.0)
)

process.IOMCRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_randomEngineStateProducer_*_*')
)

process.JPTZSPCorrectorICone5 = cms.PSet(
    VectorialCorrection = cms.bool(True),
    ElectronIds = cms.InputTag("JPTeidTight"),
    UseMuons = cms.bool(True),
    Muons = cms.InputTag("muons"),
    UseTrackQuality = cms.bool(True),
    JetTracksAssociationAtVertex = cms.InputTag("iterativeCone5JetTracksAssociatorAtVertex"),
    LeakageMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackLeakage.txt'),
    UseOutOfConeTracks = cms.bool(True),
    UseInConeTracks = cms.bool(True),
    UseOutOfVertexTracks = cms.bool(True),
    UseResponseInVecCorr = cms.bool(False),
    ResponseMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_3110_response.txt'),
    EfficiencyMap = cms.string('CondFormats/JetMETObjects/data/CMSSW_362_TrackNonEff.txt'),
    UsePions = cms.bool(True),
    Electrons = cms.InputTag("gsfElectrons"),
    JetSplitMerge = cms.int32(0),
    DzVertexCut = cms.double(0.2),
    MaxJetEta = cms.double(3.0),
    Verbose = cms.bool(True),
    UseElectrons = cms.bool(True),
    JetTracksAssociationAtCaloFace = cms.InputTag("iterativeCone5JetTracksAssociatorAtCaloFace"),
    PtErrorQuality = cms.double(0.05),
    TrackQuality = cms.string('highPurity'),
    UseEfficiency = cms.bool(True)
)

process.JetIDParams = cms.PSet(
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True)
)

process.L1ExtraInputTagSet = cms.PSet(
    L1ExtraInputTags = cms.PSet(
        TagL1ExtraMuon = cms.InputTag("l1extraParticles"),
        TagL1ExtraEtMissMET = cms.InputTag("l1extraParticles","MET"),
        TagL1ExtraNoIsoEG = cms.InputTag("l1extraParticles","NonIsolated"),
        TagL1ExtraTauJet = cms.InputTag("l1extraParticles","Tau"),
        TagL1ExtraForJet = cms.InputTag("l1extraParticles","Forward"),
        TagL1ExtraEtMissHTM = cms.InputTag("l1extraParticles","MHT"),
        TagL1ExtraHFRings = cms.InputTag("l1extraParticles"),
        TagL1ExtraCenJet = cms.InputTag("l1extraParticles","Central"),
        TagL1ExtraIsoEG = cms.InputTag("l1extraParticles","Isolated")
    )
)

process.L1TriggerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep LumiSummary_lumiProducer_*_*')
)

process.L1TriggerFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_simCscTriggerPrimitiveDigis_*_*', 
        'keep *_simDtTriggerPrimitiveDigis_*_*', 
        'keep *_simRpcTriggerDigis_*_*', 
        'keep *_simRctDigis_*_*', 
        'keep *_simCsctfDigis_*_*', 
        'keep *_simCsctfTrackDigis_*_*', 
        'keep *_simDttfDigis_*_*', 
        'keep *_simGctDigis_*_*', 
        'keep *_simGmtDigis_*_*', 
        'keep *_simGtDigis_*_*', 
        'keep *_cscTriggerPrimitiveDigis_*_*', 
        'keep *_dtTriggerPrimitiveDigis_*_*', 
        'keep *_rpcTriggerDigis_*_*', 
        'keep *_rctDigis_*_*', 
        'keep *_csctfDigis_*_*', 
        'keep *_csctfTrackDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gctDigis_*_*', 
        'keep *_gmtDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_gtEvmDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*')
)

process.L1TriggerRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*')
)

process.L1TriggerRAWDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*')
)

process.L1TriggerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*', 
        'keep L1MuGMTReadoutCollection_gtDigis_*_*', 
        'keep L1GctEmCand*_gctDigis_*_*', 
        'keep L1GctJetCand*_gctDigis_*_*', 
        'keep L1GctEtHad*_gctDigis_*_*', 
        'keep L1GctEtMiss*_gctDigis_*_*', 
        'keep L1GctEtTotal*_gctDigis_*_*', 
        'keep L1GctHtMiss*_gctDigis_*_*', 
        'keep L1GctJetCounts*_gctDigis_*_*', 
        'keep L1GctHFRingEtSums*_gctDigis_*_*', 
        'keep L1GctHFBitCounts*_gctDigis_*_*', 
        'keep LumiDetails_lumiProducer_*_*', 
        'keep LumiSummary_lumiProducer_*_*')
)

process.METSignificance_params = cms.PSet(
    resolutionsEra = cms.string('Spring10'),
    HB_EtResPar = cms.vdouble(0.0, 1.22, 0.05),
    EE_PhiResPar = cms.vdouble(0.02511),
    jdpt9 = cms.vdouble(0.843, 0.885, 1.245, 1.665, 1.944, 
        1.981, 1.972, 2.875, 3.923, 7.51),
    jdpt8 = cms.vdouble(0.889, 0.939, 1.166, 1.365, 1.553, 
        1.805, 2.06, 2.22, 2.268, 2.247),
    jdpt7 = cms.vdouble(1.094, 1.139, 1.436, 1.672, 1.831, 
        2.05, 2.267, 2.549, 2.785, 2.86),
    jdpt6 = cms.vdouble(1.213, 1.298, 1.716, 2.015, 2.191, 
        2.612, 2.863, 2.879, 2.925, 2.902),
    jdpt5 = cms.vdouble(1.049, 1.149, 1.607, 1.869, 2.012, 
        2.219, 2.289, 2.412, 2.695, 2.865),
    jdpt4 = cms.vdouble(0.85, 0.961, 1.337, 1.593, 1.854, 
        2.005, 2.209, 2.533, 2.812, 3.047),
    jdpt3 = cms.vdouble(0.929, 1.04, 1.46, 1.74, 2.042, 
        2.289, 2.639, 2.837, 2.946, 2.971),
    jdpt2 = cms.vdouble(0.841, 0.937, 1.316, 1.605, 1.919, 
        2.295, 2.562, 2.722, 2.943, 3.293),
    jdpt1 = cms.vdouble(0.718, 0.813, 1.133, 1.384, 1.588, 
        1.841, 2.115, 2.379, 2.508, 2.772),
    jdpt0 = cms.vdouble(0.749, 0.829, 1.099, 1.355, 1.584, 
        1.807, 2.035, 2.217, 2.378, 2.591),
    HE_EtResPar = cms.vdouble(0.0, 1.3, 0.05),
    HF_PhiResPar = cms.vdouble(0.05022),
    PF_PhiResType7 = cms.vdouble(0.02511),
    HE_PhiResPar = cms.vdouble(0.02511),
    EE_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    PF_PhiResType2 = cms.vdouble(0.002),
    PF_PhiResType3 = cms.vdouble(0.002),
    HF_EtResPar = cms.vdouble(0.0, 1.82, 0.09),
    resolutionsAlgo = cms.string('AK5PF'),
    PF_PhiResType6 = cms.vdouble(0.02511),
    HB_PhiResPar = cms.vdouble(0.02511),
    PF_PhiResType4 = cms.vdouble(0.0028, 0.0, 0.0022),
    PF_PhiResType5 = cms.vdouble(0.1, 0.1, 0.13),
    ptresolthreshold = cms.double(10.0),
    EB_EtResPar = cms.vdouble(0.2, 0.03, 0.005),
    jdphi8 = cms.vdouble(0.059, 0.057, 0.051, 0.044, 0.038, 
        0.035, 0.037, 0.032, 0.028, 0.028),
    EB_PhiResPar = cms.vdouble(0.00502),
    jdphi9 = cms.vdouble(0.062, 0.059, 0.053, 0.047, 0.042, 
        0.045, 0.036, 0.032, 0.034, 0.044),
    PF_PhiResType1 = cms.vdouble(0.002),
    jdphi4 = cms.vdouble(0.042, 0.042, 0.043, 0.042, 0.038, 
        0.036, 0.036, 0.033, 0.031, 0.031),
    HO_PhiResPar = cms.vdouble(0.02511),
    jdphi2 = cms.vdouble(0.04, 0.04, 0.04, 0.04, 0.04, 
        0.038, 0.036, 0.035, 0.034, 0.033),
    jdphi1 = cms.vdouble(0.034, 0.035, 0.035, 0.035, 0.035, 
        0.034, 0.031, 0.03, 0.029, 0.027),
    jdphi0 = cms.vdouble(0.034, 0.034, 0.034, 0.034, 0.032, 
        0.031, 0.028, 0.027, 0.027, 0.027),
    jdphi7 = cms.vdouble(0.077, 0.072, 0.059, 0.05, 0.045, 
        0.042, 0.039, 0.039, 0.037, 0.031),
    jdphi6 = cms.vdouble(0.084, 0.08, 0.072, 0.065, 0.066, 
        0.06, 0.051, 0.049, 0.045, 0.045),
    jdphi5 = cms.vdouble(0.069, 0.069, 0.064, 0.058, 0.053, 
        0.049, 0.049, 0.043, 0.039, 0.04),
    HO_EtResPar = cms.vdouble(0.0, 1.3, 0.005),
    jdphi3 = cms.vdouble(0.042, 0.043, 0.044, 0.043, 0.041, 
        0.039, 0.039, 0.036, 0.034, 0.031),
    PF_EtResType5 = cms.vdouble(0.41, 0.52, 0.25),
    PF_EtResType4 = cms.vdouble(0.042, 0.1, 0.0),
    PF_EtResType7 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType6 = cms.vdouble(0.0, 1.22, 0.05),
    PF_EtResType1 = cms.vdouble(0.05, 0, 0),
    PF_EtResType3 = cms.vdouble(0.05, 0, 0),
    PF_EtResType2 = cms.vdouble(0.05, 0, 0)
)

process.MEtoEDMConverterAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.MEtoEDMConverterFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_MEtoEDMConverter_*_*')
)

process.MEtoEDMConverterRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.MIXINGMODULEEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_cfWriter_*_*')
)

process.MIdIsoExtractorPSetBlock = cms.PSet(
    TrackExtractorPSet = cms.PSet(
        Diff_z = cms.double(0.2),
        inputTrackCollection = cms.InputTag("generalTracks"),
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(1.0),
        Diff_r = cms.double(0.1),
        Chi2Prob_Min = cms.double(-1.0),
        DR_Veto = cms.double(0.01),
        NHits_Min = cms.uint32(0),
        Chi2Ndof_Max = cms.double(1e+64),
        Pt_Min = cms.double(-1.0),
        DepositLabel = cms.untracked.string(''),
        BeamlineOption = cms.string('BeamSpotFromEvent')
    ),
    ecalDepositName = cms.string('ecal'),
    JetExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        ExcludeMuonVeto = cms.bool(True),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(0.5),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(0.5),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        JetCollectionLabel = cms.InputTag("ak5CaloJets"),
        DR_Veto = cms.double(0.1),
        Threshold = cms.double(5.0)
    ),
    hcalDepositName = cms.string('hcal'),
    CaloExtractorPSet = cms.PSet(
        PrintTimeReport = cms.untracked.bool(False),
        DR_Max = cms.double(1.0),
        Threshold_E = cms.double(0.2),
        DepositInstanceLabels = cms.vstring('ecal', 
            'hcal', 
            'ho'),
        Noise_HE = cms.double(0.2),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Threshold_H = cms.double(0.5),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Noise_HO = cms.double(0.2),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        DepositLabel = cms.untracked.string('Cal'),
        UseRecHitsFlag = cms.bool(False),
        TrackAssociatorParameters = cms.PSet(
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            dRHcal = cms.double(1.0),
            dRPreshowerPreselection = cms.double(0.2),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            useEcal = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            dRMuon = cms.double(9999.0),
            propagateAllDirections = cms.bool(True),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            useHO = cms.bool(False),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            usePreshower = cms.bool(False),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            dRHcalPreselection = cms.double(1.0),
            useMuon = cms.bool(False),
            useCalo = cms.bool(True),
            accountForTrajectoryChangeCalo = cms.bool(False),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            dRMuonPreselection = cms.double(0.2),
            truthMatch = cms.bool(False),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            useHcal = cms.bool(False)
        ),
        Threshold_HO = cms.double(0.5),
        Noise_EE = cms.double(0.1),
        Noise_EB = cms.double(0.025),
        DR_Veto_H = cms.double(0.1),
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        Noise_HB = cms.double(0.2),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_HO = cms.double(0.1)
    ),
    trackDepositName = cms.string('tracker'),
    jetDepositName = cms.string('jets'),
    hoDepositName = cms.string('ho')
)

process.MIsoCaloExtractorByAssociatorHitsBlock = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(1.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(1.0),
        useMuon = cms.bool(False),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    PrintTimeReport = cms.untracked.bool(False),
    DR_Max = cms.double(1.0),
    DepositInstanceLabels = cms.vstring('ecal', 
        'hcal', 
        'ho'),
    Noise_HE = cms.double(0.2),
    NoiseTow_EB = cms.double(0.04),
    NoiseTow_EE = cms.double(0.15),
    Threshold_H = cms.double(0.1),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
        RPCLayers = cms.bool(False),
        UseMuonNavigation = cms.untracked.bool(False)
    ),
    Noise_HO = cms.double(0.2),
    PropagatorName = cms.string('SteppingHelixPropagatorAny'),
    DepositLabel = cms.untracked.string('Cal'),
    UseRecHitsFlag = cms.bool(True),
    Threshold_HO = cms.double(0.1),
    Noise_EE = cms.double(0.1),
    Noise_EB = cms.double(0.025),
    DR_Veto_H = cms.double(0.1),
    CenterConeOnCalIntersection = cms.bool(False),
    ComponentName = cms.string('CaloExtractorByAssociator'),
    Noise_HB = cms.double(0.2),
    DR_Veto_E = cms.double(0.07),
    DR_Veto_HO = cms.double(0.1),
    Threshold_E = cms.double(0.025)
)

process.MIsoCaloExtractorByAssociatorTowersBlock = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(1.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(1.0),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    ),
    PrintTimeReport = cms.untracked.bool(False),
    DR_Max = cms.double(1.0),
    DepositInstanceLabels = cms.vstring('ecal', 
        'hcal', 
        'ho'),
    Noise_HE = cms.double(0.2),
    NoiseTow_EB = cms.double(0.04),
    NoiseTow_EE = cms.double(0.15),
    Threshold_H = cms.double(0.5),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
        RPCLayers = cms.bool(False),
        UseMuonNavigation = cms.untracked.bool(False)
    ),
    Noise_HO = cms.double(0.2),
    PropagatorName = cms.string('SteppingHelixPropagatorAny'),
    DepositLabel = cms.untracked.string('Cal'),
    UseRecHitsFlag = cms.bool(False),
    Threshold_HO = cms.double(0.5),
    Noise_EE = cms.double(0.1),
    Noise_EB = cms.double(0.025),
    DR_Veto_H = cms.double(0.1),
    CenterConeOnCalIntersection = cms.bool(False),
    ComponentName = cms.string('CaloExtractorByAssociator'),
    Noise_HB = cms.double(0.2),
    DR_Veto_E = cms.double(0.07),
    DR_Veto_HO = cms.double(0.1),
    Threshold_E = cms.double(0.2)
)

process.MIsoCaloExtractorEcalBlock = cms.PSet(
    DR_Veto_H = cms.double(0.1),
    Vertex_Constraint_Z = cms.bool(False),
    Threshold_H = cms.double(0.5),
    ComponentName = cms.string('CaloExtractor'),
    Threshold_E = cms.double(0.2),
    DR_Max = cms.double(1.0),
    DR_Veto_E = cms.double(0.07),
    Weight_E = cms.double(1.0),
    Vertex_Constraint_XY = cms.bool(False),
    DepositLabel = cms.untracked.string('EcalPlusHcal'),
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    Weight_H = cms.double(0.0)
)

process.MIsoCaloExtractorHLTBlock = cms.PSet(
    DR_Veto_H = cms.double(0.1),
    Vertex_Constraint_Z = cms.bool(False),
    Threshold_H = cms.double(0.5),
    ComponentName = cms.string('CaloExtractor'),
    Threshold_E = cms.double(0.2),
    DR_Max = cms.double(1.0),
    DR_Veto_E = cms.double(0.07),
    Weight_E = cms.double(1.5),
    Vertex_Constraint_XY = cms.bool(False),
    DepositLabel = cms.untracked.string('EcalPlusHcal'),
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    Weight_H = cms.double(1.0)
)

process.MIsoCaloExtractorHcalBlock = cms.PSet(
    DR_Veto_H = cms.double(0.1),
    Vertex_Constraint_Z = cms.bool(False),
    Threshold_H = cms.double(0.5),
    ComponentName = cms.string('CaloExtractor'),
    Threshold_E = cms.double(0.2),
    DR_Max = cms.double(1.0),
    DR_Veto_E = cms.double(0.07),
    Weight_E = cms.double(0.0),
    Vertex_Constraint_XY = cms.bool(False),
    DepositLabel = cms.untracked.string('EcalPlusHcal'),
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    Weight_H = cms.double(1.0)
)

process.MIsoDepositGlobalIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("globalMuons"),
    MultipleDepositsFlag = cms.bool(False),
    MuonTrackRefType = cms.string('track'),
    InputType = cms.string('TrackCollection')
)

process.MIsoDepositGlobalMultiIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("globalMuons"),
    MultipleDepositsFlag = cms.bool(True),
    MuonTrackRefType = cms.string('track'),
    InputType = cms.string('TrackCollection')
)

process.MIsoDepositParamGlobalIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
    MultipleDepositsFlag = cms.bool(False),
    MuonTrackRefType = cms.string('track'),
    InputType = cms.string('MuonCollection')
)

process.MIsoDepositParamGlobalMultiIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
    MultipleDepositsFlag = cms.bool(True),
    MuonTrackRefType = cms.string('track'),
    InputType = cms.string('MuonCollection')
)

process.MIsoDepositParamGlobalViewIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
    MultipleDepositsFlag = cms.bool(False),
    MuonTrackRefType = cms.string('bestTrkSta'),
    InputType = cms.string('MuonCollection')
)

process.MIsoDepositParamGlobalViewMultiIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons"),
    MultipleDepositsFlag = cms.bool(True),
    MuonTrackRefType = cms.string('bestTrkSta'),
    InputType = cms.string('MuonCollection')
)

process.MIsoDepositViewIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("muons"),
    MultipleDepositsFlag = cms.bool(False),
    MuonTrackRefType = cms.string('bestTrkSta'),
    InputType = cms.string('MuonCollection')
)

process.MIsoDepositViewMultiIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    inputMuonCollection = cms.InputTag("muons"),
    MultipleDepositsFlag = cms.bool(True),
    MuonTrackRefType = cms.string('bestTrkSta'),
    InputType = cms.string('MuonCollection')
)

process.MIsoJetExtractorBlock = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(0.5),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(0.5),
        dREcalPreselection = cms.double(0.5),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.5),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    ),
    PrintTimeReport = cms.untracked.bool(False),
    ExcludeMuonVeto = cms.bool(True),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
        RPCLayers = cms.bool(False),
        UseMuonNavigation = cms.untracked.bool(False)
    ),
    ComponentName = cms.string('JetExtractor'),
    DR_Max = cms.double(1.0),
    PropagatorName = cms.string('SteppingHelixPropagatorAny'),
    JetCollectionLabel = cms.InputTag("ak5CaloJets"),
    DR_Veto = cms.double(0.1),
    Threshold = cms.double(5.0)
)

process.MIsoTrackAssociatorDefault = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(1.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(1.0),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    )
)

process.MIsoTrackAssociatorHits = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(1.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(1.0),
        useMuon = cms.bool(False),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    )
)

process.MIsoTrackAssociatorJets = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(0.5),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(0.5),
        dREcalPreselection = cms.double(0.5),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.5),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    )
)

process.MIsoTrackAssociatorTowers = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(1.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(False),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(False),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(1.0),
        useMuon = cms.bool(False),
        useCalo = cms.bool(True),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(False)
    )
)

process.MIsoTrackExtractorBlock = cms.PSet(
    Diff_z = cms.double(0.2),
    inputTrackCollection = cms.InputTag("generalTracks"),
    BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    ComponentName = cms.string('TrackExtractor'),
    DR_Max = cms.double(1.0),
    Diff_r = cms.double(0.1),
    Chi2Prob_Min = cms.double(-1.0),
    DR_Veto = cms.double(0.01),
    NHits_Min = cms.uint32(0),
    Chi2Ndof_Max = cms.double(1e+64),
    Pt_Min = cms.double(-1.0),
    DepositLabel = cms.untracked.string(''),
    BeamlineOption = cms.string('BeamSpotFromEvent')
)

process.MIsoTrackExtractorCtfBlock = cms.PSet(
    Diff_z = cms.double(0.2),
    inputTrackCollection = cms.InputTag("generalTracks"),
    BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    ComponentName = cms.string('TrackExtractor'),
    DR_Max = cms.double(1.0),
    Diff_r = cms.double(0.1),
    Chi2Prob_Min = cms.double(-1.0),
    DR_Veto = cms.double(0.01),
    NHits_Min = cms.uint32(0),
    Chi2Ndof_Max = cms.double(1e+64),
    Pt_Min = cms.double(-1.0),
    DepositLabel = cms.untracked.string(''),
    BeamlineOption = cms.string('BeamSpotFromEvent')
)

process.MIsoTrackExtractorGsBlock = cms.PSet(
    Diff_z = cms.double(0.2),
    inputTrackCollection = cms.InputTag("ctfGSWithMaterialTracks"),
    BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    ComponentName = cms.string('TrackExtractor'),
    DR_Max = cms.double(1.0),
    Diff_r = cms.double(0.1),
    Chi2Prob_Min = cms.double(-1.0),
    DR_Veto = cms.double(0.01),
    NHits_Min = cms.uint32(0),
    Chi2Ndof_Max = cms.double(1e+64),
    Pt_Min = cms.double(-1.0),
    DepositLabel = cms.untracked.string(''),
    BeamlineOption = cms.string('BeamSpotFromEvent')
)

process.MaxConsecLostHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MaxConsecLostHitsTrajectoryFilter'),
    maxConsecLostHits = cms.int32(1)
)

process.MaxHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MaxHitsTrajectoryFilter'),
    maxNumberOfHits = cms.int32(100)
)

process.MaxLostHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MaxLostHitsTrajectoryFilter'),
    maxLostHits = cms.int32(1)
)

process.MinHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MinHitsTrajectoryFilter'),
    minimumNumberOfHits = cms.int32(5)
)

process.MinPtTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MinPtTrajectoryFilter'),
    nSigmaMinPt = cms.double(5.0),
    minHitsMinPt = cms.int32(3),
    minPt = cms.double(1.0)
)

process.MuonCaloCompatibilityBlock = cms.PSet(
    MuonCaloCompatibility = cms.PSet(
        allSiPMHO = cms.bool(False),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    )
)

process.MuonCosmicCompatibilityParameters = cms.PSet(
    CosmicCompFillerParameters = cms.PSet(
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                'SteppingHelixPropagatorAlong', 
                'SteppingHelixPropagatorOpposite', 
                'SteppingHelixPropagatorL2Any', 
                'SteppingHelixPropagatorL2Along', 
                'SteppingHelixPropagatorL2Opposite', 
                'SteppingHelixPropagatorAnyNoError', 
                'SteppingHelixPropagatorAlongNoError', 
                'SteppingHelixPropagatorOppositeNoError', 
                'SteppingHelixPropagatorL2AnyNoError', 
                'SteppingHelixPropagatorL2AlongNoError', 
                'SteppingHelixPropagatorL2OppositeNoError', 
                'PropagatorWithMaterial', 
                'PropagatorWithMaterialOpposite', 
                'SmartPropagator', 
                'SmartPropagatorOpposite', 
                'SmartPropagatorAnyOpposite', 
                'SmartPropagatorAny', 
                'SmartPropagatorRK', 
                'SmartPropagatorAnyRK', 
                'StraightLinePropagator'),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        deltaPt = cms.double(0.1),
        maxdzTight = cms.double(10.0),
        offTimeNegTight = cms.double(-20.0),
        maxvertRho = cms.double(5),
        ipCut = cms.double(0.02),
        segmentComp = cms.double(0.4),
        sharedFrac = cms.double(0.75),
        angleCut = cms.double(0.1),
        hIpTrvProb = cms.double(0.5),
        InputMuonCollections = cms.VInputTag(cms.InputTag("globalMuons"), cms.InputTag("muons")),
        maxdxyTight = cms.double(1.0),
        maxdzLoose = cms.double(0.1),
        InputTrackCollections = cms.VInputTag(cms.InputTag("generalTracks"), cms.InputTag("cosmicsVetoTracks")),
        maxdxyTightMult = cms.double(1.0),
        corrTimeNeg = cms.double(-10),
        offTimePosTight = cms.double(25.0),
        maxdzLooseMult = cms.double(0.1),
        maxvertZ = cms.double(20),
        nChamberMatches = cms.int32(1),
        corrTimePos = cms.double(5),
        offTimeNegLoose = cms.double(-15.0),
        maxdxyLooseMult = cms.double(0.01),
        offTimePosTightMult = cms.double(25.0),
        offTimePosLoose = cms.double(15.0),
        largedxyMult = cms.double(3.0),
        largedxy = cms.double(2.0),
        nTrackThreshold = cms.int32(3),
        maxdzTightMult = cms.double(10.0),
        InputCosmicMuonCollection = cms.InputTag("muonsFromCosmics1Leg"),
        minvProb = cms.double(0.001),
        hIpTrdxy = cms.double(0.02),
        InputVertexCollection = cms.InputTag("offlinePrimaryVertices"),
        offTimePosLooseMult = cms.double(15.0),
        offTimeNegLooseMult = cms.double(-15.0),
        sharedHits = cms.int32(5),
        maxdxyLoose = cms.double(0.01),
        offTimeNegTightMult = cms.double(-20.0)
    )
)

process.MuonSegmentMatcher = cms.PSet(
    MatchParameters = cms.PSet(
        CSCsegments = cms.InputTag("cscSegments"),
        DTsegments = cms.InputTag("dt4DSegments"),
        DTradius = cms.double(0.01),
        TightMatchDT = cms.bool(False),
        TightMatchCSC = cms.bool(True)
    )
)

process.MuonServiceProxy = cms.PSet(
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
            'SteppingHelixPropagatorAlong', 
            'SteppingHelixPropagatorOpposite', 
            'SteppingHelixPropagatorL2Any', 
            'SteppingHelixPropagatorL2Along', 
            'SteppingHelixPropagatorL2Opposite', 
            'SteppingHelixPropagatorAnyNoError', 
            'SteppingHelixPropagatorAlongNoError', 
            'SteppingHelixPropagatorOppositeNoError', 
            'SteppingHelixPropagatorL2AnyNoError', 
            'SteppingHelixPropagatorL2AlongNoError', 
            'SteppingHelixPropagatorL2OppositeNoError', 
            'PropagatorWithMaterial', 
            'PropagatorWithMaterialOpposite', 
            'SmartPropagator', 
            'SmartPropagatorOpposite', 
            'SmartPropagatorAnyOpposite', 
            'SmartPropagatorAny', 
            'SmartPropagatorRK', 
            'SmartPropagatorAnyRK', 
            'StraightLinePropagator', 
            'StraightLinePropagator'),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    )
)

process.MuonShowerParameters = cms.PSet(
    MuonShowerInformationFillerParameters = cms.PSet(
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                'SteppingHelixPropagatorAlong', 
                'SteppingHelixPropagatorOpposite', 
                'SteppingHelixPropagatorL2Any', 
                'SteppingHelixPropagatorL2Along', 
                'SteppingHelixPropagatorL2Opposite', 
                'SteppingHelixPropagatorAnyNoError', 
                'SteppingHelixPropagatorAlongNoError', 
                'SteppingHelixPropagatorOppositeNoError', 
                'SteppingHelixPropagatorL2AnyNoError', 
                'SteppingHelixPropagatorL2AlongNoError', 
                'SteppingHelixPropagatorL2OppositeNoError', 
                'PropagatorWithMaterial', 
                'PropagatorWithMaterialOpposite', 
                'SmartPropagator', 
                'SmartPropagatorOpposite', 
                'SmartPropagatorAnyOpposite', 
                'SmartPropagatorAny', 
                'SmartPropagatorRK', 
                'SmartPropagatorAnyRK', 
                'StraightLinePropagator'),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        DT4DRecSegmentLabel = cms.InputTag("dt4DSegments"),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        TrackerRecHitBuilder = cms.string('WithTrackAngle'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        CSCSegmentLabel = cms.InputTag("cscSegments"),
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits")
    )
)

process.MuonTrackLoaderForCosmic = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        PutTrajectoryIntoEvent = cms.untracked.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False),
        AllowNoVertex = cms.untracked.bool(True),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False)
    )
)

process.MuonTrackLoaderForGLB = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(False)
    )
)

process.MuonTrackLoaderForL2 = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False),
        beamSpot = cms.InputTag("hltOfflineBeamSpot"),
        VertexConstraint = cms.bool(True)
    )
)

process.MuonTrackLoaderForL3 = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        PutTkTrackIntoEvent = cms.untracked.bool(True),
        beamSpot = cms.InputTag("hltOfflineBeamSpot"),
        SmoothTkTrack = cms.untracked.bool(False),
        MuonSeededTracksInstance = cms.untracked.string('L2Seeded'),
        Smoother = cms.string('KFSmootherForMuonTrackLoaderL3'),
        VertexConstraint = cms.bool(False),
        DoSmoothing = cms.bool(True)
    )
)

process.MuonTrackLoaderForSTA = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        MuonUpdatorAtVertexParameters = cms.PSet(
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite'),
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        DoSmoothing = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        VertexConstraint = cms.bool(True)
    )
)

process.MuonTrackingRegionCommon = cms.PSet(
    MuonTrackingRegionBuilder = cms.PSet(
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        OnDemand = cms.double(-1.0),
        Rescale_Dz = cms.double(3.0),
        Eta_min = cms.double(0.1),
        Rescale_phi = cms.double(3.0),
        Eta_fixed = cms.double(0.2),
        DeltaZ_Region = cms.double(15.9),
        MeasurementTrackerName = cms.string(''),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        vertexCollection = cms.InputTag("pixelVertices"),
        Phi_fixed = cms.double(0.2),
        DeltaR = cms.double(0.2),
        EscapePt = cms.double(1.5),
        UseFixedRegion = cms.bool(False),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        Rescale_eta = cms.double(3.0),
        Phi_min = cms.double(0.1),
        UseVertex = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    )
)

process.MuonUpdatorAtVertex = cms.PSet(
    MuonUpdatorAtVertexParameters = cms.PSet(
        MaxChi2 = cms.double(1000000.0),
        Propagator = cms.string('SteppingHelixPropagatorOpposite'),
        BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
    )
)

process.MuonUpdatorAtVertexAnyDirection = cms.PSet(
    MuonUpdatorAtVertexParameters = cms.PSet(
        MaxChi2 = cms.double(1000000.0),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3)
    )
)

process.NoVertexGeneratorBlock = cms.PSet(
    VertexGenerator = cms.PSet(
        type = cms.string('None')
    )
)

process.OneProngNoPiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngNoPiZero'),
    decayModeIndices = cms.vint32(0)
)

process.OneProngNoPiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngNoPiZeroIso'),
    decayModeIndices = cms.vint32(0)
)

process.OneProngOnePiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngOnePiZero'),
    decayModeIndices = cms.vint32(1)
)

process.OneProngOnePiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngOnePiZeroIso'),
    decayModeIndices = cms.vint32(1)
)

process.OneProngTwoPiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngTwoPiZero'),
    decayModeIndices = cms.vint32(2)
)

process.OneProngTwoPiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngTwoPiZeroIso'),
    decayModeIndices = cms.vint32(2)
)

process.OutALCARECODtCalib = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECODtCalib')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt4DSegmentsNoWire_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*')
)

process.OutALCARECODtCalib_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECODtCalib')
    ),
    outputCommands = cms.untracked.vstring('keep *_dt4DSegments_*_*', 
        'keep *_dt4DSegmentsNoWire_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_dttfDigis_*_*', 
        'keep *_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*')
)

process.OutALCARECOEcalCalElectron = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalElectron')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep recoGsfElectronCores_*_*_*', 
        'keep recoSuperClusters_*_*_*', 
        'keep *_electronGsfTracks_*_*', 
        'keep  *_gsfElectrons_*_*', 
        'keep  *_alCaIsolatedElectrons_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep edmTriggerResults_TriggerResults__*', 
        'keep edmHepMCProduct_*_*_*')
)

process.OutALCARECOEcalCalElectron_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalElectron')
    ),
    outputCommands = cms.untracked.vstring('keep recoGsfElectronCores_*_*_*', 
        'keep recoSuperClusters_*_*_*', 
        'keep *_electronGsfTracks_*_*', 
        'keep  *_gsfElectrons_*_*', 
        'keep  *_alCaIsolatedElectrons_*_*', 
        'keep recoCaloMETs_met_*_*', 
        'keep edmTriggerResults_TriggerResults__*', 
        'keep edmHepMCProduct_*_*_*')
)

process.OutALCARECOEcalCalEtaCalib = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalEtaCalib')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ecalEtaCorrected_etaEcalRecHitsEB_*', 
        'keep *_ecalEtaCorrected_etaEcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_etaEcalRecHitsES_*')
)

process.OutALCARECOEcalCalEtaCalib_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalEtaCalib')
    ),
    outputCommands = cms.untracked.vstring('keep *_ecalEtaCorrected_etaEcalRecHitsEB_*', 
        'keep *_ecalEtaCorrected_etaEcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_hltAlCaEtaRecHitsFilter_etaEcalRecHitsES_*')
)

process.OutALCARECOEcalCalPhiSym = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalPhiSym')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ecalPhiSymCorrected_phiSymEcalRecHitsEB_*', 
        'keep *_ecalPhiSymCorrected_phiSymEcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*')
)

process.OutALCARECOEcalCalPhiSym_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalPhiSym')
    ),
    outputCommands = cms.untracked.vstring('keep *_ecalPhiSymCorrected_phiSymEcalRecHitsEB_*', 
        'keep *_ecalPhiSymCorrected_phiSymEcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*')
)

process.OutALCARECOEcalCalPi0Calib = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalPi0Calib')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ecalPi0Corrected_pi0EcalRecHitsEB_*', 
        'keep *_ecalPi0Corrected_pi0EcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_pi0EcalRecHitsES_*')
)

process.OutALCARECOEcalCalPi0Calib_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOEcalCalPi0Calib')
    ),
    outputCommands = cms.untracked.vstring('keep *_ecalPi0Corrected_pi0EcalRecHitsEB_*', 
        'keep *_ecalPi0Corrected_pi0EcalRecHitsEE_*', 
        'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 
        'keep *_hltAlCaPi0RecHitsFilter_pi0EcalRecHitsES_*')
)

process.OutALCARECOHcalCalDijets = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalDijets')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_DiJProd_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.OutALCARECOHcalCalDijets_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalDijets')
    ),
    outputCommands = cms.untracked.vstring('keep *_DiJProd_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.OutALCARECOHcalCalGammaJet = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalGammaJet')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_GammaJetProd_*_*')
)

process.OutALCARECOHcalCalGammaJet_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalGammaJet')
    ),
    outputCommands = cms.untracked.vstring('keep *_GammaJetProd_*_*')
)

process.OutALCARECOHcalCalHO = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalHO')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_hoCalibProducer_*_*')
)

process.OutALCARECOHcalCalHOCosmics = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalHOCosmics')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep HOCalibVariabless_*_*_*')
)

process.OutALCARECOHcalCalHOCosmics_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalHOCosmics')
    ),
    outputCommands = cms.untracked.vstring('keep HOCalibVariabless_*_*_*')
)

process.OutALCARECOHcalCalHO_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalHO')
    ),
    outputCommands = cms.untracked.vstring('keep *_hoCalibProducer_*_*')
)

process.OutALCARECOHcalCalIsoTrk = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalIsoTrk')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_IsoProd_*_*', 
        'keep *_TkAlIsoProd_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.OutALCARECOHcalCalIsoTrkNoHLT = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalIsoTrkNoHLT')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_IsoProd_*_*')
)

process.OutALCARECOHcalCalIsoTrkNoHLT_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalIsoTrkNoHLT')
    ),
    outputCommands = cms.untracked.vstring('keep *_IsoProd_*_*')
)

process.OutALCARECOHcalCalIsoTrk_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalIsoTrk')
    ),
    outputCommands = cms.untracked.vstring('keep *_IsoProd_*_*', 
        'keep *_TkAlIsoProd_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.OutALCARECOHcalCalMinBias = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalMinBias')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_gtDigisAlCaMB_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMBspecial_*_*', 
        'keep HBHERecHitsSorted_hbherecoNoise_*_*', 
        'keep HORecHitsSorted_horecoNoise_*_*', 
        'keep HFRecHitsSorted_hfrecoNoise_*_*')
)

process.OutALCARECOHcalCalMinBiasHI = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalMinBias')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_gtDigisAlCaMB_*_*', 
        'keep HBHERecHitsSorted_hbhereco_*_*', 
        'keep HORecHitsSorted_horeco_*_*', 
        'keep HFRecHitsSorted_hfreco_*_*', 
        'keep HFRecHitsSorted_hfrecoMBspecial_*_*', 
        'keep HBHERecHitsSorted_hbherecoNoise_*_*', 
        'keep HORecHitsSorted_horecoNoise_*_*', 
        'keep HFRecHitsSorted_hfrecoNoise_*_*')
)

process.OutALCARECOHcalCalMinBiasHI_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalMinBias')
    ),
    outputCommands = cms.untracked.vstring('keep *_gtDigisAlCaMB_*_*', 
        'keep HBHERecHitsSorted_hbhereco_*_*', 
        'keep HORecHitsSorted_horeco_*_*', 
        'keep HFRecHitsSorted_hfreco_*_*', 
        'keep HFRecHitsSorted_hfrecoMBspecial_*_*', 
        'keep HBHERecHitsSorted_hbherecoNoise_*_*', 
        'keep HORecHitsSorted_horecoNoise_*_*', 
        'keep HFRecHitsSorted_hfrecoNoise_*_*')
)

process.OutALCARECOHcalCalMinBias_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalMinBias')
    ),
    outputCommands = cms.untracked.vstring('keep *_gtDigisAlCaMB_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMBspecial_*_*', 
        'keep HBHERecHitsSorted_hbherecoNoise_*_*', 
        'keep HORecHitsSorted_horecoNoise_*_*', 
        'keep HFRecHitsSorted_hfrecoNoise_*_*')
)

process.OutALCARECOHcalCalNoise = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalNoise')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_HcalNoiseProd_*_*', 
        'keep edmTriggerResults_*_*_HLT')
)

process.OutALCARECOHcalCalNoise_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOHcalCalNoise')
    ),
    outputCommands = cms.untracked.vstring('keep *_HcalNoiseProd_*_*', 
        'keep edmTriggerResults_*_*_HLT')
)

process.OutALCARECOMuAlBeamHalo = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlBeamHalo')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlBeamHalo_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlBeamHaloOverlaps = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlBeamHaloOverlaps')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlBeamHaloOverlaps_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlBeamHaloOverlaps_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlBeamHaloOverlaps')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlBeamHaloOverlaps_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlBeamHalo_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlBeamHalo')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlBeamHalo_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlCalIsolatedMu = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlCalIsolatedMu')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlCalIsolatedMu_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlCalIsolatedMu_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlCalIsolatedMu')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlCalIsolatedMu_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlGlobalCosmics = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlGlobalCosmics')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlGlobalCosmics_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlGlobalCosmicsInCollisions = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlGlobalCosmicsInCollisions')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlGlobalCosmicsInCollisions_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlGlobalCosmicsInCollisions_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlGlobalCosmicsInCollisions')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlGlobalCosmicsInCollisions_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlGlobalCosmics_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlGlobalCosmics')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlGlobalCosmics_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlOverlaps = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlOverlaps')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlOverlaps_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlOverlaps_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlOverlaps')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlOverlaps_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlStandAloneCosmics = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlStandAloneCosmics')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlStandAloneCosmics_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlStandAloneCosmics_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlStandAloneCosmics')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlStandAloneCosmics_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlZMuMu = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlZMuMu')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOMuAlZMuMu_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOMuAlZMuMu_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOMuAlZMuMu')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOMuAlZMuMu_*_*', 
        'keep *_muonCSCDigis_*_*', 
        'keep *_muonDTDigis_*_*', 
        'keep *_muonRPCDigis_*_*', 
        'keep *_dt1DRecHits_*_*', 
        'keep *_dt2DSegments_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOPromptCalibProd = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOPromptCalibProd')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_alcaBeamSpotProducer_*_*', 
        'keep *_MEtoEDMConvertSiStrip_*_*')
)

process.OutALCARECOPromptCalibProd_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOPromptCalibProd')
    ),
    outputCommands = cms.untracked.vstring('keep *_alcaBeamSpotProducer_*_*', 
        'keep *_MEtoEDMConvertSiStrip_*_*')
)

process.OutALCARECORpcCalHLT = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECORpcCalHLT')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_muonDTDigis_*_*', 
        'keep CSCDetIdCSCWireDigiMuonDigiCollection_*_*_*', 
        'keep CSCDetIdCSCStripDigiMuonDigiCollection_*_*_*', 
        'keep DTLayerIdDTDigiMuonDigiCollection_*_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep RPCDetIdRPCDigiMuonDigiCollection_*_*_*', 
        'keep recoMuons_muonsNoRPC_*_*', 
        'keep L1MuRegionalCands_*_RPCb_*', 
        'keep L1MuRegionalCands_*_RPCf_*', 
        'keep L1MuGMTCands_*_*_*', 
        'keep L1MuGMTReadoutCollection_*_*_*')
)

process.OutALCARECORpcCalHLT_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECORpcCalHLT')
    ),
    outputCommands = cms.untracked.vstring('keep *_muonDTDigis_*_*', 
        'keep CSCDetIdCSCWireDigiMuonDigiCollection_*_*_*', 
        'keep CSCDetIdCSCStripDigiMuonDigiCollection_*_*_*', 
        'keep DTLayerIdDTDigiMuonDigiCollection_*_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*', 
        'keep RPCDetIdRPCDigiMuonDigiCollection_*_*_*', 
        'keep recoMuons_muonsNoRPC_*_*', 
        'keep L1MuRegionalCands_*_RPCb_*', 
        'keep L1MuRegionalCands_*_RPCf_*', 
        'keep L1MuGMTCands_*_*_*', 
        'keep L1MuGMTReadoutCollection_*_*_*')
)

process.OutALCARECOSiPixelLorentzAngle = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiPixelLorentzAngle')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_globalMuons_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_siPixelClusters_*_*', 
        'drop *_*_*_HLT')
)

process.OutALCARECOSiPixelLorentzAngle_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiPixelLorentzAngle')
    ),
    outputCommands = cms.untracked.vstring('keep *_globalMuons_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_siPixelClusters_*_*', 
        'drop *_*_*_HLT')
)

process.OutALCARECOSiStripCalMinBias = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiStripCalMinBias')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOSiStripCalMinBias_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*')
)

process.OutALCARECOSiStripCalMinBias_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiStripCalMinBias')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOSiStripCalMinBias_*_*', 
        'keep *_siStripClusters_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*')
)

process.OutALCARECOSiStripCalZeroBias = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiStripCalZeroBias')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOSiStripCalZeroBias_*_*', 
        'keep *_calZeroBiasClusters_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep *_TriggerResults_*_*')
)

process.OutALCARECOSiStripCalZeroBias_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiStripCalZeroBias')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOSiStripCalZeroBias_*_*', 
        'keep *_calZeroBiasClusters_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep *_TriggerResults_*_*')
)

process.OutALCARECOSiStripPCLHistos = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiStripPCLHistos')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_MEtoEDMConvertSiStrip_*_*')
)

process.OutALCARECOSiStripPCLHistos_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOSiStripPCLHistos')
    ),
    outputCommands = cms.untracked.vstring('keep *_MEtoEDMConvertSiStrip_*_*')
)

process.OutALCARECOTkAlBeamHalo = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlBeamHalo')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlBeamHalo_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlBeamHalo_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlBeamHalo')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlBeamHalo_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlCosmics = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTF', 
            'pathALCARECOTkAlCosmicsCosmicTF')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlCosmicsCTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsCosmicTF_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmics0T = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTF0T', 
            'pathALCARECOTkAlCosmicsCosmicTF0T')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlCosmics*0T_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmics0THLT = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTF0THLT', 
            'pathALCARECOTkAlCosmicsCosmicTF0THLT')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlCosmics*0T_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmics0THLT_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTF0THLT', 
            'pathALCARECOTkAlCosmicsCosmicTF0THLT')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlCosmics*0T_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmics0T_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTF0T', 
            'pathALCARECOTkAlCosmicsCosmicTF0T')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlCosmics*0T_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmicsHLT = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTFHLT', 
            'pathALCARECOTkAlCosmicsCosmicTFHLT')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlCosmicsCTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsCosmicTF_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmicsHLT_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTFHLT', 
            'pathALCARECOTkAlCosmicsCosmicTFHLT')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlCosmicsCTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsCosmicTF_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmicsInCollisions = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsInCollisions')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlCosmicsInCollisions_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmicsInCollisions_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsInCollisions')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlCosmicsInCollisions_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlCosmics_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlCosmicsCTF', 
            'pathALCARECOTkAlCosmicsCosmicTF')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlCosmicsCTF_*_*', 
        'keep *_ALCARECOTkAlCosmicsCosmicTF_*_*', 
        'keep siStripDigis_DetIdCollection_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep Si*Cluster*_si*Clusters_*_*', 
        'keep recoMuons_muons1Leg_*_*')
)

process.OutALCARECOTkAlJpsiMuMu = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlJpsiMuMu')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlJpsiMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlJpsiMuMu_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlJpsiMuMu')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlJpsiMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlLAS = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlLAS')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlLAST0Producer_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlLAS_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlLAS')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlLAST0Producer_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlMinBias = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMinBias')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlMinBias_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_offlineBeamSpot_*_*')
)

process.OutALCARECOTkAlMinBiasHI = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMinBiasHI')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlMinBiasHI_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_offlineBeamSpot_*_*')
)

process.OutALCARECOTkAlMinBiasHI_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMinBiasHI')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlMinBiasHI_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_offlineBeamSpot_*_*')
)

process.OutALCARECOTkAlMinBias_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMinBias')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlMinBias_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*', 
        'keep *_offlinePrimaryVertices_*_*', 
        'keep *_offlineBeamSpot_*_*')
)

process.OutALCARECOTkAlMuonIsolated = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMuonIsolated')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlMuonIsolated_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlMuonIsolated_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlMuonIsolated')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlMuonIsolated_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlUpsilonMuMu = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlUpsilonMuMu')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlUpsilonMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlUpsilonMuMu_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlUpsilonMuMu')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlUpsilonMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlZMuMu = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlZMuMu')
    ),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep *_ALCARECOTkAlZMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.OutALCARECOTkAlZMuMu_noDrop = cms.PSet(
    SelectEvents = cms.untracked.PSet(
        SelectEvents = cms.vstring('pathALCARECOTkAlZMuMu')
    ),
    outputCommands = cms.untracked.vstring('keep *_ALCARECOTkAlZMuMu_*_*', 
        'keep L1AcceptBunchCrossings_*_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_TriggerResults_*_*', 
        'keep DcsStatuss_scalersRawToDigi_*_*')
)

process.PFTauQualityCuts = cms.PSet(
    isolationQualityCuts = cms.PSet(
        minTrackHits = cms.uint32(8),
        minTrackPt = cms.double(1.0),
        maxTrackChi2 = cms.double(100.0),
        minTrackPixelHits = cms.uint32(0),
        minGammaEt = cms.double(1.5),
        useTracksInsteadOfPFHadrons = cms.bool(False),
        maxDeltaZ = cms.double(0.2),
        maxTransverseImpactParameter = cms.double(0.03)
    ),
    signalQualityCuts = cms.PSet(
        minTrackHits = cms.uint32(3),
        minTrackPt = cms.double(0.5),
        maxTrackChi2 = cms.double(100.0),
        minTrackPixelHits = cms.uint32(0),
        minGammaEt = cms.double(0.5),
        useTracksInsteadOfPFHadrons = cms.bool(False),
        maxDeltaZ = cms.double(0.2),
        maxTransverseImpactParameter = cms.double(0.03)
    )
)

process.PixelFitterByHelixProjections = cms.PSet(
    ComponentName = cms.string('PixelFitterByHelixProjections'),
    TTRHBuilder = cms.string('PixelTTRHBuilderWithoutAngle')
)

process.PixelTrackReconstructionBlock = cms.PSet(
    useFilterWithES = cms.bool(False),
    FilterPSet = cms.PSet(
        chi2 = cms.double(1000.0),
        nSigmaTipMaxTolerance = cms.double(0.0),
        ComponentName = cms.string('PixelTrackFilterByKinematics'),
        nSigmaInvPtTolerance = cms.double(0.0),
        ptMin = cms.double(0.1),
        tipMax = cms.double(1.0)
    ),
    FitterPSet = cms.PSet(
        ComponentName = cms.string('PixelFitterByHelixProjections'),
        TTRHBuilder = cms.string('PixelTTRHBuilderWithoutAngle')
    ),
    RegionFactoryPSet = cms.PSet(
        RegionPSet = cms.PSet(
            precise = cms.bool(True),
            nSigmaZ = cms.double(3.0),
            originRadius = cms.double(0.2),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            ptMin = cms.double(0.9)
        ),
        ComponentName = cms.string('GlobalRegionProducerFromBeamSpot')
    ),
    CleanerPSet = cms.PSet(
        ComponentName = cms.string('PixelTrackCleanerBySharedHits')
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            maxElement = cms.uint32(100000),
            ComponentName = cms.string('PixelTripletHLTGenerator'),
            extraHitRPhitolerance = cms.double(0.032),
            useMultScattering = cms.bool(True),
            phiPreFiltering = cms.double(0.3),
            extraHitRZtolerance = cms.double(0.037)
        ),
        SeedingLayers = cms.string('PixelLayerTriplets')
    )
)

process.PixelTripletHLTGenerator = cms.PSet(
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    maxElement = cms.uint32(100000),
    ComponentName = cms.string('PixelTripletHLTGenerator'),
    extraHitRPhitolerance = cms.double(0.032),
    useMultScattering = cms.bool(True),
    phiPreFiltering = cms.double(0.3),
    extraHitRZtolerance = cms.double(0.037)
)

process.PixelTripletLargeTipGenerator = cms.PSet(
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    maxElement = cms.uint32(100000),
    ComponentName = cms.string('PixelTripletLargeTipGenerator'),
    extraHitRPhitolerance = cms.double(0.0),
    useMultScattering = cms.bool(True),
    phiPreFiltering = cms.double(0.3),
    extraHitRZtolerance = cms.double(0.0)
)

process.RAWDEBUGEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfo_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_source_*_*', 
        'keep LHEEventProduct_source_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*', 
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mergedtruth_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 
        'keep *_l1GtRecord_*_*', 
        'keep *_l1GtTriggerMenuLite_*_*', 
        'keep *_conditionsInEdm_*_*', 
        'keep *_l1extraParticles_*_*')
)

process.RAWDEBUGHLTEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = (cms.untracked.vstring('drop *', 'drop *', 'drop *', 'drop *', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep *_g4SimHits_*_*', 'keep edmHepMCProduct_source_*_*', 'keep *_allTrackMCMatch_*_*', 'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 'keep EBSrFlagsSorted_simEcalDigis_*_*', 'keep EESrFlagsSorted_simEcalDigis_*_*', 'keep CrossingFramePlaybackInfoExtended_*_*_*', 'keep PileupSummaryInfo_*_*_*', 'keep PileupSummaryInfos_*_*_*', 'keep LHERunInfoProduct_source_*_*', 'keep LHEEventProduct_source_*_*', 'keep GenRunInfoProduct_generator_*_*', 'keep GenEventInfoProduct_generator_*_*', 'keep edmHepMCProduct_generator_*_*', 'keep GenFilterInfo_*_*_*', 'keep *_genParticles_*_*', 'keep recoGenJets_*_*_*', 'keep *_genParticle_*_*', 'keep recoGenMETs_*_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep *_MEtoEDMConverter_*_*', 'keep *_randomEngineStateProducer_*_*', 'keep *_logErrorHarvester_*_*', 'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 'keep *_allTrackMCMatch_*_*', 'drop *_trackingtruthprod_*_*', 'drop *_electrontruth_*_*', 'keep *_mergedtruth_MergedTrackTruth_*', 'keep CrossingFramePlaybackInfoExtended_*_*_*', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'drop *_hlt*_*_*', 'keep *_hltAlCaEtaRecHitsFilter_*_*', 'keep *_hltAlCaPhiSymStream_*_*', 'keep *_hltAlCaPi0RecHitsFilter_*_*', 'keep *_hltAntiKT5L2L3CorrCaloJets_*_*', 'keep *_hltBLifetimeL25AssociatorStartupU_*_*', 'keep *_hltBLifetimeL25BJetTagsStartupU_*_*', 'keep *_hltBLifetimeL25JetsStartupU_*_*', 'keep *_hltBLifetimeL25TagInfosStartupU_*_*', 'keep *_hltBLifetimeL3AssociatorStartupU_*_*', 'keep *_hltBLifetimeL3BJetTagsStartupU_*_*', 'keep *_hltBLifetimeL3JetsStartupU_*_*', 'keep *_hltBLifetimeL3TagInfosStartupU_*_*', 'keep *_hltBLifetimeRegionalCtfWithMaterialTracksStartupU_*_*', 'keep *_hltBSoftMuonDiJet100L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet100L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet100L25Jets_*_*', 'keep *_hltBSoftMuonDiJet100L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet100Mu9L3_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet100Mu9SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet20L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet20L25Jets_*_*', 'keep *_hltBSoftMuonDiJet20L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet20Mu5L3_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet60L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet60L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet60L25Jets_*_*', 'keep *_hltBSoftMuonDiJet60L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet60Mu7L3_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet60Mu7SelL3TagInfos_*_*', 'keep *_hltBSoftMuonDiJet80L25BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet80L25FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet80L25Jets_*_*', 'keep *_hltBSoftMuonDiJet80L25TagInfos_*_*', 'keep *_hltBSoftMuonDiJet80Mu9L3_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet80Mu9SelL3TagInfos_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet100_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet20_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet60_*_*', 'keep *_hltBSoftMuonGetJetsFromDiJet80_*_*', 'keep *_hltBSoftMuonL25BJetTagsUByDR_*_*', 'keep *_hltBSoftMuonL25JetsU_*_*', 'keep *_hltBSoftMuonL25TagInfosU_*_*', 'keep *_hltBSoftMuonL3BJetTagsUByDR_*_*', 'keep *_hltBSoftMuonL3BJetTagsUByPt_*_*', 'keep *_hltBSoftMuonL3TagInfosU_*_*', 'keep *_hltCkfL1IsoLargeWindowTrackCandidates_*_*', 'keep *_hltCkfL1NonIsoLargeWindowTrackCandidates_*_*', 'keep *_hltCorrectedHybridSuperClustersL1Isolated_*_*', 'keep *_hltCorrectedHybridSuperClustersL1NonIsolated_*_*', 'keep *_hltCorrectedMulti5x5EndcapSuperClustersWithPreshowerL1Isolated_*_*', 'keep *_hltCorrectedMulti5x5EndcapSuperClustersWithPreshowerL1NonIsolated_*_*', 'keep *_hltCsc2DRecHits_*_*', 'keep *_hltCscSegments_*_*', 'keep *_hltCtfL1IsoLargeWindowWithMaterialTracks_*_*', 'keep *_hltCtfL1NonIsoLargeWindowWithMaterialTracks_*_*', 'keep *_hltDoublePFTauTightIso20Track5_*_*', 'keep *_hltDoublePFTauTightIso20Track_*_*', 'keep *_hltDt1DRecHits_*_*', 'keep *_hltDt4DSegments_*_*', 'keep *_hltESRegionalPi0EtaRecHit_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTTrackIsolFilter_*_*', 'keep *_hltEle17CaloIdVTCaloIsoVTTrkIdTTrkIsoVTSC8TrackIsolFilter_*_*', 'keep *_hltFilterDoubleIsoPFTau20Trk5LeadTrack5IsolationL1HLTMatched_*_*', 'keep *_hltFilterL25LeadingTrackPtCutDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL25LeadingTrackPtCutSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EcalIsolationDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL2EcalIsolationDoubleLooseIsoTau15_*_*', 'keep *_hltFilterL2EcalIsolationSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EcalIsolationSingleLooseIsoTau20_*_*', 'keep *_hltFilterL2EtCutDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL2EtCutDoubleLooseIsoTau15_*_*', 'keep *_hltFilterL2EtCutDoublePFIsoTau20Trk55_*_*', 'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET45_*_*', 'keep *_hltFilterL2EtCutSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterL2EtCutSingleLooseIsoTau20_*_*', 'keep *_hltFilterL3TrackIsolationDoubleIsoTau15Trk5_*_*', 'keep *_hltFilterL3TrackIsolationSingleIsoTau30Trk5MET20_*_*', 'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*', 'keep *_hltFilterSingleIsoPFTau35Trk20MET45LeadTrack20MET45IsolationL1HLTMatched_*_*', 'keep *_hltGctDigis_*_*', 'keep *_hltGtDigis_*_*', 'keep *_hltHITCtfWithMaterialTracksHB8E29_*_*', 'keep *_hltHITCtfWithMaterialTracksHE8E29_*_*', 'keep *_hltHITIPTCorrectorHB8E29_*_*', 'keep *_hltHITIPTCorrectorHE8E29_*_*', 'keep *_hltHcalDigis_*_*', 'keep *_hltHoreco_*_*', 'keep *_hltIconeCentral1Regional_*_*', 'keep *_hltIconeCentral2Regional_*_*', 'keep *_hltIconeCentral3Regional_*_*', 'keep *_hltIconeCentral4Regional_*_*', 'keep *_hltIconeTau1Regional_*_*', 'keep *_hltIconeTau2Regional_*_*', 'keep *_hltIconeTau3Regional_*_*', 'keep *_hltIconeTau4Regional_*_*', 'keep *_hltIsolPixelTrackProdHB8E29_*_*', 'keep *_hltIsolPixelTrackProdHB_*_*', 'keep *_hltIsolPixelTrackProdHE8E29_*_*', 'keep *_hltIsolPixelTrackProdHE_*_*', 'keep *_hltIterativeCone5CaloJets_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep *_hltL1IsoEgammaRegionalCTFFinalFitWithMaterial_*_*', 'keep *_hltL1IsoEgammaRegionalCkfTrackCandidates_*_*', 'keep *_hltL1IsoEgammaRegionalPixelSeedGenerator_*_*', 'keep *_hltL1IsoHLTClusterShape_*_*', 'keep *_hltL1IsoLargeWindowElectronPixelSeeds_*_*', 'keep *_hltL1IsoPhotonHollowTrackIsol_*_*', 'keep *_hltL1IsoRecoEcalCandidate_*_*', 'keep *_hltL1IsoSiStripElectronPixelSeeds_*_*', 'keep *_hltL1IsoStartUpElectronPixelSeeds_*_*', 'keep *_hltL1IsolatedElectronHcalIsol_*_*', 'keep *_hltL1IsolatedPhotonEcalIsol_*_*', 'keep *_hltL1IsolatedPhotonHcalIsol_*_*', 'keep *_hltL1NonIsoEgammaRegionalCTFFinalFitWithMaterial_*_*', 'keep *_hltL1NonIsoEgammaRegionalCkfTrackCandidates_*_*', 'keep *_hltL1NonIsoEgammaRegionalPixelSeedGenerator_*_*', 'keep *_hltL1NonIsoHLTClusterShape_*_*', 'keep *_hltL1NonIsoLargeWindowElectronPixelSeeds_*_*', 'keep *_hltL1NonIsoPhotonHollowTrackIsol_*_*', 'keep *_hltL1NonIsoRecoEcalCandidate_*_*', 'keep *_hltL1NonIsoSiStripElectronPixelSeeds_*_*', 'keep *_hltL1NonIsoStartUpElectronPixelSeeds_*_*', 'keep *_hltL1NonIsolatedElectronHcalIsol_*_*', 'keep *_hltL1NonIsolatedPhotonEcalIsol_*_*', 'keep *_hltL1NonIsolatedPhotonHcalIsol_*_*', 'keep *_hltL1extraParticles_*_*', 'keep *_hltL1sDoubleIsoTau15Trk5_*_*', 'keep *_hltL1sDoubleLooseIsoTau15_*_*', 'keep *_hltL1sL1SingleEG12_*_*', 'keep *_hltL1sL1SingleMu10_*_*', 'keep *_hltL1sSingleIsoTau35Trk20MET45_*_*', 'keep *_hltL1sSingleLooseIsoTau20_*_*', 'keep *_hltL25TauConeIsolation_*_*', 'keep *_hltL25TauCtfWithMaterialTracks_*_*', 'keep *_hltL25TauJetTracksAssociator_*_*', 'keep *_hltL25TauLeadingTrackPtCutSelector_*_*', 'keep *_hltL2MuonCandidatesNoVtx_*_*', 'keep *_hltL2MuonCandidates_*_*', 'keep *_hltL2MuonIsolations_*_*', 'keep *_hltL2MuonSeeds_*_*', 'keep *_hltL2MuonsCandidates_*_*', 'keep *_hltL2Muons_*_*', 'keep *_hltL2TauJets_*_*', 'keep *_hltL2TauNarrowConeIsolationProducer_*_*', 'keep *_hltL2TauRelaxingIsolationSelector_*_*', 'keep *_hltL3MuonCandidatesNoVtx_*_*', 'keep *_hltL3MuonCandidates_*_*', 'keep *_hltL3MuonIsolations_*_*', 'keep *_hltL3MuonsCandidates_*_*', 'keep *_hltL3MuonsIOHit_*_*', 'keep *_hltL3MuonsLinksCombination_*_*', 'keep *_hltL3MuonsNoVtx_*_*', 'keep *_hltL3MuonsOIHit_*_*', 'keep *_hltL3MuonsOIState_*_*', 'keep *_hltL3Muons_*_*', 'keep *_hltL3TauConeIsolation_*_*', 'keep *_hltL3TauCtfWithMaterialTracks_*_*', 'keep *_hltL3TauIsolationSelector_*_*', 'keep *_hltL3TauJetTracksAssociator_*_*', 'keep *_hltL3TkFromL2OICombination_*_*', 'keep *_hltL3TkTracksFromL2IOHit_*_*', 'keep *_hltL3TkTracksFromL2OIHit_*_*', 'keep *_hltL3TkTracksFromL2OIState_*_*', 'keep *_hltL3TkTracksFromL2_*_*', 'keep *_hltL3TrackCandidateFromL2IOHit_*_*', 'keep *_hltL3TrackCandidateFromL2OIHit_*_*', 'keep *_hltL3TrackCandidateFromL2OIState_*_*', 'keep *_hltL3TrackCandidateFromL2_*_*', 'keep *_hltL3TrajSeedIOHit_*_*', 'keep *_hltL3TrajSeedOIHit_*_*', 'keep *_hltL3TrajSeedOIState_*_*', 'keep *_hltL3TrajectorySeedNoVtx_*_*', 'keep *_hltL3TrajectorySeed_*_*', 'keep *_hltMCJetCorJetIcone5HF07_*_*', 'keep *_hltMet_*_*', 'keep *_hltMu15L3Filtered15_*_*', 'keep *_hltMuTrackJpsiCtfTrackCands_*_*', 'keep *_hltMuTrackJpsiCtfTracks_*_*', 'keep *_hltMuTrackJpsiPixelTrackCands_*_*', 'keep *_hltMuTrackJpsiPixelTrackSelector_*_*', 'keep *_hltMuTrackJpsiTrackSeeds_*_*', 'keep *_hltMuonCSCDigis_*_*', 'keep *_hltMuonDTDigis_*_*', 'keep *_hltMuonRPCDigis_*_*', 'keep *_hltOfflineBeamSpot_*_*', 'keep *_hltOverlapFilterIsoEle15IsoPFTau15_*_*', 'keep *_hltOverlapFilterMu15IsoPFTau20_*_*', 'keep *_hltPFTau15TrackLooseIso_*_*', 'keep *_hltPFTau15Track_*_*')+cms.untracked.vstring('keep *_hltPFTau15_*_*', 'keep *_hltPFTau20TrackLooseIso_*_*', 'keep *_hltPFTau20Track_*_*', 'keep *_hltPFTauTightIso35Track_*_*', 'keep *_hltPixelMatchElectronsL1Iso_*_*', 'keep *_hltPixelMatchElectronsL1NonIso_*_*', 'keep *_hltPixelMatchLargeWindowElectronsL1Iso_*_*', 'keep *_hltPixelMatchLargeWindowElectronsL1NonIso_*_*', 'keep *_hltPixelTracks_*_*', 'keep *_hltPixelVertices_*_*', 'keep *_hltRpcRecHits_*_*', 'keep *_hltSiPixelClusters_*_*', 'keep *_hltSiPixelRecHits_*_*', 'keep *_hltSiStripClusters_*_*', 'keep *_hltSiStripRawToClustersFacility_*_*', 'keep *_hltTowerMakerForAll_*_*', 'keep *_hltTowerMakerForMuons_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep L1GlobalTriggerReadoutRecord_*_*_*', 'keep L1GlobalTriggerReadoutRecord_hltGtDigis_*_*', 'keep L1MuGMTCands_hltGtDigis_*_*', 'keep L1MuGMTReadoutCollection_hltGtDigis_*_*', 'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*', 'keep TrackingRecHitsOwned_hltL3Muons_*_*', 'keep edmTriggerResults_*_*_*', 'keep l1extraL1EmParticles_*_*_*', 'keep l1extraL1EmParticles_hltL1extraParticles_*_*', 'keep l1extraL1EtMissParticles_hltL1extraParticles_*_*', 'keep l1extraL1JetParticles_hltL1extraParticles_*_*', 'keep l1extraL1MuonParticles_hltL1extraParticles_*_*', 'keep recoCaloJets_hltIterativeCone5CaloJets_*_*', 'keep recoCaloMETs_hltMet_*_*', 'keep recoElectronSeeds_hltL1IsoLargeWindowElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1IsoSiStripElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1IsoStartUpElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoLargeWindowElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoSiStripElectronPixelSeeds_*_*', 'keep recoElectronSeeds_hltL1NonIsoStartUpElectronPixelSeeds_*_*', 'keep recoElectrons_hltPixelMatchLargeWindowElectronsL1Iso_*_*', 'keep recoElectrons_hltPixelMatchLargeWindowElectronsL1NonIso_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedElectronHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonTrackIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedElectronHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*', 'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonTrackIsol_*_*', 'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*', 'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*', 'keep triggerTriggerEventWithRefs_*_*_*', 'keep triggerTriggerEventWithRefs_hltTriggerSummaryRAW_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep triggerTriggerEvent_hltTriggerSummaryAOD_*_*', 'keep *_hltAntiKT5CaloJets_*_*', 'keep *_hltAntiKT5PFJets_*_*', 'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*', 'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*', 'keep *_hltBSoftMuonMu5L3_*_*', 'keep *_hltConvPFTauTightIsoTrackPt20Isolation_*_*', 'keep *_hltConvPFTauTightIsoTrackPt20_*_*', 'keep *_hltConvPFTausTightIsoTrackFinding_*_*', 'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*', 'keep *_hltConvPFTausTightIsoTrackPt5_*_*', 'keep *_hltConvPFTausTightIso_*_*', 'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*', 'keep *_hltConvPFTausTrackFinding_*_*', 'keep *_hltConvPFTaus_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTDphiFilter_*_*', 'keep *_hltEle15CaloIdVTTrkIdTCaloIsoTTrkIsoTDphiFilter_*_*', 'keep *_hltFilterL2EtCutDoublePFIsoTau20Trk5_*_*', 'keep *_hltHITIPTCorrectorHB_*_*', 'keep *_hltHITIPTCorrectorHE_*_*', 'keep *_hltL1HLTDoubleIsoPFTau20Trk5JetsMatch_*_*', 'keep *_hltL1HLTSingleIsoPFTau35Trk20Met45JetsMatch_*_*', 'keep *_hltL1IsoElectronTrackIsol_*_*', 'keep *_hltL1NonIsoElectronTrackIsol_*_*', 'keep *_hltL2TauJets_*_*', 'keep *_hltMet_*_*', 'keep *_hltPFTauJetTracksAssociator_*_*', 'keep *_hltPFTauTagInfo_*_*', 'keep *_hltParticleFlow_*_*', 'keep *_hltPixelMatchElectronsL1Iso_*_*', 'keep *_hltPixelMatchElectronsL1NonIso_*_*', 'keep *_hltSingleMu15L3Filtered15_*_*'))
)

process.RAWEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*')
)

process.RAWRECOEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = (cms.untracked.vstring('drop *', 'drop *', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'keep  FEDRawDataCollection_rawDataCollector_*_*', 'keep  FEDRawDataCollection_source_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep FEDRawDataCollection_rawDataCollector_*_*', 'keep FEDRawDataCollection_source_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'drop *', 'keep DetIdedmEDCollection_siStripDigis_*_*', 'keep *_siPixelClusters_*_*', 'keep *_siStripClusters_*_*', 'keep *_dt1DRecHits_*_*', 'keep *_dt4DSegments_*_*', 'keep *_dt1DCosmicRecHits_*_*', 'keep *_dt4DCosmicSegments_*_*', 'keep *_csc2DRecHits_*_*', 'keep *_cscSegments_*_*', 'keep *_rpcRecHits_*_*', 'keep *_hbhereco_*_*', 'keep *_hfreco_*_*', 'keep *_horeco_*_*', 'keep HBHERecHitsSorted_hbherecoMB_*_*', 'keep HORecHitsSorted_horecoMB_*_*', 'keep HFRecHitsSorted_hfrecoMB_*_*', 'keep ZDCDataFramesSorted_*Digis_*_*', 'keep ZDCRecHitsSorted_*_*_*', 'keep *_reducedHcalRecHits_*_*', 'keep *_castorreco_*_*', 'keep *_ecalPreshowerRecHit_*_*', 'keep *_ecalRecHit_*_*', 'keep *_ecalCompactTrigPrim_*_*', 'keep *_ecalTPSkim_*_*', 'keep *_selectDigi_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 'keep *_hybridSuperClusters_*_*', 'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 'keep *_multi5x5BasicClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 'drop recoClusterShapes_*_*_*', 'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 'keep *_CkfElectronCandidates_*_*', 'keep *_GsfGlobalElectronTest_*_*', 'keep *_electronMergedSeeds_*_*', 'keep recoGsfTracks_electronGsfTracks_*_*', 'keep recoGsfTrackExtras_electronGsfTracks_*_*', 'keep recoTrackExtras_electronGsfTracks_*_*', 'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoTrackExtras_generalTracks_*_*', 'keep TrackingRecHitsOwned_generalTracks_*_*', 'keep recoTracks_beamhaloTracks_*_*', 'keep recoTrackExtras_beamhaloTracks_*_*', 'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 'keep recoTracks_regionalCosmicTracks_*_*', 'keep recoTrackExtras_regionalCosmicTracks_*_*', 'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 'keep recoTracks_rsWithMaterialTracks_*_*', 'keep recoTrackExtras_rsWithMaterialTracks_*_*', 'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 'keep *_ctfPixelLess_*_*', 'keep *_dedxTruncated40_*_*', 'keep *_dedxDiscrimASmi_*_*', 'keep *_dedxHarmonic2_*_*', 'keep *_trackExtrapolator_*_*', 'keep *_kt4CaloJets_*_*', 'keep *_kt6CaloJets_*_*', 'keep *_ak5CaloJets_*_*', 'keep *_ak7CaloJets_*_*', 'keep *_iterativeCone5CaloJets_*_*', 'keep *_iterativeCone15CaloJets_*_*', 'keep *_kt4PFJets_*_*', 'keep *_kt6PFJets_*_*', 'keep *_ak5PFJets_*_*', 'keep *_ak7PFJets_*_*', 'keep *_iterativeCone5PFJets_*_*', 'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_ak5TrackJets_*_*', 'keep *_kt4TrackJets_*_*', 'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 'keep *_caloTowers_*_*', 'keep *_towerMaker_*_*', 'keep *_CastorTowerReco_*_*', 'keep *_ic5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 'keep *_iterativeCone5JetExtender_*_*', 'keep *_kt4JetTracksAssociatorAtVertex_*_*', 'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 'keep *_kt4JetExtender_*_*', 'keep *_ak5JetTracksAssociatorAtVertex_*_*', 'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak5JetExtender_*_*', 'keep *_ak7JetTracksAssociatorAtVertex_*_*', 'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak7JetExtender_*_*', 'keep *_ak5JetID_*_*', 'keep *_ak7JetID_*_*', 'keep *_ic5JetID_*_*', 'keep *_kt4JetID_*_*', 'keep *_kt6JetID_*_*', 'keep *_ak7BasicJets_*_*', 'keep *_ak7CastorJetID_*_*', 'keep recoCaloMETs_met_*_*', 'keep recoCaloMETs_metNoHF_*_*', 'keep recoCaloMETs_metHO_*_*', 'keep recoCaloMETs_corMetGlobalMuons_*_*', 'keep recoCaloMETs_metNoHFHO_*_*', 'keep recoCaloMETs_metOptHO_*_*', 'keep recoCaloMETs_metOpt_*_*', 'keep recoCaloMETs_metOptNoHFHO_*_*', 'keep recoCaloMETs_metOptNoHF_*_*', 'keep recoMETs_htMetAK5_*_*', 'keep recoMETs_htMetAK7_*_*', 'keep recoMETs_htMetIC5_*_*', 'keep recoMETs_htMetKT4_*_*', 'keep recoMETs_htMetKT6_*_*', 'keep recoMETs_tcMet_*_*', 'keep recoMETs_tcMetWithPFclusters_*_*', 'keep recoPFMETs_pfMet_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 'keep recoHcalNoiseRBXs_hcalnoise_*_*', 'keep HcalNoiseSummary_hcalnoise_*_*', 'keep *HaloData_*_*_*', 'keep *BeamHaloSummary_BeamHaloSummary_*_*', 'keep *_MuonSeed_*_*', 'keep *_ancientMuonSeed_*_*', 'keep *_mergedStandAloneMuonSeeds_*_*', 'keep TrackingRecHitsOwned_globalMuons_*_*', 'keep TrackingRecHitsOwned_tevMuons_*_*', 'keep recoCaloMuons_calomuons_*_*', 'keep *_CosmicMuonSeed_*_*', 'keep recoTrackExtras_cosmicMuons_*_*', 'keep TrackingRecHitsOwned_cosmicMuons_*_*', 'keep recoTrackExtras_globalCosmicMuons_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 'keep recoTrackExtras_cosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 'keep recoTracks_cosmicsVetoTracks_*_*', 'keep *_SETMuonSeed_*_*', 'keep recoTracks_standAloneSETMuons_*_*', 'keep recoTrackExtras_standAloneSETMuons_*_*', 'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 'keep recoTracks_globalSETMuons_*_*', 'keep recoTrackExtras_globalSETMuons_*_*', 'keep TrackingRecHitsOwned_globalSETMuons_*_*', 'keep recoMuons_muonsWithSET_*_*', 'keep recoTracks_standAloneMuons_*_*', 'keep recoTrackExtras_standAloneMuons_*_*', 'keep TrackingRecHitsOwned_standAloneMuons_*_*', 'keep recoTracks_globalMuons_*_*', 'keep recoTrackExtras_globalMuons_*_*', 'keep recoTracks_tevMuons_*_*', 'keep recoTrackExtras_tevMuons_*_*', 'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoMuons_muons_*_*', 'keep booledmValueMap_muid*_*_*', 'keep recoMuonTimeExtraedmValueMap_muons_*_*', 'keep *_muonShowerInformation_*_*', 'keep recoTracks_cosmicMuons_*_*', 'keep recoTracks_globalCosmicMuons_*_*', 'keep recoMuons_muonsFromCosmics_*_*', 'keep recoTracks_cosmicMuons1Leg_*_*', 'keep recoTracks_globalCosmicMuons1Leg_*_*', 'keep recoMuons_muonsFromCosmics1Leg_*_*', 'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 'keep uintedmValueMap_cosmicsVeto_*_*', 'keep *_muIsoDepositTk_*_*', 'keep *_muIsoDepositCalByAssociatorTowers_*_*', 'keep *_muIsoDepositCalByAssociatorHits_*_*', 'keep *_muIsoDepositJets_*_*', 'keep *_muGlobalIsoDepositCtfTk_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 'keep *_muGlobalIsoDepositJets_*_*', 'keep *_impactParameterTagInfos_*_*', 'keep *_trackCountingHighEffBJetTags_*_*', 'keep *_trackCountingHighPurBJetTags_*_*', 'keep *_jetProbabilityBJetTags_*_*', 'keep *_jetBProbabilityBJetTags_*_*', 'keep *_secondaryVertexTagInfos_*_*', 'keep *_ghostTrackVertexTagInfos_*_*', 'keep *_simpleSecondaryVertexBJetTags_*_*', 'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 'keep *_combinedSecondaryVertexBJetTags_*_*', 'keep *_combinedSecondaryVertexMVABJetTags_*_*', 'keep *_ghostTrackBJetTags_*_*', 'keep *_btagSoftElectrons_*_*', 'keep *_softElectronCands_*_*', 'keep *_softPFElectrons_*_*', 'keep *_softElectronTagInfos_*_*', 'keep *_softElectronBJetTags_*_*', 'keep *_softElectronByIP3dBJetTags_*_*', 'keep *_softElectronByPtBJetTags_*_*', 'keep *_softMuonTagInfos_*_*', 'keep *_softMuonBJetTags_*_*', 'keep *_softMuonByIP3dBJetTags_*_*', 'keep *_softMuonByPtBJetTags_*_*', 'keep *_combinedMVABJetTags_*_*', 'keep *_ak5PFJetsRecoTauPiZeros_*_*', 'keep *_hpsPFTauProducer*_*_*', 'keep *_hpsPFTauDiscrimination*_*_*', 'keep *_shrinkingConePFTauProducer*_*_*', 'keep *_shrinkingConePFTauDiscrimination*_*_*', 'keep *_hpsTancTaus_*_*', 'keep *_hpsTancTausDiscrimination*_*_*', 'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_caloRecoTauTagInfoProducer_*_*', 'keep recoCaloTaus_caloRecoTauProducer*_*_*', 'keep *_caloRecoTauDiscrimination*_*_*', 'keep  *_offlinePrimaryVertices_*_*', 'keep  *_offlinePrimaryVerticesWithBS_*_*', 'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 'keep  *_nuclearInteractionMaker_*_*', 'keep *_generalV0Candidates_*_*', 'keep recoGsfElectronCores_gsfElectronCores_*_*', 'keep recoGsfElectrons_gsfElectrons_*_*', 'keep floatedmValueMap_eidRobustLoose_*_*', 'keep floatedmValueMap_eidRobustTight_*_*', 'keep floatedmValueMap_eidRobustHighEnergy_*_*', 'keep floatedmValueMap_eidLoose_*_*', 'keep floatedmValueMap_eidTight_*_*', 'keep recoPhotons_photons_*_*', 'keep recoPhotonCores_photonCore_*_*', 'keep recoConversions_conversions_*_*', 'drop *_conversions_uncleanedConversions_*', 'keep recoConversions_allConversions_*_*', 'keep recoTracks_ckfOutInTracksFromConversions_*_*', 'keep recoTracks_ckfInOutTracksFromConversions_*_*', 'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 'keep *_PhotonIDProd_*_*', 'keep *_hfRecoEcalCandidate_*_*', 'keep *_hfEMClusters_*_*', 'keep *_pixelTracks_*_*', 'keep *_pixelVertices_*_*')+cms.untracked.vstring('drop CaloTowersSorted_towerMakerPF_*_*', 'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 'keep recoPFClusters_particleFlowClusterECAL_*_*', 'keep recoPFClusters_particleFlowClusterHCAL_*_*', 'keep recoPFClusters_particleFlowClusterPS_*_*', 'keep recoPFBlocks_particleFlowBlock_*_*', 'keep recoPFCandidates_particleFlow_*_*', 'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 'keep *_pfElectronTranslator_*_*', 'keep *_pfPhotonTranslator_*_*', 'keep *_trackerDrivenElectronSeeds_preid_*', 'keep *_offlineBeamSpot_*_*', 'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'keep L1MuGMTReadoutCollection_gtDigis_*_*', 'keep L1GctEmCand*_gctDigis_*_*', 'keep L1GctJetCand*_gctDigis_*_*', 'keep L1GctEtHad*_gctDigis_*_*', 'keep L1GctEtMiss*_gctDigis_*_*', 'keep L1GctEtTotal*_gctDigis_*_*', 'keep L1GctHtMiss*_gctDigis_*_*', 'keep L1GctJetCounts*_gctDigis_*_*', 'keep L1GctHFRingEtSums*_gctDigis_*_*', 'keep L1GctHFBitCounts*_gctDigis_*_*', 'keep LumiDetails_lumiProducer_*_*', 'keep LumiSummary_lumiProducer_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep L1AcceptBunchCrossings_*_*_*', 'keep L1TriggerScalerss_*_*_*', 'keep Level1TriggerScalerss_*_*_*', 'keep LumiScalerss_*_*_*', 'keep BeamSpotOnlines_*_*_*', 'keep DcsStatuss_*_*_*', 'keep *_logErrorHarvester_*_*'))
)

process.RAWSIMEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop *', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'keep  FEDRawDataCollection_rawDataCollector_*_*', 
        'keep  FEDRawDataCollection_source_*_*', 
        'drop *_hlt*_*_*', 
        'keep *_hltL1GtObjectMap_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep edmTriggerResults_*_*_*', 
        'keep triggerTriggerEvent_*_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfo_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_source_*_*', 
        'keep LHEEventProduct_source_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*')
)

process.RECODEBUGEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = (cms.untracked.vstring('drop *', 'drop *', 'drop *', 'keep DetIdedmEDCollection_siStripDigis_*_*', 'keep *_siPixelClusters_*_*', 'keep *_siStripClusters_*_*', 'keep *_dt1DRecHits_*_*', 'keep *_dt4DSegments_*_*', 'keep *_dt1DCosmicRecHits_*_*', 'keep *_dt4DCosmicSegments_*_*', 'keep *_csc2DRecHits_*_*', 'keep *_cscSegments_*_*', 'keep *_rpcRecHits_*_*', 'keep *_hbhereco_*_*', 'keep *_hfreco_*_*', 'keep *_horeco_*_*', 'keep HBHERecHitsSorted_hbherecoMB_*_*', 'keep HORecHitsSorted_horecoMB_*_*', 'keep HFRecHitsSorted_hfrecoMB_*_*', 'keep ZDCDataFramesSorted_*Digis_*_*', 'keep ZDCRecHitsSorted_*_*_*', 'keep *_reducedHcalRecHits_*_*', 'keep *_castorreco_*_*', 'keep *_ecalPreshowerRecHit_*_*', 'keep *_ecalRecHit_*_*', 'keep *_ecalCompactTrigPrim_*_*', 'keep *_ecalTPSkim_*_*', 'keep *_selectDigi_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 'keep *_hybridSuperClusters_*_*', 'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 'keep *_multi5x5BasicClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 'drop recoClusterShapes_*_*_*', 'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 'keep *_CkfElectronCandidates_*_*', 'keep *_GsfGlobalElectronTest_*_*', 'keep *_electronMergedSeeds_*_*', 'keep recoGsfTracks_electronGsfTracks_*_*', 'keep recoGsfTrackExtras_electronGsfTracks_*_*', 'keep recoTrackExtras_electronGsfTracks_*_*', 'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoTrackExtras_generalTracks_*_*', 'keep TrackingRecHitsOwned_generalTracks_*_*', 'keep recoTracks_beamhaloTracks_*_*', 'keep recoTrackExtras_beamhaloTracks_*_*', 'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 'keep recoTracks_regionalCosmicTracks_*_*', 'keep recoTrackExtras_regionalCosmicTracks_*_*', 'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 'keep recoTracks_rsWithMaterialTracks_*_*', 'keep recoTrackExtras_rsWithMaterialTracks_*_*', 'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 'keep *_ctfPixelLess_*_*', 'keep *_dedxTruncated40_*_*', 'keep *_dedxDiscrimASmi_*_*', 'keep *_dedxHarmonic2_*_*', 'keep *_trackExtrapolator_*_*', 'keep *_kt4CaloJets_*_*', 'keep *_kt6CaloJets_*_*', 'keep *_ak5CaloJets_*_*', 'keep *_ak7CaloJets_*_*', 'keep *_iterativeCone5CaloJets_*_*', 'keep *_iterativeCone15CaloJets_*_*', 'keep *_kt4PFJets_*_*', 'keep *_kt6PFJets_*_*', 'keep *_ak5PFJets_*_*', 'keep *_ak7PFJets_*_*', 'keep *_iterativeCone5PFJets_*_*', 'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_ak5TrackJets_*_*', 'keep *_kt4TrackJets_*_*', 'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 'keep *_caloTowers_*_*', 'keep *_towerMaker_*_*', 'keep *_CastorTowerReco_*_*', 'keep *_ic5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 'keep *_iterativeCone5JetExtender_*_*', 'keep *_kt4JetTracksAssociatorAtVertex_*_*', 'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 'keep *_kt4JetExtender_*_*', 'keep *_ak5JetTracksAssociatorAtVertex_*_*', 'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak5JetExtender_*_*', 'keep *_ak7JetTracksAssociatorAtVertex_*_*', 'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak7JetExtender_*_*', 'keep *_ak5JetID_*_*', 'keep *_ak7JetID_*_*', 'keep *_ic5JetID_*_*', 'keep *_kt4JetID_*_*', 'keep *_kt6JetID_*_*', 'keep *_ak7BasicJets_*_*', 'keep *_ak7CastorJetID_*_*', 'keep recoCaloMETs_met_*_*', 'keep recoCaloMETs_metNoHF_*_*', 'keep recoCaloMETs_metHO_*_*', 'keep recoCaloMETs_corMetGlobalMuons_*_*', 'keep recoCaloMETs_metNoHFHO_*_*', 'keep recoCaloMETs_metOptHO_*_*', 'keep recoCaloMETs_metOpt_*_*', 'keep recoCaloMETs_metOptNoHFHO_*_*', 'keep recoCaloMETs_metOptNoHF_*_*', 'keep recoMETs_htMetAK5_*_*', 'keep recoMETs_htMetAK7_*_*', 'keep recoMETs_htMetIC5_*_*', 'keep recoMETs_htMetKT4_*_*', 'keep recoMETs_htMetKT6_*_*', 'keep recoMETs_tcMet_*_*', 'keep recoMETs_tcMetWithPFclusters_*_*', 'keep recoPFMETs_pfMet_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 'keep recoHcalNoiseRBXs_hcalnoise_*_*', 'keep HcalNoiseSummary_hcalnoise_*_*', 'keep *HaloData_*_*_*', 'keep *BeamHaloSummary_BeamHaloSummary_*_*', 'keep *_MuonSeed_*_*', 'keep *_ancientMuonSeed_*_*', 'keep *_mergedStandAloneMuonSeeds_*_*', 'keep TrackingRecHitsOwned_globalMuons_*_*', 'keep TrackingRecHitsOwned_tevMuons_*_*', 'keep recoCaloMuons_calomuons_*_*', 'keep *_CosmicMuonSeed_*_*', 'keep recoTrackExtras_cosmicMuons_*_*', 'keep TrackingRecHitsOwned_cosmicMuons_*_*', 'keep recoTrackExtras_globalCosmicMuons_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 'keep recoTrackExtras_cosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 'keep recoTracks_cosmicsVetoTracks_*_*', 'keep *_SETMuonSeed_*_*', 'keep recoTracks_standAloneSETMuons_*_*', 'keep recoTrackExtras_standAloneSETMuons_*_*', 'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 'keep recoTracks_globalSETMuons_*_*', 'keep recoTrackExtras_globalSETMuons_*_*', 'keep TrackingRecHitsOwned_globalSETMuons_*_*', 'keep recoMuons_muonsWithSET_*_*', 'keep recoTracks_standAloneMuons_*_*', 'keep recoTrackExtras_standAloneMuons_*_*', 'keep TrackingRecHitsOwned_standAloneMuons_*_*', 'keep recoTracks_globalMuons_*_*', 'keep recoTrackExtras_globalMuons_*_*', 'keep recoTracks_tevMuons_*_*', 'keep recoTrackExtras_tevMuons_*_*', 'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoMuons_muons_*_*', 'keep booledmValueMap_muid*_*_*', 'keep recoMuonTimeExtraedmValueMap_muons_*_*', 'keep *_muonShowerInformation_*_*', 'keep recoTracks_cosmicMuons_*_*', 'keep recoTracks_globalCosmicMuons_*_*', 'keep recoMuons_muonsFromCosmics_*_*', 'keep recoTracks_cosmicMuons1Leg_*_*', 'keep recoTracks_globalCosmicMuons1Leg_*_*', 'keep recoMuons_muonsFromCosmics1Leg_*_*', 'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 'keep uintedmValueMap_cosmicsVeto_*_*', 'keep *_muIsoDepositTk_*_*', 'keep *_muIsoDepositCalByAssociatorTowers_*_*', 'keep *_muIsoDepositCalByAssociatorHits_*_*', 'keep *_muIsoDepositJets_*_*', 'keep *_muGlobalIsoDepositCtfTk_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 'keep *_muGlobalIsoDepositJets_*_*', 'keep *_impactParameterTagInfos_*_*', 'keep *_trackCountingHighEffBJetTags_*_*', 'keep *_trackCountingHighPurBJetTags_*_*', 'keep *_jetProbabilityBJetTags_*_*', 'keep *_jetBProbabilityBJetTags_*_*', 'keep *_secondaryVertexTagInfos_*_*', 'keep *_ghostTrackVertexTagInfos_*_*', 'keep *_simpleSecondaryVertexBJetTags_*_*', 'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 'keep *_combinedSecondaryVertexBJetTags_*_*', 'keep *_combinedSecondaryVertexMVABJetTags_*_*', 'keep *_ghostTrackBJetTags_*_*', 'keep *_btagSoftElectrons_*_*', 'keep *_softElectronCands_*_*', 'keep *_softPFElectrons_*_*', 'keep *_softElectronTagInfos_*_*', 'keep *_softElectronBJetTags_*_*', 'keep *_softElectronByIP3dBJetTags_*_*', 'keep *_softElectronByPtBJetTags_*_*', 'keep *_softMuonTagInfos_*_*', 'keep *_softMuonBJetTags_*_*', 'keep *_softMuonByIP3dBJetTags_*_*', 'keep *_softMuonByPtBJetTags_*_*', 'keep *_combinedMVABJetTags_*_*', 'keep *_ak5PFJetsRecoTauPiZeros_*_*', 'keep *_hpsPFTauProducer*_*_*', 'keep *_hpsPFTauDiscrimination*_*_*', 'keep *_shrinkingConePFTauProducer*_*_*', 'keep *_shrinkingConePFTauDiscrimination*_*_*', 'keep *_hpsTancTaus_*_*', 'keep *_hpsTancTausDiscrimination*_*_*', 'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_caloRecoTauTagInfoProducer_*_*', 'keep recoCaloTaus_caloRecoTauProducer*_*_*', 'keep *_caloRecoTauDiscrimination*_*_*', 'keep  *_offlinePrimaryVertices_*_*', 'keep  *_offlinePrimaryVerticesWithBS_*_*', 'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 'keep  *_nuclearInteractionMaker_*_*', 'keep *_generalV0Candidates_*_*', 'keep recoGsfElectronCores_gsfElectronCores_*_*', 'keep recoGsfElectrons_gsfElectrons_*_*', 'keep floatedmValueMap_eidRobustLoose_*_*', 'keep floatedmValueMap_eidRobustTight_*_*', 'keep floatedmValueMap_eidRobustHighEnergy_*_*', 'keep floatedmValueMap_eidLoose_*_*', 'keep floatedmValueMap_eidTight_*_*', 'keep recoPhotons_photons_*_*', 'keep recoPhotonCores_photonCore_*_*', 'keep recoConversions_conversions_*_*', 'drop *_conversions_uncleanedConversions_*', 'keep recoConversions_allConversions_*_*', 'keep recoTracks_ckfOutInTracksFromConversions_*_*', 'keep recoTracks_ckfInOutTracksFromConversions_*_*', 'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 'keep *_PhotonIDProd_*_*', 'keep *_hfRecoEcalCandidate_*_*', 'keep *_hfEMClusters_*_*', 'keep *_pixelTracks_*_*', 'keep *_pixelVertices_*_*', 'drop CaloTowersSorted_towerMakerPF_*_*', 'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 'keep recoPFClusters_particleFlowClusterECAL_*_*')+cms.untracked.vstring('keep recoPFClusters_particleFlowClusterHCAL_*_*', 'keep recoPFClusters_particleFlowClusterPS_*_*', 'keep recoPFBlocks_particleFlowBlock_*_*', 'keep recoPFCandidates_particleFlow_*_*', 'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 'keep *_pfElectronTranslator_*_*', 'keep *_pfPhotonTranslator_*_*', 'keep *_trackerDrivenElectronSeeds_preid_*', 'keep *_offlineBeamSpot_*_*', 'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'keep L1MuGMTReadoutCollection_gtDigis_*_*', 'keep L1GctEmCand*_gctDigis_*_*', 'keep L1GctJetCand*_gctDigis_*_*', 'keep L1GctEtHad*_gctDigis_*_*', 'keep L1GctEtMiss*_gctDigis_*_*', 'keep L1GctEtTotal*_gctDigis_*_*', 'keep L1GctHtMiss*_gctDigis_*_*', 'keep L1GctJetCounts*_gctDigis_*_*', 'keep L1GctHFRingEtSums*_gctDigis_*_*', 'keep L1GctHFBitCounts*_gctDigis_*_*', 'keep LumiDetails_lumiProducer_*_*', 'keep LumiSummary_lumiProducer_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep L1AcceptBunchCrossings_*_*_*', 'keep L1TriggerScalerss_*_*_*', 'keep Level1TriggerScalerss_*_*_*', 'keep LumiScalerss_*_*_*', 'keep BeamSpotOnlines_*_*_*', 'keep DcsStatuss_*_*_*', 'keep *_logErrorHarvester_*_*', 'keep LHERunInfoProduct_source_*_*', 'keep LHEEventProduct_source_*_*', 'keep GenRunInfoProduct_generator_*_*', 'keep GenEventInfoProduct_generator_*_*', 'keep edmHepMCProduct_generator_*_*', 'keep GenFilterInfo_*_*_*', 'keep *_genParticles_*_*', 'keep recoGenMETs_*_*_*', 'keep *_kt4GenJets_*_*', 'keep *_kt6GenJets_*_*', 'keep *_ak5GenJets_*_*', 'keep *_ak7GenJets_*_*', 'keep *_iterativeCone5GenJets_*_*', 'keep *_genParticle_*_*', 'keep edmHepMCProduct_source_*_*', 'keep SimTracks_g4SimHits_*_*', 'keep SimVertexs_g4SimHits_*_*', 'keep *_allTrackMCMatch_*_*', 'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 'keep PileupSummaryInfo_*_*_*', 'keep PileupSummaryInfos_*_*_*', 'drop *_trackingtruthprod_*_*', 'drop *_electrontruth_*_*', 'keep *_mergedtruth_MergedTrackTruth_*', 'keep CrossingFramePlaybackInfoExtended_*_*_*', 'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 'keep *_allTrackMCMatch_*_*'))
)

process.RECOEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = (cms.untracked.vstring('drop *', 'keep DetIdedmEDCollection_siStripDigis_*_*', 'keep *_siPixelClusters_*_*', 'keep *_siStripClusters_*_*', 'keep *_dt1DRecHits_*_*', 'keep *_dt4DSegments_*_*', 'keep *_dt1DCosmicRecHits_*_*', 'keep *_dt4DCosmicSegments_*_*', 'keep *_csc2DRecHits_*_*', 'keep *_cscSegments_*_*', 'keep *_rpcRecHits_*_*', 'keep *_hbhereco_*_*', 'keep *_hfreco_*_*', 'keep *_horeco_*_*', 'keep HBHERecHitsSorted_hbherecoMB_*_*', 'keep HORecHitsSorted_horecoMB_*_*', 'keep HFRecHitsSorted_hfrecoMB_*_*', 'keep ZDCDataFramesSorted_*Digis_*_*', 'keep ZDCRecHitsSorted_*_*_*', 'keep *_reducedHcalRecHits_*_*', 'keep *_castorreco_*_*', 'keep *_ecalPreshowerRecHit_*_*', 'keep *_ecalRecHit_*_*', 'keep *_ecalCompactTrigPrim_*_*', 'keep *_ecalTPSkim_*_*', 'keep *_selectDigi_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 'keep *_hybridSuperClusters_*_*', 'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 'keep *_multi5x5BasicClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 'drop recoClusterShapes_*_*_*', 'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 'keep *_CkfElectronCandidates_*_*', 'keep *_GsfGlobalElectronTest_*_*', 'keep *_electronMergedSeeds_*_*', 'keep recoGsfTracks_electronGsfTracks_*_*', 'keep recoGsfTrackExtras_electronGsfTracks_*_*', 'keep recoTrackExtras_electronGsfTracks_*_*', 'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoTrackExtras_generalTracks_*_*', 'keep TrackingRecHitsOwned_generalTracks_*_*', 'keep recoTracks_beamhaloTracks_*_*', 'keep recoTrackExtras_beamhaloTracks_*_*', 'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 'keep recoTracks_regionalCosmicTracks_*_*', 'keep recoTrackExtras_regionalCosmicTracks_*_*', 'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 'keep recoTracks_rsWithMaterialTracks_*_*', 'keep recoTrackExtras_rsWithMaterialTracks_*_*', 'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 'keep *_ctfPixelLess_*_*', 'keep *_dedxTruncated40_*_*', 'keep *_dedxDiscrimASmi_*_*', 'keep *_dedxHarmonic2_*_*', 'keep *_trackExtrapolator_*_*', 'keep *_kt4CaloJets_*_*', 'keep *_kt6CaloJets_*_*', 'keep *_ak5CaloJets_*_*', 'keep *_ak7CaloJets_*_*', 'keep *_iterativeCone5CaloJets_*_*', 'keep *_iterativeCone15CaloJets_*_*', 'keep *_kt4PFJets_*_*', 'keep *_kt6PFJets_*_*', 'keep *_ak5PFJets_*_*', 'keep *_ak7PFJets_*_*', 'keep *_iterativeCone5PFJets_*_*', 'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_ak5TrackJets_*_*', 'keep *_kt4TrackJets_*_*', 'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 'keep *_caloTowers_*_*', 'keep *_towerMaker_*_*', 'keep *_CastorTowerReco_*_*', 'keep *_ic5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 'keep *_iterativeCone5JetExtender_*_*', 'keep *_kt4JetTracksAssociatorAtVertex_*_*', 'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 'keep *_kt4JetExtender_*_*', 'keep *_ak5JetTracksAssociatorAtVertex_*_*', 'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak5JetExtender_*_*', 'keep *_ak7JetTracksAssociatorAtVertex_*_*', 'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak7JetExtender_*_*', 'keep *_ak5JetID_*_*', 'keep *_ak7JetID_*_*', 'keep *_ic5JetID_*_*', 'keep *_kt4JetID_*_*', 'keep *_kt6JetID_*_*', 'keep *_ak7BasicJets_*_*', 'keep *_ak7CastorJetID_*_*', 'keep recoCaloMETs_met_*_*', 'keep recoCaloMETs_metNoHF_*_*', 'keep recoCaloMETs_metHO_*_*', 'keep recoCaloMETs_corMetGlobalMuons_*_*', 'keep recoCaloMETs_metNoHFHO_*_*', 'keep recoCaloMETs_metOptHO_*_*', 'keep recoCaloMETs_metOpt_*_*', 'keep recoCaloMETs_metOptNoHFHO_*_*', 'keep recoCaloMETs_metOptNoHF_*_*', 'keep recoMETs_htMetAK5_*_*', 'keep recoMETs_htMetAK7_*_*', 'keep recoMETs_htMetIC5_*_*', 'keep recoMETs_htMetKT4_*_*', 'keep recoMETs_htMetKT6_*_*', 'keep recoMETs_tcMet_*_*', 'keep recoMETs_tcMetWithPFclusters_*_*', 'keep recoPFMETs_pfMet_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 'keep recoHcalNoiseRBXs_hcalnoise_*_*', 'keep HcalNoiseSummary_hcalnoise_*_*', 'keep *HaloData_*_*_*', 'keep *BeamHaloSummary_BeamHaloSummary_*_*', 'keep *_MuonSeed_*_*', 'keep *_ancientMuonSeed_*_*', 'keep *_mergedStandAloneMuonSeeds_*_*', 'keep TrackingRecHitsOwned_globalMuons_*_*', 'keep TrackingRecHitsOwned_tevMuons_*_*', 'keep recoCaloMuons_calomuons_*_*', 'keep *_CosmicMuonSeed_*_*', 'keep recoTrackExtras_cosmicMuons_*_*', 'keep TrackingRecHitsOwned_cosmicMuons_*_*', 'keep recoTrackExtras_globalCosmicMuons_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 'keep recoTrackExtras_cosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 'keep recoTracks_cosmicsVetoTracks_*_*', 'keep *_SETMuonSeed_*_*', 'keep recoTracks_standAloneSETMuons_*_*', 'keep recoTrackExtras_standAloneSETMuons_*_*', 'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 'keep recoTracks_globalSETMuons_*_*', 'keep recoTrackExtras_globalSETMuons_*_*', 'keep TrackingRecHitsOwned_globalSETMuons_*_*', 'keep recoMuons_muonsWithSET_*_*', 'keep recoTracks_standAloneMuons_*_*', 'keep recoTrackExtras_standAloneMuons_*_*', 'keep TrackingRecHitsOwned_standAloneMuons_*_*', 'keep recoTracks_globalMuons_*_*', 'keep recoTrackExtras_globalMuons_*_*', 'keep recoTracks_tevMuons_*_*', 'keep recoTrackExtras_tevMuons_*_*', 'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoMuons_muons_*_*', 'keep booledmValueMap_muid*_*_*', 'keep recoMuonTimeExtraedmValueMap_muons_*_*', 'keep *_muonShowerInformation_*_*', 'keep recoTracks_cosmicMuons_*_*', 'keep recoTracks_globalCosmicMuons_*_*', 'keep recoMuons_muonsFromCosmics_*_*', 'keep recoTracks_cosmicMuons1Leg_*_*', 'keep recoTracks_globalCosmicMuons1Leg_*_*', 'keep recoMuons_muonsFromCosmics1Leg_*_*', 'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 'keep uintedmValueMap_cosmicsVeto_*_*', 'keep *_muIsoDepositTk_*_*', 'keep *_muIsoDepositCalByAssociatorTowers_*_*', 'keep *_muIsoDepositCalByAssociatorHits_*_*', 'keep *_muIsoDepositJets_*_*', 'keep *_muGlobalIsoDepositCtfTk_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 'keep *_muGlobalIsoDepositJets_*_*', 'keep *_impactParameterTagInfos_*_*', 'keep *_trackCountingHighEffBJetTags_*_*', 'keep *_trackCountingHighPurBJetTags_*_*', 'keep *_jetProbabilityBJetTags_*_*', 'keep *_jetBProbabilityBJetTags_*_*', 'keep *_secondaryVertexTagInfos_*_*', 'keep *_ghostTrackVertexTagInfos_*_*', 'keep *_simpleSecondaryVertexBJetTags_*_*', 'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 'keep *_combinedSecondaryVertexBJetTags_*_*', 'keep *_combinedSecondaryVertexMVABJetTags_*_*', 'keep *_ghostTrackBJetTags_*_*', 'keep *_btagSoftElectrons_*_*', 'keep *_softElectronCands_*_*', 'keep *_softPFElectrons_*_*', 'keep *_softElectronTagInfos_*_*', 'keep *_softElectronBJetTags_*_*', 'keep *_softElectronByIP3dBJetTags_*_*', 'keep *_softElectronByPtBJetTags_*_*', 'keep *_softMuonTagInfos_*_*', 'keep *_softMuonBJetTags_*_*', 'keep *_softMuonByIP3dBJetTags_*_*', 'keep *_softMuonByPtBJetTags_*_*', 'keep *_combinedMVABJetTags_*_*', 'keep *_ak5PFJetsRecoTauPiZeros_*_*', 'keep *_hpsPFTauProducer*_*_*', 'keep *_hpsPFTauDiscrimination*_*_*', 'keep *_shrinkingConePFTauProducer*_*_*', 'keep *_shrinkingConePFTauDiscrimination*_*_*', 'keep *_hpsTancTaus_*_*', 'keep *_hpsTancTausDiscrimination*_*_*', 'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_caloRecoTauTagInfoProducer_*_*', 'keep recoCaloTaus_caloRecoTauProducer*_*_*', 'keep *_caloRecoTauDiscrimination*_*_*', 'keep  *_offlinePrimaryVertices_*_*', 'keep  *_offlinePrimaryVerticesWithBS_*_*', 'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 'keep  *_nuclearInteractionMaker_*_*', 'keep *_generalV0Candidates_*_*', 'keep recoGsfElectronCores_gsfElectronCores_*_*', 'keep recoGsfElectrons_gsfElectrons_*_*', 'keep floatedmValueMap_eidRobustLoose_*_*', 'keep floatedmValueMap_eidRobustTight_*_*', 'keep floatedmValueMap_eidRobustHighEnergy_*_*', 'keep floatedmValueMap_eidLoose_*_*', 'keep floatedmValueMap_eidTight_*_*', 'keep recoPhotons_photons_*_*', 'keep recoPhotonCores_photonCore_*_*', 'keep recoConversions_conversions_*_*', 'drop *_conversions_uncleanedConversions_*', 'keep recoConversions_allConversions_*_*', 'keep recoTracks_ckfOutInTracksFromConversions_*_*', 'keep recoTracks_ckfInOutTracksFromConversions_*_*', 'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 'keep *_PhotonIDProd_*_*', 'keep *_hfRecoEcalCandidate_*_*', 'keep *_hfEMClusters_*_*', 'keep *_pixelTracks_*_*', 'keep *_pixelVertices_*_*', 'drop CaloTowersSorted_towerMakerPF_*_*', 'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 'keep recoPFClusters_particleFlowClusterECAL_*_*', 'keep recoPFClusters_particleFlowClusterHCAL_*_*', 'keep recoPFClusters_particleFlowClusterPS_*_*')+cms.untracked.vstring('keep recoPFBlocks_particleFlowBlock_*_*', 'keep recoPFCandidates_particleFlow_*_*', 'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 'keep *_pfElectronTranslator_*_*', 'keep *_pfPhotonTranslator_*_*', 'keep *_trackerDrivenElectronSeeds_preid_*', 'keep *_offlineBeamSpot_*_*', 'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'keep L1MuGMTReadoutCollection_gtDigis_*_*', 'keep L1GctEmCand*_gctDigis_*_*', 'keep L1GctJetCand*_gctDigis_*_*', 'keep L1GctEtHad*_gctDigis_*_*', 'keep L1GctEtMiss*_gctDigis_*_*', 'keep L1GctEtTotal*_gctDigis_*_*', 'keep L1GctHtMiss*_gctDigis_*_*', 'keep L1GctJetCounts*_gctDigis_*_*', 'keep L1GctHFRingEtSums*_gctDigis_*_*', 'keep L1GctHFBitCounts*_gctDigis_*_*', 'keep LumiDetails_lumiProducer_*_*', 'keep LumiSummary_lumiProducer_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep L1AcceptBunchCrossings_*_*_*', 'keep L1TriggerScalerss_*_*_*', 'keep Level1TriggerScalerss_*_*_*', 'keep LumiScalerss_*_*_*', 'keep BeamSpotOnlines_*_*_*', 'keep DcsStatuss_*_*_*', 'keep *_logErrorHarvester_*_*'))
)

process.RECOSIMEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = (cms.untracked.vstring('drop *', 'drop *', 'keep DetIdedmEDCollection_siStripDigis_*_*', 'keep *_siPixelClusters_*_*', 'keep *_siStripClusters_*_*', 'keep *_dt1DRecHits_*_*', 'keep *_dt4DSegments_*_*', 'keep *_dt1DCosmicRecHits_*_*', 'keep *_dt4DCosmicSegments_*_*', 'keep *_csc2DRecHits_*_*', 'keep *_cscSegments_*_*', 'keep *_rpcRecHits_*_*', 'keep *_hbhereco_*_*', 'keep *_hfreco_*_*', 'keep *_horeco_*_*', 'keep HBHERecHitsSorted_hbherecoMB_*_*', 'keep HORecHitsSorted_horecoMB_*_*', 'keep HFRecHitsSorted_hfrecoMB_*_*', 'keep ZDCDataFramesSorted_*Digis_*_*', 'keep ZDCRecHitsSorted_*_*_*', 'keep *_reducedHcalRecHits_*_*', 'keep *_castorreco_*_*', 'keep *_ecalPreshowerRecHit_*_*', 'keep *_ecalRecHit_*_*', 'keep *_ecalCompactTrigPrim_*_*', 'keep *_ecalTPSkim_*_*', 'keep *_selectDigi_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 'keep *_hybridSuperClusters_*_*', 'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 'keep *_multi5x5BasicClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClusters_*_*', 'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 'drop recoClusterShapes_*_*_*', 'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*', 'keep *_CkfElectronCandidates_*_*', 'keep *_GsfGlobalElectronTest_*_*', 'keep *_electronMergedSeeds_*_*', 'keep recoGsfTracks_electronGsfTracks_*_*', 'keep recoGsfTrackExtras_electronGsfTracks_*_*', 'keep recoTrackExtras_electronGsfTracks_*_*', 'keep TrackingRecHitsOwned_electronGsfTracks_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoTrackExtras_generalTracks_*_*', 'keep TrackingRecHitsOwned_generalTracks_*_*', 'keep recoTracks_beamhaloTracks_*_*', 'keep recoTrackExtras_beamhaloTracks_*_*', 'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 'keep recoTracks_regionalCosmicTracks_*_*', 'keep recoTrackExtras_regionalCosmicTracks_*_*', 'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 'keep recoTracks_rsWithMaterialTracks_*_*', 'keep recoTrackExtras_rsWithMaterialTracks_*_*', 'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 'keep *_ctfPixelLess_*_*', 'keep *_dedxTruncated40_*_*', 'keep *_dedxDiscrimASmi_*_*', 'keep *_dedxHarmonic2_*_*', 'keep *_trackExtrapolator_*_*', 'keep *_kt4CaloJets_*_*', 'keep *_kt6CaloJets_*_*', 'keep *_ak5CaloJets_*_*', 'keep *_ak7CaloJets_*_*', 'keep *_iterativeCone5CaloJets_*_*', 'keep *_iterativeCone15CaloJets_*_*', 'keep *_kt4PFJets_*_*', 'keep *_kt6PFJets_*_*', 'keep *_ak5PFJets_*_*', 'keep *_ak7PFJets_*_*', 'keep *_iterativeCone5PFJets_*_*', 'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_ak5TrackJets_*_*', 'keep *_kt4TrackJets_*_*', 'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 'keep *_caloTowers_*_*', 'keep *_towerMaker_*_*', 'keep *_CastorTowerReco_*_*', 'keep *_ic5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 'keep *_iterativeCone5JetExtender_*_*', 'keep *_kt4JetTracksAssociatorAtVertex_*_*', 'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 'keep *_kt4JetExtender_*_*', 'keep *_ak5JetTracksAssociatorAtVertex_*_*', 'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak5JetExtender_*_*', 'keep *_ak7JetTracksAssociatorAtVertex_*_*', 'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 'keep *_ak7JetExtender_*_*', 'keep *_ak5JetID_*_*', 'keep *_ak7JetID_*_*', 'keep *_ic5JetID_*_*', 'keep *_kt4JetID_*_*', 'keep *_kt6JetID_*_*', 'keep *_ak7BasicJets_*_*', 'keep *_ak7CastorJetID_*_*', 'keep recoCaloMETs_met_*_*', 'keep recoCaloMETs_metNoHF_*_*', 'keep recoCaloMETs_metHO_*_*', 'keep recoCaloMETs_corMetGlobalMuons_*_*', 'keep recoCaloMETs_metNoHFHO_*_*', 'keep recoCaloMETs_metOptHO_*_*', 'keep recoCaloMETs_metOpt_*_*', 'keep recoCaloMETs_metOptNoHFHO_*_*', 'keep recoCaloMETs_metOptNoHF_*_*', 'keep recoMETs_htMetAK5_*_*', 'keep recoMETs_htMetAK7_*_*', 'keep recoMETs_htMetIC5_*_*', 'keep recoMETs_htMetKT4_*_*', 'keep recoMETs_htMetKT6_*_*', 'keep recoMETs_tcMet_*_*', 'keep recoMETs_tcMetWithPFclusters_*_*', 'keep recoPFMETs_pfMet_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 'keep recoHcalNoiseRBXs_hcalnoise_*_*', 'keep HcalNoiseSummary_hcalnoise_*_*', 'keep *HaloData_*_*_*', 'keep *BeamHaloSummary_BeamHaloSummary_*_*', 'keep *_MuonSeed_*_*', 'keep *_ancientMuonSeed_*_*', 'keep *_mergedStandAloneMuonSeeds_*_*', 'keep TrackingRecHitsOwned_globalMuons_*_*', 'keep TrackingRecHitsOwned_tevMuons_*_*', 'keep recoCaloMuons_calomuons_*_*', 'keep *_CosmicMuonSeed_*_*', 'keep recoTrackExtras_cosmicMuons_*_*', 'keep TrackingRecHitsOwned_cosmicMuons_*_*', 'keep recoTrackExtras_globalCosmicMuons_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 'keep recoTrackExtras_cosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 'keep recoTracks_cosmicsVetoTracks_*_*', 'keep *_SETMuonSeed_*_*', 'keep recoTracks_standAloneSETMuons_*_*', 'keep recoTrackExtras_standAloneSETMuons_*_*', 'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 'keep recoTracks_globalSETMuons_*_*', 'keep recoTrackExtras_globalSETMuons_*_*', 'keep TrackingRecHitsOwned_globalSETMuons_*_*', 'keep recoMuons_muonsWithSET_*_*', 'keep recoTracks_standAloneMuons_*_*', 'keep recoTrackExtras_standAloneMuons_*_*', 'keep TrackingRecHitsOwned_standAloneMuons_*_*', 'keep recoTracks_globalMuons_*_*', 'keep recoTrackExtras_globalMuons_*_*', 'keep recoTracks_tevMuons_*_*', 'keep recoTrackExtras_tevMuons_*_*', 'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 'keep recoTracks_generalTracks_*_*', 'keep recoMuons_muons_*_*', 'keep booledmValueMap_muid*_*_*', 'keep recoMuonTimeExtraedmValueMap_muons_*_*', 'keep *_muonShowerInformation_*_*', 'keep recoTracks_cosmicMuons_*_*', 'keep recoTracks_globalCosmicMuons_*_*', 'keep recoMuons_muonsFromCosmics_*_*', 'keep recoTracks_cosmicMuons1Leg_*_*', 'keep recoTracks_globalCosmicMuons1Leg_*_*', 'keep recoMuons_muonsFromCosmics1Leg_*_*', 'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 'keep uintedmValueMap_cosmicsVeto_*_*', 'keep *_muIsoDepositTk_*_*', 'keep *_muIsoDepositCalByAssociatorTowers_*_*', 'keep *_muIsoDepositCalByAssociatorHits_*_*', 'keep *_muIsoDepositJets_*_*', 'keep *_muGlobalIsoDepositCtfTk_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 'keep *_muGlobalIsoDepositJets_*_*', 'keep *_impactParameterTagInfos_*_*', 'keep *_trackCountingHighEffBJetTags_*_*', 'keep *_trackCountingHighPurBJetTags_*_*', 'keep *_jetProbabilityBJetTags_*_*', 'keep *_jetBProbabilityBJetTags_*_*', 'keep *_secondaryVertexTagInfos_*_*', 'keep *_ghostTrackVertexTagInfos_*_*', 'keep *_simpleSecondaryVertexBJetTags_*_*', 'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 'keep *_combinedSecondaryVertexBJetTags_*_*', 'keep *_combinedSecondaryVertexMVABJetTags_*_*', 'keep *_ghostTrackBJetTags_*_*', 'keep *_btagSoftElectrons_*_*', 'keep *_softElectronCands_*_*', 'keep *_softPFElectrons_*_*', 'keep *_softElectronTagInfos_*_*', 'keep *_softElectronBJetTags_*_*', 'keep *_softElectronByIP3dBJetTags_*_*', 'keep *_softElectronByPtBJetTags_*_*', 'keep *_softMuonTagInfos_*_*', 'keep *_softMuonBJetTags_*_*', 'keep *_softMuonByIP3dBJetTags_*_*', 'keep *_softMuonByPtBJetTags_*_*', 'keep *_combinedMVABJetTags_*_*', 'keep *_ak5PFJetsRecoTauPiZeros_*_*', 'keep *_hpsPFTauProducer*_*_*', 'keep *_hpsPFTauDiscrimination*_*_*', 'keep *_shrinkingConePFTauProducer*_*_*', 'keep *_shrinkingConePFTauDiscrimination*_*_*', 'keep *_hpsTancTaus_*_*', 'keep *_hpsTancTausDiscrimination*_*_*', 'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 'keep *_caloRecoTauTagInfoProducer_*_*', 'keep recoCaloTaus_caloRecoTauProducer*_*_*', 'keep *_caloRecoTauDiscrimination*_*_*', 'keep  *_offlinePrimaryVertices_*_*', 'keep  *_offlinePrimaryVerticesWithBS_*_*', 'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 'keep  *_nuclearInteractionMaker_*_*', 'keep *_generalV0Candidates_*_*', 'keep recoGsfElectronCores_gsfElectronCores_*_*', 'keep recoGsfElectrons_gsfElectrons_*_*', 'keep floatedmValueMap_eidRobustLoose_*_*', 'keep floatedmValueMap_eidRobustTight_*_*', 'keep floatedmValueMap_eidRobustHighEnergy_*_*', 'keep floatedmValueMap_eidLoose_*_*', 'keep floatedmValueMap_eidTight_*_*', 'keep recoPhotons_photons_*_*', 'keep recoPhotonCores_photonCore_*_*', 'keep recoConversions_conversions_*_*', 'drop *_conversions_uncleanedConversions_*', 'keep recoConversions_allConversions_*_*', 'keep recoTracks_ckfOutInTracksFromConversions_*_*', 'keep recoTracks_ckfInOutTracksFromConversions_*_*', 'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 'keep *_PhotonIDProd_*_*', 'keep *_hfRecoEcalCandidate_*_*', 'keep *_hfEMClusters_*_*', 'keep *_pixelTracks_*_*', 'keep *_pixelVertices_*_*', 'drop CaloTowersSorted_towerMakerPF_*_*', 'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 'keep recoPFClusters_particleFlowClusterECAL_*_*', 'keep recoPFClusters_particleFlowClusterHCAL_*_*')+cms.untracked.vstring('keep recoPFClusters_particleFlowClusterPS_*_*', 'keep recoPFBlocks_particleFlowBlock_*_*', 'keep recoPFCandidates_particleFlow_*_*', 'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 'keep *_pfElectronTranslator_*_*', 'keep *_pfPhotonTranslator_*_*', 'keep *_trackerDrivenElectronSeeds_preid_*', 'keep *_offlineBeamSpot_*_*', 'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*', 'keep *_l1GtRecord_*_*', 'keep *_l1GtTriggerMenuLite_*_*', 'keep *_conditionsInEdm_*_*', 'keep *_l1extraParticles_*_*', 'keep L1MuGMTReadoutCollection_gtDigis_*_*', 'keep L1GctEmCand*_gctDigis_*_*', 'keep L1GctJetCand*_gctDigis_*_*', 'keep L1GctEtHad*_gctDigis_*_*', 'keep L1GctEtMiss*_gctDigis_*_*', 'keep L1GctEtTotal*_gctDigis_*_*', 'keep L1GctHtMiss*_gctDigis_*_*', 'keep L1GctJetCounts*_gctDigis_*_*', 'keep L1GctHFRingEtSums*_gctDigis_*_*', 'keep L1GctHFBitCounts*_gctDigis_*_*', 'keep LumiDetails_lumiProducer_*_*', 'keep LumiSummary_lumiProducer_*_*', 'drop *_hlt*_*_*', 'keep *_hltL1GtObjectMap_*_*', 'keep edmTriggerResults_*_*_*', 'keep triggerTriggerEvent_*_*_*', 'keep L1AcceptBunchCrossings_*_*_*', 'keep L1TriggerScalerss_*_*_*', 'keep Level1TriggerScalerss_*_*_*', 'keep LumiScalerss_*_*_*', 'keep BeamSpotOnlines_*_*_*', 'keep DcsStatuss_*_*_*', 'keep *_logErrorHarvester_*_*', 'keep LHERunInfoProduct_source_*_*', 'keep LHEEventProduct_source_*_*', 'keep GenRunInfoProduct_generator_*_*', 'keep GenEventInfoProduct_generator_*_*', 'keep edmHepMCProduct_generator_*_*', 'keep GenFilterInfo_*_*_*', 'keep *_genParticles_*_*', 'keep recoGenMETs_*_*_*', 'keep *_kt4GenJets_*_*', 'keep *_kt6GenJets_*_*', 'keep *_ak5GenJets_*_*', 'keep *_ak7GenJets_*_*', 'keep *_iterativeCone5GenJets_*_*', 'keep *_genParticle_*_*', 'keep edmHepMCProduct_source_*_*', 'keep SimTracks_g4SimHits_*_*', 'keep SimVertexs_g4SimHits_*_*', 'keep *_allTrackMCMatch_*_*', 'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 'keep PileupSummaryInfo_*_*_*', 'keep PileupSummaryInfos_*_*_*'))
)

process.REPACKRAWEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop FEDRawDataCollection_*_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*')
)

process.REPACKRAWSIMEventContent = cms.PSet(
    splitLevel = cms.untracked.int32(0),
    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),
    outputCommands = cms.untracked.vstring('drop *', 
        'drop FEDRawDataCollection_*_*_*', 
        'keep FEDRawDataCollection_rawDataRepacker_*_*', 
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*', 
        'keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*', 
        'keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfo_*_*_*', 
        'keep PileupSummaryInfos_*_*_*', 
        'keep LHERunInfoProduct_source_*_*', 
        'keep LHEEventProduct_source_*_*', 
        'keep GenRunInfoProduct_generator_*_*', 
        'keep GenEventInfoProduct_generator_*_*', 
        'keep edmHepMCProduct_generator_*_*', 
        'keep GenFilterInfo_*_*_*', 
        'keep *_genParticles_*_*', 
        'keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*', 
        'keep recoGenMETs_*_*_*', 
        'keep FEDRawDataCollection_source_*_*', 
        'keep FEDRawDataCollection_rawDataCollector_*_*', 
        'keep *_MEtoEDMConverter_*_*', 
        'keep *_randomEngineStateProducer_*_*', 
        'keep *_logErrorHarvester_*_*')
)

process.RecoBTagAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*')
)

process.RecoBTagFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*')
)

process.RecoBTagRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_impactParameterTagInfos_*_*', 
        'keep *_trackCountingHighEffBJetTags_*_*', 
        'keep *_trackCountingHighPurBJetTags_*_*', 
        'keep *_jetProbabilityBJetTags_*_*', 
        'keep *_jetBProbabilityBJetTags_*_*', 
        'keep *_secondaryVertexTagInfos_*_*', 
        'keep *_ghostTrackVertexTagInfos_*_*', 
        'keep *_simpleSecondaryVertexBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighEffBJetTags_*_*', 
        'keep *_simpleSecondaryVertexHighPurBJetTags_*_*', 
        'keep *_combinedSecondaryVertexBJetTags_*_*', 
        'keep *_combinedSecondaryVertexMVABJetTags_*_*', 
        'keep *_ghostTrackBJetTags_*_*', 
        'keep *_btagSoftElectrons_*_*', 
        'keep *_softElectronCands_*_*', 
        'keep *_softPFElectrons_*_*', 
        'keep *_softElectronTagInfos_*_*', 
        'keep *_softElectronBJetTags_*_*', 
        'keep *_softElectronByIP3dBJetTags_*_*', 
        'keep *_softElectronByPtBJetTags_*_*', 
        'keep *_softMuonTagInfos_*_*', 
        'keep *_softMuonBJetTags_*_*', 
        'keep *_softMuonByIP3dBJetTags_*_*', 
        'keep *_softMuonByPtBJetTags_*_*', 
        'keep *_combinedMVABJetTags_*_*')
)

process.RecoBTauAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoBTauFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoBTauRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoEcalAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep recoCaloClusters_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*', 
        'keep recoCaloClusters_multi5x5BasicClusters_multi5x5EndcapBasicClusters_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*')
)

process.RecoEcalFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_selectDigi_*_*', 
        'keep *_reducedEcalRecHitsEB_*_*', 
        'keep *_reducedEcalRecHitsEE_*_*', 
        'keep *_reducedEcalRecHitsES_*_*', 
        'keep *_interestingEcalDetId*_*_*', 
        'keep *_ecalWeightUncalibRecHit_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep *_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5*_*_*', 
        'keep *_correctedMulti5x5*_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*')
)

process.RecoEcalRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_selectDigi_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*', 
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*', 
        'keep *_hybridSuperClusters_*_*', 
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*', 
        'keep *_multi5x5BasicClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClusters_*_*', 
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*', 
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*', 
        'drop recoClusterShapes_*_*_*', 
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*', 
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*', 
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*')
)

process.RecoEgammaAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*')
)

process.RecoEgammaFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_gsfElectronCores_*_*', 
        'keep *_gsfElectrons_*_*', 
        'keep *_eidRobustLoose_*_*', 
        'keep *_eidRobustTight_*_*', 
        'keep *_eidRobustHighEnergy_*_*', 
        'keep *_eidLoose_*_*', 
        'keep *_eidTight_*_*', 
        'keep *_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep *_photonCore_*_*', 
        'keep *_photons_*_*', 
        'keep *_allConversions_*_*', 
        'keep *_ckfOutInTracksFromConversions_*_*', 
        'keep *_ckfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*')
)

process.RecoEgammaRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGsfElectronCores_gsfElectronCores_*_*', 
        'keep recoGsfElectrons_gsfElectrons_*_*', 
        'keep floatedmValueMap_eidRobustLoose_*_*', 
        'keep floatedmValueMap_eidRobustTight_*_*', 
        'keep floatedmValueMap_eidRobustHighEnergy_*_*', 
        'keep floatedmValueMap_eidLoose_*_*', 
        'keep floatedmValueMap_eidTight_*_*', 
        'keep recoPhotons_photons_*_*', 
        'keep recoPhotonCores_photonCore_*_*', 
        'keep recoConversions_conversions_*_*', 
        'drop *_conversions_uncleanedConversions_*', 
        'keep recoConversions_allConversions_*_*', 
        'keep recoTracks_ckfOutInTracksFromConversions_*_*', 
        'keep recoTracks_ckfInOutTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*', 
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*', 
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*', 
        'keep *_PhotonIDProd_*_*', 
        'keep *_hfRecoEcalCandidate_*_*', 
        'keep *_hfEMClusters_*_*')
)

process.RecoGenJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_genParticle_*_*')
)

process.RecoGenJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenJets_*_*_*', 
        'keep *_genParticle_*_*')
)

process.RecoGenJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_kt4GenJets_*_*', 
        'keep *_kt6GenJets_*_*', 
        'keep *_ak5GenJets_*_*', 
        'keep *_ak7GenJets_*_*', 
        'keep *_iterativeCone5GenJets_*_*', 
        'keep *_genParticle_*_*')
)

process.RecoGenMETAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoGenMETFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoGenMETRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoHcalNoiseAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('drop recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*')
)

process.RecoHcalNoiseFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*')
)

process.RecoHcalNoiseRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*')
)

process.RecoJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*')
)

process.RecoJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoCaloJets_*_*_*', 
        'keep recoPFJets_*_*_*', 
        'keep recoTrackJets_*_*_*', 
        'keep recoJPTJets_*_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_sisCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_sisCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_sisCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_sc5JetID_*_*', 
        'keep *_sc7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_ic7JetID_*_*', 
        'keep *_gk5JetID_*_*', 
        'keep *_gk7JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ca4JetID_*_*', 
        'keep *_ca6JetID_*_*', 
        'keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*')
)

process.RecoJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_kt4CaloJets_*_*', 
        'keep *_kt6CaloJets_*_*', 
        'keep *_ak5CaloJets_*_*', 
        'keep *_ak7CaloJets_*_*', 
        'keep *_iterativeCone5CaloJets_*_*', 
        'keep *_iterativeCone15CaloJets_*_*', 
        'keep *_kt4PFJets_*_*', 
        'keep *_kt6PFJets_*_*', 
        'keep *_ak5PFJets_*_*', 
        'keep *_ak7PFJets_*_*', 
        'keep *_iterativeCone5PFJets_*_*', 
        'keep *_JetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_ak5TrackJets_*_*', 
        'keep *_kt4TrackJets_*_*', 
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*', 
        'keep *_caloTowers_*_*', 
        'keep *_towerMaker_*_*', 
        'keep *_CastorTowerReco_*_*', 
        'keep *_ic5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtVertex_*_*', 
        'keep *_iterativeCone5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_iterativeCone5JetExtender_*_*', 
        'keep *_kt4JetTracksAssociatorAtVertex_*_*', 
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_kt4JetExtender_*_*', 
        'keep *_ak5JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak5JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak5JetExtender_*_*', 
        'keep *_ak7JetTracksAssociatorAtVertex_*_*', 
        'keep *_ak7JetTracksAssociatorAtCaloFace_*_*', 
        'keep *_ak7JetExtender_*_*', 
        'keep *_ak5JetID_*_*', 
        'keep *_ak7JetID_*_*', 
        'keep *_ic5JetID_*_*', 
        'keep *_kt4JetID_*_*', 
        'keep *_kt6JetID_*_*', 
        'keep *_ak7BasicJets_*_*', 
        'keep *_ak7CastorJetID_*_*')
)

process.RecoLocalCaloAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_castorreco_*_*', 
        'keep *_reducedHcalRecHits_*_*')
)

process.RecoLocalCaloFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_hbhereco_*_*', 
        'keep *_hbheprereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HBHERecHitsSorted_hbheprerecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep *_ecalGlobalUncalibRecHit_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*')
)

process.RecoLocalCaloRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_hbhereco_*_*', 
        'keep *_hfreco_*_*', 
        'keep *_horeco_*_*', 
        'keep HBHERecHitsSorted_hbherecoMB_*_*', 
        'keep HORecHitsSorted_horecoMB_*_*', 
        'keep HFRecHitsSorted_hfrecoMB_*_*', 
        'keep ZDCDataFramesSorted_*Digis_*_*', 
        'keep ZDCRecHitsSorted_*_*_*', 
        'keep *_reducedHcalRecHits_*_*', 
        'keep *_castorreco_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*')
)

process.RecoLocalMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoLocalMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*')
)

process.RecoLocalMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_dt1DRecHits_*_*', 
        'keep *_dt4DSegments_*_*', 
        'keep *_dt1DCosmicRecHits_*_*', 
        'keep *_dt4DCosmicSegments_*_*', 
        'keep *_csc2DRecHits_*_*', 
        'keep *_cscSegments_*_*', 
        'keep *_rpcRecHits_*_*')
)

process.RecoLocalTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoLocalTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*')
)

process.RecoLocalTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep DetIdedmEDCollection_siStripDigis_*_*', 
        'keep *_siPixelClusters_*_*', 
        'keep *_siStripClusters_*_*')
)

process.RecoMETAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'drop recoHcalNoiseRBXs_*_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *GlobalHaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*')
)

process.RecoMETFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*')
)

process.RecoMETRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoCaloMETs_met_*_*', 
        'keep recoCaloMETs_metNoHF_*_*', 
        'keep recoCaloMETs_metHO_*_*', 
        'keep recoCaloMETs_corMetGlobalMuons_*_*', 
        'keep recoCaloMETs_metNoHFHO_*_*', 
        'keep recoCaloMETs_metOptHO_*_*', 
        'keep recoCaloMETs_metOpt_*_*', 
        'keep recoCaloMETs_metOptNoHFHO_*_*', 
        'keep recoCaloMETs_metOptNoHF_*_*', 
        'keep recoMETs_htMetAK5_*_*', 
        'keep recoMETs_htMetAK7_*_*', 
        'keep recoMETs_htMetIC5_*_*', 
        'keep recoMETs_htMetKT4_*_*', 
        'keep recoMETs_htMetKT6_*_*', 
        'keep recoMETs_tcMet_*_*', 
        'keep recoMETs_tcMetWithPFclusters_*_*', 
        'keep recoPFMETs_pfMet_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*', 
        'keep recoMuonMETCorrectionDataedmValueMap_muonTCMETValueMapProducer_*_*', 
        'keep recoHcalNoiseRBXs_hcalnoise_*_*', 
        'keep HcalNoiseSummary_hcalnoise_*_*', 
        'keep *HaloData_*_*_*', 
        'keep *BeamHaloSummary_BeamHaloSummary_*_*')
)

process.RecoMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*', 
        'keep recoMuonTimeExtraedmValueMap_muons_*_*', 
        'keep *_muonShowerInformation_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 
        'keep uintedmValueMap_cosmicsVeto_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*')
)

process.RecoMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*', 
        'keep recoMuonTimeExtraedmValueMap_muons_*_*', 
        'keep *_muonShowerInformation_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 
        'keep uintedmValueMap_cosmicsVeto_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*')
)

process.RecoMuonIsolationAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*')
)

process.RecoMuonIsolationFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*')
)

process.RecoMuonIsolationParamGlobal = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muParamGlobalIsoDepositGsTk_*_*', 
        'keep *_muParamGlobalIsoDepositCalEcal_*_*', 
        'keep *_muParamGlobalIsoDepositCalHcal_*_*', 
        'keep *_muParamGlobalIsoDepositCtfTk_*_*', 
        'keep *_muParamGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muParamGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muParamGlobalIsoDepositJets_*_*')
)

process.RecoMuonIsolationRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*')
)

process.RecoMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_MuonSeed_*_*', 
        'keep *_ancientMuonSeed_*_*', 
        'keep *_mergedStandAloneMuonSeeds_*_*', 
        'keep TrackingRecHitsOwned_globalMuons_*_*', 
        'keep TrackingRecHitsOwned_tevMuons_*_*', 
        'keep recoCaloMuons_calomuons_*_*', 
        'keep *_CosmicMuonSeed_*_*', 
        'keep recoTrackExtras_cosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons_*_*', 
        'keep recoTrackExtras_globalCosmicMuons_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons_*_*', 
        'keep recoTrackExtras_cosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*', 
        'keep recoTrackExtras_globalCosmicMuons1Leg_*_*', 
        'keep TrackingRecHitsOwned_globalCosmicMuons1Leg_*_*', 
        'keep recoTracks_cosmicsVetoTracks_*_*', 
        'keep *_SETMuonSeed_*_*', 
        'keep recoTracks_standAloneSETMuons_*_*', 
        'keep recoTrackExtras_standAloneSETMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneSETMuons_*_*', 
        'keep recoTracks_globalSETMuons_*_*', 
        'keep recoTrackExtras_globalSETMuons_*_*', 
        'keep TrackingRecHitsOwned_globalSETMuons_*_*', 
        'keep recoMuons_muonsWithSET_*_*', 
        'keep recoTracks_standAloneMuons_*_*', 
        'keep recoTrackExtras_standAloneMuons_*_*', 
        'keep TrackingRecHitsOwned_standAloneMuons_*_*', 
        'keep recoTracks_globalMuons_*_*', 
        'keep recoTrackExtras_globalMuons_*_*', 
        'keep recoTracks_tevMuons_*_*', 
        'keep recoTrackExtras_tevMuons_*_*', 
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*', 
        'keep recoTracks_generalTracks_*_*', 
        'keep recoMuons_muons_*_*', 
        'keep booledmValueMap_muid*_*_*', 
        'keep recoMuonTimeExtraedmValueMap_muons_*_*', 
        'keep *_muonShowerInformation_*_*', 
        'keep recoTracks_cosmicMuons_*_*', 
        'keep recoTracks_globalCosmicMuons_*_*', 
        'keep recoMuons_muonsFromCosmics_*_*', 
        'keep recoTracks_cosmicMuons1Leg_*_*', 
        'keep recoTracks_globalCosmicMuons1Leg_*_*', 
        'keep recoMuons_muonsFromCosmics1Leg_*_*', 
        'keep recoMuonCosmicCompatibilityedmValueMap_cosmicsVeto_*_*', 
        'keep uintedmValueMap_cosmicsVeto_*_*', 
        'keep *_muIsoDepositTk_*_*', 
        'keep *_muIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muIsoDepositJets_*_*', 
        'keep *_muGlobalIsoDepositCtfTk_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*', 
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*', 
        'keep *_muGlobalIsoDepositJets_*_*')
)

process.RecoParticleFlowAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('drop CaloTowersSorted_towerMakerPF_*_*', 
        'drop *_pfElectronTranslator_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoCaloClusters_pfElectronTranslator_*_*', 
        'keep recoPreshowerClusters_pfElectronTranslator_*_*', 
        'keep recoSuperClusters_pfElectronTranslator_*_*', 
        'keep recoCaloClusters_pfPhotonTranslator_*_*', 
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*', 
        'keep recoSuperClusters_pfPhotonTranslator_*_*', 
        'keep recoPhotons_pfPhotonTranslator_*_*')
)

process.RecoParticleFlowFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHFEM_*_*', 
        'keep recoPFClusters_particleFlowClusterHFHAD_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*')
)

process.RecoParticleFlowRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('drop CaloTowersSorted_towerMakerPF_*_*', 
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFEM_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterHFHAD_Cleaned_*', 
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitHCAL_Cleaned_*', 
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*', 
        'keep recoPFClusters_particleFlowClusterECAL_*_*', 
        'keep recoPFClusters_particleFlowClusterHCAL_*_*', 
        'keep recoPFClusters_particleFlowClusterPS_*_*', 
        'keep recoPFBlocks_particleFlowBlock_*_*', 
        'keep recoPFCandidates_particleFlow_*_*', 
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*', 
        'keep *_pfElectronTranslator_*_*', 
        'keep *_pfPhotonTranslator_*_*', 
        'keep *_trackerDrivenElectronSeeds_preid_*')
)

process.RecoPixelVertexingFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*')
)

process.RecoPixelVertexingRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_pixelTracks_*_*', 
        'keep *_pixelVertices_*_*')
)

process.RecoTauTagAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer*_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer*_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*')
)

process.RecoTauTagFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer*_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer*_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*')
)

process.RecoTauTagRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ak5PFJetsRecoTauPiZeros_*_*', 
        'keep *_hpsPFTauProducer*_*_*', 
        'keep *_hpsPFTauDiscrimination*_*_*', 
        'keep *_shrinkingConePFTauProducer*_*_*', 
        'keep *_shrinkingConePFTauDiscrimination*_*_*', 
        'keep *_hpsTancTaus_*_*', 
        'keep *_hpsTancTausDiscrimination*_*_*', 
        'keep *_TCTauJetPlusTrackZSPCorJetAntiKt5_*_*', 
        'keep *_caloRecoTauTagInfoProducer_*_*', 
        'keep recoCaloTaus_caloRecoTauProducer*_*_*', 
        'keep *_caloRecoTauDiscrimination*_*_*')
)

process.RecoTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_generalTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTracks_ctfPixelLess_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_trackExtrapolator_*_*')
)

process.RecoTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*')
)

process.RecoTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_generalTracks_*_*', 
        'keep recoTrackExtras_generalTracks_*_*', 
        'keep TrackingRecHitsOwned_generalTracks_*_*', 
        'keep recoTracks_beamhaloTracks_*_*', 
        'keep recoTrackExtras_beamhaloTracks_*_*', 
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*', 
        'keep recoTracks_regionalCosmicTracks_*_*', 
        'keep recoTrackExtras_regionalCosmicTracks_*_*', 
        'keep TrackingRecHitsOwned_regionalCosmicTracks_*_*', 
        'keep recoTracks_rsWithMaterialTracks_*_*', 
        'keep recoTrackExtras_rsWithMaterialTracks_*_*', 
        'keep TrackingRecHitsOwned_rsWithMaterialTracks_*_*', 
        'keep *_ctfPixelLess_*_*', 
        'keep *_dedxTruncated40_*_*', 
        'keep *_dedxDiscrimASmi_*_*', 
        'keep *_dedxHarmonic2_*_*', 
        'keep *_trackExtrapolator_*_*')
)

process.RecoVertexAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  *_offlinePrimaryVertices_*_*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*')
)

process.RecoVertexFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  *_offlinePrimaryVertices_*_*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*')
)

process.RecoVertexRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep  *_offlinePrimaryVertices_*_*', 
        'keep  *_offlinePrimaryVerticesWithBS_*_*', 
        'keep  *_offlinePrimaryVerticesFromCosmicTracks_*_*', 
        'keep  *_nuclearInteractionMaker_*_*', 
        'keep *_generalV0Candidates_*_*')
)

process.RegionPSetBlock = cms.PSet(
    RegionPSet = cms.PSet(
        precise = cms.bool(True),
        originHalfLength = cms.double(15.9),
        originZPos = cms.double(0.0),
        originYPos = cms.double(0.0),
        ptMin = cms.double(0.9),
        originXPos = cms.double(0.0),
        originRadius = cms.double(0.2)
    )
)

process.RegionPSetWithVerticesBlock = cms.PSet(
    RegionPSet = cms.PSet(
        precise = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        useFixedError = cms.bool(True),
        originRadius = cms.double(0.2),
        sigmaZVertex = cms.double(3.0),
        fixedError = cms.double(0.2),
        VertexCollection = cms.InputTag("pixelVertices"),
        ptMin = cms.double(0.9),
        useFoundVertices = cms.bool(True),
        nSigmaZ = cms.double(3.0)
    )
)

process.RegionPsetFomBeamSpotBlock = cms.PSet(
    RegionPSet = cms.PSet(
        precise = cms.bool(True),
        nSigmaZ = cms.double(3.0),
        originRadius = cms.double(0.2),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        ptMin = cms.double(0.9)
    )
)

process.RegionPsetFomBeamSpotBlockFixedZ = cms.PSet(
    RegionPSet = cms.PSet(
        precise = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        originRadius = cms.double(0.2),
        ptMin = cms.double(0.9),
        originHalfLength = cms.double(15.9)
    )
)

process.SK_ME1234 = cms.PSet(
    dPhiFineMax = cms.double(0.025),
    verboseInfo = cms.untracked.bool(True),
    chi2Max = cms.double(99999.0),
    dPhiMax = cms.double(0.003),
    wideSeg = cms.double(3.0),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(8.0),
    dRPhiMax = cms.double(8.0)
)

process.SK_ME1A = cms.PSet(
    dPhiFineMax = cms.double(0.025),
    verboseInfo = cms.untracked.bool(True),
    chi2Max = cms.double(99999.0),
    dPhiMax = cms.double(0.025),
    wideSeg = cms.double(3.0),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(3.0),
    dRPhiMax = cms.double(8.0)
)

process.ST_ME1234 = cms.PSet(
    maxRatioResidualPrune = cms.double(3),
    yweightPenalty = cms.double(1.5),
    maxRecHitsInCluster = cms.int32(20),
    dPhiFineMax = cms.double(0.025),
    preClusteringUseChaining = cms.bool(True),
    ForceCovariance = cms.bool(False),
    hitDropLimit6Hits = cms.double(0.3333),
    NormChi2Cut2D = cms.double(20.0),
    BPMinImprovement = cms.double(10000.0),
    Covariance = cms.double(0.0),
    tanPhiMax = cms.double(0.5),
    SeedBig = cms.double(0.0015),
    onlyBestSegment = cms.bool(False),
    dRPhiFineMax = cms.double(8.0),
    SeedSmall = cms.double(0.0002),
    curvePenalty = cms.double(2.0),
    dXclusBoxMax = cms.double(4.0),
    BrutePruning = cms.bool(True),
    curvePenaltyThreshold = cms.double(0.85),
    CorrectTheErrors = cms.bool(True),
    hitDropLimit4Hits = cms.double(0.6),
    useShowering = cms.bool(False),
    CSCDebug = cms.untracked.bool(False),
    tanThetaMax = cms.double(1.2),
    NormChi2Cut3D = cms.double(10.0),
    minHitsPerSegment = cms.int32(3),
    ForceCovarianceAll = cms.bool(False),
    yweightPenaltyThreshold = cms.double(1.0),
    prePrunLimit = cms.double(3.17),
    hitDropLimit5Hits = cms.double(0.8),
    preClustering = cms.bool(True),
    prePrun = cms.bool(True),
    maxDPhi = cms.double(999.0),
    maxDTheta = cms.double(999.0),
    Pruning = cms.bool(True),
    dYclusBoxMax = cms.double(8.0)
)

process.ST_ME1A = cms.PSet(
    maxRatioResidualPrune = cms.double(3),
    yweightPenalty = cms.double(1.5),
    maxRecHitsInCluster = cms.int32(24),
    dPhiFineMax = cms.double(0.025),
    preClusteringUseChaining = cms.bool(True),
    ForceCovariance = cms.bool(False),
    hitDropLimit6Hits = cms.double(0.3333),
    NormChi2Cut2D = cms.double(20.0),
    BPMinImprovement = cms.double(10000.0),
    Covariance = cms.double(0.0),
    tanPhiMax = cms.double(0.5),
    SeedBig = cms.double(0.0015),
    onlyBestSegment = cms.bool(False),
    dRPhiFineMax = cms.double(8.0),
    SeedSmall = cms.double(0.0002),
    curvePenalty = cms.double(2.0),
    dXclusBoxMax = cms.double(4.0),
    BrutePruning = cms.bool(True),
    curvePenaltyThreshold = cms.double(0.85),
    CorrectTheErrors = cms.bool(True),
    hitDropLimit4Hits = cms.double(0.6),
    useShowering = cms.bool(False),
    CSCDebug = cms.untracked.bool(False),
    tanThetaMax = cms.double(1.2),
    NormChi2Cut3D = cms.double(10.0),
    minHitsPerSegment = cms.int32(3),
    ForceCovarianceAll = cms.bool(False),
    yweightPenaltyThreshold = cms.double(1.0),
    prePrunLimit = cms.double(3.17),
    hitDropLimit5Hits = cms.double(0.8),
    preClustering = cms.bool(True),
    prePrun = cms.bool(True),
    maxDPhi = cms.double(999.0),
    maxDTheta = cms.double(999.0),
    Pruning = cms.bool(True),
    dYclusBoxMax = cms.double(8.0)
)

process.SiPixelGainCalibrationServiceParameters = cms.PSet(

)

process.SimCalorimetryAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimCalorimetryFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_simEcalDigis_*_*', 
        'keep *_simEcalPreshowerDigis_*_*', 
        'keep *_simEcalTriggerPrimitiveDigis_*_*', 
        'keep *_simHcalDigis_*_*', 
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*', 
        'keep *_simHcalTriggerPrimitiveDigis_*_*')
)

process.SimCalorimetryRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep EBSrFlagsSorted_simEcalDigis_*_*', 
        'keep EESrFlagsSorted_simEcalDigis_*_*')
)

process.SimCalorimetryRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimG4CoreAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimG4CoreRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_g4SimHits_*_*', 
        'keep edmHepMCProduct_source_*_*')
)

process.SimG4CoreRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep edmHepMCProduct_source_*_*', 
        'keep SimTracks_g4SimHits_*_*', 
        'keep SimVertexs_g4SimHits_*_*')
)

process.SimGeneralAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep PileupSummaryInfo_*_*_*', 
        'keep PileupSummaryInfos_*_*_*')
)

process.SimGeneralFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('drop *_trackingtruthprod_*_*', 
        'drop *_electrontruth_*_*', 
        'keep *_mergedtruth_MergedTrackTruth_*', 
        'keep CrossingFramePlaybackInfoExtended_*_*_*')
)

process.SimGeneralRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep CrossingFramePlaybackInfoExtended_*_*_*', 
        'keep PileupSummaryInfo_*_*_*', 
        'keep PileupSummaryInfos_*_*_*')
)

process.SimGeneralRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep PileupSummaryInfo_*_*_*', 
        'keep PileupSummaryInfos_*_*_*')
)

process.SimMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimMuonFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_simMuonCSCDigis_*_*', 
        'keep *_simMuonDTDigis_*_*', 
        'keep *_simMuonRPCDigis_*_*')
)

process.SimMuonRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*')
)

process.SimMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*', 
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*', 
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*')
)

process.SimTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_allTrackMCMatch_*_*')
)

process.SimTrackerDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*', 
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*', 
        'keep *_allTrackMCMatch_*_*')
)

process.SimTrackerFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_simSiPixelDigis_*_*', 
        'keep *_simSiStripDigis_*_*', 
        'keep *_allTrackMCMatch_*_*', 
        'keep *_trackingParticleRecoTrackAsssociation_*_*', 
        'keep *_assoc2secStepTk_*_*', 
        'keep *_assoc2thStepTk_*_*', 
        'keep *_assoc2GsfTracks_*_*', 
        'keep *_assocOutInConversionTracks_*_*', 
        'keep *_assocInOutConversionTracks_*_*')
)

process.SimTrackerRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_allTrackMCMatch_*_*')
)

process.SimTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_allTrackMCMatch_*_*')
)

process.SingleNet = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('SingleNet'),
    decayModeIndices = cms.vint32(0, 1, 2, 10, 11)
)

process.SingleNetIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('SingleNetIso'),
    decayModeIndices = cms.vint32(0, 1, 2, 10, 11)
)

process.TC_ME1234 = cms.PSet(
    dPhiFineMax = cms.double(0.02),
    verboseInfo = cms.untracked.bool(True),
    SegmentSorting = cms.int32(1),
    chi2Max = cms.double(6000.0),
    dPhiMax = cms.double(0.003),
    chi2ndfProbMin = cms.double(0.0001),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(6.0),
    dRPhiMax = cms.double(1.2)
)

process.TC_ME1A = cms.PSet(
    dPhiFineMax = cms.double(0.013),
    verboseInfo = cms.untracked.bool(True),
    SegmentSorting = cms.int32(1),
    chi2Max = cms.double(6000.0),
    dPhiMax = cms.double(0.00198),
    chi2ndfProbMin = cms.double(0.0001),
    minLayersApart = cms.int32(2),
    dRPhiFineMax = cms.double(3.0),
    dRPhiMax = cms.double(0.6)
)

process.TECi = cms.PSet(
    minRing = cms.int32(1),
    matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
    useRingSlector = cms.bool(True),
    TTRHBuilder = cms.string('WithTrackAngle'),
    rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
    maxRing = cms.int32(2)
)

process.ThreeProngNoPiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('ThreeProngNoPiZero'),
    decayModeIndices = cms.vint32(10)
)

process.ThreeProngNoPiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('ThreeProngNoPiZeroIso'),
    decayModeIndices = cms.vint32(10)
)

process.ThreeProngOnePiZero = cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('ThreeProngOnePiZero'),
    decayModeIndices = cms.vint32(11)
)

process.ThreeProngOnePiZeroIso = cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('ThreeProngOnePiZeroIso'),
    decayModeIndices = cms.vint32(11)
)

process.ThresholdPtTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('ThresholdPtTrajectoryFilter'),
    nSigmaThresholdPt = cms.double(5.0),
    minHitsThresholdPt = cms.int32(3),
    thresholdPt = cms.double(10.0)
)

process.TimingFillerBlock = cms.PSet(
    TimingFillerParameters = cms.PSet(
        DTTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            HitError = cms.double(6.0),
            DoWireCorr = cms.bool(True),
            PruneCut = cms.double(10000.0),
            DTsegments = cms.InputTag("dt4DSegments"),
            DropTheta = cms.bool(True),
            RequireBothProjections = cms.bool(False),
            HitsMin = cms.int32(3),
            DTTimeOffset = cms.double(0.0),
            debug = cms.bool(False),
            UseSegmentT0 = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            )
        ),
        CSCTimingParameters = cms.PSet(
            MatchParameters = cms.PSet(
                CSCsegments = cms.InputTag("cscSegments"),
                DTsegments = cms.InputTag("dt4DSegments"),
                DTradius = cms.double(0.01),
                TightMatchDT = cms.bool(False),
                TightMatchCSC = cms.bool(True)
            ),
            CSCsegments = cms.InputTag("csc2DSegments"),
            CSCStripTimeOffset = cms.double(0.0),
            CSCStripError = cms.double(7.0),
            UseStripTime = cms.bool(True),
            debug = cms.bool(False),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny', 
                    'PropagatorWithMaterial', 
                    'PropagatorWithMaterialOpposite'),
                RPCLayers = cms.bool(True)
            ),
            PruneCut = cms.double(9.0),
            UseWireTime = cms.bool(True)
        ),
        UseDT = cms.bool(True),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        UseCSC = cms.bool(True),
        UseECAL = cms.bool(True)
    )
)

process.TrackAssociatorParameterBlock = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    )
)

process.TrackAssociatorParameters = cms.PSet(
    muonMaxDistanceSigmaX = cms.double(0.0),
    muonMaxDistanceSigmaY = cms.double(0.0),
    CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
    dRHcal = cms.double(9999.0),
    dREcal = cms.double(9999.0),
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    useEcal = cms.bool(True),
    dREcalPreselection = cms.double(0.05),
    HORecHitCollectionLabel = cms.InputTag("horeco"),
    dRMuon = cms.double(9999.0),
    propagateAllDirections = cms.bool(True),
    muonMaxDistanceX = cms.double(5.0),
    muonMaxDistanceY = cms.double(5.0),
    useHO = cms.bool(True),
    trajectoryUncertaintyTolerance = cms.double(-1.0),
    usePreshower = cms.bool(False),
    DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
    EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    dRHcalPreselection = cms.double(0.2),
    useMuon = cms.bool(True),
    useCalo = cms.bool(False),
    accountForTrajectoryChangeCalo = cms.bool(False),
    EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    dRMuonPreselection = cms.double(0.2),
    truthMatch = cms.bool(False),
    HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
    useHcal = cms.bool(True)
)

process.TrackerKinkFinderParametersBlock = cms.PSet(
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        usePosition = cms.bool(True),
        diagonalOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite')
    )
)

process.TrackingToolsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoTracks_GsfGlobalElectronTest_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*')
)

process.TrackingToolsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep *_electronGsfTracks_*_*')
)

process.TrackingToolsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_CkfElectronCandidates_*_*', 
        'keep *_GsfGlobalElectronTest_*_*', 
        'keep *_electronMergedSeeds_*_*', 
        'keep recoGsfTracks_electronGsfTracks_*_*', 
        'keep recoGsfTrackExtras_electronGsfTracks_*_*', 
        'keep recoTrackExtras_electronGsfTracks_*_*', 
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*')
)

process.TrkIsoCuts = cms.PSet(
    IsCombinedIso = cms.untracked.bool(False),
    IsoCut03 = cms.untracked.double(3.0),
    IsRelativeIso = cms.untracked.bool(False),
    ptThreshold = cms.untracked.double(0.0)
)

process.VerificationCommonParameters = cms.PSet(
    MCTruthCollection = cms.InputTag("generator"),
    verboseDBE = cms.untracked.bool(False)
)

process.bTagBProbabilityAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-0.1),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.5),
        endEffPur = cms.double(1.005),
        discriminatorEnd = cms.double(8.1),
        startEffPur = cms.double(0.005)
    )
)

process.bTagCombinedSVAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        categoryVariable = cms.string('vertexCategory'),
        categories = cms.VPSet(cms.PSet(
            trackPPar = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(250.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.0)
            ),
            trackSumJetEtRatio = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(4.0),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            trackMomentum = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(250.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.0)
            ),
            trackEtaRel = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(9.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(1.3)
            ),
            trackSip2dSig = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(80.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(-50.0)
            ),
            trackSip3dSig = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(80.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(-50.0)
            ),
            trackPParRatio = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(1.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.86)
            ),
            trackSip3dVal = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(3.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(-3.0)
            ),
            trackDecayLenVal = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(50.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.0)
            ),
            trackJetDist = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(0.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(-10.0)
            ),
            trackSip2dVal = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(0.2),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(-0.2)
            ),
            trackPtRel = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(20.0),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.0)
            ),
            trackPtRatio = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(0.5),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.0)
            ),
            trackDeltaR = cms.PSet(
                indices = cms.vuint32(0, 1, 2, 3),
                max = cms.double(0.3),
                nBins = cms.uint32(50),
                logScale = cms.bool(True),
                min = cms.double(0.0)
            ),
            trackSip2dSigAboveCharm = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(80.0),
                nBins = cms.uint32(50),
                min = cms.double(-50.0)
            ),
            trackSip3dSigAboveCharm = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(80.0),
                nBins = cms.uint32(50),
                min = cms.double(-50.0)
            ),
            vertexCategory = cms.PSet(
                logScale = cms.bool(False),
                max = cms.double(2.5),
                nBins = cms.uint32(3),
                min = cms.double(-0.5)
            ),
            trackSumJetDeltaR = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(0.3),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            vertexMass = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(10.0),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            vertexNTracks = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(20.0),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            vertexJetDeltaR = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(0.5),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            vertexEnergyRatio = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(1.0),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            flightDistance3dVal = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(10.0),
                nBins = cms.uint32(50),
                min = cms.double(0.01)
            ),
            flightDistance3dSig = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(80.0),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            flightDistance2dSig = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(80.0),
                nBins = cms.uint32(50),
                min = cms.double(3.0)
            ),
            jetNSecondaryVertices = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(10.0),
                nBins = cms.uint32(50),
                min = cms.double(0.0)
            ),
            flightDistance2dVal = cms.PSet(
                logScale = cms.bool(True),
                max = cms.double(2.5),
                nBins = cms.uint32(50),
                min = cms.double(0.01)
            )
        ), 
            cms.PSet(
                trackPPar = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(250.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackSumJetEtRatio = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(4.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                trackMomentum = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(250.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackEtaRel = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(9.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(1.3)
                ),
                trackSip2dSig = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-50.0)
                ),
                trackSip3dSig = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-50.0)
                ),
                trackPParRatio = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(1.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.86)
                ),
                trackSip3dVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(3.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-3.0)
                ),
                trackDecayLenVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(50.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackJetDist = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-10.0)
                ),
                trackSip2dVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.2),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-0.2)
                ),
                trackPtRel = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(20.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackPtRatio = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.5),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackDeltaR = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.3),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackSip2dSigAboveCharm = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(-50.0)
                ),
                trackSip3dSigAboveCharm = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(-50.0)
                ),
                vertexCategory = cms.PSet(
                    logScale = cms.bool(False),
                    max = cms.double(2.5),
                    nBins = cms.uint32(3),
                    min = cms.double(-0.5)
                ),
                trackSumJetDeltaR = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(0.3),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexMass = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(10.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexNTracks = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(20.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexJetDeltaR = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(0.5),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexEnergyRatio = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(1.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                flightDistance3dVal = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(10.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.01)
                ),
                flightDistance3dSig = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                flightDistance2dSig = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(3.0)
                ),
                jetNSecondaryVertices = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(10.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                flightDistance2dVal = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(2.5),
                    nBins = cms.uint32(50),
                    min = cms.double(0.01)
                )
            ), 
            cms.PSet(
                trackPPar = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(250.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackSumJetEtRatio = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(4.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                trackMomentum = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(250.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackEtaRel = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(9.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(1.3)
                ),
                trackSip2dSig = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-50.0)
                ),
                trackSip3dSig = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-50.0)
                ),
                trackPParRatio = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(1.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.86)
                ),
                trackSip3dVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(3.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-3.0)
                ),
                trackDecayLenVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(50.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackJetDist = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-10.0)
                ),
                trackSip2dVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.2),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-0.2)
                ),
                trackPtRel = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(20.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackPtRatio = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.5),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackDeltaR = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.3),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackSip2dSigAboveCharm = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(-50.0)
                ),
                trackSip3dSigAboveCharm = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(-50.0)
                ),
                vertexCategory = cms.PSet(
                    logScale = cms.bool(False),
                    max = cms.double(2.5),
                    nBins = cms.uint32(3),
                    min = cms.double(-0.5)
                ),
                trackSumJetDeltaR = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(0.3),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexMass = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(10.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexNTracks = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(20.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexJetDeltaR = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(0.5),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                vertexEnergyRatio = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(1.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                )
            ), 
            cms.PSet(
                trackPPar = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(250.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackSumJetEtRatio = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(4.0),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                ),
                trackMomentum = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(250.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackEtaRel = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(9.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(1.3)
                ),
                trackSip2dSig = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-50.0)
                ),
                trackSip3dSig = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-50.0)
                ),
                trackPParRatio = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(1.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.86)
                ),
                trackSip3dVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(3.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-3.0)
                ),
                trackDecayLenVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(50.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackJetDist = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-10.0)
                ),
                trackSip2dVal = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.2),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(-0.2)
                ),
                trackPtRel = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(20.0),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackPtRatio = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.5),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackDeltaR = cms.PSet(
                    indices = cms.vuint32(0, 1, 2, 3),
                    max = cms.double(0.3),
                    nBins = cms.uint32(50),
                    logScale = cms.bool(True),
                    min = cms.double(0.0)
                ),
                trackSip2dSigAboveCharm = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(-50.0)
                ),
                trackSip3dSigAboveCharm = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(80.0),
                    nBins = cms.uint32(50),
                    min = cms.double(-50.0)
                ),
                vertexCategory = cms.PSet(
                    logScale = cms.bool(False),
                    max = cms.double(2.5),
                    nBins = cms.uint32(3),
                    min = cms.double(-0.5)
                ),
                trackSumJetDeltaR = cms.PSet(
                    logScale = cms.bool(True),
                    max = cms.double(0.3),
                    nBins = cms.uint32(50),
                    min = cms.double(0.0)
                )
            ))
    )
)

process.bTagCommonBlock = cms.PSet(
    ptRecJetMin = cms.double(30.0),
    inputfile = cms.string(''),
    partonKinematics = cms.bool(True),
    epsBaseName = cms.string(''),
    produceEps = cms.bool(False),
    etaMax = cms.double(2.4),
    update = cms.bool(False),
    ratioMin = cms.double(-1.0),
    ratioMax = cms.double(0.8),
    etaMin = cms.double(0.0),
    ptPartonMin = cms.double(0.0),
    etaRanges = cms.vdouble(0.0, 1.4, 2.4),
    softLeptonInfo = cms.InputTag("softElectronTagInfos"),
    jetIdParameters = cms.PSet(
        vetoFlavour = cms.vstring(),
        rejectBCSplitting = cms.bool(False),
        physicsDefinition = cms.bool(False),
        coneSizeToAssociate = cms.double(0.3),
        fillLeptons = cms.bool(False),
        fillHeavyHadrons = cms.bool(False),
        fillPartons = cms.bool(True),
        mcSource = cms.string('source')
    ),
    jetMCSrc = cms.InputTag("mcJetFlavour"),
    ptRanges = cms.vdouble(50.0, 80.0, 120.0),
    psBaseName = cms.string(''),
    ptRecJetMax = cms.double(40000.0),
    ptPartonMax = cms.double(99999.0),
    producePs = cms.bool(False),
    allHistograms = cms.bool(False)
)

process.bTagGenericAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-0.1),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.5),
        endEffPur = cms.double(1.005),
        discriminatorEnd = cms.double(1.1),
        startEffPur = cms.double(0.005)
    )
)

process.bTagProbabilityAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-0.1),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.5),
        endEffPur = cms.double(1.005),
        discriminatorEnd = cms.double(2.6),
        startEffPur = cms.double(0.005)
    )
)

process.bTagSimpleSVAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(0.0),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.5),
        endEffPur = cms.double(1.005),
        discriminatorEnd = cms.double(8.0),
        startEffPur = cms.double(0.005)
    )
)

process.bTagSoftLeptonAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-0.1),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.05),
        endEffPur = cms.double(0.205),
        discriminatorEnd = cms.double(1.1),
        startEffPur = cms.double(0.005)
    )
)

process.bTagSoftLeptonByIPAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-10.0),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.05),
        endEffPur = cms.double(0.205),
        discriminatorEnd = cms.double(30.0),
        startEffPur = cms.double(0.005)
    )
)

process.bTagSoftLeptonByPtAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-0.01),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.05),
        endEffPur = cms.double(0.205),
        discriminatorEnd = cms.double(8.01),
        startEffPur = cms.double(0.005)
    )
)

process.bTagTrackCountingAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        discriminatorStart = cms.double(-10.0),
        nBinEffPur = cms.int32(200),
        effBConst = cms.double(0.5),
        endEffPur = cms.double(1.005),
        discriminatorEnd = cms.double(30.0),
        startEffPur = cms.double(0.005)
    )
)

process.bTagTrackIPAnalysisBlock = cms.PSet(
    parameters = cms.PSet(
        NBinsIPE = cms.int32(100),
        NBinsIPS = cms.int32(100),
        LowerIPEBound = cms.double(0.0),
        LowerIPBound = cms.double(-0.1),
        QualityPlots = cms.bool(False),
        MinJetDistance = cms.double(-9999.0),
        startEffPur = cms.double(0.005),
        UpperIPBound = cms.double(0.1),
        MaxJetDistance = cms.double(9999.0),
        nBinEffPur = cms.int32(200),
        UpperIPSBound = cms.double(35.0),
        MinDecayLength = cms.double(-9999.0),
        MaxDecayLength = cms.double(9999.0),
        endEffPur = cms.double(1.005),
        NBinsIP = cms.int32(100),
        LowerIPSBound = cms.double(-35.0),
        UpperIPEBound = cms.double(0.04)
    )
)

process.cleanedJetDQMParameters = cms.PSet(
    fillpfJIDPassFrac = cms.int32(1),
    ptBin = cms.int32(100),
    resEMFMinTight = cms.double(0.01),
    ThisCEFMax = cms.double(1.0),
    fHPDMaxLoose = cms.double(0.98),
    eMin = cms.double(0.0),
    LooseCEFMax = cms.double(1.0),
    LooseCHFMin = cms.double(0.0),
    resEMFMin = cms.double(0.01),
    pMin = cms.double(0.0),
    etaMin = cms.double(-5.0),
    sigmaEtaMinTight = cms.double(0.01),
    etaMax = cms.double(5.0),
    pMax = cms.double(500.0),
    phiMax = cms.double(3.2),
    phiMin = cms.double(-3.2),
    eMax = cms.double(500.0),
    sigmaPhiMinTight = cms.double(0.01),
    TightCEFMax = cms.double(1.0),
    ptMin = cms.double(0.0),
    pBin = cms.int32(100),
    LooseNHFMax = cms.double(0.9),
    etaBin = cms.int32(100),
    TightNEFMax = cms.double(1.0),
    resEMFMinLoose = cms.double(0.01),
    makedijetselection = cms.int32(0),
    TightNHFMax = cms.double(1.0),
    n90HitsMinTight = cms.int32(4),
    phiBin = cms.int32(70),
    ThisNEFMax = cms.double(0.9),
    fillJIDPassFrac = cms.int32(0),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    eBin = cms.int32(100),
    ptMax = cms.double(50.0),
    fHPDMaxTight = cms.double(0.98),
    n90HitsMinLoose = cms.int32(1),
    ptThreshold = cms.double(10.0),
    n90HitsMin = cms.int32(2),
    fHPDMax = cms.double(0.98),
    ThisNHFMax = cms.double(0.9),
    TightCHFMin = cms.double(0.0),
    ThisCHFMin = cms.double(0.0),
    LooseNEFMax = cms.double(0.9)
)

process.cleanedjptDQMParameters = cms.PSet(
    OutCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nOutCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    Pt1HistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    nTracksVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PtFractionInConeVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PrintDebugMessages = cms.untracked.bool(False),
    InCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    deltaEtaHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-0.5)
    ),
    TrackSiStripHitStoNHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(500),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    EtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    HistogramPath = cms.string('JetMET/Jet/JPT'),
    InCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    DQMStoreFileName = cms.untracked.string('DQMStore.root'),
    PhiVsEtaHistogramConfig = cms.PSet(
        NBins = cms.uint32(64),
        MaxY = cms.double(2.5),
        Min = cms.double(-3.2),
        Max = cms.double(3.2),
        Enabled = cms.bool(True),
        MinY = cms.double(-2.5),
        NBinsY = cms.uint32(50)
    ),
    OutCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        rpcRecHits = cms.InputTag("rpcRecHits"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    JPTCorrFactorVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    n90HitsMin = cms.int32(2),
    nAllPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    correctedPtThreshold = cms.double(3.0),
    MassHistogramConfig = cms.PSet(
        Max = cms.double(25),
        NBins = cms.uint32(25),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PzHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    AllPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    OutCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    deltaPhiHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-0.5)
    ),
    CorrFactorVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    EHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    OutCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    OutCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    AllElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    nAllMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    InCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    Pt2HistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    WriteDQMStore = cms.untracked.bool(False),
    InCaloOutVertexElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    JPTCorrFactorHistogramConfig = cms.PSet(
        Max = cms.double(3.0),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(1.0)
    ),
    nTracksVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    nInCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    JPTCorrFactorVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    resEMFMin = cms.double(0.01),
    AllElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    nInCaloOutVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    CorrFactorHistogramConfig = cms.PSet(
        Max = cms.double(3.0),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(1.0)
    ),
    InCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    ZSPCorrFactorVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    AllMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    InCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nTracksHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    AllElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nOutCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    OutCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    OutCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PyHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nOutCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    InCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    ResEMFHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0.0)
    ),
    InCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PtFractionInConeVsJetRawEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    nInCaloOutVertexPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    Pt3HistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    N90HitsHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    InCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    fRBXHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0.0)
    ),
    CorrFactorVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PtFractionInConeHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PxHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    OutCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    InCaloOutVertexMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    ZSPCorrFactorHistogramConfig = cms.PSet(
        Max = cms.double(3.0),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(1.0)
    ),
    InCaloOutVertexMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    nAllElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nInCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    fHPDHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0.0)
    ),
    ZSPCorrFactorVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    fHPDMax = cms.double(0.98),
    InCaloOutVertexPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    EtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    nInCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nInCaloOutVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    )
)

process.cleaningAlgoConfig = cms.PSet(
    e6e2thresh = cms.double(0.04),
    tightenCrack_e6e2_double = cms.double(3),
    tightenCrack_e4e1_single = cms.double(3),
    cThreshold_barrel = cms.double(4),
    e4e1Threshold_barrel = cms.double(0.08),
    tightenCrack_e1_single = cms.double(2),
    e4e1_b_barrel = cms.double(-0.024),
    e4e1_a_barrel = cms.double(0.04),
    cThreshold_double = cms.double(10),
    ignoreOutOfTimeThresh = cms.double(2.0),
    cThreshold_endcap = cms.double(15),
    e4e1_a_endcap = cms.double(0.02),
    e4e1_b_endcap = cms.double(-0.0125),
    e4e1Threshold_endcap = cms.double(0.3),
    tightenCrack_e1_double = cms.double(2)
)

process.cleaningParameters = cms.PSet(
    tightHcalFiltering = cms.bool(False),
    tightJetIDFiltering = cms.int32(-1),
    techTrigsOR = cms.vuint32(),
    vtxchi2_max = cms.double(9999),
    tightBHFiltering = cms.bool(False),
    doPrimaryVertexCheck = cms.bool(True),
    vertexLabel = cms.InputTag("offlinePrimaryVertices"),
    vtxndof_min = cms.int32(5),
    gtLabel = cms.InputTag("gtDigis"),
    doHLTPhysicsOn = cms.bool(False),
    nvtxtrks_min = cms.int32(0),
    nvtx_min = cms.int32(1),
    vtxz_max = cms.double(15.0),
    trigSelection = cms.PSet(
        andOrHlt = cms.bool(False),
        hltPaths = cms.vstring(''),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_hltsel'),
        errorReplyHlt = cms.bool(False)
    ),
    HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
    techTrigsNOT = cms.vuint32(),
    techTrigsAND = cms.vuint32()
)

process.combinedSVNoVertexVariables = cms.PSet(
    trackPPar = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(250.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.0)
    ),
    trackSumJetEtRatio = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(4.0),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    trackDeltaR = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(0.3),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.0)
    ),
    trackSip2dSigAboveCharm = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(80.0),
        nBins = cms.uint32(50),
        min = cms.double(-50.0)
    ),
    trackEtaRel = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(9.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(1.3)
    ),
    vertexCategory = cms.PSet(
        logScale = cms.bool(False),
        max = cms.double(2.5),
        nBins = cms.uint32(3),
        min = cms.double(-0.5)
    ),
    trackSip2dSig = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(80.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(-50.0)
    ),
    trackPParRatio = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(1.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.86)
    ),
    trackSip3dVal = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(3.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(-3.0)
    ),
    trackSumJetDeltaR = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(0.3),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    trackJetDist = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(0.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(-10.0)
    ),
    trackSip2dVal = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(0.2),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(-0.2)
    ),
    trackPtRel = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(20.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.0)
    ),
    trackPtRatio = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(0.5),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.0)
    ),
    trackMomentum = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(250.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.0)
    ),
    trackDecayLenVal = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(50.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(0.0)
    ),
    trackSip3dSig = cms.PSet(
        indices = cms.vuint32(0, 1, 2, 3),
        max = cms.double(80.0),
        nBins = cms.uint32(50),
        logScale = cms.bool(True),
        min = cms.double(-50.0)
    ),
    trackSip3dSigAboveCharm = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(80.0),
        nBins = cms.uint32(50),
        min = cms.double(-50.0)
    )
)

process.combinedSVPseudoVertexVariables = cms.PSet(
    vertexMass = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(10.0),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    vertexNTracks = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(20.0),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    vertexJetDeltaR = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(0.5),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    vertexEnergyRatio = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(1.0),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    )
)

process.combinedSVRecoVertexVariables = cms.PSet(
    flightDistance3dVal = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(10.0),
        nBins = cms.uint32(50),
        min = cms.double(0.01)
    ),
    flightDistance3dSig = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(80.0),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    jetNSecondaryVertices = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(10.0),
        nBins = cms.uint32(50),
        min = cms.double(0.0)
    ),
    flightDistance2dVal = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(2.5),
        nBins = cms.uint32(50),
        min = cms.double(0.01)
    ),
    flightDistance2dSig = cms.PSet(
        logScale = cms.bool(True),
        max = cms.double(80.0),
        nBins = cms.uint32(50),
        min = cms.double(3.0)
    )
)

process.combinedSecondaryVertexCommon = cms.PSet(
    trackPseudoSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    useTrackWeights = cms.bool(True),
    pseudoMultiplicityMin = cms.uint32(2),
    correctVertexMass = cms.bool(True),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    charmCut = cms.double(1.5),
    vertexFlip = cms.bool(False),
    minimumTrackWeight = cms.double(0.5),
    pseudoVertexV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.05)
    ),
    trackMultiplicityMin = cms.uint32(3),
    trackSort = cms.string('sip2dSig'),
    trackFlip = cms.bool(False)
)

process.configurationMetadata = cms.untracked.PSet(
    version = cms.untracked.string('$Revision: 1.303 $'),
    name = cms.untracked.string('PyReleaseValidation'),
    annotation = cms.untracked.string('STEP2 nevts:1')
)

process.cscRecHitDParameters = cms.PSet(
    XTasymmetry_ME1b = cms.double(0.01),
    XTasymmetry_ME1a = cms.double(0.023),
    ConstSyst_ME1a = cms.double(0.01),
    ConstSyst_ME1b = cms.double(0.02),
    XTasymmetry_ME41 = cms.double(0.023),
    XTasymmetry_ME22 = cms.double(0.023),
    XTasymmetry_ME21 = cms.double(0.023),
    ConstSyst_ME21 = cms.double(0.03),
    ConstSyst_ME22 = cms.double(0.03),
    XTasymmetry_ME31 = cms.double(0.023),
    NoiseLevel_ME13 = cms.double(4.0),
    NoiseLevel_ME12 = cms.double(7.0),
    NoiseLevel_ME32 = cms.double(7.0),
    NoiseLevel_ME31 = cms.double(5.0),
    XTasymmetry_ME32 = cms.double(0.023),
    ConstSyst_ME41 = cms.double(0.03),
    XTasymmetry_ME13 = cms.double(0.02),
    XTasymmetry_ME12 = cms.double(0.015),
    ConstSyst_ME12 = cms.double(0.02),
    ConstSyst_ME13 = cms.double(0.03),
    ConstSyst_ME32 = cms.double(0.03),
    ConstSyst_ME31 = cms.double(0.03),
    NoiseLevel_ME1a = cms.double(9.0),
    NoiseLevel_ME1b = cms.double(6.0),
    NoiseLevel_ME21 = cms.double(5.0),
    NoiseLevel_ME22 = cms.double(7.0),
    NoiseLevel_ME41 = cms.double(5.0)
)

process.discriminantConfiguration = cms.PSet(
    BinnedMaskedHcalIsolation = cms.PSet(
        vtxSource = cms.InputTag("recoTauPileUpVertices"),
        mask = cms.PSet(
            finalHcalCone = cms.double(0.08),
            ecalCone = cms.double(0.15),
            hcalCone = cms.double(0.3),
            maxSigmas = cms.double(2)
        ),
        binning = cms.VPSet(cms.PSet(
            binLowEdges = cms.vdouble(1.0, 1.79, 4.03),
            nPUVtx = cms.int32(0)
        ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.15, 1.8, 4.03),
                nPUVtx = cms.int32(1)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.22, 1.81, 4.03),
                nPUVtx = cms.int32(2)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.27, 1.83, 4.03),
                nPUVtx = cms.int32(3)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(1.31, 1.84, 4.03),
                nPUVtx = cms.int32(4)
            )),
        defaultBinning = cms.vdouble(1.31, 1.84, 4.03),
        plugin = cms.string('RecoTauDiscriminationBinnedMaskedHCALIsolation')
    ),
    InvariantOpeningAngle = cms.PSet(
        defaultRMS = cms.string('max(0.3/max(pt, 1.0), 0.005)'),
        plugin = cms.string('RecoTauDiscriminantInvariantWidth'),
        decayModes = cms.VPSet(cms.PSet(
            nPiZeros = cms.uint32(1),
            rms = cms.string('2.7e-3 + 0.23/max(pt, 1.0)'),
            nCharged = cms.uint32(1),
            mean = cms.string('5.0e-3 + 0.43/max(pt, 1.0)')
        ), 
            cms.PSet(
                nPiZeros = cms.uint32(2),
                rms = cms.string('7.5e-3 + 0.3/max(pt, 1.0)'),
                nCharged = cms.uint32(1),
                mean = cms.string('4.7e-3 + 0.9/max(pt, 1.0)')
            ), 
            cms.PSet(
                nPiZeros = cms.uint32(0),
                rms = cms.string('0.38/max(pt, 1.0)'),
                nCharged = cms.uint32(3),
                mean = cms.string('0.87/max(pt, 1.0)')
            )),
        defaultMean = cms.string('max(0.87/max(pt, 1.0), 0.005)')
    ),
    BinnedMaskedEcalIsolation = cms.PSet(
        vtxSource = cms.InputTag("recoTauPileUpVertices"),
        mask = cms.PSet(
            finalHcalCone = cms.double(0.08),
            ecalCone = cms.double(0.15),
            hcalCone = cms.double(0.3),
            maxSigmas = cms.double(2)
        ),
        binning = cms.VPSet(cms.PSet(
            binLowEdges = cms.vdouble(0.5, 0.85, 1.84),
            nPUVtx = cms.int32(0)
        ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.63, 0.91, 1.84),
                nPUVtx = cms.int32(1)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.7, 0.96, 1.85),
                nPUVtx = cms.int32(2)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.75, 0.99, 1.85),
                nPUVtx = cms.int32(3)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.79, 1.02, 1.86),
                nPUVtx = cms.int32(4)
            )),
        defaultBinning = cms.vdouble(0.79, 1.02, 1.86),
        plugin = cms.string('RecoTauDiscriminationBinnedMaskedECALIsolation')
    ),
    FlightPathSignificance = cms.PSet(
        discSrc = cms.InputTag("hpsTancTausDiscriminationByFlightPath"),
        plugin = cms.string('RecoTauDiscriminantFromDiscriminator')
    ),
    BinnedTrackIsolation = cms.PSet(
        vtxSource = cms.InputTag("recoTauPileUpVertices"),
        binning = cms.VPSet(cms.PSet(
            binLowEdges = cms.vdouble(0.5, 0.86, 1.87),
            nPUVtx = cms.int32(0)
        ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                nPUVtx = cms.int32(1)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.51, 0.86, 1.87),
                nPUVtx = cms.int32(2)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                nPUVtx = cms.int32(3)
            ), 
            cms.PSet(
                binLowEdges = cms.vdouble(0.52, 0.86, 1.87),
                nPUVtx = cms.int32(4)
            )),
        defaultBinning = cms.vdouble(0.52, 0.86, 1.87),
        plugin = cms.string('RecoTauDiscriminationBinnedTrackIsolation')
    )
)

process.dphiScale = cms.PSet(
    DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
    CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
    SME_13_0_scale = cms.vdouble(0.104905, 0.0),
    SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
    DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
    OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
    OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
    SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
    DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
    CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
    OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
    CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
    OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
    SME_11_0_scale = cms.vdouble(1.325085, 0.0),
    SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
    CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
    SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
    SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
    DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
    SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
    CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
    DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
    SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
    CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
    CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
    DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
    SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
    DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
    SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
    SME_12_0_scale = cms.vdouble(2.279181, 0.0),
    CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
    DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
    CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
    SME_22_0_scale = cms.vdouble(-3.457901, 0.0),
    CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
    DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
    DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
    DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
    DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
    CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
    SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
    OL_2222_0_scale = cms.vdouble(-7.667231, 0.0)
)

process.ecalDrivenElectronSeedsParameters = cms.PSet(
    PhiMax2B = cms.double(0.002),
    hOverEPtMin = cms.double(0.0),
    PhiMax2F = cms.double(0.003),
    searchInTIDTEC = cms.bool(True),
    pPhiMax1 = cms.double(0.125),
    HighPtThreshold = cms.double(35.0),
    r2MinF = cms.double(-0.15),
    maxHBarrel = cms.double(0.0),
    DeltaPhi1Low = cms.double(0.23),
    DeltaPhi1High = cms.double(0.08),
    ePhiMin1 = cms.double(-0.125),
    hcalTowers = cms.InputTag("towerMaker"),
    LowPtThreshold = cms.double(5.0),
    maxHOverEBarrel = cms.double(0.15),
    dynamicPhiRoad = cms.bool(True),
    ePhiMax1 = cms.double(0.075),
    measurementTrackerName = cms.string(''),
    SizeWindowENeg = cms.double(0.675),
    nSigmasDeltaZ1 = cms.double(5.0),
    rMaxI = cms.double(0.2),
    maxHEndcaps = cms.double(0.0),
    preFilteredSeeds = cms.bool(False),
    r2MaxF = cms.double(0.15),
    hOverEConeSize = cms.double(0.15),
    pPhiMin1 = cms.double(-0.075),
    initialSeeds = cms.InputTag("newCombinedSeeds"),
    deltaZ1WithVertex = cms.double(25.0),
    SCEtCut = cms.double(4.0),
    z2MaxB = cms.double(0.09),
    fromTrackerSeeds = cms.bool(True),
    hcalRecHits = cms.InputTag("hbhereco"),
    z2MinB = cms.double(-0.09),
    rMinI = cms.double(-0.2),
    maxHOverEEndcaps = cms.double(0.15),
    hOverEHBMinE = cms.double(0.7),
    useRecoVertex = cms.bool(False),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    vertices = cms.InputTag("offlinePrimaryVerticesWithBS"),
    applyHOverECut = cms.bool(True),
    DeltaPhi2F = cms.double(0.012),
    PhiMin2F = cms.double(-0.003),
    hOverEHFMinE = cms.double(0.8),
    DeltaPhi2B = cms.double(0.008),
    PhiMin2B = cms.double(-0.002)
)

process.ecalLocalRecoAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.ecalLocalRecoFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ecalGlobalUncalibRecHit_*_*', 
        'keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*')
)

process.ecalLocalRecoRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ecalPreshowerRecHit_*_*', 
        'keep *_ecalRecHit_*_*', 
        'keep *_ecalCompactTrigPrim_*_*', 
        'keep *_ecalTPSkim_*_*')
)

process.egHLTOffBaseEleTrigCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('default'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffBasePhoTrigCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:r9:isolEm:isolHad:isolPtTrks'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('default'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:r9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksPho'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffDQMBinData = cms.PSet(
    e1x5 = cms.PSet(
        max = cms.double(1.1),
        nr = cms.int32(24),
        min = cms.double(-0.1)
    ),
    et = cms.PSet(
        max = cms.double(105.0),
        nr = cms.int32(11),
        min = cms.double(-5.0)
    ),
    etaVsPhi = cms.PSet(
        yMax = cms.double(3.14),
        nrY = cms.int32(8),
        nrX = cms.int32(15),
        xMax = cms.double(3.0),
        xMin = cms.double(-3.0),
        yMin = cms.double(-3.14)
    ),
    hOverE = cms.PSet(
        max = cms.double(0.1),
        nr = cms.int32(30),
        min = cms.double(0.0)
    ),
    massHigh = cms.PSet(
        max = cms.double(5000),
        nr = cms.int32(20),
        min = cms.double(0.0)
    ),
    etHigh = cms.PSet(
        max = cms.double(2025),
        nr = cms.int32(10),
        min = cms.double(25)
    ),
    sigEtaEta = cms.PSet(
        max = cms.double(0.05),
        nr = cms.int32(30),
        min = cms.double(-0.01)
    ),
    isolPtTrks = cms.PSet(
        max = cms.double(10),
        nr = cms.int32(22),
        min = cms.double(-1)
    ),
    charge = cms.PSet(
        max = cms.double(1.5),
        nr = cms.int32(2),
        min = cms.double(-1.5)
    ),
    invEInvP = cms.PSet(
        max = cms.double(0.2),
        nr = cms.int32(10),
        min = cms.double(-0.2)
    ),
    phi = cms.PSet(
        max = cms.double(3.14),
        nr = cms.int32(16),
        min = cms.double(-3.14)
    ),
    eOverP = cms.PSet(
        max = cms.double(5),
        nr = cms.int32(12),
        min = cms.double(-1.0)
    ),
    isolNrTrks = cms.PSet(
        max = cms.double(10),
        nr = cms.int32(22),
        min = cms.double(-1)
    ),
    dPhiIn = cms.PSet(
        max = cms.double(0.15),
        nr = cms.int32(10),
        min = cms.double(-0.15)
    ),
    err = cms.PSet(
        max = cms.double(100.5),
        nr = cms.int32(101),
        min = cms.double(-0.5)
    ),
    isolHad = cms.PSet(
        max = cms.double(10),
        nr = cms.int32(22),
        min = cms.double(-1)
    ),
    r9 = cms.PSet(
        max = cms.double(1.1),
        nr = cms.int32(24),
        min = cms.double(-0.1)
    ),
    dEtaIn = cms.PSet(
        max = cms.double(0.02),
        nr = cms.int32(10),
        min = cms.double(-0.02)
    ),
    isolEm = cms.PSet(
        max = cms.double(10),
        nr = cms.int32(22),
        min = cms.double(-1)
    ),
    eta = cms.PSet(
        max = cms.double(3.0),
        nr = cms.int32(30),
        min = cms.double(-3.0)
    ),
    mass = cms.PSet(
        max = cms.double(120),
        nr = cms.int32(26),
        min = cms.double(-10.0)
    ),
    e2x5 = cms.PSet(
        max = cms.double(1.1),
        nr = cms.int32(24),
        min = cms.double(-0.1)
    )
)

process.egHLTOffDoubleEleEt10SWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoDoubleElectronEt10PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffDoubleEleEt5Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(5.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(5.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffDoublePhoEt10Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffDoublePhoEt15Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffDoublePhoEt15VLEICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.2),
        cuts = cms.string('et:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(5.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTVLEIDoublePhotonEt15HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.2),
        cuts = cms.string('et:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(5.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffEleBarrelCuts = cms.PSet(
    isolPtTrksGradStart = cms.double(0.0),
    maxSigmaEtaEta = cms.double(0.015),
    maxCTFTrkInnerRadius = cms.double(99999),
    minR9 = cms.double(0.9),
    requirePixelHitsIfOuterInOuter = cms.bool(True),
    maxEta = cms.double(1.442),
    maxHLTIsolTrksPho = cms.double(0),
    isolHadGradTerm = cms.double(0.03),
    isolHadConstTerm = cms.double(3),
    maxHLTIsolTrksEleOverPt = cms.double(0),
    maxHLTIsolEmOverEt = cms.double(0),
    cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
    isolNrTrksConstTerm = cms.int32(0),
    maxDEtaIn = cms.double(0.1),
    isolHadGradStart = cms.double(0.0),
    maxHadem = cms.double(0.05),
    maxHLTInvEInvP = cms.double(9999),
    maxHLTIsolEmOverEt2 = cms.double(0),
    maxHLTIsolHadOverEt2 = cms.double(0),
    maxHLTIsolTrksPhoOverPt = cms.double(0),
    maxCTFTrkChi2NDof = cms.double(99999),
    maxHLTDPhiIn = cms.double(0.1),
    maxDPhiIn = cms.double(0.09),
    maxInvEInvP = cms.double(0.1),
    minEt = cms.double(15),
    maxHLTIsolTrksPhoOverPt2 = cms.double(0),
    minEta = cms.double(0.0),
    maxHadEnergy = cms.double(0),
    maxHLTIsolHadOverEt = cms.double(0),
    minNrCTFTrkHits = cms.int32(7),
    isolEmConstTerm = cms.double(3),
    minCTFTrkOuterRadius = cms.double(0.0),
    maxHLTDEtaIn = cms.double(0.008),
    maxHLTIsolTrksEleOverPt2 = cms.double(0),
    maxHLTIsolEm = cms.double(0),
    maxNrCTFTrkHitsLost = cms.int32(999),
    maxHLTIsolTrksEle = cms.double(0),
    isolPtTrksConstTerm = cms.double(7.5),
    isolPtTrksGradTerm = cms.double(0.0),
    maxHLTIsolHad = cms.double(0),
    isolEmGradStart = cms.double(0.0),
    maxSigmaIEtaIEta = cms.double(0.015),
    isolEmGradTerm = cms.double(0.03)
)

process.egHLTOffEleCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEndcapCuts = cms.PSet(
    isolPtTrksGradStart = cms.double(0.0),
    maxSigmaEtaEta = cms.double(0.03),
    maxCTFTrkInnerRadius = cms.double(9999.0),
    minR9 = cms.double(0.9),
    requirePixelHitsIfOuterInOuter = cms.bool(True),
    maxEta = cms.double(2.5),
    maxHLTIsolTrksPho = cms.double(0),
    isolHadGradTerm = cms.double(0.03),
    isolHadConstTerm = cms.double(3),
    maxHLTIsolTrksEleOverPt = cms.double(0),
    maxHLTIsolEmOverEt = cms.double(0),
    cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
    isolNrTrksConstTerm = cms.int32(0),
    maxDEtaIn = cms.double(0.1),
    isolHadGradStart = cms.double(0.0),
    maxHadem = cms.double(0.05),
    maxHLTInvEInvP = cms.double(9999),
    maxHLTIsolEmOverEt2 = cms.double(0),
    maxHLTIsolHadOverEt2 = cms.double(0),
    maxHLTIsolTrksPhoOverPt = cms.double(0),
    maxCTFTrkChi2NDof = cms.double(99999),
    maxHLTDPhiIn = cms.double(0.1),
    maxDPhiIn = cms.double(0.09),
    maxInvEInvP = cms.double(0.1),
    minEt = cms.double(15),
    maxHLTIsolTrksPhoOverPt2 = cms.double(0),
    minEta = cms.double(1.56),
    maxHadEnergy = cms.double(0),
    maxHLTIsolHadOverEt = cms.double(0),
    minNrCTFTrkHits = cms.int32(7),
    isolEmConstTerm = cms.double(3),
    minCTFTrkOuterRadius = cms.double(0.0),
    maxHLTDEtaIn = cms.double(0.008),
    maxHLTIsolTrksEleOverPt2 = cms.double(0),
    maxHLTIsolEm = cms.double(0),
    maxNrCTFTrkHitsLost = cms.int32(999),
    maxHLTIsolTrksEle = cms.double(0),
    isolPtTrksConstTerm = cms.double(15),
    isolPtTrksGradTerm = cms.double(0.0),
    maxHLTIsolHad = cms.double(0),
    isolEmGradStart = cms.double(0.0),
    maxSigmaIEtaIEta = cms.double(0.03),
    isolEmGradTerm = cms.double(0.03)
)

process.egHLTOffEleEt10LWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronLWEt10PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt10LWEleIdCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.1),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdDphiFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.04),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.008),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.1),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt10SWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt10PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15LWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronLWEt15PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15SWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15SWEleIdCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdDphiFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.04),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:hltDEtaIn:hltDPhiIn:sigmaEtaEta:ctfTrack'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15SWEleIdLTICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.5),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:dEtaIn:dPhiIn:sigmaIEtaIEta:hltIsolTrksEle:ctfTrack'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(8),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdTrackIsolFilterESet25LTI'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.04),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.5),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:dEtaIn:dPhiIn:sigmaIEtaIEta:hltIsolTrksEle:ctfTrack'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(8),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt15SWLTICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.5),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:hltIsolTrksEle:ctfTrack'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(8),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt15LTITrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0.5),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:hltIsolTrksEle:ctfTrack'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(8),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleEt20SWCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSingleElectronEt20PixelMatchFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffEleLooseCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(99999),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:e2x5Over5x5:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(7.5),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    ),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.03),
        maxCTFTrkInnerRadius = cms.double(9999.0),
        minR9 = cms.double(0.9),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.008),
        isolHadGradTerm = cms.double(0.03),
        isolHadConstTerm = cms.double(3),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:dEtaIn:dPhiIn:hadem:sigmaIEtaIEta:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksEle:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(0),
        maxDEtaIn = cms.double(0.1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(9999),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(0.09),
        maxInvEInvP = cms.double(0.1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(7),
        isolEmConstTerm = cms.double(3),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(999),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(15),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.03),
        isolEmGradTerm = cms.double(0.03),
        minCTFTrkOuterRadius = cms.double(0.0)
    )
)

process.egHLTOffFiltersToMon = cms.PSet(
    eleTightLooseTrigNames = cms.vstring('hltL1NonIsoHLTNonIsoSingleElectronLWEt10PixelMatchFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdDphiFilter:hltL1NonIsoHLTNonIsoSingleElectronLWEt10PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronLWEt15PixelMatchFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronLWEt15PixelMatchFilter:hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter:hltPreL1SingleEG8', 
        'hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt20HcalIsolFilter:hltPreL1SingleEG8', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt10PixelMatchFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdDphiFilter:hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15LTITrackIsolFilter:hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdTrackIsolFilterESet25LTI:hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdDphiFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt20PixelMatchFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt20PixelMatchFilter:hltL1NonIsoHLTNonIsoSingleElectronSiStripEt20PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter:hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTLEITISinglePhotonEt20TrackIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt30HcalIsolFilter:hltPreL1SingleEG5'),
    phoTightLooseTrigNames = cms.vstring('hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter:hltPreL1SingleEG8', 
        'hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt20HcalIsolFilter:hltPreL1SingleEG8', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTLEITISinglePhotonEt20TrackIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter:hltPreL1SingleEG5', 
        'hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter:hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt30HcalIsolFilter:hltPreL1SingleEG5'),
    diEleTightLooseTrigNames = cms.vstring('hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter:hltL1NonIsoDoublePhotonEt5eeResPMMassFilter', 
        'hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter:hltL1NonIsoDoublePhotonEt5JpsiPMMassFilter', 
        'hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter:hltL1NonIsoDoublePhotonEt5UpsPMMassFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter:hltPreL1DoubleEG5hltL1NonIsoDoublePhotonEt5eeResPMMassFilter:hltPreL1DoubleEG5', 
        'hltL1NonIsoDoublePhotonEt5JpsiPMMassFilter:hltPreL1DoubleEG5', 
        'hltL1NonIsoDoublePhotonEt5UpsPMMassFilter:hltPreL1DoubleEG5', 
        'hltL1NonIsoHLTNonIsoDoubleElectronEt10PixelMatchFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTVLEIDoublePhotonEt15HcalIsolFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter'),
    phoHLTFilterNames = cms.vstring('hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter', 
        'hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt20HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoDoublePhotonEt5eeResPMMassFilter', 
        'hltL1NonIsoDoublePhotonEt5JpsiPMMassFilter', 
        'hltL1NonIsoDoublePhotonEt5UpsPMMassFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTLEITISinglePhotonEt10TrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTLEITISinglePhotonEt20TrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter', 
        'hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt30HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTVLEIDoublePhotonEt15HcalIsolFilter', 
        'hltPreL1SingleEG5', 
        'hltPreL1SingleEG8'),
    eleHLTFilterNames = cms.vstring('hltL1NonIsoHLTNonIsoSingleElectronLWEt10PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronLWEt10EleIdDphiFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronLWEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoDoubleElectronEt5PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter', 
        'hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt20HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoDoublePhotonEt5eeResPMMassFilter', 
        'hltL1NonIsoDoublePhotonEt5JpsiPMMassFilter', 
        'hltL1NonIsoDoublePhotonEt5UpsPMMassFilter', 
        'hltPreL1SingleEG5', 
        'hltPreL1SingleEG8', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt10PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdDphiFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15LTITrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt20PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronEt15EleIdTrackIsolFilterESet25LTI', 
        'hltL1NonIsoDoubleElectronEt5JpsiPMMassFilter', 
        'hltL1NonIsoDoubleElectronEt5UpsPMMassFilter', 
        'hltL1NonIsoHLTNonIsoDoubleElectronEt10PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronSiStripEt15PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSingleElectronSiStripEt20PixelMatchFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTLEITISinglePhotonEt10TrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTLEITISinglePhotonEt20TrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter', 
        'hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter', 
        'hltL1NonIsoHLTNonIsoSinglePhotonEt30HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTVLEIDoublePhotonEt15HcalIsolFilter'),
    diPhoTightLooseTrigNames = cms.vstring('hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter:hltPreL1DoubleEG5hltL1NonIsoDoublePhotonEt5eeResPMMassFilter:hltPreL1DoubleEG5', 
        'hltL1NonIsoDoublePhotonEt5JpsiPMMassFilter:hltPreL1DoubleEG5', 
        'hltL1NonIsoDoublePhotonEt5UpsPMMassFilter:hltPreL1DoubleEG5', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter', 
        'hltL1NonIsoHLTVLEIDoublePhotonEt15HcalIsolFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter', 
        'hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter:hltL1NonIsoHLTNonIsoDoublePhotonEt15HcalIsolFilter')
)

process.egHLTOffPhoBarrelCuts = cms.PSet(
    isolPtTrksGradStart = cms.double(0.0),
    maxSigmaEtaEta = cms.double(0.015),
    maxCTFTrkInnerRadius = cms.double(9.0),
    minR9 = cms.double(0.8),
    requirePixelHitsIfOuterInOuter = cms.bool(True),
    maxEta = cms.double(1.442),
    maxHLTIsolTrksPho = cms.double(0),
    isolHadGradTerm = cms.double(0.0),
    isolHadConstTerm = cms.double(5),
    maxHLTIsolTrksEleOverPt = cms.double(0),
    maxHLTIsolEmOverEt = cms.double(0),
    cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:r9:isolEm:isolHad:isolPtTrks'),
    isolNrTrksConstTerm = cms.int32(4),
    maxDEtaIn = cms.double(-1),
    isolHadGradStart = cms.double(0.0),
    maxHadem = cms.double(0.05),
    maxHLTInvEInvP = cms.double(0.1),
    maxHLTIsolEmOverEt2 = cms.double(0),
    maxHLTIsolHadOverEt2 = cms.double(0),
    maxHLTIsolTrksPhoOverPt = cms.double(0),
    maxCTFTrkChi2NDof = cms.double(99999),
    maxHLTDPhiIn = cms.double(0.1),
    maxDPhiIn = cms.double(-1),
    maxInvEInvP = cms.double(-1),
    minEt = cms.double(20),
    maxHLTIsolTrksPhoOverPt2 = cms.double(0),
    minEta = cms.double(0.0),
    maxHadEnergy = cms.double(0),
    maxHLTIsolHadOverEt = cms.double(0),
    minNrCTFTrkHits = cms.int32(5),
    isolEmConstTerm = cms.double(5),
    minCTFTrkOuterRadius = cms.double(40.0),
    maxHLTDEtaIn = cms.double(0.1),
    maxHLTIsolTrksEleOverPt2 = cms.double(0),
    maxHLTIsolEm = cms.double(0),
    maxNrCTFTrkHitsLost = cms.int32(0),
    maxHLTIsolTrksEle = cms.double(0),
    isolPtTrksConstTerm = cms.double(9.0),
    isolPtTrksGradTerm = cms.double(0.0),
    maxHLTIsolHad = cms.double(0),
    isolEmGradStart = cms.double(0.0),
    maxSigmaIEtaIEta = cms.double(0.015),
    isolEmGradTerm = cms.double(0.0)
)

process.egHLTOffPhoCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:r9:isolEm:isolHad:isolPtTrks'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:r9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksPho'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEndcapCuts = cms.PSet(
    isolPtTrksGradStart = cms.double(0.0),
    maxSigmaEtaEta = cms.double(0.0275),
    maxCTFTrkInnerRadius = cms.double(9.0),
    minR9 = cms.double(0.8),
    requirePixelHitsIfOuterInOuter = cms.bool(True),
    maxEta = cms.double(2.5),
    maxHLTIsolTrksPho = cms.double(0),
    isolHadGradTerm = cms.double(0.0),
    isolHadConstTerm = cms.double(5),
    maxHLTIsolTrksEleOverPt = cms.double(0),
    maxHLTIsolEmOverEt = cms.double(0),
    cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:r9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksPho'),
    isolNrTrksConstTerm = cms.int32(4),
    maxDEtaIn = cms.double(-1),
    isolHadGradStart = cms.double(0.0),
    maxHadem = cms.double(0.05),
    maxHLTInvEInvP = cms.double(0.1),
    maxHLTIsolEmOverEt2 = cms.double(0),
    maxHLTIsolHadOverEt2 = cms.double(0),
    maxHLTIsolTrksPhoOverPt = cms.double(0),
    maxCTFTrkChi2NDof = cms.double(99999),
    maxHLTDPhiIn = cms.double(0.1),
    maxDPhiIn = cms.double(-1),
    maxInvEInvP = cms.double(-1),
    minEt = cms.double(20),
    maxHLTIsolTrksPhoOverPt2 = cms.double(0),
    minEta = cms.double(1.56),
    maxHadEnergy = cms.double(0),
    maxHLTIsolHadOverEt = cms.double(0),
    minNrCTFTrkHits = cms.int32(5),
    isolEmConstTerm = cms.double(5),
    minCTFTrkOuterRadius = cms.double(40.0),
    maxHLTDEtaIn = cms.double(0.1),
    maxHLTIsolTrksEleOverPt2 = cms.double(0),
    maxHLTIsolEm = cms.double(0),
    maxNrCTFTrkHitsLost = cms.int32(0),
    maxHLTIsolTrksEle = cms.double(0),
    isolPtTrksConstTerm = cms.double(9),
    isolPtTrksGradTerm = cms.double(0.0),
    maxHLTIsolHad = cms.double(0),
    isolEmGradStart = cms.double(0.0),
    maxSigmaIEtaIEta = cms.double(0.0275),
    isolEmGradTerm = cms.double(0.0)
)

process.egHLTOffPhoEt10Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt10HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(10.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt10LEITICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTLEITISinglePhotonEt10TrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt15Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt15HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt15HTICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:hltIsolTrksPho'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoSinglePhotonEt15HTITrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:hltIsolTrksPho'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt15LEICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoSinglePhotonEt15LEIHcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(15.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt20Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt20HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt20LEITICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(20.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTLEITISinglePhotonEt20TrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(20.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt25Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt25HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt25LEITICuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTLEITISinglePhotonEt25TrackIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0.1),
        cuts = cms.string('et:hltIsolTrksPho:hltIsolEm'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(-1.0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0.05),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(-1),
        minEt = cms.double(25.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(4.0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(3.0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoEt30Cuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    trigName = cms.string('hltL1NonIsoHLTNonIsoSinglePhotonEt30HcalIsolFilter'),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(30.0),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.egHLTOffPhoLooseCuts = cms.PSet(
    barrel = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.015),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(1.442),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:r9:isolEm:isolHad:isolPtTrks'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(0.0),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9.0),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.015),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    ),
    endcap = cms.PSet(
        isolPtTrksGradStart = cms.double(0.0),
        maxSigmaEtaEta = cms.double(0.0275),
        maxCTFTrkInnerRadius = cms.double(9.0),
        minR9 = cms.double(0.8),
        requirePixelHitsIfOuterInOuter = cms.bool(True),
        maxEta = cms.double(2.5),
        maxHLTDEtaIn = cms.double(0.1),
        isolHadGradTerm = cms.double(0.0),
        isolHadConstTerm = cms.double(5),
        maxHLTIsolTrksEleOverPt = cms.double(0),
        maxHLTIsolEmOverEt = cms.double(0),
        cuts = cms.string('et:detEta:hadem:sigmaIEtaIEta:r9:isolEm:isolHad:isolPtTrks:hltIsolHad:hltIsolTrksPho'),
        isolNrTrksConstTerm = cms.int32(4),
        maxDEtaIn = cms.double(-1),
        isolHadGradStart = cms.double(0.0),
        maxHadem = cms.double(0.05),
        maxHLTInvEInvP = cms.double(0.1),
        maxHLTIsolEmOverEt2 = cms.double(0),
        maxHLTIsolHadOverEt2 = cms.double(0),
        maxHLTIsolTrksPhoOverPt = cms.double(0),
        maxCTFTrkChi2NDof = cms.double(99999),
        maxHLTDPhiIn = cms.double(0.1),
        maxDPhiIn = cms.double(-1),
        maxInvEInvP = cms.double(-1),
        minEta = cms.double(1.56),
        maxHLTIsolTrksPhoOverPt2 = cms.double(0),
        minEt = cms.double(20),
        maxHadEnergy = cms.double(0),
        maxHLTIsolHadOverEt = cms.double(0),
        minNrCTFTrkHits = cms.int32(5),
        isolEmConstTerm = cms.double(5),
        maxHLTIsolTrksPho = cms.double(0),
        maxHLTIsolTrksEleOverPt2 = cms.double(0),
        maxHLTIsolEm = cms.double(0),
        maxNrCTFTrkHitsLost = cms.int32(0),
        maxHLTIsolTrksEle = cms.double(0),
        isolPtTrksConstTerm = cms.double(9),
        isolPtTrksGradTerm = cms.double(0.0),
        maxHLTIsolHad = cms.double(0),
        isolEmGradStart = cms.double(0.0),
        maxSigmaIEtaIEta = cms.double(0.0275),
        isolEmGradTerm = cms.double(0.0),
        minCTFTrkOuterRadius = cms.double(40.0)
    )
)

process.electronMcFakeHistosCfg = cms.PSet(
    Nbinpopmatching = cms.int32(75),
    Nbinxyz = cms.int32(50),
    Nbineop2D = cms.int32(30),
    Etamin = cms.double(-2.5),
    Lhitsmax = cms.double(10.0),
    Popmatchingmin = cms.double(0.0),
    Nbinfhits = cms.int32(30),
    Eopmax = cms.double(5.0),
    Pmax = cms.double(300.0),
    Phimax = cms.double(3.2),
    Phimin = cms.double(-3.2),
    Hoemin = cms.double(0.0),
    Dphimin = cms.double(-0.01),
    Nbinlhits = cms.int32(5),
    Nbinpteff = cms.int32(19),
    Nbinphi2D = cms.int32(32),
    Meemax = cms.double(150.0),
    Nbineta = cms.int32(50),
    Nbinp = cms.int32(50),
    Nbinp2D = cms.int32(50),
    Meemin = cms.double(0.0),
    Nbindeta = cms.int32(100),
    Hoemax = cms.double(0.5),
    Nbinpt2D = cms.int32(50),
    Detamax = cms.double(0.005),
    Fhitsmax = cms.double(30.0),
    Nbindetamatch2D = cms.int32(50),
    Nbineta2D = cms.int32(50),
    Nbinphi = cms.int32(64),
    Eopmaxsht = cms.double(3.0),
    Nbinmee = cms.int32(100),
    Nbindphimatch = cms.int32(100),
    Nbindetamatch = cms.int32(100),
    Popmatchingmax = cms.double(1.5),
    Nbinpt = cms.int32(50),
    Nbindphimatch2D = cms.int32(50),
    Etamax = cms.double(2.5),
    Dphimax = cms.double(0.01),
    Nbinhoe = cms.int32(100),
    Dphimatchmax = cms.double(0.2),
    Detamatchmax = cms.double(0.05),
    Nbindphi = cms.int32(100),
    Detamatchmin = cms.double(-0.05),
    Ptmax = cms.double(100.0),
    Nbineop = cms.int32(50),
    Dphimatchmin = cms.double(-0.2),
    Detamin = cms.double(-0.005)
)

process.electronMcSignalHistosCfg = cms.PSet(
    Nbinxyz = cms.int32(50),
    Poptruemax = cms.double(1.5),
    Nbineop2D = cms.int32(30),
    Lhitsmax = cms.double(10.0),
    Nbindphimatch2D = cms.int32(50),
    Nbinfhits = cms.int32(30),
    Dphimin = cms.double(-0.01),
    Pmax = cms.double(300.0),
    Phimax = cms.double(3.2),
    Phimin = cms.double(-3.2),
    Hoemin = cms.double(0.0),
    Eopmax = cms.double(5.0),
    Nbinlhits = cms.int32(5),
    Nbinpteff = cms.int32(19),
    Nbinphi2D = cms.int32(32),
    Meemax = cms.double(150.0),
    Detamatchmin = cms.double(-0.05),
    Nbineta = cms.int32(50),
    Nbinp = cms.int32(50),
    Nbinp2D = cms.int32(50),
    Meemin = cms.double(0.0),
    Nbindeta = cms.int32(100),
    Hoemax = cms.double(0.5),
    Nbinpt2D = cms.int32(50),
    Nbindetamatch = cms.int32(100),
    Fhitsmax = cms.double(30.0),
    Poptruemin = cms.double(0.0),
    Nbindetamatch2D = cms.int32(50),
    Nbineta2D = cms.int32(50),
    Nbinphi = cms.int32(64),
    Eopmaxsht = cms.double(3.0),
    Nbinmee = cms.int32(100),
    Nbindphimatch = cms.int32(100),
    Detamax = cms.double(0.005),
    Nbinpt = cms.int32(50),
    Etamin = cms.double(-2.5),
    Etamax = cms.double(2.5),
    Dphimax = cms.double(0.01),
    Nbinhoe = cms.int32(100),
    Dphimatchmax = cms.double(0.2),
    Detamatchmax = cms.double(0.05),
    Nbindphi = cms.int32(100),
    Nbinpoptrue = cms.int32(75),
    Ptmax = cms.double(100.0),
    Nbineop = cms.int32(50),
    Dphimatchmin = cms.double(-0.2),
    Detamin = cms.double(-0.005)
)

process.fieldScaling = cms.PSet(
    scalingVolumes = cms.vint32(14100, 14200, 17600, 17800, 17900, 
        18100, 18300, 18400, 18600, 23100, 
        23300, 23400, 23600, 23800, 23900, 
        24100, 28600, 28800, 28900, 29100, 
        29300, 29400, 29600, 28609, 28809, 
        28909, 29109, 29309, 29409, 29609, 
        28610, 28810, 28910, 29110, 29310, 
        29410, 29610, 28611, 28811, 28911, 
        29111, 29311, 29411, 29611),
    scalingFactors = cms.vdouble(1, 1, 0.994, 1.004, 1.004, 
        1.005, 1.004, 1.004, 0.994, 0.965, 
        0.958, 0.958, 0.953, 0.958, 0.958, 
        0.965, 0.918, 0.924, 0.924, 0.906, 
        0.924, 0.924, 0.918, 0.991, 0.998, 
        0.998, 0.978, 0.998, 0.998, 0.991, 
        0.991, 0.998, 0.998, 0.978, 0.998, 
        0.998, 0.991, 0.991, 0.998, 0.998, 
        0.978, 0.998, 0.998, 0.991)
)

process.filterpset = cms.PSet(
    IsoCollections = cms.VInputTag(cms.InputTag("hltL1IsolatedPhotonHcalIsol","","HLT"), cms.InputTag("hltL1NonIsolatedPhotonHcalIsol","","HLT")),
    theHLTOutputTypes = cms.int32(92),
    HLTCollectionHumanName = cms.untracked.string('Hcal Iso Filter'),
    HLTCollectionLabels = cms.InputTag("hltL1NonIsoHLTNonIsoDoublePhotonEt10HcalIsolFilter","","HLT"),
    PlotBounds = cms.vdouble(0.0, 10.0)
)

process.ghostTrackCommon = cms.PSet(
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    ),
    trackPairV0Filter = cms.PSet(
        k0sMassWindow = cms.double(0.03)
    ),
    charmCut = cms.double(1.5),
    trackSort = cms.string('sip2dSig'),
    minimumTrackWeight = cms.double(0.5)
)

process.ghostTrackVertexRecoBlock = cms.PSet(
    vertexReco = cms.PSet(
        primcut = cms.double(2.0),
        seccut = cms.double(4.0),
        maxFitChi2 = cms.double(10.0),
        fitType = cms.string('RefitGhostTrackWithVertices'),
        mergeThreshold = cms.double(3.0),
        finder = cms.string('gtvr')
    )
)

process.hpsTancRequireDecayMode = cms.PSet(
    BooleanOperator = cms.string('and'),
    decayMode = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("hpsTancTausDiscriminationByDecayModeSelection")
    )
)

process.isolationSumsCalculator = cms.PSet(
    HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
    barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    TrackConeOuterRadiusB_Endcap = cms.double(0.3),
    HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
    HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
    HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
    isolationtrackEtaSliceA_Barrel = cms.double(0.015),
    EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
    HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
    beamSpotProducer = cms.InputTag("offlineBeamSpot"),
    isolationtrackEtaSliceB_Endcap = cms.double(0.015),
    trackProducer = cms.InputTag("generalTracks"),
    isolationtrackEtaSliceA_Endcap = cms.double(0.015),
    HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
    HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
    isolationtrackThresholdB_Barrel = cms.double(0.0),
    EcalRecHitThreshEtB_Endcap = cms.double(0.1),
    isolationtrackThresholdA_Endcap = cms.double(0.0),
    EcalRecHitThreshEB_Barrel = cms.double(0.08),
    isolationtrackThresholdB_Endcap = cms.double(0.0),
    HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
    HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
    longImpactParameterA_Barrel = cms.double(0.2),
    severityRecHitThreshold = cms.double(5.0),
    EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
    transImpactParameterA_Barrel = cms.double(0.1),
    useNumCrystals = cms.bool(True),
    longImpactParameterB_Barrel = cms.double(0.2),
    longImpactParameterA_Endcap = cms.double(0.2),
    EcalRecHitThreshEtB_Barrel = cms.double(0.0),
    HcalTowerThreshEA_Endcap = cms.double(0.0),
    EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
    HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
    EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
    TrackConeInnerRadiusA_Endcap = cms.double(0.04),
    HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
    EcalRecHitThreshEtA_Barrel = cms.double(0.0),
    EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
    EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
    transImpactParameterA_Endcap = cms.double(0.1),
    ComponentName = cms.string('isolationSumsCalculator'),
    HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
    HcalTowerThreshEA_Barrel = cms.double(0.0),
    TrackConeOuterRadiusA_Barrel = cms.double(0.4),
    HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
    longImpactParameterB_Endcap = cms.double(0.2),
    HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
    transImpactParameterB_Endcap = cms.double(0.1),
    EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
    TrackConeInnerRadiusB_Barrel = cms.double(0.04),
    HcalRecHitCollection = cms.InputTag("towerMaker"),
    vetoClustered = cms.bool(False),
    HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
    HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
    TrackConeInnerRadiusB_Endcap = cms.double(0.04),
    HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
    HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
    moduleEtaBoundary = cms.vdouble(0.0, 0.02, 0.43, 0.46, 0.78, 
        0.81, 1.13, 1.15, 1.45, 1.58),
    EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
    EcalRecHitThreshEA_Barrel = cms.double(0.08),
    HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
    HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
    spikeIdThreshold = cms.double(0.95),
    HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
    HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
    endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
    severityLevelCut = cms.int32(4),
    EcalRecHitThreshEB_Endcap = cms.double(0.0),
    HcalTowerThreshEB_Endcap = cms.double(0.0),
    TrackConeOuterRadiusA_Endcap = cms.double(0.4),
    HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
    HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
    modulePhiBoundary = cms.double(0.0087),
    spikeIdString = cms.string('kSwissCrossBordersIncluded'),
    EcalRecHitThreshEtA_Endcap = cms.double(0.1),
    EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
    TrackConeOuterRadiusB_Barrel = cms.double(0.3),
    transImpactParameterB_Barrel = cms.double(0.1),
    isolationtrackThresholdA_Barrel = cms.double(0.0),
    HcalTowerThreshEB_Barrel = cms.double(0.0),
    EcalRecHitThreshEA_Endcap = cms.double(0.0),
    recHitFlagsToBeExcluded = cms.vint32(3, 5, 9, 10),
    EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
    HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
    TrackConeInnerRadiusA_Barrel = cms.double(0.04),
    HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
    HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
    isolationtrackEtaSliceB_Barrel = cms.double(0.015),
    EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
    HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
    HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
    HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
    EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
    HcalDepth2TowerThreshEB_Barrel = cms.double(0.0)
)

process.j2tParametersCALO = cms.PSet(
    trackQuality = cms.string('goodIterative'),
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5),
    extrapolations = cms.InputTag("trackExtrapolator")
)

process.j2tParametersVX = cms.PSet(
    tracks = cms.InputTag("generalTracks"),
    coneSize = cms.double(0.5)
)

process.jetDQMParameters = cms.PSet(
    fillpfJIDPassFrac = cms.int32(0),
    ptBin = cms.int32(100),
    resEMFMinTight = cms.double(0.01),
    phiBin = cms.int32(70),
    fHPDMaxLoose = cms.double(0.98),
    eMin = cms.double(0.0),
    LooseCEFMax = cms.double(1.0),
    LooseCHFMin = cms.double(0.0),
    resEMFMin = cms.double(0.0),
    pMin = cms.double(0.0),
    etaMin = cms.double(-5.0),
    sigmaEtaMinTight = cms.double(0.01),
    etaMax = cms.double(5.0),
    pMax = cms.double(500.0),
    phiMax = cms.double(3.2),
    phiMin = cms.double(-3.2),
    eMax = cms.double(500.0),
    sigmaPhiMinTight = cms.double(0.01),
    TightCEFMax = cms.double(1.0),
    TightCHFMin = cms.double(0.0),
    ptMin = cms.double(0.0),
    pBin = cms.int32(100),
    LooseNHFMax = cms.double(0.9),
    etaBin = cms.int32(100),
    eBin = cms.int32(100),
    resEMFMinLoose = cms.double(0.01),
    makedijetselection = cms.int32(0),
    TightNHFMax = cms.double(1.0),
    n90HitsMinTight = cms.int32(4),
    ThisCEFMax = cms.double(999.0),
    fillJIDPassFrac = cms.int32(1),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    TightNEFMax = cms.double(1.0),
    ptMax = cms.double(50.0),
    fHPDMaxTight = cms.double(0.98),
    n90HitsMinLoose = cms.int32(1),
    ptThreshold = cms.double(3.0),
    n90HitsMin = cms.int32(-1),
    fHPDMax = cms.double(1.0),
    ThisNHFMax = cms.double(999.0),
    ThisNEFMax = cms.double(999.0),
    ThisCHFMin = cms.double(-999.0),
    LooseNEFMax = cms.double(0.9)
)

process.jptDQMParameters = cms.PSet(
    OutCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PtFractionInConeVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    Pt1HistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    nTracksVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    nOutCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    PrintDebugMessages = cms.untracked.bool(False),
    InCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    deltaEtaHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-0.5)
    ),
    TrackSiStripHitStoNHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(500),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    EtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    HistogramPath = cms.string('JetMET/Jet/uncJPT'),
    PyHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    DQMStoreFileName = cms.untracked.string('DQMStore.root'),
    PhiVsEtaHistogramConfig = cms.PSet(
        NBins = cms.uint32(64),
        MaxY = cms.double(2.5),
        Min = cms.double(-3.2),
        Max = cms.double(3.2),
        Enabled = cms.bool(True),
        MinY = cms.double(-2.5),
        NBinsY = cms.uint32(50)
    ),
    OutCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        rpcRecHits = cms.InputTag("rpcRecHits"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    JPTCorrFactorVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    InCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    n90HitsMin = cms.int32(0),
    nAllPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    correctedPtThreshold = cms.double(3.0),
    MassHistogramConfig = cms.PSet(
        Max = cms.double(25),
        NBins = cms.uint32(25),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PzHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    AllPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    OutCaloInVertexPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    fRBXHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0.0)
    ),
    AllPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    InCaloOutVertexPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    deltaPhiHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-0.5)
    ),
    CorrFactorVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    EHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    OutCaloInVertexPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    OutCaloInVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    nAllMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    Pt2HistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    WriteDQMStore = cms.untracked.bool(False),
    InCaloOutVertexElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    JPTCorrFactorHistogramConfig = cms.PSet(
        Max = cms.double(3.0),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(1.0)
    ),
    InCaloOutVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nTracksVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    nInCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    resEMFMin = cms.double(0.0),
    AllElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    nInCaloOutVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    CorrFactorHistogramConfig = cms.PSet(
        Max = cms.double(3.0),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(1.0)
    ),
    InCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    ZSPCorrFactorVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    AllMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexElectronsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    InCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    AllElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nOutCaloInVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nTracksHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    OutCaloInVertexElectronsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    OutCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexMuonsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    nOutCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InVertexTrackImpactPointJetDRHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    PHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    InCaloInVertexElectronsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    JPTCorrFactorVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    ResEMFHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0.0)
    ),
    InCaloInVertexPionsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    PtFractionInConeVsJetRawEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    InCaloOutVertexPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
        Max = cms.double(0.5),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nInCaloOutVertexPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexElectronsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    Pt3HistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    N90HitsHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    InCaloTrackDirectionJetDRHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nInCaloInVertexPionsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexPionsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexPionsTrackEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    AllPionsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PtFractionInConeHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    PxHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexMuonsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllElectronsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    AllMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    OutCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    fHPDHistogramConfig = cms.PSet(
        Max = cms.double(1.0),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(0.0)
    ),
    InCaloOutVertexMuonsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    ZSPCorrFactorHistogramConfig = cms.PSet(
        Max = cms.double(3.0),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(1.0)
    ),
    InCaloOutVertexMuonsTrackPtHistogramConfig = cms.PSet(
        Max = cms.double(50),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloInVertexPionsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    nAllElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexPionsTrackNHitsHistogramConfig = cms.PSet(
        Max = cms.double(40),
        NBins = cms.uint32(40),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    nInCaloInVertexElectronsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    InCaloOutVertexMuonsTrackPtVsEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloOutVertexMuonsTrackPhiHistogramConfig = cms.PSet(
        Max = cms.double(3.2),
        NBins = cms.uint32(64),
        Enabled = cms.bool(True),
        Min = cms.double(-3.2)
    ),
    ZSPCorrFactorVsJetEtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    fHPDMax = cms.double(1.0),
    CorrFactorVsJetEtHistogramConfig = cms.PSet(
        Max = cms.double(200),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    AllPionsTrackDzHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(200),
        Enabled = cms.bool(True),
        Min = cms.double(-20.0)
    ),
    EtaHistogramConfig = cms.PSet(
        Max = cms.double(2.5),
        NBins = cms.uint32(50),
        Enabled = cms.bool(True),
        Min = cms.double(-2.5)
    ),
    InCaloInVertexMuonsTrackDxyHistogramConfig = cms.PSet(
        Max = cms.double(10),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(-10.0)
    ),
    nInCaloOutVertexMuonsTracksPerJetHistogramConfig = cms.PSet(
        Max = cms.double(100),
        NBins = cms.uint32(100),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    ),
    OutCaloInVertexElectronsTrackNLayersHistogramConfig = cms.PSet(
        Max = cms.double(20),
        NBins = cms.uint32(20),
        Enabled = cms.bool(True),
        Min = cms.double(0)
    )
)

process.layerInfo = cms.PSet(
    TOB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    TEC = cms.PSet(
        useRingSlector = cms.bool(False),
        TTRHBuilder = cms.string('WithTrackAngle'),
        minRing = cms.int32(6),
        maxRing = cms.int32(7)
    )
)

process.leadTrackFinding = cms.PSet(
    cut = cms.double(0.5),
    Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
)

process.looseSoftPFElectronCleanerBarrelCuts = cms.PSet(
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.017),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.39),
    BarrelMVACuts = cms.vdouble(-0.1, 1.0),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0)
)

process.looseSoftPFElectronCleanerForwardCuts = cms.PSet(
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.006),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(-0.24, 1.0),
    ForwardInverseFBremCuts = cms.vdouble(1.0, 7.01)
)

process.mediumSoftPFElectronCleanerBarrelCuts = cms.PSet(
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.0047),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.54),
    BarrelMVACuts = cms.vdouble(0.6, 1.0),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0)
)

process.mediumSoftPFElectronCleanerForwardCuts = cms.PSet(
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.003),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(0.37, 1.0),
    ForwardInverseFBremCuts = cms.vdouble(1.0, 20.0)
)

process.metDQMParameters = cms.PSet(
    allSelection = cms.bool(False),
    verbose = cms.int32(0),
    HcalNoiseSummary = cms.InputTag("hcalnoise"),
    HcalNoiseRBXCollection = cms.InputTag("hcalnoise"),
    JetCollectionLabel = cms.InputTag("iterativeCone5CaloJets"),
    Source = cms.string('CaloMET'),
    minBiasTrigger = cms.PSet(
        andOrHlt = cms.bool(False),
        hltPaths = cms.vstring('HLT_L1Tech_BSC_minBias_OR'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_minbias'),
        errorReplyHlt = cms.bool(False)
    ),
    lowMETTrigger = cms.PSet(
        andOrHlt = cms.bool(False),
        hltPaths = cms.vstring('HLT_L1MET20'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_lowmet'),
        errorReplyHlt = cms.bool(False)
    ),
    lowPtJetTrigger = cms.PSet(
        andOrHlt = cms.bool(False),
        hltPaths = cms.vstring('HLT_L1Jet6U'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_lowptjet'),
        errorReplyHlt = cms.bool(False)
    ),
    LowPtJetThreshold = cms.double(15.0),
    printOut = cms.int32(0),
    eleTrigger = cms.PSet(
        andOrHlt = cms.bool(False),
        hltPaths = cms.vstring('HLT_Ele40_LW_L1R'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_ele'),
        errorReplyHlt = cms.bool(False)
    ),
    FolderName = cms.untracked.string('JetMET/MET/'),
    LowMETThreshold = cms.double(30.0),
    CleaningParameters = cms.PSet(
        tightHcalFiltering = cms.bool(False),
        tightJetIDFiltering = cms.int32(-1),
        techTrigsOR = cms.vuint32(),
        vtxchi2_max = cms.double(9999),
        tightBHFiltering = cms.bool(False),
        doPrimaryVertexCheck = cms.bool(True),
        vtxz_max = cms.double(15.0),
        vtxndof_min = cms.int32(5),
        gtLabel = cms.InputTag("gtDigis"),
        doHLTPhysicsOn = cms.bool(False),
        nvtxtrks_min = cms.int32(0),
        nvtx_min = cms.int32(1),
        vertexLabel = cms.InputTag("offlinePrimaryVertices"),
        trigSelection = cms.PSet(
            andOrHlt = cms.bool(False),
            hltPaths = cms.vstring(''),
            andOr = cms.bool(False),
            hltInputTag = cms.InputTag("TriggerResults","","HLT"),
            hltDBKey = cms.string('jetmet_hltsel'),
            errorReplyHlt = cms.bool(False)
        ),
        HLT_PhysDec = cms.string('HLT_PhysicsDeclared'),
        techTrigsNOT = cms.vuint32(),
        techTrigsAND = cms.vuint32()
    ),
    highMETTrigger = cms.PSet(
        andOrHlt = cms.bool(False),
        hltPaths = cms.vstring('HLT_MET100'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_highmet'),
        errorReplyHlt = cms.bool(False)
    ),
    HLTPathsJetMB = cms.vstring(),
    muonTrigger = cms.PSet(
        andOrHlt = cms.bool(False),
        hltPaths = cms.vstring('HLT_Mu11'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_muon'),
        errorReplyHlt = cms.bool(False)
    ),
    PfJetCollectionLabel = cms.InputTag(""),
    DCSFilter = cms.PSet(
        Filter = cms.untracked.bool(True),
        DetectorTypes = cms.untracked.string('ecal:hbhe:hf')
    ),
    cleanupSelection = cms.bool(True),
    PFCandidates = cms.InputTag(""),
    CaloTowersLabel = cms.InputTag("towerMaker"),
    etThreshold = cms.double(2.0),
    InputElectronLabel = cms.InputTag(""),
    JetIDParams = cms.PSet(
        eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        hbheRecHitsColl = cms.InputTag("hbhereco"),
        hoRecHitsColl = cms.InputTag("horeco"),
        ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        hfRecHitsColl = cms.InputTag("hfreco"),
        useRecHits = cms.bool(True)
    ),
    HighPtJetThreshold = cms.double(60.0),
    InputTrackLabel = cms.InputTag(""),
    BeamHaloSummaryLabel = cms.InputTag("BeamHaloSummary"),
    highPtJetTrigger = cms.PSet(
        andOrHlt = cms.bool(False),
        hltPaths = cms.vstring('HLT_Jet100U'),
        andOr = cms.bool(False),
        hltInputTag = cms.InputTag("TriggerResults","","HLT"),
        hltDBKey = cms.string('jetmet_highptjet'),
        errorReplyHlt = cms.bool(False)
    ),
    METCollectionLabel = cms.InputTag("met"),
    allHist = cms.bool(False),
    InputBeamSpotLabel = cms.InputTag(""),
    InputMuonLabel = cms.InputTag(""),
    HighMETThreshold = cms.double(110.0)
)

process.mixCaloHits = cms.PSet(
    input = cms.VInputTag(cms.InputTag("g4SimHits","CaloHitsTk"), cms.InputTag("g4SimHits","CastorBU"), cms.InputTag("g4SimHits","CastorFI"), cms.InputTag("g4SimHits","CastorPL"), cms.InputTag("g4SimHits","CastorTU"), 
        cms.InputTag("g4SimHits","EcalHitsEB"), cms.InputTag("g4SimHits","EcalHitsEE"), cms.InputTag("g4SimHits","EcalHitsES"), cms.InputTag("g4SimHits","EcalTBH4BeamHits"), cms.InputTag("g4SimHits","HcalHits"), 
        cms.InputTag("g4SimHits","HcalTB06BeamHits"), cms.InputTag("g4SimHits","ZDCHITS")),
    type = cms.string('PCaloHit'),
    subdets = cms.vstring('CaloHitsTk', 
        'CastorBU', 
        'CastorFI', 
        'CastorPL', 
        'CastorTU', 
        'EcalHitsEB', 
        'EcalHitsEE', 
        'EcalHitsES', 
        'EcalTBH4BeamHits', 
        'HcalHits', 
        'HcalTB06BeamHits', 
        'ZDCHITS')
)

process.mixHepMCProducts = cms.PSet(
    input = cms.VInputTag(cms.InputTag("generator")),
    type = cms.string('HepMCProduct')
)

process.mixPCFCaloHits = cms.PSet(
    input = cms.VInputTag(cms.InputTag("CFWriter","g4SimHitsCaloHitsTk"), cms.InputTag("CFWriter","g4SimHitsCastorBU"), cms.InputTag("CFWriter","g4SimHitsCastorFI"), cms.InputTag("CFWriter","g4SimHitsCastorPL"), cms.InputTag("CFWriter","g4SimHitsCastorTU"), 
        cms.InputTag("CFWriter","g4SimHitsEcalHitsEB"), cms.InputTag("CFWriter","g4SimHitsEcalHitsEE"), cms.InputTag("CFWriter","g4SimHitsEcalHitsES"), cms.InputTag("CFWriter","g4SimHitsEcalTBH4BeamHits"), cms.InputTag("CFWriter","g4SimHitsHcalHits"), 
        cms.InputTag("CFWriter","g4SimHitsHcalTB06BeamHits"), cms.InputTag("CFWriter","g4SimHitsZDCHITS")),
    type = cms.string('PCaloHitPCrossingFrame'),
    subdets = cms.vstring('CaloHitsTk', 
        'CastorBU', 
        'CastorFI', 
        'CastorPL', 
        'CastorTU', 
        'EcalHitsEB', 
        'EcalHitsEE', 
        'EcalHitsES', 
        'EcalTBH4BeamHits', 
        'HcalHits', 
        'HcalTB06BeamHits', 
        'ZDCHITS')
)

process.mixPCFHepMCProducts = cms.PSet(
    input = cms.VInputTag(cms.InputTag("CFWriter","generator")),
    type = cms.string('HepMCProductPCrossingFrame')
)

process.mixPCFSimHits = cms.PSet(
    input = cms.VInputTag(cms.InputTag("CFWriter","g4SimHitsBSCHits"), cms.InputTag("CFWriter","g4SimHitsFP420SI"), cms.InputTag("CFWriter","g4SimHitsMuonCSCHits"), cms.InputTag("CFWriter","g4SimHitsMuonDTHits"), cms.InputTag("CFWriter","g4SimHitsMuonRPCHits"), 
        cms.InputTag("CFWriter","g4SimHitsTotemHitsRP"), cms.InputTag("CFWriter","g4SimHitsTotemHitsT1"), cms.InputTag("CFWriter","g4SimHitsTotemHitsT2Gem"), cms.InputTag("CFWriter","g4SimHitsTrackerHitsPixelBarrelHighTof"), cms.InputTag("CFWriter","g4SimHitsTrackerHitsPixelBarrelLowTof"), 
        cms.InputTag("CFWriter","g4SimHitsTrackerHitsPixelEndcapHighTof"), cms.InputTag("CFWriter","g4SimHitsTrackerHitsPixelEndcapLowTof"), cms.InputTag("CFWriter","g4SimHitsTrackerHitsTECHighTof"), cms.InputTag("CFWriter","g4SimHitsTrackerHitsTECLowTof"), cms.InputTag("CFWriter","g4SimHitsTrackerHitsTIBHighTof"), 
        cms.InputTag("CFWriter","g4SimHitsTrackerHitsTIBLowTof"), cms.InputTag("CFWriter","g4SimHitsTrackerHitsTIDHighTof"), cms.InputTag("CFWriter","g4SimHitsTrackerHitsTIDLowTof"), cms.InputTag("CFWriter","g4SimHitsTrackerHitsTOBHighTof"), cms.InputTag("CFWriter","g4SimHitsTrackerHitsTOBLowTof")),
    type = cms.string('PSimHitPCrossingFrame'),
    subdets = cms.vstring('BSCHits', 
        'FP420SI', 
        'MuonCSCHits', 
        'MuonDTHits', 
        'MuonRPCHits', 
        'TotemHitsRP', 
        'TotemHitsT1', 
        'TotemHitsT2Gem', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelEndcapHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIBLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTOBLowTof')
)

process.mixPCFSimTracks = cms.PSet(
    input = cms.VInputTag(cms.InputTag("CFWriter","g4SimHits")),
    type = cms.string('SimTrackPCrossingFrame')
)

process.mixPCFSimVertices = cms.PSet(
    input = cms.VInputTag(cms.InputTag("CFWriter","g4SimHits")),
    type = cms.string('SimVertexPCrossingFrame')
)

process.mixSimHits = cms.PSet(
    input = cms.VInputTag(cms.InputTag("g4SimHits","BSCHits"), cms.InputTag("g4SimHits","FP420SI"), cms.InputTag("g4SimHits","MuonCSCHits"), cms.InputTag("g4SimHits","MuonDTHits"), cms.InputTag("g4SimHits","MuonRPCHits"), 
        cms.InputTag("g4SimHits","TotemHitsRP"), cms.InputTag("g4SimHits","TotemHitsT1"), cms.InputTag("g4SimHits","TotemHitsT2Gem"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelBarrelLowTof"), 
        cms.InputTag("g4SimHits","TrackerHitsPixelEndcapHighTof"), cms.InputTag("g4SimHits","TrackerHitsPixelEndcapLowTof"), cms.InputTag("g4SimHits","TrackerHitsTECHighTof"), cms.InputTag("g4SimHits","TrackerHitsTECLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIBHighTof"), 
        cms.InputTag("g4SimHits","TrackerHitsTIBLowTof"), cms.InputTag("g4SimHits","TrackerHitsTIDHighTof"), cms.InputTag("g4SimHits","TrackerHitsTIDLowTof"), cms.InputTag("g4SimHits","TrackerHitsTOBHighTof"), cms.InputTag("g4SimHits","TrackerHitsTOBLowTof")),
    type = cms.string('PSimHit'),
    subdets = cms.vstring('BSCHits', 
        'FP420SI', 
        'MuonCSCHits', 
        'MuonDTHits', 
        'MuonRPCHits', 
        'TotemHitsRP', 
        'TotemHitsT1', 
        'TotemHitsT2Gem', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelEndcapHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIBLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTOBLowTof')
)

process.mixSimTracks = cms.PSet(
    input = cms.VInputTag(cms.InputTag("g4SimHits")),
    type = cms.string('SimTrack')
)

process.mixSimVertices = cms.PSet(
    input = cms.VInputTag(cms.InputTag("g4SimHits")),
    type = cms.string('SimVertex')
)

process.muonAssociatorByHitsCommonParameters = cms.PSet(
    RPCdigisimlinkTag = cms.InputTag("simMuonRPCDigis","RPCDigiSimLink"),
    EfficiencyCut_track = cms.double(0.0),
    UseSplitting = cms.bool(True),
    AbsoluteNumberOfHits_muon = cms.bool(False),
    DTdigiTag = cms.InputTag("simMuonDTDigis"),
    associatorByWire = cms.bool(False),
    EfficiencyCut_muon = cms.double(0.0),
    associateRecoTracks = cms.bool(True),
    dumpDT = cms.bool(False),
    CSCsimHitsTag = cms.InputTag("g4SimHits","MuonCSCHits"),
    UseGrouped = cms.bool(True),
    NHitCut_track = cms.uint32(0),
    AbsoluteNumberOfHits_track = cms.bool(False),
    NHitCut_muon = cms.uint32(0),
    includeZeroHitMuons = cms.bool(True),
    crossingframe = cms.bool(False),
    DTdigisimlinkTag = cms.InputTag("simMuonDTDigis"),
    PurityCut_track = cms.double(0.0),
    CSCwireLinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCWireDigiSimLinks"),
    CSCsimHitsXFTag = cms.InputTag("mix","g4SimHitsMuonCSCHits"),
    DTsimhitsTag = cms.InputTag("g4SimHits","MuonDTHits"),
    simtracksTag = cms.InputTag("g4SimHits"),
    CSClinksTag = cms.InputTag("simMuonCSCDigis","MuonCSCStripDigiSimLinks"),
    associatePixel = cms.bool(True),
    ROUList = cms.vstring('TrackerHitsTIBLowTof', 
        'TrackerHitsTIBHighTof', 
        'TrackerHitsTIDLowTof', 
        'TrackerHitsTIDHighTof', 
        'TrackerHitsTOBLowTof', 
        'TrackerHitsTOBHighTof', 
        'TrackerHitsTECLowTof', 
        'TrackerHitsTECHighTof', 
        'TrackerHitsPixelBarrelLowTof', 
        'TrackerHitsPixelBarrelHighTof', 
        'TrackerHitsPixelEndcapLowTof', 
        'TrackerHitsPixelEndcapHighTof'),
    dumpInputCollections = cms.bool(False),
    simtracksXFTag = cms.InputTag("mix","g4SimHits"),
    associateStrip = cms.bool(True),
    DTrechitTag = cms.InputTag("dt1DRecHits"),
    acceptOneStubMatchings = cms.bool(True),
    RPCsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonRPCHits"),
    inputCSCSegmentCollection = cms.InputTag("cscSegments"),
    ThreeHitTracksAreSpecial = cms.bool(False),
    UsePixels = cms.bool(True),
    inputDTRecSegment4DCollection = cms.InputTag("dt4DSegments"),
    UseTracker = cms.bool(True),
    links_exist = cms.bool(True),
    DTsimhitsXFTag = cms.InputTag("mix","g4SimHitsMuonDTHits"),
    PurityCut_muon = cms.double(0.0),
    RPCsimhitsTag = cms.InputTag("g4SimHits","MuonRPCHits"),
    UseMuon = cms.bool(True)
)

process.muonTPSet = cms.PSet(
    src = cms.InputTag("mergedtruth","MergedTrackTruth"),
    chargedOnly = cms.bool(True),
    pdgId = cms.vint32(13, -13),
    tip = cms.double(3.5),
    signalOnly = cms.bool(True),
    minRapidity = cms.double(-2.4),
    lip = cms.double(30.0),
    ptMin = cms.double(0.9),
    maxRapidity = cms.double(2.4),
    minHit = cms.int32(0),
    stableOnly = cms.bool(False)
)

process.noPrediscriminants = cms.PSet(
    BooleanOperator = cms.string('and')
)

process.options = cms.untracked.PSet(

)

process.pfElecMva = cms.PSet(
    MVACut = cms.double(-0.1)
)

process.ptSeedParameterization = cms.PSet(
    SMB_21 = cms.vdouble(0.918425, -0.141199, 0.0, 0.254515, -0.111848, 
        0.0),
    SMB_20 = cms.vdouble(0.861314, -0.16233, 0.0, 0.248879, -0.113879, 
        0.0),
    SMB_22 = cms.vdouble(1.308565, -0.701634, 0.0, -0.302861, 0.675785, 
        0.0),
    OL_2213 = cms.vdouble(0.563218, -0.493991, 0.0, 0.943776, -0.591751, 
        0.0),
    SME_11 = cms.vdouble(2.39479, -0.888663, 0.0, -4.604546, 3.623464, 
        0.0),
    SME_13 = cms.vdouble(0.398851, 0.028176, 0.0, 0.567015, 2.623232, 
        0.0),
    SMB_31 = cms.vdouble(0.398661, -0.024853, 0.0, 0.863324, -0.413048, 
        0.0),
    SME_32 = cms.vdouble(-0.021912, -0.008995, 0.0, -49.779764, 30.780972, 
        0.0),
    SME_31 = cms.vdouble(-0.588188, 0.316961, 0.0, -95.261732, 45.444051, 
        0.0),
    OL_1213 = cms.vdouble(0.960544, -0.75644, 0.0, 0.1636, 0.114178, 
        0.0),
    DT_13 = cms.vdouble(0.298842, 0.076531, -0.14293, 0.219923, -0.145026, 
        0.155638),
    DT_12 = cms.vdouble(0.176182, 0.058535, -0.090549, 0.202363, -0.203126, 
        0.222219),
    DT_14 = cms.vdouble(0.388423, 0.068698, -0.145925, 0.159515, 0.124299, 
        -0.133269),
    OL_1232 = cms.vdouble(0.162626, 0.000843, 0.0, 0.396271, 0.002791, 
        0.0),
    CSC_23 = cms.vdouble(-0.095236, 0.122061, -0.029852, -11.396689, 15.933598, 
        -4.267065),
    CSC_24 = cms.vdouble(-0.049769, 0.063087, -0.011029, -13.765978, 16.296143, 
        -4.241835),
    CSC_03 = cms.vdouble(0.498992, -0.086235, -0.025772, 2.761006, -2.667607, 
        0.72802),
    CSC_01 = cms.vdouble(0.155906, -0.000406, 0.0, 0.194022, -0.010181, 
        0.0),
    SMB_32 = cms.vdouble(0.421649, -0.111654, 0.0, -0.044613, 1.134858, 
        0.0),
    SMB_30 = cms.vdouble(0.399628, 0.014922, 0.0, 0.665622, 0.358439, 
        0.0),
    OL_2222 = cms.vdouble(0.087587, 0.005729, 0.0, 0.535169, -0.087675, 
        0.0),
    SMB_10 = cms.vdouble(1.160532, 0.148991, 0.0, 0.182785, -0.093776, 
        0.0),
    SMB_11 = cms.vdouble(1.289468, -0.139653, 0.0, 0.137191, 0.01217, 
        0.0),
    SMB_12 = cms.vdouble(1.923091, -0.913204, 0.0, 0.161556, 0.020215, 
        0.0),
    DT_23 = cms.vdouble(0.120647, 0.034743, -0.070855, 0.302427, -0.21417, 
        0.261012),
    DT_24 = cms.vdouble(0.189527, 0.037328, -0.088523, 0.251936, 0.032411, 
        0.010984),
    SME_21 = cms.vdouble(0.64895, -0.148762, 0.0, -5.07676, 6.284227, 
        0.0),
    SME_22 = cms.vdouble(-0.624708, 0.641043, 0.0, 32.581295, -19.604264, 
        0.0),
    CSC_34 = cms.vdouble(0.144321, -0.142283, 0.035636, 190.260708, -180.888643, 
        43.430395),
    CSC_02 = cms.vdouble(0.600235, -0.205683, 0.001113, 0.655625, -0.682129, 
        0.253916),
    SME_42 = cms.vdouble(-0.021912, -0.008995, 0.0, -49.779764, 30.780972, 
        0.0),
    SME_41 = cms.vdouble(-0.187116, 0.076415, 0.0, -58.552583, 27.933864, 
        0.0),
    SME_12 = cms.vdouble(-0.277294, 0.7616, 0.0, -0.243326, 1.446792, 
        0.0),
    DT_34 = cms.vdouble(0.049146, -0.003494, -0.010099, 0.672095, 0.36459, 
        -0.304346),
    CSC_14 = cms.vdouble(0.952517, -0.532733, 0.084601, 1.615881, -1.630744, 
        0.514139),
    OL_1222 = cms.vdouble(0.215915, 0.002556, 0.0, 0.313596, -0.021465, 
        0.0),
    CSC_13 = cms.vdouble(1.22495, -1.792358, 0.711378, 5.271848, -6.280625, 
        2.0142),
    CSC_12 = cms.vdouble(-0.363549, 0.569552, -0.173186, 7.777069, -10.203618, 
        3.478874)
)

process.requireDecayMode = cms.PSet(
    BooleanOperator = cms.string('and'),
    decayMode = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("hpsPFTauDiscriminationByDecayModeFinding")
    )
)

process.requireLeadPion = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadPion = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
    )
)

process.requireLeadTrack = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadTrack = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("pfRecoTauDiscriminationByLeadingTrackFinding")
    )
)

process.requireLeadTrackCalo = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadTrack = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("caloRecoTauDiscriminationByLeadingTrackFinding")
    )
)

process.shrinkingConeLeadTrackFinding = cms.PSet(
    BooleanOperator = cms.string('and'),
    leadTrack = cms.PSet(
        cut = cms.double(0.5),
        Producer = cms.InputTag("shrinkingConePFTauDiscriminationByLeadingTrackFinding")
    )
)

process.standardDecayModeParams = cms.PSet(
    mergeByBestMatch = cms.bool(True),
    refitTracks = cms.bool(False),
    maxNbrOfIterations = cms.int32(10),
    mergeLowPtPhotonsFirst = cms.bool(True),
    setMergedPi0Mass = cms.bool(True),
    setChargedPionMass = cms.bool(True),
    filterPhotons = cms.bool(True),
    minPtFractionPiZeroes = cms.double(0.15),
    maxPhotonsToMerge = cms.uint32(2),
    filterTwoProngs = cms.bool(True),
    maxPiZeroMass = cms.double(0.2),
    minPtFractionForSecondProng = cms.double(0.1),
    maxDistance = cms.double(0.01),
    setPi0Mass = cms.bool(True),
    minPtFractionSinglePhotons = cms.double(0.1)
)

process.tautagInfoModifer = cms.PSet(
    pfTauTagInfoSrc = cms.InputTag("pfRecoTauTagInfoProducer"),
    name = cms.string('TTIworkaround'),
    plugin = cms.string('RecoTauTagInfoWorkaroundModifer')
)

process.tcTauAlgoParameters = cms.PSet(
    tkminTrackerHitsn = cms.int32(5),
    PVProducer = cms.InputTag("offlinePrimaryVertices"),
    EtCaloOverTrackMin = cms.double(-0.9),
    EERecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    tkmaxChi2 = cms.double(100.0),
    EtHcalOverTrackMin = cms.double(-0.3),
    CaloRecoTauProducer = cms.InputTag("JPTCaloRecoTauProducer"),
    EBRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    tkminPixelHitsn = cms.int32(0),
    MatchingConeSize = cms.double(0.1),
    TrackCollection = cms.InputTag("generalTracks"),
    HBHERecHitCollection = cms.InputTag("hbhereco"),
    EtCaloOverTrackMax = cms.double(0.0),
    TrackAssociatorParameters = cms.PSet(
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        dRHcal = cms.double(9999.0),
        dRPreshowerPreselection = cms.double(0.2),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        useEcal = cms.bool(True),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        dRMuon = cms.double(9999.0),
        propagateAllDirections = cms.bool(True),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        useHO = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        usePreshower = cms.bool(False),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        dRHcalPreselection = cms.double(0.2),
        useMuon = cms.bool(True),
        useCalo = cms.bool(False),
        accountForTrajectoryChangeCalo = cms.bool(False),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        dRMuonPreselection = cms.double(0.2),
        truthMatch = cms.bool(False),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        useHcal = cms.bool(True)
    ),
    SignalConeSize = cms.double(0.2),
    EcalConeSize = cms.double(0.5),
    Track_minPt = cms.double(1.0),
    EtHcalOverTrackMax = cms.double(1.0),
    HFRecHitCollection = cms.InputTag("hfreco"),
    DropRejectedJets = cms.untracked.bool(False),
    HORecHitCollection = cms.InputTag("horeco"),
    DropCaloJets = cms.untracked.bool(False),
    tkmaxipt = cms.double(0.1)
)

process.theJetIDParams = cms.PSet(
    eeRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheRecHitsColl = cms.InputTag("hbhereco"),
    rpcRecHits = cms.InputTag("rpcRecHits"),
    hoRecHitsColl = cms.InputTag("horeco"),
    ebRecHitsColl = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    hfRecHitsColl = cms.InputTag("hfreco"),
    useRecHits = cms.bool(True)
)

process.tightSoftPFElectronCleanerBarrelCuts = cms.PSet(
    BarreldRGsfTrackElectronCuts = cms.vdouble(0.0, 0.006),
    BarrelEemPinRatioCuts = cms.vdouble(-0.9, 0.065),
    BarrelMVACuts = cms.vdouble(0.58, 1.0),
    BarrelPtCuts = cms.vdouble(2.0, 9999.0)
)

process.tightSoftPFElectronCleanerForwardCuts = cms.PSet(
    ForwarddRGsfTrackElectronCuts = cms.vdouble(0.0, 0.01),
    ForwardPtCuts = cms.vdouble(2.0, 9999.0),
    ForwardMVACuts = cms.vdouble(0.6, 1.0),
    ForwardInverseFBremCuts = cms.vdouble(1.0, 15.0)
)

process.trackPseudoSelectionBlock = cms.PSet(
    trackPseudoSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(2.0),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    )
)

process.trackSelectionBlock = cms.PSet(
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(0),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(0),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.07),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(5),
        ptMin = cms.double(0.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    )
)

process.trackWithVertexSelectorParams = cms.PSet(
    normalizedChi2 = cms.double(999999.0),
    d0Max = cms.double(999.0),
    numberOfValidHits = cms.uint32(0),
    vtxFallback = cms.bool(True),
    copyExtras = cms.untracked.bool(False),
    etaMax = cms.double(5.0),
    nVertices = cms.uint32(0),
    copyTrajectories = cms.untracked.bool(False),
    zetaVtx = cms.double(1.0),
    numberOfLostHits = cms.uint32(999),
    etaMin = cms.double(0.0),
    vertexTag = cms.InputTag("offlinePrimaryVertices"),
    ptErrorCut = cms.double(0.2),
    ptMin = cms.double(0.3),
    numberOfValidPixelHits = cms.uint32(0),
    rhoVtx = cms.double(0.2),
    dzMax = cms.double(999.0),
    src = cms.InputTag("generalTracks"),
    ptMax = cms.double(500.0),
    quality = cms.string('highPurity'),
    useVtx = cms.bool(True)
)

process.vertexCutsBlock = cms.PSet(
    vertexCuts = cms.PSet(
        distSig3dMax = cms.double(99999.9),
        fracPV = cms.double(0.65),
        distVal2dMax = cms.double(2.5),
        useTrackWeights = cms.bool(True),
        maxDeltaRToJetAxis = cms.double(0.5),
        v0Filter = cms.PSet(
            k0sMassWindow = cms.double(0.05)
        ),
        distSig2dMin = cms.double(3.0),
        multiplicityMin = cms.uint32(2),
        massMax = cms.double(6.5),
        distSig2dMax = cms.double(99999.9),
        distVal3dMax = cms.double(99999.9),
        minimumTrackWeight = cms.double(0.5),
        distVal3dMin = cms.double(-99999.9),
        distVal2dMin = cms.double(0.01),
        distSig3dMin = cms.double(-99999.9)
    )
)

process.vertexRecoBlock = cms.PSet(
    vertexReco = cms.PSet(
        seccut = cms.double(6.0),
        primcut = cms.double(1.8),
        smoothing = cms.bool(False),
        weightthreshold = cms.double(0.001),
        minweight = cms.double(0.5),
        finder = cms.string('avr')
    )
)

process.vertexSelectionBlock = cms.PSet(
    vertexSelection = cms.PSet(
        sortCriterium = cms.string('dist3dError')
    )
)

process.vertexTrackSelectionBlock = cms.PSet(
    trackSelection = cms.PSet(
        totalHitsMin = cms.uint32(8),
        jetDeltaRMax = cms.double(0.3),
        qualityClass = cms.string('highPurity'),
        pixelHitsMin = cms.uint32(2),
        sip3dSigMin = cms.double(-99999.9),
        sip3dSigMax = cms.double(99999.9),
        maxDistToAxis = cms.double(0.2),
        sip2dValMax = cms.double(99999.9),
        maxDecayLen = cms.double(99999.9),
        ptMin = cms.double(1.0),
        sip2dSigMax = cms.double(99999.9),
        sip2dSigMin = cms.double(-99999.9),
        sip3dValMax = cms.double(99999.9),
        sip3dValMin = cms.double(-99999.9),
        sip2dValMin = cms.double(-99999.9),
        normChi2Max = cms.double(99999.9)
    )
)

process.MultiNetIso = cms.VPSet(cms.PSet(
    applyIsolation = cms.bool(True),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngNoPiZeroIso'),
    decayModeIndices = cms.vint32(0)
), 
    cms.PSet(
        applyIsolation = cms.bool(True),
        cut = cms.double(-10.0),
        computerName = cms.string('OneProngOnePiZeroIso'),
        decayModeIndices = cms.vint32(1)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(True),
        cut = cms.double(-10.0),
        computerName = cms.string('OneProngTwoPiZeroIso'),
        decayModeIndices = cms.vint32(2)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(True),
        cut = cms.double(-10.0),
        computerName = cms.string('ThreeProngNoPiZeroIso'),
        decayModeIndices = cms.vint32(10)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(True),
        cut = cms.double(-10.0),
        computerName = cms.string('ThreeProngOnePiZeroIso'),
        decayModeIndices = cms.vint32(11)
    ))

process.SingleNetBasedTauID = cms.VPSet(cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('SingleNet'),
    decayModeIndices = cms.vint32(0, 1, 2, 10, 11)
))

process.TaNC = cms.VPSet(cms.PSet(
    applyIsolation = cms.bool(False),
    cut = cms.double(-10.0),
    computerName = cms.string('OneProngNoPiZero'),
    decayModeIndices = cms.vint32(0)
), 
    cms.PSet(
        applyIsolation = cms.bool(False),
        cut = cms.double(-10.0),
        computerName = cms.string('OneProngOnePiZero'),
        decayModeIndices = cms.vint32(1)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(False),
        cut = cms.double(-10.0),
        computerName = cms.string('OneProngTwoPiZero'),
        decayModeIndices = cms.vint32(2)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(False),
        cut = cms.double(-10.0),
        computerName = cms.string('ThreeProngNoPiZero'),
        decayModeIndices = cms.vint32(10)
    ), 
    cms.PSet(
        applyIsolation = cms.bool(False),
        cut = cms.double(-10.0),
        computerName = cms.string('ThreeProngOnePiZero'),
        decayModeIndices = cms.vint32(11)
    ))

process.transforms = cms.VPSet(cms.PSet(
    nPiZeros = cms.uint32(0),
    transform = cms.PSet(
        max = cms.double(1.99833333333),
        transform = (cms.vdouble(0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508)+cms.vdouble(0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243539974508, 0.243693947972, 0.2446621342, 0.25648929965, 0.2608766459, 0.265139843949, 0.268288096025, 0.271490633611, 0.274812027295, 0.278726505561, 0.283196361675, 0.287921047203, 0.293485065795, 0.299327353484, 0.305468394708, 0.310410038477, 0.315654364298, 0.320865024837, 0.324875648584, 0.328691660974, 0.332598633349, 0.336484807993, 0.339893814351, 0.343528868912, 0.346311138119, 0.348525259682, 0.350638868762, 0.352500481165, 0.354385202603, 0.356405103778, 0.358448162743, 0.359626155068, 0.361359527277, 0.362911630832, 0.364767207965, 0.365568276809, 0.367161876825, 0.368245783665, 0.369700987138, 0.370891835827, 0.371335926598, 0.372724067775, 0.374122626292, 0.374872824273, 0.376287585272, 0.377808481377, 0.379437962659, 0.380385427158, 0.381454465894, 0.382529530437, 0.383308773065, 0.383900643462, 0.384488881534, 0.385284008411, 0.385778244795, 0.386880706208, 0.387787417873, 0.389206336729, 0.390430843456, 0.391560096158, 0.392490239284, 0.393218300975, 0.394889524946, 0.396474094424, 0.397328157396, 0.398823062781, 0.400437280424, 0.401846875958, 0.402719262685, 0.403705236447, 0.40437725886, 0.405483096559, 0.40715324019, 0.408161946716, 0.408949958358, 0.410194428622, 0.411674966358, 0.412726139917, 0.413994836217, 0.414922434459, 0.415970963664, 0.417494895799, 0.418345516985, 0.419769194149, 0.42120259427, 0.423008169722, 0.424220511323, 0.425684525769, 0.426912279039, 0.428023327968, 0.429389155258, 0.430889124801, 0.432147128025, 0.433793555744, 0.435196517338, 0.436351162787, 0.437253465009, 0.438419065687, 0.439590897333, 0.440949213705, 0.441921470289, 0.442848592497, 0.44396524306, 0.445223842049, 0.446977728682, 0.448745488265, 0.451078381688, 0.451907557714, 0.452739787751, 0.453638395261, 0.45475822595, 0.456165813144, 0.457223834211, 0.457934807034, 0.45922014571, 0.461017229233, 0.461451032994, 0.463048655665, 0.464804181316, 0.466425147476, 0.467542494191, 0.468517661795, 0.470468799941, 0.47198076935, 0.472892624736, 0.474420238705, 0.476266453893, 0.477505267649, 0.479532143347, 0.481200116592, 0.481613637289, 0.483360304775, 0.485061449421, 0.487101659613, 0.488019909526, 0.488999144832, 0.490200759674, 0.491190516798, 0.493849514855, 0.495306102206, 0.495928489713, 0.4964353883, 0.498082556741, 0.49979254034, 0.500775976586, 0.502679733683, 0.504598020717, 0.505078487853, 0.506619141507, 0.508171974823, 0.509336469886, 0.510953930915, 0.512581697566, 0.513998315702, 0.515647034962, 0.515939613111, 0.517975069449, 0.519430445753, 0.519957296262, 0.521273324958, 0.522406663349, 0.523925469498, 0.524625850033, 0.525907581275, 0.527065315655, 0.52822815856, 0.528783474767, 0.529145626115, 0.529453767868, 0.530435650231, 0.532014259582, 0.532782125184, 0.534528955521, 0.535733634238, 0.539584530704, 0.541410067901, 0.543682312792, 0.545138243861, 0.546811742597, 0.548048893429, 0.548459504636, 0.550158093752, 0.551205716597, 0.552261157841, 0.553773021814, 0.554620522074, 0.557022425024, 0.558787346691, 0.55989408991, 0.562351160997, 0.564603650808, 0.567330572538, 0.568251047692, 0.570322191691, 0.570800554836, 0.573840553165, 0.575722428922, 0.578806943369, 0.580018988744, 0.581943439091, 0.583637839285, 0.583719886077, 0.585230062162, 0.586459819001, 0.58819018682, 0.589432428675, 0.590707557501, 0.59199058109, 0.593311935901, 0.596143502405, 0.598713047084, 0.59985869618, 0.60146038335)+cms.vdouble(0.603073645068, 0.60364159568, 0.605493798425, 0.607716165748, 0.611539567166, 0.61344596304, 0.614868728468, 0.616356298487, 0.617243661796, 0.618356139972, 0.620433033442, 0.623603658141, 0.625027738979, 0.626745245057, 0.630061473707, 0.634451273629, 0.636224368987, 0.638386932974, 0.639666729708, 0.641472541416, 0.643376129813, 0.645998175052, 0.648651724655, 0.650614385321, 0.651964427491, 0.654372246094, 0.656912558238, 0.657658356547, 0.658734274882, 0.661006291486, 0.663094362812, 0.664860224717, 0.667639986138, 0.669224738703, 0.670609710516, 0.672008536945, 0.674322956904, 0.676181757848, 0.680504320591, 0.681701882298, 0.683847428048, 0.687028204213, 0.690096183579, 0.692936565842, 0.698333032093, 0.702469873766, 0.704533440299, 0.706621657637, 0.710308262591, 0.713270705866, 0.714865826284, 0.719086552707, 0.722147885763, 0.725885046087, 0.729450681758, 0.732859861331, 0.739185288999, 0.743172463789, 0.74657896386, 0.751327840506, 0.754658774214, 0.758047388164, 0.762059448212, 0.769914558551, 0.775838239214, 0.780728907111, 0.786952215918, 0.793694146175, 0.796885300439, 0.802863959078, 0.813001141474, 0.820597251397, 0.829350775725, 0.837460143471, 0.84199323298, 0.847433416989, 0.854638027367, 0.860714284529, 0.869959964541, 0.876007819869, 0.884455823419, 0.896538436371, 0.904016005807, 0.910382232961, 0.916770946986, 0.93386870405, 0.943467586229, 0.95165443966, 0.971789456433, 0.970755563959, 0.9679163435, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
        min = cms.double(-0.998333333333)
    ),
    nCharged = cms.uint32(3)
), 
    cms.PSet(
        nPiZeros = cms.uint32(1),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = (cms.vdoublecms.vdouble(0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725479663285, 0.725625489751, 0.725917318629, 0.727526582607, 0.745748231906, 0.750169168536, 0.757185219071, 0.764249672036, 0.767603981959, 0.772574492642, 0.775097031572, 0.777704615235, 0.779407980465, 0.781767581973, 0.784842584326, 0.786420654919, 0.787883166617, 0.790123535551, 0.79208138528, 0.79327247227, 0.795907708578, 0.798503646112, 0.800206834461, 0.802663946447, 0.8031582666, 0.80490222571, 0.806889568691, 0.809394028316, 0.811861583702, 0.813019057268, 0.81342095915, 0.814698723372, 0.816279445985, 0.818232037783, 0.819367026875, 0.819759858707, 0.821328989638, 0.822878675172, 0.82364763472, 0.825358996088, 0.828499118125, 0.829830087025, 0.831236000117, 0.832703495507, 0.833414247004, 0.834436344112, 0.834946785624, 0.835869791486, 0.836486520822, 0.837364626557, 0.838193318858, 0.839702591039, 0.841531457051, 0.842218371935, 0.843640339114, 0.844222988069, 0.845392038566, 0.846778761898, 0.84769605779, 0.848073950379, 0.848849957765, 0.849494110293, 0.8500905241, 0.851335675181, 0.853500950651, 0.853839833615, 0.854227213103, 0.854567621296, 0.854984559013, 0.855203285083, 0.856470785047, 0.857475859603, 0.85892685241, 0.859008202829, 0.859451257957, 0.860468389831, 0.861489507276, 0.861351261404, 0.861705874851, 0.861659795003, 0.861659795003, 0.86179137032, 0.862147375366, 0.862550177315, 0.863312092458, 0.863805642705, 0.864438066642, 0.864754370118, 0.865480701328, 0.866346092335, 0.867168965701, 0.867397571488, 0.868313201223, 0.868771741382, 0.869186401202, 0.86983185136, 0.869929474522, 0.870346507695, 0.870951429469, 0.870863388987, 0.871514279263, 0.872166654676, 0.872355339191, 0.872776974093, 0.873155878735, 0.873579101025, 0.874003066865, 0.873916467734, 0.874211597253, 0.874402872188, 0.87510742975, 0.87525648792, 0.87525648792, 0.875448860228, 0.875598481234, 0.875512416378, 0.87617785231, 0.87617785231, 0.876371452215, 0.877233539228, 0.877818409805, 0.87840545558, 0.87840545558, 0.878601622981, 0.878601622981, 0.879472984901, 0.879712328244, 0.87982581203, 0.879981638026, 0.880179766123, 0.880378141371, 0.880534852587, 0.880691869776, 0.8811323429, 0.881090533252, 0.881531917098, 0.881732079801, 0.8822162463, 0.882902187113, 0.882979722574, 0.88403281278, 0.885010261835, 0.884928594333, 0.885132644083, 0.885050953876, 0.88525535544, 0.886362380543, 0.886487219509, 0.886652934413, 0.887232935079, 0.887728512003, 0.888561331939, 0.889019284728, 0.889438266521, 0.890358658388, 0.890120720891, 0.890292192785, 0.890675834925, 0.890556765164, 0.890981544778, 0.891699669632, 0.891660238395, 0.891969519877, 0.892319678993, 0.892161931402, 0.892513711208, 0.892729546909, 0.893162065429, 0.893339503795, 0.893339503795, 0.893656248099, 0.894427465173, 0.894606969217, 0.894825762437, 0.894928163898, 0.895703822513, 0.89622167567, 0.896663385868, 0.897404545302, 0.89769650475, 0.899189293203, 0.899525558799, 0.900803884235, 0.901822547362, 0.901939302648, 0.902926505697, 0.903082359676, 0.904038745128, 0.90469561985, 0.904927332682, 0.905283513893, 0.906828000044, 0.907062493553, 0.908109372415, 0.908783021349, 0.90898498498, 0.910379224289, 0.911372920866, 0.911751863015, 0.912477297669, 0.913239550237, 0.91300238707, 0.913422855139, 0.915063352192, 0.916893920936, 0.916979020829, 0.91791358353, 0.918350995783, 0.918790342789, 0.919328152961, 0.919993298628, 0.920982245955, 0.922524618114, 0.923591109364)+cms.vdouble(0.924018850534, 0.924248923821, 0.924479515826, 0.925498182241, 0.926493584801, 0.927436921962, 0.927911825271, 0.928716526512, 0.929225746944, 0.929920622352, 0.931640820211, 0.931772433588, 0.932293506679, 0.932760264784, 0.93386870405, 0.934480569506, 0.934731886916, 0.935797384751, 0.936588472051, 0.936817507478, 0.937277790773, 0.938339506605, 0.938808219887, 0.93993649209, 0.94020045716, 0.940781492864, 0.941047196853, 0.942510417566, 0.942629939, 0.942750378489, 0.943616386541, 0.944163684906, 0.945338814696, 0.945845741457, 0.946028661789, 0.946308362468, 0.946541150838, 0.946751152357, 0.947576555912, 0.948029352938, 0.94826905955, 0.948081416726, 0.949376743021, 0.94926144862, 0.949775296374, 0.949706301122, 0.951268968863, 0.953037066674, 0.95357532021, 0.953770570793, 0.953640586734, 0.953509869657, 0.954300159882, 0.955476996866, 0.956207587781, 0.956355833165, 0.956846568485, 0.957770053042, 0.958723171834, 0.958928454571, 0.959445187694, 0.959807967592, 0.959442259047, 0.960697132989, 0.961203278228, 0.963193467582, 0.963932365293, 0.964461162833, 0.964482886627, 0.96526433234, 0.966030150632, 0.966856588211, 0.969491617691, 0.970743493871, 0.972389419268, 0.973307337131, 0.975623617612, 0.976087161844, 0.975647899082, 0.976736074007, 0.979440008803, 0.981271208497, 0.982207028661, 0.984863078211, 0.986956530647, 0.990258251858, 0.990208776979, 0.990702226892, 0.993228159625, 0.99534336087, 0.996696237239, 0.995185049087, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(1)
    ), 
    cms.PSet(
        nPiZeros = cms.uint32(0),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = (cms.vdoublecms.vdouble(0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.785563102399, 0.786753288885, 0.788132324416, 0.79656141615, 0.810183644995, 0.858360829913, 0.862298212616, 0.867110980413, 0.871372861265, 0.875682014578, 0.880242297589, 0.883696978098, 0.885512278829, 0.887768921813, 0.889264020585, 0.89119925019, 0.892452552697, 0.893185095837, 0.893419577074, 0.894898998675, 0.895774783109, 0.896260903725, 0.896505707407, 0.898082672851, 0.898779137453, 0.89979939771, 0.900120276805, 0.900442301311, 0.900314253861, 0.90063761708, 0.903107169678, 0.903707364412, 0.904624297652, 0.90437518453, 0.904187494019, 0.904648539996, 0.905849328721, 0.90625146477, 0.906593041173, 0.906284313013, 0.906627709554, 0.906627709554, 0.907095652088, 0.906972372385, 0.907318308525, 0.907603995571, 0.907357055463, 0.907233089763, 0.907994846936, 0.908883949265, 0.908883949265, 0.909836831321, 0.909836831321, 0.909776114594, 0.911030037809, 0.911509901723, 0.911871023987, 0.911811279009, 0.911751452972, 0.911691545709, 0.911511334909, 0.911451101085, 0.912784331406, 0.9125455069, 0.9125455069, 0.91297278083, 0.912853317543, 0.912673506387, 0.913592984461, 0.915007651179, 0.915441697726, 0.915324604996, 0.915207187526, 0.915148356591, 0.91552593882, 0.915467174967, 0.9154083293, 0.915290391839, 0.915231299701, 0.915728896806, 0.915728896806, 0.915552071941, 0.916492320764, 0.917377950283, 0.917822427143, 0.918268017622, 0.91871472591, 0.919668295227, 0.919611512782, 0.919554650007, 0.919440682785, 0.919269125195, 0.921306876156, 0.921306876156, 0.921082297245, 0.920969526416, 0.921426208902, 0.921939970027, 0.921939970027, 0.922343069964, 0.923319759486, 0.923727168952, 0.923727168952, 0.92460140151, 0.924492316338, 0.924959238052, 0.926474177051, 0.926474177051, 0.926420752856, 0.926313671218, 0.926785714713, 0.926785714713, 0.926785714713, 0.926732331515, 0.926732331515, 0.926571713811, 0.927521701059, 0.927468561656, 0.927998554333, 0.927945695605, 0.929008220067, 0.928746371941, 0.928693770351, 0.928641091039, 0.929607013105, 0.929554832769, 0.930039996532, 0.93101417799, 0.931554211882, 0.932636161324, 0.932585903271, 0.932585903271, 0.93357188521, 0.933522156167, 0.933967924145, 0.933769185329, 0.934766776762, 0.935267583538, 0.935169629185, 0.935672412756, 0.936176553451, 0.936176553451, 0.93779194569, 0.937554472402, 0.937458974653, 0.937411116161, 0.937970225775, 0.938435668089, 0.938341043455, 0.938341043455, 0.938903099624, 0.93885608225, 0.938808992455, 0.938714594933, 0.939278948765, 0.940409694612, 0.940363611919, 0.940363611919, 0.940884673949, 0.940838860114, 0.940700991551, 0.941179107659, 0.941750185868, 0.941750185868, 0.942276966885, 0.943290568826, 0.943822114749, 0.944267645451, 0.944223792272, 0.944223792272, 0.944223792272, 0.944223792272, 0.944135878551, 0.944091817682, 0.943959217069, 0.944948988041, 0.944817531021, 0.945185418124, 0.945774534438, 0.946869842865, 0.94678443912, 0.947292782482, 0.947803406812, 0.948955745704, 0.949513262437, 0.949431324505, 0.949349120177, 0.949787213059, 0.950350748429, 0.951522477849, 0.952051228023, 0.95197239226, 0.951813940452, 0.951734321829, 0.952189098377, 0.952726227521, 0.952647494583, 0.953226869405, 0.953148724357, 0.95303101596, 0.953497250008, 0.954122169792, 0.954006075021, 0.954594998037, 0.955778170341, 0.955740668477, 0.957457733339, 0.958697023242, 0.958590781777, 0.958519649968, 0.959665182275, 0.960242079268, 0.960242079268, 0.960855701368, 0.960787753107)+cms.vdouble(0.961370655681, 0.961269567079, 0.961823203605, 0.963730727425, 0.963634885553, 0.963570709071, 0.964138473298, 0.964106695414, 0.96404297039, 0.963914839098, 0.963882663464, 0.96452094996, 0.964361812095, 0.96497328025, 0.965587812399, 0.966174859102, 0.966052013818, 0.966021162949, 0.968018795469, 0.96867865254, 0.968592547647, 0.96914294659, 0.969057430126, 0.969000155331, 0.970289180287, 0.971618144708, 0.971511684075, 0.972907637123, 0.972856607143, 0.972753968298, 0.972676478315, 0.973344727784, 0.973217439385, 0.973917083716, 0.973842007934, 0.973791716846, 0.974496912029, 0.974447701286, 0.974373528048, 0.974273957942, 0.974198771106, 0.974791150217, 0.975488253999, 0.976165676348, 0.977513433798, 0.977332925695, 0.978053351441, 0.978734902423, 0.97864854949, 0.979275680612, 0.979190505138, 0.979039751165, 0.978974471583, 0.978886796984, 0.980438334358, 0.981887328142, 0.982567303114, 0.983312443593, 0.983168209088, 0.983021459539, 0.98366063828, 0.983606342672, 0.983441268961, 0.983291720735, 0.985747459607, 0.985615866821, 0.988157949486, 0.988031989052, 0.987786602856, 0.988507380959, 0.988364321833, 0.988127868612, 0.987928555371, 0.987641272072, 0.987408197679, 0.98704162283, 0.986691071046, 0.986360943929, 0.987048151948, 0.989952686544, 0.991766844123, 0.992193166195, 0.99456966538, 0.995655052048, 0.994746673755, 0.993062299865, 0.995491593707, 0.993997811711, 0.991951166261, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(1)
    ), 
    cms.PSet(
        nPiZeros = cms.uint32(2),
        transform = cms.PSet(
            max = cms.double(1.99833333333),
            transform = (cms.vdouble(0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277)+cms.vdouble(0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320694347277, 0.320785409267, 0.320785409267, 0.320785409267, 0.320967688479, 0.32115017496, 0.32115017496, 0.32115017496, 0.32115017496, 0.321332869066, 0.321607300294, 0.321790515012, 0.322065728828, 0.322709728783, 0.337811096719, 0.33917314626, 0.341489359417, 0.343051156809, 0.344690580804, 0.34605531485, 0.347729452006, 0.349352972192, 0.351698761571, 0.354076266303, 0.356364861761, 0.357459291064, 0.358806090169, 0.360659074159, 0.361655179522, 0.363285639001, 0.363823848893, 0.365224296488, 0.366635567078, 0.368317558281, 0.36949108301, 0.370409007364, 0.370997606343, 0.372726361337, 0.373488515297, 0.374412657806, 0.375752608537, 0.377534910678, 0.378625338634, 0.379181030815, 0.379877944035, 0.382266731549, 0.382549741971, 0.383828491978, 0.38525242259, 0.386835650852, 0.38785063627, 0.389317222671, 0.390498501728, 0.392134514369, 0.392433445129, 0.393938724972, 0.395003106909, 0.395165758646, 0.395929379967, 0.396695958257, 0.397011143016, 0.398247378442, 0.399356983741, 0.399994683207, 0.401254354869, 0.40236309389, 0.403477977186, 0.404278112546, 0.405403648355, 0.406718341929, 0.408044942586, 0.409053791836, 0.409879342767, 0.410568240656, 0.411067477386, 0.412572498902, 0.413612340683, 0.414628216181, 0.41718987191, 0.417878334739, 0.41856907358, 0.419300644011, 0.420520753157, 0.420777117228, 0.422716149289, 0.423248081689, 0.424315972822, 0.425568676714, 0.426697968924, 0.427784748237, 0.428512348538, 0.429242428143, 0.430526071506, 0.4311350135, 0.432803583714, 0.433609675616, 0.434608917639, 0.436308891919, 0.436878509184, 0.437640316502, 0.438596319943, 0.440520911858, 0.441683795845, 0.443048277506, 0.444696219849, 0.446478472767, 0.44715804854, 0.448645092811, 0.450058431683, 0.450666877959, 0.450755388115, 0.451660727674, 0.452685605028, 0.453508861839, 0.455164391331, 0.456611329026, 0.456920461171, 0.457863702358, 0.45902581005, 0.459451411686, 0.460410936031, 0.461808077134, 0.4630001435, 0.46452516501, 0.465632370863, 0.466972634942, 0.467639712811, 0.468206417853, 0.469000443277, 0.470125946746, 0.471938031657, 0.473437184975, 0.474815974144, 0.475643583896, 0.477037107394, 0.478345116523, 0.479756398109, 0.482127131145, 0.483321305722, 0.484827612962, 0.485378450947, 0.486839313932, 0.488800865348, 0.488631796262, 0.489784626283, 0.49019813266, 0.490696455307, 0.492699918902, 0.493707798202, 0.495481544763, 0.497780890453, 0.499067549901, 0.499842743245, 0.501067711008, 0.501110885208, 0.503739653301, 0.504533670387, 0.507669169039, 0.508207246665, 0.510099534144, 0.511125093239, 0.513041788431, 0.514972912765, 0.517927881794, 0.519848789077, 0.52116702462, 0.522598588906, 0.524038039421, 0.524905522273, 0.525729939569, 0.527349110611, 0.528189103375, 0.529884063982, 0.531038635091, 0.531258876588, 0.533372518417, 0.532652261497, 0.533222445036, 0.533832435241, 0.534714171593, 0.536561182549, 0.536184284139, 0.538295230995, 0.539204274194, 0.539743792118, 0.542257448251, 0.543191981222, 0.54415669717, 0.545124845911, 0.546421082543, 0.548704392123, 0.551006864138, 0.551639517385, 0.554308295208, 0.554286639155, 0.555277851271, 0.557294734318, 0.558661984326, 0.560735788966, 0.561777981725, 0.56352691872, 0.56493793563, 0.567793486879, 0.568888208725, 0.57034433091, 0.570356276084, 0.572191934216, 0.573659294894, 0.574044772549, 0.575543527534, 0.577054482298, 0.578553389267, 0.580816407199, 0.582777514902, 0.58546601664, 0.587013469943, 0.586699955875, 0.587164603914, 0.589909772096, 0.590347109603, 0.591182964289, 0.593622213241, 0.595632610766, 0.596088895792)+cms.vdouble(0.596547219627, 0.597007595967, 0.59905000376, 0.59875479532, 0.600402032492, 0.601476624751, 0.602375325225, 0.604611692334, 0.606308877758, 0.609454442616, 0.612487831768, 0.615198564485, 0.616345932738, 0.617679752716, 0.620364786891, 0.621560433387, 0.622923085077, 0.622771613804, 0.627021967049, 0.629464905691, 0.630636176618, 0.632414811477, 0.635412621765, 0.636860801036, 0.638359784998, 0.642296739762, 0.64372019874, 0.646732193739, 0.649419880322, 0.653004922396, 0.654536589972, 0.657493324695, 0.65872664624, 0.662116021475, 0.666837437051, 0.668332370106, 0.670194812833, 0.671514734427, 0.671514734427, 0.672844093862, 0.672352092845, 0.678607302272, 0.681605563269, 0.681020472505, 0.682082800049, 0.684848783291, 0.686959317553, 0.690918830645, 0.691984674993, 0.694695530605, 0.697455651971, 0.700496795416, 0.703736816672, 0.704917801757, 0.706220722464, 0.707858889942, 0.71018130526, 0.714321429016, 0.720425948473, 0.724503155871, 0.727977004139, 0.730714468803, 0.735012362904, 0.739735756402, 0.750660954162, 0.757799352464, 0.760515374245, 0.768004247792, 0.77935327172, 0.784646260495, 0.789164336822, 0.791123170072, 0.795276817521, 0.804299018936, 0.819103217408, 0.822961151625, 0.833298258018, 0.842807182616, 0.85334688934, 0.86724344838, 0.872176831791, 0.87195156781, 0.87843961359, 0.891494313173, 0.912879175226, 0.924218217451, 0.937234161591, 0.94206607914, 0.958884557005, 0.959595443343, 0.93904371889, 0.927733482302, 0.93386870405, 0.916051159827, 0.943467586229, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)+cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)),
            min = cms.double(-0.998333333333)
        ),
        nCharged = cms.uint32(1)
    ))

process.schedule = cms.Schedule(process.raw2digi_step,process.L1Reco_step,process.reconstruction_step,process.validation_step,process.dqmoffline_step,process.endjob_step,process.RECOSIMoutput_step,process.DQMoutput_step)
